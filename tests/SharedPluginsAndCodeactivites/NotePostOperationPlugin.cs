// <copyright file="AccountUpdateErpFigures.cs" company="">
// Copyright (c) 2015 All Rights Reserved
// </copyright>
// <author></author>
// <date>1/26/2015 1:55:15 PM</date>
// <summary>Implements the AccountUpdateErpFigures Plugin.</summary>
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
// </auto-generated>


using System;
using System.Collections.Generic;
using System.ServiceModel;
using Microsoft.Xrm.Sdk;
using DG.XrmFramework.BusinessDomain.ServiceContext;

namespace DG.Some.Namespace {

    
    public class NotePostOperationPlugin : Plugin {
        /// <summary>
        /// Initializes a new instance of the <see cref="NotePreImagePlugin"/> class.
        /// </summary>
        public NotePostOperationPlugin() : base(typeof(NotePostOperationPlugin)) {
            RegisterPluginStep("annotation",
                EventOperation.Update,
                ExecutionStage.PostOperation,
                Execute)
                  .SetExecutionMode(ExecutionMode.Synchronous)
                  .SetUserContext(Guid.Parse("3b961284-cd7a-4fa3-af7e-89802e88dd5c")); //hard coded admin user id
        }

        
        protected void Execute(LocalPluginContext localContext)
        {
            var service = localContext.OrganizationService; //this should be running as the admin user
            var target = localContext.PluginExecutionContext.InputParameters["Target"] as Entity;

            Guid noteTextId;
            if (Guid.TryParse(target.GetAttributeValue<string>("notetext"), out noteTextId))
            {

                var editNote = new Entity("annotation") { Id = noteTextId };
                editNote["notetext"] = "updated by admin plugin";
                service.Update(editNote);
            }

        }
    }
}
