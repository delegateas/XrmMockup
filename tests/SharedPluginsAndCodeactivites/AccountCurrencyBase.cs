using DG.Some.Namespace;
using DG.XrmFramework.BusinessDomain.ServiceContext;
using Microsoft.Xrm.Sdk.Query;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace DG.Delegate.TSTOnboarding.Plugins
{
    public class AccountCurrencyBase : PluginNonDaxif
    {
        /*
         * This is a plugin that isn't registered through DAXIF, therefore we expect that the plugin can be found registered in Metadata.xml, which is
         * generated by MetadataGenerator365. It have to generate metadata from Lab4 solutions, since some tests are dependent on stuff op there and
         * from Pre and Post-images Test Solution from the same Server. This plugin and AccountBothImagePlugin are both registered here.
         */

        public AccountCurrencyBase() : base(typeof(AccountCurrencyBase)) { }

        public override void Execute(IServiceProvider provider)
        {
            var context = new LocalPluginContext(provider);
            if (context.PluginExecutionContext.Depth > 1) { return; }

            var id = context.PluginExecutionContext.PrimaryEntityId;
            var acc = context.OrganizationService.Retrieve(Account.EntityLogicalName, id, new ColumnSet("name")).ToEntity<Account>();
            if (acc.Name == "Some")
            {
                acc.Name += "UpdateBase";
                context.OrganizationService.Update(acc);
            }
        }
    }
}
