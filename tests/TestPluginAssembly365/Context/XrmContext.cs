//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using DG.XrmContext;
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Client;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Diagnostics;
using System.Linq;
using System.Linq.Expressions;
using System.Runtime.Serialization;

[assembly: ProxyTypesAssembly()]


namespace DG.XrmFramework.BusinessDomain.ServiceContext {
    
    
    /// <summary>
    /// <para>Business that represents a customer or potential customer. The company that is billed in business transactions.</para>
    /// <para>Display Name: Account</para>
    /// </summary>
    [EntityLogicalName("account")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class Account : ExtendedEntity<AccountState, Account_StatusCode> {
        
        public const string EntityLogicalName = "account";
        
        public const int EntityTypeCode = 1;
        
        public Account() : 
                base(EntityLogicalName) {
        }
        
        public Account(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("name");
            }
        }
        
        [AttributeLogicalName("accountid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("accountid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the account.</para>
        /// <para>Display Name: Account</para>
        /// </summary>
        [AttributeLogicalName("accountid")]
        [DisplayName("Account")]
        public Guid? AccountId {
            get {
                return GetAttributeValue<Guid?>("accountid");
            }
            set {
                SetId("accountid", value);
            }
        }
        
        /// <summary>
        /// <para>Select a category to indicate whether the customer account is standard or preferred.</para>
        /// <para>Display Name: Category</para>
        /// </summary>
        [AttributeLogicalName("accountcategorycode")]
        [DisplayName("Category")]
        public Account_AccountCategoryCode? AccountCategoryCode {
            get {
                return GetOptionSetValue<Account_AccountCategoryCode>("accountcategorycode");
            }
            set {
                SetOptionSetValue("accountcategorycode", value);
            }
        }
        
        /// <summary>
        /// <para>Select a classification code to indicate the potential value of the customer account based on the projected return on investment, cooperation level, sales cycle length or other criteria.</para>
        /// <para>Display Name: Classification</para>
        /// </summary>
        [AttributeLogicalName("accountclassificationcode")]
        [DisplayName("Classification")]
        public Account_AccountClassificationCode? AccountClassificationCode {
            get {
                return GetOptionSetValue<Account_AccountClassificationCode>("accountclassificationcode");
            }
            set {
                SetOptionSetValue("accountclassificationcode", value);
            }
        }
        
        /// <summary>
        /// <para>Type an ID number or code for the account to quickly search and identify the account in system views.</para>
        /// <para>Display Name: Account Number</para>
        /// </summary>
        [AttributeLogicalName("accountnumber")]
        [DisplayName("Account Number")]
        [MaxLength(20)]
        public string AccountNumber {
            get {
                return GetAttributeValue<string>("accountnumber");
            }
            set {
                SetAttributeValue("accountnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Select a rating to indicate the value of the customer account.</para>
        /// <para>Display Name: Account Rating</para>
        /// </summary>
        [AttributeLogicalName("accountratingcode")]
        [DisplayName("Account Rating")]
        public Account_AccountRatingCode? AccountRatingCode {
            get {
                return GetOptionSetValue<Account_AccountRatingCode>("accountratingcode");
            }
            set {
                SetOptionSetValue("accountratingcode", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for address 1.</para>
        /// <para>Display Name: Address 1: ID</para>
        /// </summary>
        [AttributeLogicalName("address1_addressid")]
        [DisplayName("Address 1: ID")]
        public Guid? Address1_AddressId {
            get {
                return GetAttributeValue<Guid?>("address1_addressid");
            }
            set {
                SetAttributeValue("address1_addressid", value);
            }
        }
        
        /// <summary>
        /// <para>Select the primary address type.</para>
        /// <para>Display Name: Address 1: Address Type</para>
        /// </summary>
        [AttributeLogicalName("address1_addresstypecode")]
        [DisplayName("Address 1: Address Type")]
        public Account_Address1_AddressTypeCode? Address1_AddressTypeCode {
            get {
                return GetOptionSetValue<Account_Address1_AddressTypeCode>("address1_addresstypecode");
            }
            set {
                SetOptionSetValue("address1_addresstypecode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the city for the primary address.</para>
        /// <para>Display Name: Address 1: City</para>
        /// </summary>
        [AttributeLogicalName("address1_city")]
        [DisplayName("Address 1: City")]
        [MaxLength(80)]
        public string Address1_City {
            get {
                return GetAttributeValue<string>("address1_city");
            }
            set {
                SetAttributeValue("address1_city", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the complete primary address.</para>
        /// <para>Display Name: Address 1</para>
        /// </summary>
        [AttributeLogicalName("address1_composite")]
        [DisplayName("Address 1")]
        public string Address1_Composite {
            get {
                return GetAttributeValue<string>("address1_composite");
            }
        }
        
        /// <summary>
        /// <para>Type the country or region for the primary address.</para>
        /// <para>Display Name: Address 1: Country/Region</para>
        /// </summary>
        [AttributeLogicalName("address1_country")]
        [DisplayName("Address 1: Country/Region")]
        [MaxLength(80)]
        public string Address1_Country {
            get {
                return GetAttributeValue<string>("address1_country");
            }
            set {
                SetAttributeValue("address1_country", value);
            }
        }
        
        /// <summary>
        /// <para>Type the county for the primary address.</para>
        /// <para>Display Name: Address 1: County</para>
        /// </summary>
        [AttributeLogicalName("address1_county")]
        [DisplayName("Address 1: County")]
        [MaxLength(50)]
        public string Address1_County {
            get {
                return GetAttributeValue<string>("address1_county");
            }
            set {
                SetAttributeValue("address1_county", value);
            }
        }
        
        /// <summary>
        /// <para>Type the fax number associated with the primary address.</para>
        /// <para>Display Name: Address 1: Fax</para>
        /// </summary>
        [AttributeLogicalName("address1_fax")]
        [DisplayName("Address 1: Fax")]
        [MaxLength(50)]
        public string Address1_Fax {
            get {
                return GetAttributeValue<string>("address1_fax");
            }
            set {
                SetAttributeValue("address1_fax", value);
            }
        }
        
        /// <summary>
        /// <para>Select the freight terms for the primary address to make sure shipping orders are processed correctly.</para>
        /// <para>Display Name: Address 1: Freight Terms</para>
        /// </summary>
        [AttributeLogicalName("address1_freighttermscode")]
        [DisplayName("Address 1: Freight Terms")]
        public Account_Address1_FreightTermsCode? Address1_FreightTermsCode {
            get {
                return GetOptionSetValue<Account_Address1_FreightTermsCode>("address1_freighttermscode");
            }
            set {
                SetOptionSetValue("address1_freighttermscode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the latitude value for the primary address for use in mapping and other applications.</para>
        /// <para>Display Name: Address 1: Latitude</para>
        /// </summary>
        [AttributeLogicalName("address1_latitude")]
        [DisplayName("Address 1: Latitude")]
        public double? Address1_Latitude {
            get {
                return GetAttributeValue<double?>("address1_latitude");
            }
            set {
                SetAttributeValue("address1_latitude", value);
            }
        }
        
        /// <summary>
        /// <para>Type the first line of the primary address.</para>
        /// <para>Display Name: Address 1: Street 1</para>
        /// </summary>
        [AttributeLogicalName("address1_line1")]
        [DisplayName("Address 1: Street 1")]
        [MaxLength(250)]
        public string Address1_Line1 {
            get {
                return GetAttributeValue<string>("address1_line1");
            }
            set {
                SetAttributeValue("address1_line1", value);
            }
        }
        
        /// <summary>
        /// <para>Type the second line of the primary address.</para>
        /// <para>Display Name: Address 1: Street 2</para>
        /// </summary>
        [AttributeLogicalName("address1_line2")]
        [DisplayName("Address 1: Street 2")]
        [MaxLength(250)]
        public string Address1_Line2 {
            get {
                return GetAttributeValue<string>("address1_line2");
            }
            set {
                SetAttributeValue("address1_line2", value);
            }
        }
        
        /// <summary>
        /// <para>Type the third line of the primary address.</para>
        /// <para>Display Name: Address 1: Street 3</para>
        /// </summary>
        [AttributeLogicalName("address1_line3")]
        [DisplayName("Address 1: Street 3")]
        [MaxLength(250)]
        public string Address1_Line3 {
            get {
                return GetAttributeValue<string>("address1_line3");
            }
            set {
                SetAttributeValue("address1_line3", value);
            }
        }
        
        /// <summary>
        /// <para>Type the longitude value for the primary address for use in mapping and other applications.</para>
        /// <para>Display Name: Address 1: Longitude</para>
        /// </summary>
        [AttributeLogicalName("address1_longitude")]
        [DisplayName("Address 1: Longitude")]
        public double? Address1_Longitude {
            get {
                return GetAttributeValue<double?>("address1_longitude");
            }
            set {
                SetAttributeValue("address1_longitude", value);
            }
        }
        
        /// <summary>
        /// <para>Type a descriptive name for the primary address, such as Corporate Headquarters.</para>
        /// <para>Display Name: Address 1: Name</para>
        /// </summary>
        [AttributeLogicalName("address1_name")]
        [DisplayName("Address 1: Name")]
        [MaxLength(200)]
        public string Address1_Name {
            get {
                return GetAttributeValue<string>("address1_name");
            }
            set {
                SetAttributeValue("address1_name", value);
            }
        }
        
        /// <summary>
        /// <para>Type the post office box number of the primary address.</para>
        /// <para>Display Name: Address 1: Post Office Box</para>
        /// </summary>
        [AttributeLogicalName("address1_postofficebox")]
        [DisplayName("Address 1: Post Office Box")]
        [MaxLength(20)]
        public string Address1_PostOfficeBox {
            get {
                return GetAttributeValue<string>("address1_postofficebox");
            }
            set {
                SetAttributeValue("address1_postofficebox", value);
            }
        }
        
        /// <summary>
        /// <para>Type the ZIP Code or postal code for the primary address.</para>
        /// <para>Display Name: Address 1: ZIP/Postal Code</para>
        /// </summary>
        [AttributeLogicalName("address1_postalcode")]
        [DisplayName("Address 1: ZIP/Postal Code")]
        [MaxLength(20)]
        public string Address1_PostalCode {
            get {
                return GetAttributeValue<string>("address1_postalcode");
            }
            set {
                SetAttributeValue("address1_postalcode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the name of the main contact at the account's primary address.</para>
        /// <para>Display Name: Address 1: Primary Contact Name</para>
        /// </summary>
        [AttributeLogicalName("address1_primarycontactname")]
        [DisplayName("Address 1: Primary Contact Name")]
        [MaxLength(100)]
        public string Address1_PrimaryContactName {
            get {
                return GetAttributeValue<string>("address1_primarycontactname");
            }
            set {
                SetAttributeValue("address1_primarycontactname", value);
            }
        }
        
        /// <summary>
        /// <para>Select a shipping method for deliveries sent to this address.</para>
        /// <para>Display Name: Address 1: Shipping Method</para>
        /// </summary>
        [AttributeLogicalName("address1_shippingmethodcode")]
        [DisplayName("Address 1: Shipping Method")]
        public Account_Address1_ShippingMethodCode? Address1_ShippingMethodCode {
            get {
                return GetOptionSetValue<Account_Address1_ShippingMethodCode>("address1_shippingmethodcode");
            }
            set {
                SetOptionSetValue("address1_shippingmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the state or province of the primary address.</para>
        /// <para>Display Name: Address 1: State/Province</para>
        /// </summary>
        [AttributeLogicalName("address1_stateorprovince")]
        [DisplayName("Address 1: State/Province")]
        [MaxLength(50)]
        public string Address1_StateOrProvince {
            get {
                return GetAttributeValue<string>("address1_stateorprovince");
            }
            set {
                SetAttributeValue("address1_stateorprovince", value);
            }
        }
        
        /// <summary>
        /// <para>Type the main phone number associated with the primary address.</para>
        /// <para>Display Name: Address Phone</para>
        /// </summary>
        [AttributeLogicalName("address1_telephone1")]
        [DisplayName("Address Phone")]
        [MaxLength(50)]
        public string Address1_Telephone1 {
            get {
                return GetAttributeValue<string>("address1_telephone1");
            }
            set {
                SetAttributeValue("address1_telephone1", value);
            }
        }
        
        /// <summary>
        /// <para>Type a second phone number associated with the primary address.</para>
        /// <para>Display Name: Address 1: Telephone 2</para>
        /// </summary>
        [AttributeLogicalName("address1_telephone2")]
        [DisplayName("Address 1: Telephone 2")]
        [MaxLength(50)]
        public string Address1_Telephone2 {
            get {
                return GetAttributeValue<string>("address1_telephone2");
            }
            set {
                SetAttributeValue("address1_telephone2", value);
            }
        }
        
        /// <summary>
        /// <para>Type a third phone number associated with the primary address.</para>
        /// <para>Display Name: Address 1: Telephone 3</para>
        /// </summary>
        [AttributeLogicalName("address1_telephone3")]
        [DisplayName("Address 1: Telephone 3")]
        [MaxLength(50)]
        public string Address1_Telephone3 {
            get {
                return GetAttributeValue<string>("address1_telephone3");
            }
            set {
                SetAttributeValue("address1_telephone3", value);
            }
        }
        
        /// <summary>
        /// <para>Type the UPS zone of the primary address to make sure shipping charges are calculated correctly and deliveries are made promptly, if shipped by UPS.</para>
        /// <para>Display Name: Address 1: UPS Zone</para>
        /// </summary>
        [AttributeLogicalName("address1_upszone")]
        [DisplayName("Address 1: UPS Zone")]
        [MaxLength(4)]
        public string Address1_UPSZone {
            get {
                return GetAttributeValue<string>("address1_upszone");
            }
            set {
                SetAttributeValue("address1_upszone", value);
            }
        }
        
        /// <summary>
        /// <para>Select the time zone, or UTC offset, for this address so that other people can reference it when they contact someone at this address.</para>
        /// <para>Display Name: Address 1: UTC Offset</para>
        /// </summary>
        [AttributeLogicalName("address1_utcoffset")]
        [DisplayName("Address 1: UTC Offset")]
        [Range(-1500, 1500)]
        public int? Address1_UTCOffset {
            get {
                return GetAttributeValue<int?>("address1_utcoffset");
            }
            set {
                SetAttributeValue("address1_utcoffset", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for address 2.</para>
        /// <para>Display Name: Address 2: ID</para>
        /// </summary>
        [AttributeLogicalName("address2_addressid")]
        [DisplayName("Address 2: ID")]
        public Guid? Address2_AddressId {
            get {
                return GetAttributeValue<Guid?>("address2_addressid");
            }
            set {
                SetAttributeValue("address2_addressid", value);
            }
        }
        
        /// <summary>
        /// <para>Select the secondary address type.</para>
        /// <para>Display Name: Address 2: Address Type</para>
        /// </summary>
        [AttributeLogicalName("address2_addresstypecode")]
        [DisplayName("Address 2: Address Type")]
        public Account_Address2_AddressTypeCode? Address2_AddressTypeCode {
            get {
                return GetOptionSetValue<Account_Address2_AddressTypeCode>("address2_addresstypecode");
            }
            set {
                SetOptionSetValue("address2_addresstypecode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the city for the secondary address.</para>
        /// <para>Display Name: Address 2: City</para>
        /// </summary>
        [AttributeLogicalName("address2_city")]
        [DisplayName("Address 2: City")]
        [MaxLength(80)]
        public string Address2_City {
            get {
                return GetAttributeValue<string>("address2_city");
            }
            set {
                SetAttributeValue("address2_city", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the complete secondary address.</para>
        /// <para>Display Name: Address 2</para>
        /// </summary>
        [AttributeLogicalName("address2_composite")]
        [DisplayName("Address 2")]
        public string Address2_Composite {
            get {
                return GetAttributeValue<string>("address2_composite");
            }
        }
        
        /// <summary>
        /// <para>Type the country or region for the secondary address.</para>
        /// <para>Display Name: Address 2: Country/Region</para>
        /// </summary>
        [AttributeLogicalName("address2_country")]
        [DisplayName("Address 2: Country/Region")]
        [MaxLength(80)]
        public string Address2_Country {
            get {
                return GetAttributeValue<string>("address2_country");
            }
            set {
                SetAttributeValue("address2_country", value);
            }
        }
        
        /// <summary>
        /// <para>Type the county for the secondary address.</para>
        /// <para>Display Name: Address 2: County</para>
        /// </summary>
        [AttributeLogicalName("address2_county")]
        [DisplayName("Address 2: County")]
        [MaxLength(50)]
        public string Address2_County {
            get {
                return GetAttributeValue<string>("address2_county");
            }
            set {
                SetAttributeValue("address2_county", value);
            }
        }
        
        /// <summary>
        /// <para>Type the fax number associated with the secondary address.</para>
        /// <para>Display Name: Address 2: Fax</para>
        /// </summary>
        [AttributeLogicalName("address2_fax")]
        [DisplayName("Address 2: Fax")]
        [MaxLength(50)]
        public string Address2_Fax {
            get {
                return GetAttributeValue<string>("address2_fax");
            }
            set {
                SetAttributeValue("address2_fax", value);
            }
        }
        
        /// <summary>
        /// <para>Select the freight terms for the secondary address to make sure shipping orders are processed correctly.</para>
        /// <para>Display Name: Address 2: Freight Terms</para>
        /// </summary>
        [AttributeLogicalName("address2_freighttermscode")]
        [DisplayName("Address 2: Freight Terms")]
        public Account_Address2_FreightTermsCode? Address2_FreightTermsCode {
            get {
                return GetOptionSetValue<Account_Address2_FreightTermsCode>("address2_freighttermscode");
            }
            set {
                SetOptionSetValue("address2_freighttermscode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the latitude value for the secondary address for use in mapping and other applications.</para>
        /// <para>Display Name: Address 2: Latitude</para>
        /// </summary>
        [AttributeLogicalName("address2_latitude")]
        [DisplayName("Address 2: Latitude")]
        public double? Address2_Latitude {
            get {
                return GetAttributeValue<double?>("address2_latitude");
            }
            set {
                SetAttributeValue("address2_latitude", value);
            }
        }
        
        /// <summary>
        /// <para>Type the first line of the secondary address.</para>
        /// <para>Display Name: Address 2: Street 1</para>
        /// </summary>
        [AttributeLogicalName("address2_line1")]
        [DisplayName("Address 2: Street 1")]
        [MaxLength(250)]
        public string Address2_Line1 {
            get {
                return GetAttributeValue<string>("address2_line1");
            }
            set {
                SetAttributeValue("address2_line1", value);
            }
        }
        
        /// <summary>
        /// <para>Type the second line of the secondary address.</para>
        /// <para>Display Name: Address 2: Street 2</para>
        /// </summary>
        [AttributeLogicalName("address2_line2")]
        [DisplayName("Address 2: Street 2")]
        [MaxLength(250)]
        public string Address2_Line2 {
            get {
                return GetAttributeValue<string>("address2_line2");
            }
            set {
                SetAttributeValue("address2_line2", value);
            }
        }
        
        /// <summary>
        /// <para>Type the third line of the secondary address.</para>
        /// <para>Display Name: Address 2: Street 3</para>
        /// </summary>
        [AttributeLogicalName("address2_line3")]
        [DisplayName("Address 2: Street 3")]
        [MaxLength(250)]
        public string Address2_Line3 {
            get {
                return GetAttributeValue<string>("address2_line3");
            }
            set {
                SetAttributeValue("address2_line3", value);
            }
        }
        
        /// <summary>
        /// <para>Type the longitude value for the secondary address for use in mapping and other applications.</para>
        /// <para>Display Name: Address 2: Longitude</para>
        /// </summary>
        [AttributeLogicalName("address2_longitude")]
        [DisplayName("Address 2: Longitude")]
        public double? Address2_Longitude {
            get {
                return GetAttributeValue<double?>("address2_longitude");
            }
            set {
                SetAttributeValue("address2_longitude", value);
            }
        }
        
        /// <summary>
        /// <para>Type a descriptive name for the secondary address, such as Corporate Headquarters.</para>
        /// <para>Display Name: Address 2: Name</para>
        /// </summary>
        [AttributeLogicalName("address2_name")]
        [DisplayName("Address 2: Name")]
        [MaxLength(200)]
        public string Address2_Name {
            get {
                return GetAttributeValue<string>("address2_name");
            }
            set {
                SetAttributeValue("address2_name", value);
            }
        }
        
        /// <summary>
        /// <para>Type the post office box number of the secondary address.</para>
        /// <para>Display Name: Address 2: Post Office Box</para>
        /// </summary>
        [AttributeLogicalName("address2_postofficebox")]
        [DisplayName("Address 2: Post Office Box")]
        [MaxLength(20)]
        public string Address2_PostOfficeBox {
            get {
                return GetAttributeValue<string>("address2_postofficebox");
            }
            set {
                SetAttributeValue("address2_postofficebox", value);
            }
        }
        
        /// <summary>
        /// <para>Type the ZIP Code or postal code for the secondary address.</para>
        /// <para>Display Name: Address 2: ZIP/Postal Code</para>
        /// </summary>
        [AttributeLogicalName("address2_postalcode")]
        [DisplayName("Address 2: ZIP/Postal Code")]
        [MaxLength(20)]
        public string Address2_PostalCode {
            get {
                return GetAttributeValue<string>("address2_postalcode");
            }
            set {
                SetAttributeValue("address2_postalcode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the name of the main contact at the account's secondary address.</para>
        /// <para>Display Name: Address 2: Primary Contact Name</para>
        /// </summary>
        [AttributeLogicalName("address2_primarycontactname")]
        [DisplayName("Address 2: Primary Contact Name")]
        [MaxLength(100)]
        public string Address2_PrimaryContactName {
            get {
                return GetAttributeValue<string>("address2_primarycontactname");
            }
            set {
                SetAttributeValue("address2_primarycontactname", value);
            }
        }
        
        /// <summary>
        /// <para>Select a shipping method for deliveries sent to this address.</para>
        /// <para>Display Name: Address 2: Shipping Method</para>
        /// </summary>
        [AttributeLogicalName("address2_shippingmethodcode")]
        [DisplayName("Address 2: Shipping Method")]
        public Account_Address2_ShippingMethodCode? Address2_ShippingMethodCode {
            get {
                return GetOptionSetValue<Account_Address2_ShippingMethodCode>("address2_shippingmethodcode");
            }
            set {
                SetOptionSetValue("address2_shippingmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the state or province of the secondary address.</para>
        /// <para>Display Name: Address 2: State/Province</para>
        /// </summary>
        [AttributeLogicalName("address2_stateorprovince")]
        [DisplayName("Address 2: State/Province")]
        [MaxLength(50)]
        public string Address2_StateOrProvince {
            get {
                return GetAttributeValue<string>("address2_stateorprovince");
            }
            set {
                SetAttributeValue("address2_stateorprovince", value);
            }
        }
        
        /// <summary>
        /// <para>Type the main phone number associated with the secondary address.</para>
        /// <para>Display Name: Address 2: Telephone 1</para>
        /// </summary>
        [AttributeLogicalName("address2_telephone1")]
        [DisplayName("Address 2: Telephone 1")]
        [MaxLength(50)]
        public string Address2_Telephone1 {
            get {
                return GetAttributeValue<string>("address2_telephone1");
            }
            set {
                SetAttributeValue("address2_telephone1", value);
            }
        }
        
        /// <summary>
        /// <para>Type a second phone number associated with the secondary address.</para>
        /// <para>Display Name: Address 2: Telephone 2</para>
        /// </summary>
        [AttributeLogicalName("address2_telephone2")]
        [DisplayName("Address 2: Telephone 2")]
        [MaxLength(50)]
        public string Address2_Telephone2 {
            get {
                return GetAttributeValue<string>("address2_telephone2");
            }
            set {
                SetAttributeValue("address2_telephone2", value);
            }
        }
        
        /// <summary>
        /// <para>Type a third phone number associated with the secondary address.</para>
        /// <para>Display Name: Address 2: Telephone 3</para>
        /// </summary>
        [AttributeLogicalName("address2_telephone3")]
        [DisplayName("Address 2: Telephone 3")]
        [MaxLength(50)]
        public string Address2_Telephone3 {
            get {
                return GetAttributeValue<string>("address2_telephone3");
            }
            set {
                SetAttributeValue("address2_telephone3", value);
            }
        }
        
        /// <summary>
        /// <para>Type the UPS zone of the secondary address to make sure shipping charges are calculated correctly and deliveries are made promptly, if shipped by UPS.</para>
        /// <para>Display Name: Address 2: UPS Zone</para>
        /// </summary>
        [AttributeLogicalName("address2_upszone")]
        [DisplayName("Address 2: UPS Zone")]
        [MaxLength(4)]
        public string Address2_UPSZone {
            get {
                return GetAttributeValue<string>("address2_upszone");
            }
            set {
                SetAttributeValue("address2_upszone", value);
            }
        }
        
        /// <summary>
        /// <para>Select the time zone, or UTC offset, for this address so that other people can reference it when they contact someone at this address.</para>
        /// <para>Display Name: Address 2: UTC Offset</para>
        /// </summary>
        [AttributeLogicalName("address2_utcoffset")]
        [DisplayName("Address 2: UTC Offset")]
        [Range(-1500, 1500)]
        public int? Address2_UTCOffset {
            get {
                return GetAttributeValue<int?>("address2_utcoffset");
            }
            set {
                SetAttributeValue("address2_utcoffset", value);
            }
        }
        
        /// <summary>
        /// <para>For system use only.</para>
        /// <para>Display Name: Aging 30</para>
        /// </summary>
        [AttributeLogicalName("aging30")]
        [DisplayName("Aging 30")]
        public decimal? Aging30 {
            get {
                return GetMoneyValue("aging30");
            }
        }
        
        /// <summary>
        /// <para>The base currency equivalent of the aging 30 field.</para>
        /// <para>Display Name: Aging 30 (Base)</para>
        /// </summary>
        [AttributeLogicalName("aging30_base")]
        [DisplayName("Aging 30 (Base)")]
        public decimal? Aging30_Base {
            get {
                return GetMoneyValue("aging30_base");
            }
        }
        
        /// <summary>
        /// <para>For system use only.</para>
        /// <para>Display Name: Aging 60</para>
        /// </summary>
        [AttributeLogicalName("aging60")]
        [DisplayName("Aging 60")]
        public decimal? Aging60 {
            get {
                return GetMoneyValue("aging60");
            }
        }
        
        /// <summary>
        /// <para>The base currency equivalent of the aging 60 field.</para>
        /// <para>Display Name: Aging 60 (Base)</para>
        /// </summary>
        [AttributeLogicalName("aging60_base")]
        [DisplayName("Aging 60 (Base)")]
        public decimal? Aging60_Base {
            get {
                return GetMoneyValue("aging60_base");
            }
        }
        
        /// <summary>
        /// <para>For system use only.</para>
        /// <para>Display Name: Aging 90</para>
        /// </summary>
        [AttributeLogicalName("aging90")]
        [DisplayName("Aging 90")]
        public decimal? Aging90 {
            get {
                return GetMoneyValue("aging90");
            }
        }
        
        /// <summary>
        /// <para>The base currency equivalent of the aging 90 field.</para>
        /// <para>Display Name: Aging 90 (Base)</para>
        /// </summary>
        [AttributeLogicalName("aging90_base")]
        [DisplayName("Aging 90 (Base)")]
        public decimal? Aging90_Base {
            get {
                return GetMoneyValue("aging90_base");
            }
        }
        
        /// <summary>
        /// <para>Select the legal designation or other business type of the account for contracts or reporting purposes.</para>
        /// <para>Display Name: Business Type</para>
        /// </summary>
        [AttributeLogicalName("businesstypecode")]
        [DisplayName("Business Type")]
        public Account_BusinessTypeCode? BusinessTypeCode {
            get {
                return GetOptionSetValue<Account_BusinessTypeCode>("businesstypecode");
            }
            set {
                SetOptionSetValue("businesstypecode", value);
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Shows the external party who created the record.</para>
        /// <para>Display Name: Created By (External Party)</para>
        /// </summary>
        [AttributeLogicalName("createdbyexternalparty")]
        [DisplayName("Created By (External Party)")]
        public EntityReference CreatedByExternalParty {
            get {
                return GetAttributeValue<EntityReference>("createdbyexternalparty");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record on behalf of another user.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Type the credit limit of the account. This is a useful reference when you address invoice and accounting issues with the customer.</para>
        /// <para>Display Name: Credit Limit</para>
        /// </summary>
        [AttributeLogicalName("creditlimit")]
        [DisplayName("Credit Limit")]
        public decimal? CreditLimit {
            get {
                return GetMoneyValue("creditlimit");
            }
            set {
                SetMoneyValue("creditlimit", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the credit limit converted to the system's default base currency for reporting purposes.</para>
        /// <para>Display Name: Credit Limit (Base)</para>
        /// </summary>
        [AttributeLogicalName("creditlimit_base")]
        [DisplayName("Credit Limit (Base)")]
        public decimal? CreditLimit_Base {
            get {
                return GetMoneyValue("creditlimit_base");
            }
        }
        
        /// <summary>
        /// <para>Select whether the credit for the account is on hold. This is a useful reference while addressing the invoice and accounting issues with the customer.</para>
        /// <para>Display Name: Credit Hold</para>
        /// </summary>
        [AttributeLogicalName("creditonhold")]
        [DisplayName("Credit Hold")]
        public bool? CreditOnHold {
            get {
                return GetAttributeValue<bool?>("creditonhold");
            }
            set {
                SetAttributeValue("creditonhold", value);
            }
        }
        
        /// <summary>
        /// <para>Select the size category or range of the account for segmentation and reporting purposes.</para>
        /// <para>Display Name: Customer Size</para>
        /// </summary>
        [AttributeLogicalName("customersizecode")]
        [DisplayName("Customer Size")]
        public Account_CustomerSizeCode? CustomerSizeCode {
            get {
                return GetOptionSetValue<Account_CustomerSizeCode>("customersizecode");
            }
            set {
                SetOptionSetValue("customersizecode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the category that best describes the relationship between the account and your organization.</para>
        /// <para>Display Name: Relationship Type</para>
        /// </summary>
        [AttributeLogicalName("customertypecode")]
        [DisplayName("Relationship Type")]
        public Account_CustomerTypeCode? CustomerTypeCode {
            get {
                return GetOptionSetValue<Account_CustomerTypeCode>("customertypecode");
            }
            set {
                SetOptionSetValue("customertypecode", value);
            }
        }
        
        /// <summary>
        /// <para>price_level_accounts</para>
        /// <para>Display Name: Price List</para>
        /// </summary>
        [AttributeLogicalName("defaultpricelevelid")]
        [DisplayName("Price List")]
        public EntityReference DefaultPriceLevelId {
            get {
                return GetAttributeValue<EntityReference>("defaultpricelevelid");
            }
            set {
                SetAttributeValue("defaultpricelevelid", value);
            }
        }
        
        /// <summary>
        /// <para>Type additional information to describe the account, such as an excerpt from the company's website.</para>
        /// <para>Display Name: Description</para>
        /// </summary>
        [AttributeLogicalName("description")]
        [DisplayName("Description")]
        public string Description {
            get {
                return GetAttributeValue<string>("description");
            }
            set {
                SetAttributeValue("description", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the account allows bulk email sent through campaigns. If Do Not Allow is selected, the account can be added to marketing lists, but is excluded from email.</para>
        /// <para>Display Name: Do not allow Bulk Emails</para>
        /// </summary>
        [AttributeLogicalName("donotbulkemail")]
        [DisplayName("Do not allow Bulk Emails")]
        public bool? DoNotBulkEMail {
            get {
                return GetAttributeValue<bool?>("donotbulkemail");
            }
            set {
                SetAttributeValue("donotbulkemail", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the account allows bulk postal mail sent through marketing campaigns or quick campaigns. If Do Not Allow is selected, the account can be added to marketing lists, but will be excluded from the postal mail.</para>
        /// <para>Display Name: Do not allow Bulk Mails</para>
        /// </summary>
        [AttributeLogicalName("donotbulkpostalmail")]
        [DisplayName("Do not allow Bulk Mails")]
        public bool? DoNotBulkPostalMail {
            get {
                return GetAttributeValue<bool?>("donotbulkpostalmail");
            }
            set {
                SetAttributeValue("donotbulkpostalmail", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the account allows direct email sent from Microsoft Dynamics 365.</para>
        /// <para>Display Name: Do not allow Emails</para>
        /// </summary>
        [AttributeLogicalName("donotemail")]
        [DisplayName("Do not allow Emails")]
        public bool? DoNotEMail {
            get {
                return GetAttributeValue<bool?>("donotemail");
            }
            set {
                SetAttributeValue("donotemail", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the account allows faxes. If Do Not Allow is selected, the account will be excluded from fax activities distributed in marketing campaigns.</para>
        /// <para>Display Name: Do not allow Faxes</para>
        /// </summary>
        [AttributeLogicalName("donotfax")]
        [DisplayName("Do not allow Faxes")]
        public bool? DoNotFax {
            get {
                return GetAttributeValue<bool?>("donotfax");
            }
            set {
                SetAttributeValue("donotfax", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the account allows phone calls. If Do Not Allow is selected, the account will be excluded from phone call activities distributed in marketing campaigns.</para>
        /// <para>Display Name: Do not allow Phone Calls</para>
        /// </summary>
        [AttributeLogicalName("donotphone")]
        [DisplayName("Do not allow Phone Calls")]
        public bool? DoNotPhone {
            get {
                return GetAttributeValue<bool?>("donotphone");
            }
            set {
                SetAttributeValue("donotphone", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the account allows direct mail. If Do Not Allow is selected, the account will be excluded from letter activities distributed in marketing campaigns.</para>
        /// <para>Display Name: Do not allow Mails</para>
        /// </summary>
        [AttributeLogicalName("donotpostalmail")]
        [DisplayName("Do not allow Mails")]
        public bool? DoNotPostalMail {
            get {
                return GetAttributeValue<bool?>("donotpostalmail");
            }
            set {
                SetAttributeValue("donotpostalmail", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the account accepts marketing materials, such as brochures or catalogs.</para>
        /// <para>Display Name: Send Marketing Materials</para>
        /// </summary>
        [AttributeLogicalName("donotsendmm")]
        [DisplayName("Send Marketing Materials")]
        public bool? DoNotSendMM {
            get {
                return GetAttributeValue<bool?>("donotsendmm");
            }
            set {
                SetAttributeValue("donotsendmm", value);
            }
        }
        
        /// <summary>
        /// <para>Type the primary email address for the account.</para>
        /// <para>Display Name: Email</para>
        /// </summary>
        [AttributeLogicalName("emailaddress1")]
        [DisplayName("Email")]
        [MaxLength(100)]
        public string EMailAddress1 {
            get {
                return GetAttributeValue<string>("emailaddress1");
            }
            set {
                SetAttributeValue("emailaddress1", value);
            }
        }
        
        /// <summary>
        /// <para>Type the secondary email address for the account.</para>
        /// <para>Display Name: Email Address 2</para>
        /// </summary>
        [AttributeLogicalName("emailaddress2")]
        [DisplayName("Email Address 2")]
        [MaxLength(100)]
        public string EMailAddress2 {
            get {
                return GetAttributeValue<string>("emailaddress2");
            }
            set {
                SetAttributeValue("emailaddress2", value);
            }
        }
        
        /// <summary>
        /// <para>Type an alternate email address for the account.</para>
        /// <para>Display Name: Email Address 3</para>
        /// </summary>
        [AttributeLogicalName("emailaddress3")]
        [DisplayName("Email Address 3")]
        [MaxLength(100)]
        public string EMailAddress3 {
            get {
                return GetAttributeValue<string>("emailaddress3");
            }
            set {
                SetAttributeValue("emailaddress3", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Entity Image Id</para>
        /// </summary>
        [AttributeLogicalName("entityimageid")]
        [DisplayName("Entity Image Id")]
        public Guid? EntityImageId {
            get {
                return GetAttributeValue<Guid?>("entityimageid");
            }
        }
        
        /// <summary>
        /// <para>Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("Exchange Rate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Type the fax number for the account.</para>
        /// <para>Display Name: Fax</para>
        /// </summary>
        [AttributeLogicalName("fax")]
        [DisplayName("Fax")]
        [MaxLength(50)]
        public string Fax {
            get {
                return GetAttributeValue<string>("fax");
            }
            set {
                SetAttributeValue("fax", value);
            }
        }
        
        /// <summary>
        /// <para>Information about whether to allow following email activity like opens, attachment views and link clicks for emails sent to the account.</para>
        /// <para>Display Name: Follow Email Activity</para>
        /// </summary>
        [AttributeLogicalName("followemail")]
        [DisplayName("Follow Email Activity")]
        public bool? FollowEmail {
            get {
                return GetAttributeValue<bool?>("followemail");
            }
            set {
                SetAttributeValue("followemail", value);
            }
        }
        
        /// <summary>
        /// <para>Type the URL for the account's FTP site to enable users to access data and share documents.</para>
        /// <para>Display Name: FTP Site</para>
        /// </summary>
        [AttributeLogicalName("ftpsiteurl")]
        [DisplayName("FTP Site")]
        [MaxLength(200)]
        public string FtpSiteURL {
            get {
                return GetAttributeValue<string>("ftpsiteurl");
            }
            set {
                SetAttributeValue("ftpsiteurl", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the data import or data migration that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Select the account's primary industry for use in marketing segmentation and demographic analysis.</para>
        /// <para>Display Name: Industry</para>
        /// </summary>
        [AttributeLogicalName("industrycode")]
        [DisplayName("Industry")]
        public Account_IndustryCode? IndustryCode {
            get {
                return GetOptionSetValue<Account_IndustryCode>("industrycode");
            }
            set {
                SetOptionSetValue("industrycode", value);
            }
        }
        
        /// <summary>
        /// <para>Contains the date and time stamp of the last on hold time.</para>
        /// <para>Display Name: Last On Hold Time</para>
        /// </summary>
        [AttributeLogicalName("lastonholdtime")]
        [DisplayName("Last On Hold Time")]
        public DateTime? LastOnHoldTime {
            get {
                return GetAttributeValue<DateTime?>("lastonholdtime");
            }
            set {
                SetAttributeValue("lastonholdtime", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the date when the account was last included in a marketing campaign or quick campaign.</para>
        /// <para>Display Name: Last Date Included in Campaign</para>
        /// </summary>
        [AttributeLogicalName("lastusedincampaign")]
        [DisplayName("Last Date Included in Campaign")]
        public DateTime? LastUsedInCampaign {
            get {
                return GetAttributeValue<DateTime?>("lastusedincampaign");
            }
            set {
                SetAttributeValue("lastusedincampaign", value);
            }
        }
        
        /// <summary>
        /// <para>Type the market capitalization of the account to identify the company's equity, used as an indicator in financial performance analysis.</para>
        /// <para>Display Name: Market Capitalization</para>
        /// </summary>
        [AttributeLogicalName("marketcap")]
        [DisplayName("Market Capitalization")]
        public decimal? MarketCap {
            get {
                return GetMoneyValue("marketcap");
            }
            set {
                SetMoneyValue("marketcap", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the market capitalization converted to the system's default base currency.</para>
        /// <para>Display Name: Market Capitalization (Base)</para>
        /// </summary>
        [AttributeLogicalName("marketcap_base")]
        [DisplayName("Market Capitalization (Base)")]
        public decimal? MarketCap_Base {
            get {
                return GetMoneyValue("marketcap_base");
            }
        }
        
        /// <summary>
        /// <para>Whether is only for marketing</para>
        /// <para>Display Name: Marketing Only</para>
        /// </summary>
        [AttributeLogicalName("marketingonly")]
        [DisplayName("Marketing Only")]
        public bool? MarketingOnly {
            get {
                return GetAttributeValue<bool?>("marketingonly");
            }
            set {
                SetAttributeValue("marketingonly", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the master account that the account was merged with.</para>
        /// <para>Display Name: Master ID</para>
        /// </summary>
        [AttributeLogicalName("masterid")]
        [DisplayName("Master ID")]
        public EntityReference MasterId {
            get {
                return GetAttributeValue<EntityReference>("masterid");
            }
        }
        
        /// <summary>
        /// <para>Shows whether the account has been merged with another account.</para>
        /// <para>Display Name: Merged</para>
        /// </summary>
        [AttributeLogicalName("merged")]
        [DisplayName("Merged")]
        public bool? Merged {
            get {
                return GetAttributeValue<bool?>("merged");
            }
        }
        
        /// <summary>
        /// <para>Shows who last updated the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Shows the external party who modified the record.</para>
        /// <para>Display Name: Modified By (External Party)</para>
        /// </summary>
        [AttributeLogicalName("modifiedbyexternalparty")]
        [DisplayName("Modified By (External Party)")]
        public EntityReference ModifiedByExternalParty {
            get {
                return GetAttributeValue<EntityReference>("modifiedbyexternalparty");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record on behalf of another user.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Type the company or business name.</para>
        /// <para>Display Name: Account Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Account Name")]
        [MaxLength(160)]
        public string Name {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Type the number of employees that work at the account for use in marketing segmentation and demographic analysis.</para>
        /// <para>Display Name: Number of Employees</para>
        /// </summary>
        [AttributeLogicalName("numberofemployees")]
        [DisplayName("Number of Employees")]
        [Range(0, 1000000000)]
        public int? NumberOfEmployees {
            get {
                return GetAttributeValue<int?>("numberofemployees");
            }
            set {
                SetAttributeValue("numberofemployees", value);
            }
        }
        
        /// <summary>
        /// <para>Shows how long, in minutes, that the record was on hold.</para>
        /// <para>Display Name: On Hold Time (Minutes)</para>
        /// </summary>
        [AttributeLogicalName("onholdtime")]
        [DisplayName("On Hold Time (Minutes)")]
        [Range(-2147483648, 2147483647)]
        public int? OnHoldTime {
            get {
                return GetAttributeValue<int?>("onholdtime");
            }
        }
        
        /// <summary>
        /// <para>Number of open opportunities against an account and its child accounts.</para>
        /// <para>Display Name: Open Deals</para>
        /// </summary>
        [AttributeLogicalName("opendeals")]
        [DisplayName("Open Deals")]
        [Range(-2147483648, 2147483647)]
        public int? OpenDeals {
            get {
                return GetAttributeValue<int?>("opendeals");
            }
        }
        
        /// <summary>
        /// <para>The date time for Open Deals.</para>
        /// <para>Display Name: Open Deals(Last Updated Time)</para>
        /// </summary>
        [AttributeLogicalName("opendeals_date")]
        [DisplayName("Open Deals(Last Updated Time)")]
        public DateTime? OpenDeals_Date {
            get {
                return GetAttributeValue<DateTime?>("opendeals_date");
            }
        }
        
        /// <summary>
        /// <para>State of Open Deals.</para>
        /// <para>Display Name: Open Deals(State)</para>
        /// </summary>
        [AttributeLogicalName("opendeals_state")]
        [DisplayName("Open Deals(State)")]
        [Range(-2147483648, 2147483647)]
        public int? OpenDeals_State {
            get {
                return GetAttributeValue<int?>("opendeals_state");
            }
        }
        
        /// <summary>
        /// <para>Sum of open revenue against an account and its child accounts.</para>
        /// <para>Display Name: Open Revenue</para>
        /// </summary>
        [AttributeLogicalName("openrevenue")]
        [DisplayName("Open Revenue")]
        public decimal? OpenRevenue {
            get {
                return GetMoneyValue("openrevenue");
            }
        }
        
        /// <summary>
        /// <para>Sum of open revenue against an account and its child accounts.</para>
        /// <para>Display Name: Open Revenue (Base)</para>
        /// </summary>
        [AttributeLogicalName("openrevenue_base")]
        [DisplayName("Open Revenue (Base)")]
        public decimal? OpenRevenue_Base {
            get {
                return GetMoneyValue("openrevenue_base");
            }
        }
        
        /// <summary>
        /// <para>The date time for Open Revenue.</para>
        /// <para>Display Name: Open Revenue(Last Updated Time)</para>
        /// </summary>
        [AttributeLogicalName("openrevenue_date")]
        [DisplayName("Open Revenue(Last Updated Time)")]
        public DateTime? OpenRevenue_Date {
            get {
                return GetAttributeValue<DateTime?>("openrevenue_date");
            }
        }
        
        /// <summary>
        /// <para>State of Open Revenue.</para>
        /// <para>Display Name: Open Revenue(State)</para>
        /// </summary>
        [AttributeLogicalName("openrevenue_state")]
        [DisplayName("Open Revenue(State)")]
        [Range(-2147483648, 2147483647)]
        public int? OpenRevenue_State {
            get {
                return GetAttributeValue<int?>("openrevenue_state");
            }
        }
        
        /// <summary>
        /// <para>account_originating_lead</para>
        /// <para>Display Name: Originating Lead</para>
        /// </summary>
        [AttributeLogicalName("originatingleadid")]
        [DisplayName("Originating Lead")]
        public EntityReference OriginatingLeadId {
            get {
                return GetAttributeValue<EntityReference>("originatingleadid");
            }
            set {
                SetAttributeValue("originatingleadid", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the user or team who is assigned to manage the record. This field is updated every time the record is assigned to a different user.</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Select the account's ownership structure, such as public or private.</para>
        /// <para>Display Name: Ownership</para>
        /// </summary>
        [AttributeLogicalName("ownershipcode")]
        [DisplayName("Ownership")]
        public Account_OwnershipCode? OwnershipCode {
            get {
                return GetOptionSetValue<Account_OwnershipCode>("ownershipcode");
            }
            set {
                SetOptionSetValue("ownershipcode", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the business unit that the record owner belongs to.</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the team who owns the account.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who owns the account.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Choose the parent account associated with this account to show parent and child businesses in reporting and analytics.</para>
        /// <para>Display Name: Parent Account</para>
        /// </summary>
        [AttributeLogicalName("parentaccountid")]
        [DisplayName("Parent Account")]
        public EntityReference ParentAccountId {
            get {
                return GetAttributeValue<EntityReference>("parentaccountid");
            }
            set {
                SetAttributeValue("parentaccountid", value);
            }
        }
        
        /// <summary>
        /// <para>For system use only. Legacy Microsoft Dynamics CRM 3.0 workflow data.</para>
        /// <para>Display Name: Participates in Workflow</para>
        /// </summary>
        [AttributeLogicalName("participatesinworkflow")]
        [DisplayName("Participates in Workflow")]
        public bool? ParticipatesInWorkflow {
            get {
                return GetAttributeValue<bool?>("participatesinworkflow");
            }
            set {
                SetAttributeValue("participatesinworkflow", value);
            }
        }
        
        /// <summary>
        /// <para>Select the payment terms to indicate when the customer needs to pay the total amount.</para>
        /// <para>Display Name: Payment Terms</para>
        /// </summary>
        [AttributeLogicalName("paymenttermscode")]
        [DisplayName("Payment Terms")]
        public Account_PaymentTermsCode? PaymentTermsCode {
            get {
                return GetOptionSetValue<Account_PaymentTermsCode>("paymenttermscode");
            }
            set {
                SetOptionSetValue("paymenttermscode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the preferred day of the week for service appointments.</para>
        /// <para>Display Name: Preferred Day</para>
        /// </summary>
        [AttributeLogicalName("preferredappointmentdaycode")]
        [DisplayName("Preferred Day")]
        public Account_PreferredAppointmentDayCode? PreferredAppointmentDayCode {
            get {
                return GetOptionSetValue<Account_PreferredAppointmentDayCode>("preferredappointmentdaycode");
            }
            set {
                SetOptionSetValue("preferredappointmentdaycode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the preferred time of day for service appointments.</para>
        /// <para>Display Name: Preferred Time</para>
        /// </summary>
        [AttributeLogicalName("preferredappointmenttimecode")]
        [DisplayName("Preferred Time")]
        public Account_PreferredAppointmentTimeCode? PreferredAppointmentTimeCode {
            get {
                return GetOptionSetValue<Account_PreferredAppointmentTimeCode>("preferredappointmenttimecode");
            }
            set {
                SetOptionSetValue("preferredappointmenttimecode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the preferred method of contact.</para>
        /// <para>Display Name: Preferred Method of Contact</para>
        /// </summary>
        [AttributeLogicalName("preferredcontactmethodcode")]
        [DisplayName("Preferred Method of Contact")]
        public Account_PreferredContactMethodCode? PreferredContactMethodCode {
            get {
                return GetOptionSetValue<Account_PreferredContactMethodCode>("preferredcontactmethodcode");
            }
            set {
                SetOptionSetValue("preferredcontactmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>equipment_accounts</para>
        /// <para>Display Name: Preferred Facility/Equipment</para>
        /// </summary>
        [AttributeLogicalName("preferredequipmentid")]
        [DisplayName("Preferred Facility/Equipment")]
        public EntityReference PreferredEquipmentId {
            get {
                return GetAttributeValue<EntityReference>("preferredequipmentid");
            }
            set {
                SetAttributeValue("preferredequipmentid", value);
            }
        }
        
        /// <summary>
        /// <para>service_accounts</para>
        /// <para>Display Name: Preferred Service</para>
        /// </summary>
        [AttributeLogicalName("preferredserviceid")]
        [DisplayName("Preferred Service")]
        public EntityReference PreferredServiceId {
            get {
                return GetAttributeValue<EntityReference>("preferredserviceid");
            }
            set {
                SetAttributeValue("preferredserviceid", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the preferred service representative for reference when you schedule service activities for the account.</para>
        /// <para>Display Name: Preferred User</para>
        /// </summary>
        [AttributeLogicalName("preferredsystemuserid")]
        [DisplayName("Preferred User")]
        public EntityReference PreferredSystemUserId {
            get {
                return GetAttributeValue<EntityReference>("preferredsystemuserid");
            }
            set {
                SetAttributeValue("preferredsystemuserid", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the primary contact for the account to provide quick access to contact details.</para>
        /// <para>Display Name: Primary Contact</para>
        /// </summary>
        [AttributeLogicalName("primarycontactid")]
        [DisplayName("Primary Contact")]
        public EntityReference PrimaryContactId {
            get {
                return GetAttributeValue<EntityReference>("primarycontactid");
            }
            set {
                SetAttributeValue("primarycontactid", value);
            }
        }
        
        /// <summary>
        /// <para>Type the company or business name.</para>
        /// <para>Display Name: Account Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Account Name")]
        [MaxLength(160)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Primary Satori ID for Account</para>
        /// <para>Display Name: Primary Satori ID</para>
        /// </summary>
        [AttributeLogicalName("primarysatoriid")]
        [DisplayName("Primary Satori ID")]
        [MaxLength(200)]
        public string PrimarySatoriId {
            get {
                return GetAttributeValue<string>("primarysatoriid");
            }
            set {
                SetAttributeValue("primarysatoriid", value);
            }
        }
        
        /// <summary>
        /// <para>Primary Twitter ID for Account</para>
        /// <para>Display Name: Primary Twitter ID</para>
        /// </summary>
        [AttributeLogicalName("primarytwitterid")]
        [DisplayName("Primary Twitter ID")]
        [MaxLength(128)]
        public string PrimaryTwitterId {
            get {
                return GetAttributeValue<string>("primarytwitterid");
            }
            set {
                SetAttributeValue("primarytwitterid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the process.</para>
        /// <para>Display Name: Process</para>
        /// </summary>
        [AttributeLogicalName("processid")]
        [DisplayName("Process")]
        public Guid? ProcessId {
            get {
                return GetAttributeValue<Guid?>("processid");
            }
            set {
                SetAttributeValue("processid", value);
            }
        }
        
        /// <summary>
        /// <para>Type the annual revenue for the account, used as an indicator in financial performance analysis.</para>
        /// <para>Display Name: Annual Revenue</para>
        /// </summary>
        [AttributeLogicalName("revenue")]
        [DisplayName("Annual Revenue")]
        public decimal? Revenue {
            get {
                return GetMoneyValue("revenue");
            }
            set {
                SetMoneyValue("revenue", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the annual revenue converted to the system's default base currency. The calculations use the exchange rate specified in the Currencies area.</para>
        /// <para>Display Name: Annual Revenue (Base)</para>
        /// </summary>
        [AttributeLogicalName("revenue_base")]
        [DisplayName("Annual Revenue (Base)")]
        public decimal? Revenue_Base {
            get {
                return GetMoneyValue("revenue_base");
            }
        }
        
        /// <summary>
        /// <para>Type the Standard Industrial Classification (SIC) code that indicates the account's primary industry of business, for use in marketing segmentation and demographic analysis.</para>
        /// <para>Display Name: SIC Code</para>
        /// </summary>
        [AttributeLogicalName("sic")]
        [DisplayName("SIC Code")]
        [MaxLength(20)]
        public string SIC {
            get {
                return GetAttributeValue<string>("sic");
            }
            set {
                SetAttributeValue("sic", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the service level agreement (SLA) that you want to apply to the Account record.</para>
        /// <para>Display Name: SLA</para>
        /// </summary>
        [AttributeLogicalName("slaid")]
        [DisplayName("SLA")]
        public EntityReference SLAId {
            get {
                return GetAttributeValue<EntityReference>("slaid");
            }
            set {
                SetAttributeValue("slaid", value);
            }
        }
        
        /// <summary>
        /// <para>Last SLA that was applied to this case. This field is for internal use only.</para>
        /// <para>Display Name: Last SLA applied</para>
        /// </summary>
        [AttributeLogicalName("slainvokedid")]
        [DisplayName("Last SLA applied")]
        public EntityReference SLAInvokedId {
            get {
                return GetAttributeValue<EntityReference>("slainvokedid");
            }
        }
        
        /// <summary>
        /// <para>Type the number of shares available to the public for the account. This number is used as an indicator in financial performance analysis.</para>
        /// <para>Display Name: Shares Outstanding</para>
        /// </summary>
        [AttributeLogicalName("sharesoutstanding")]
        [DisplayName("Shares Outstanding")]
        [Range(0, 1000000000)]
        public int? SharesOutstanding {
            get {
                return GetAttributeValue<int?>("sharesoutstanding");
            }
            set {
                SetAttributeValue("sharesoutstanding", value);
            }
        }
        
        /// <summary>
        /// <para>Select a shipping method for deliveries sent to the account's address to designate the preferred carrier or other delivery option.</para>
        /// <para>Display Name: Shipping Method</para>
        /// </summary>
        [AttributeLogicalName("shippingmethodcode")]
        [DisplayName("Shipping Method")]
        public Account_ShippingMethodCode? ShippingMethodCode {
            get {
                return GetOptionSetValue<Account_ShippingMethodCode>("shippingmethodcode");
            }
            set {
                SetOptionSetValue("shippingmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the stage.</para>
        /// <para>Display Name: (Deprecated) Process Stage</para>
        /// </summary>
        [AttributeLogicalName("stageid")]
        [DisplayName("(Deprecated) Process Stage")]
        public Guid? StageId {
            get {
                return GetAttributeValue<Guid?>("stageid");
            }
            set {
                SetAttributeValue("stageid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows whether the account is active or inactive. Inactive accounts are read-only and can't be edited unless they are reactivated.</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public AccountState? StateCode {
            get {
                return GetOptionSetValue<AccountState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the account's status.</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public Account_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<Account_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the stock exchange at which the account is listed to track their stock and financial performance of the company.</para>
        /// <para>Display Name: Stock Exchange</para>
        /// </summary>
        [AttributeLogicalName("stockexchange")]
        [DisplayName("Stock Exchange")]
        [MaxLength(20)]
        public string StockExchange {
            get {
                return GetAttributeValue<string>("stockexchange");
            }
            set {
                SetAttributeValue("stockexchange", value);
            }
        }
        
        /// <summary>
        /// <para>Number of users or conversations followed the record</para>
        /// <para>Display Name: TeamsFollowed</para>
        /// </summary>
        [AttributeLogicalName("teamsfollowed")]
        [DisplayName("TeamsFollowed")]
        [Range(-2147483648, 2147483647)]
        public int? TeamsFollowed {
            get {
                return GetAttributeValue<int?>("teamsfollowed");
            }
            set {
                SetAttributeValue("teamsfollowed", value);
            }
        }
        
        /// <summary>
        /// <para>Type the main phone number for this account.</para>
        /// <para>Display Name: Main Phone</para>
        /// </summary>
        [AttributeLogicalName("telephone1")]
        [DisplayName("Main Phone")]
        [MaxLength(50)]
        public string Telephone1 {
            get {
                return GetAttributeValue<string>("telephone1");
            }
            set {
                SetAttributeValue("telephone1", value);
            }
        }
        
        /// <summary>
        /// <para>Type a second phone number for this account.</para>
        /// <para>Display Name: Other Phone</para>
        /// </summary>
        [AttributeLogicalName("telephone2")]
        [DisplayName("Other Phone")]
        [MaxLength(50)]
        public string Telephone2 {
            get {
                return GetAttributeValue<string>("telephone2");
            }
            set {
                SetAttributeValue("telephone2", value);
            }
        }
        
        /// <summary>
        /// <para>Type a third phone number for this account.</para>
        /// <para>Display Name: Telephone 3</para>
        /// </summary>
        [AttributeLogicalName("telephone3")]
        [DisplayName("Telephone 3")]
        [MaxLength(50)]
        public string Telephone3 {
            get {
                return GetAttributeValue<string>("telephone3");
            }
            set {
                SetAttributeValue("telephone3", value);
            }
        }
        
        /// <summary>
        /// <para>Select a region or territory for the account for use in segmentation and analysis.</para>
        /// <para>Display Name: Territory Code</para>
        /// </summary>
        [AttributeLogicalName("territorycode")]
        [DisplayName("Territory Code")]
        public Account_TerritoryCode? TerritoryCode {
            get {
                return GetOptionSetValue<Account_TerritoryCode>("territorycode");
            }
            set {
                SetOptionSetValue("territorycode", value);
            }
        }
        
        /// <summary>
        /// <para>territory_accounts</para>
        /// <para>Display Name: Territory</para>
        /// </summary>
        [AttributeLogicalName("territoryid")]
        [DisplayName("Territory")]
        public EntityReference TerritoryId {
            get {
                return GetAttributeValue<EntityReference>("territoryid");
            }
            set {
                SetAttributeValue("territoryid", value);
            }
        }
        
        /// <summary>
        /// <para>Type the stock exchange symbol for the account to track financial performance of the company. You can click the code entered in this field to access the latest trading information from MSN Money.</para>
        /// <para>Display Name: Ticker Symbol</para>
        /// </summary>
        [AttributeLogicalName("tickersymbol")]
        [DisplayName("Ticker Symbol")]
        [MaxLength(10)]
        public string TickerSymbol {
            get {
                return GetAttributeValue<string>("tickersymbol");
            }
            set {
                SetAttributeValue("tickersymbol", value);
            }
        }
        
        /// <summary>
        /// <para>Total time spent for emails (read and write) and meetings by me in relation to account record.</para>
        /// <para>Display Name: Time Spent by me</para>
        /// </summary>
        [AttributeLogicalName("timespentbymeonemailandmeetings")]
        [DisplayName("Time Spent by me")]
        [MaxLength(1250)]
        public string TimeSpentByMeOnEmailAndMeetings {
            get {
                return GetAttributeValue<string>("timespentbymeonemailandmeetings");
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the local currency for the record to make sure budgets are reported in the correct currency.</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: (Deprecated) Traversed Path</para>
        /// </summary>
        [AttributeLogicalName("traversedpath")]
        [DisplayName("(Deprecated) Traversed Path")]
        [MaxLength(1250)]
        public string TraversedPath {
            get {
                return GetAttributeValue<string>("traversedpath");
            }
            set {
                SetAttributeValue("traversedpath", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version number of the account.</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Type the account's website URL to get quick details about the company profile.</para>
        /// <para>Display Name: Website</para>
        /// </summary>
        [AttributeLogicalName("websiteurl")]
        [DisplayName("Website")]
        [MaxLength(200)]
        public string WebSiteURL {
            get {
                return GetAttributeValue<string>("websiteurl");
            }
            set {
                SetAttributeValue("websiteurl", value);
            }
        }
        
        /// <summary>
        /// <para>Type the phonetic spelling of the company name, if specified in Japanese, to make sure the name is pronounced correctly in phone calls and other communications.</para>
        /// <para>Display Name: Yomi Account Name</para>
        /// </summary>
        [AttributeLogicalName("yominame")]
        [DisplayName("Yomi Account Name")]
        [MaxLength(160)]
        public string YomiName {
            get {
                return GetAttributeValue<string>("yominame");
            }
            set {
                SetAttributeValue("yominame", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Anonymized</para>
        /// </summary>
        [AttributeLogicalName("dg_anonymized")]
        [DisplayName("Anonymized")]
        public DateTime? dg_Anonymized {
            get {
                return GetAttributeValue<DateTime?>("dg_anonymized");
            }
            set {
                SetAttributeValue("dg_anonymized", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Multiselect</para>
        /// </summary>
        [AttributeLogicalName("dg_multiselect")]
        [DisplayName("Multiselect")]
        public IEnumerable<Account_dg_Multiselect> dg_Multiselect {
            get {
                return GetOptionSetCollectionValue<Account_dg_Multiselect>("dg_multiselect");
            }
            set {
                SetOptionSetCollectionValue("dg_multiselect", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Some Decimal</para>
        /// </summary>
        [AttributeLogicalName("dg_somedecimal")]
        [DisplayName("Some Decimal")]
        public decimal? dg_SomeDecimal {
            get {
                return GetAttributeValue<decimal?>("dg_somedecimal");
            }
            set {
                SetAttributeValue("dg_somedecimal", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: TestCalculated</para>
        /// </summary>
        [AttributeLogicalName("dg_testcalculated")]
        [DisplayName("TestCalculated")]
        public decimal? dg_TestCalculated {
            get {
                return GetMoneyValue("dg_testcalculated");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Test_Med_Underscore</para>
        /// </summary>
        [AttributeLogicalName("dg_test_med_underscore")]
        [DisplayName("Test_Med_Underscore")]
        [MaxLength(100)]
        public string dg_Test_Med_Underscore {
            get {
                return GetAttributeValue<string>("dg_test_med_underscore");
            }
            set {
                SetAttributeValue("dg_test_med_underscore", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Year Only</para>
        /// </summary>
        [AttributeLogicalName("dg_yearonly")]
        [DisplayName("Year Only")]
        public DateTime? dg_YearOnly {
            get {
                return GetAttributeValue<DateTime?>("dg_yearonly");
            }
            set {
                SetAttributeValue("dg_yearonly", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: ZZ_deprecated_field</para>
        /// </summary>
        [AttributeLogicalName("dg_deprecated_field")]
        [DisplayName("ZZ_deprecated_field")]
        [MaxLength(100)]
        [ObsoleteAttribute()]
        public string dg_deprecated_field {
            get {
                return GetAttributeValue<string>("dg_deprecated_field");
            }
            set {
                SetAttributeValue("dg_deprecated_field", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Some string with guids</para>
        /// </summary>
        [AttributeLogicalName("dg_somestringwith_guids")]
        [DisplayName("Some string with guids")]
        [MaxLength(100)]
        public string dg_somestringwith_guids {
            get {
                return GetAttributeValue<string>("dg_somestringwith_guids");
            }
            set {
                SetAttributeValue("dg_somestringwith_guids", value);
            }
        }
        
        /// <summary>
        /// <para>Value of the TestCalculated in base currency.</para>
        /// <para>Display Name: TestCalculated (Base)</para>
        /// </summary>
        [AttributeLogicalName("dg_testcalculated_base")]
        [DisplayName("TestCalculated (Base)")]
        public decimal? dg_testcalculated_Base {
            get {
                return GetMoneyValue("dg_testcalculated_base");
            }
        }
        
        /// <summary>
        /// <para>Reference to an other account to be used for billing (only to be used if billing account differs)</para>
        /// <para>Display Name: Billing Account</para>
        /// </summary>
        [AttributeLogicalName("msdyn_billingaccount")]
        [DisplayName("Billing Account")]
        public EntityReference msdyn_BillingAccount {
            get {
                return GetAttributeValue<EntityReference>("msdyn_billingaccount");
            }
            set {
                SetAttributeValue("msdyn_billingaccount", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Preferred Resource (Deprecated)</para>
        /// </summary>
        [AttributeLogicalName("msdyn_preferredresource")]
        [DisplayName("Preferred Resource (Deprecated)")]
        public EntityReference msdyn_PreferredResource {
            get {
                return GetAttributeValue<EntityReference>("msdyn_preferredresource");
            }
            set {
                SetAttributeValue("msdyn_preferredresource", value);
            }
        }
        
        /// <summary>
        /// <para>Default Sales Tax Code</para>
        /// <para>Display Name: Sales Tax Code</para>
        /// </summary>
        [AttributeLogicalName("msdyn_salestaxcode")]
        [DisplayName("Sales Tax Code")]
        public EntityReference msdyn_SalesTaxCode {
            get {
                return GetAttributeValue<EntityReference>("msdyn_salestaxcode");
            }
            set {
                SetAttributeValue("msdyn_salestaxcode", value);
            }
        }
        
        /// <summary>
        /// <para>The Service Territory this account belongs to. This is used to optimize scheduling and routing</para>
        /// <para>Display Name: Service Territory</para>
        /// </summary>
        [AttributeLogicalName("msdyn_serviceterritory")]
        [DisplayName("Service Territory")]
        public EntityReference msdyn_ServiceTerritory {
            get {
                return GetAttributeValue<EntityReference>("msdyn_serviceterritory");
            }
            set {
                SetAttributeValue("msdyn_serviceterritory", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the account is tax exempt.</para>
        /// <para>Display Name: Tax Exempt</para>
        /// </summary>
        [AttributeLogicalName("msdyn_taxexempt")]
        [DisplayName("Tax Exempt")]
        public bool? msdyn_TaxExempt {
            get {
                return GetAttributeValue<bool?>("msdyn_taxexempt");
            }
            set {
                SetAttributeValue("msdyn_taxexempt", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the government tax exempt number.</para>
        /// <para>Display Name: Tax Exempt Number</para>
        /// </summary>
        [AttributeLogicalName("msdyn_taxexemptnumber")]
        [DisplayName("Tax Exempt Number")]
        [MaxLength(20)]
        public string msdyn_TaxExemptNumber {
            get {
                return GetAttributeValue<string>("msdyn_taxexemptnumber");
            }
            set {
                SetAttributeValue("msdyn_taxexemptnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the travel charge to include on work orders. This value will be multiplied by the travel charge type.</para>
        /// <para>Display Name: Travel Charge</para>
        /// </summary>
        [AttributeLogicalName("msdyn_travelcharge")]
        [DisplayName("Travel Charge")]
        public decimal? msdyn_TravelCharge {
            get {
                return GetMoneyValue("msdyn_travelcharge");
            }
            set {
                SetMoneyValue("msdyn_travelcharge", value);
            }
        }
        
        /// <summary>
        /// <para>Specify how travel is charged for this account.</para>
        /// <para>Display Name: Travel Charge Type</para>
        /// </summary>
        [AttributeLogicalName("msdyn_travelchargetype")]
        [DisplayName("Travel Charge Type")]
        public msdyn_travelchargetype? msdyn_TravelChargeType {
            get {
                return GetOptionSetValue<msdyn_travelchargetype>("msdyn_travelchargetype");
            }
            set {
                SetOptionSetValue("msdyn_travelchargetype", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the default instructions to show on new work orders.</para>
        /// <para>Display Name: Work Order Instructions</para>
        /// </summary>
        [AttributeLogicalName("msdyn_workorderinstructions")]
        [DisplayName("Work Order Instructions")]
        public string msdyn_WorkOrderInstructions {
            get {
                return GetAttributeValue<string>("msdyn_workorderinstructions");
            }
            set {
                SetAttributeValue("msdyn_workorderinstructions", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: KPI</para>
        /// </summary>
        [AttributeLogicalName("msdyn_accountkpiid")]
        [DisplayName("KPI")]
        public EntityReference msdyn_accountkpiid {
            get {
                return GetAttributeValue<EntityReference>("msdyn_accountkpiid");
            }
            set {
                SetAttributeValue("msdyn_accountkpiid", value);
            }
        }
        
        /// <summary>
        /// <para>Describes whether account is opted out or not</para>
        /// <para>Display Name: GDPR Optout</para>
        /// </summary>
        [AttributeLogicalName("msdyn_gdproptout")]
        [DisplayName("GDPR Optout")]
        public bool? msdyn_gdproptout {
            get {
                return GetAttributeValue<bool?>("msdyn_gdproptout");
            }
            set {
                SetAttributeValue("msdyn_gdproptout", value);
            }
        }
        
        /// <summary>
        /// <para>Value of the Travel Charge in base currency.</para>
        /// <para>Display Name: Travel Charge (Base)</para>
        /// </summary>
        [AttributeLogicalName("msdyn_travelcharge_base")]
        [DisplayName("Travel Charge (Base)")]
        public decimal? msdyn_travelcharge_Base {
            get {
                return GetMoneyValue("msdyn_travelcharge_base");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Work Hour Template</para>
        /// </summary>
        [AttributeLogicalName("msdyn_workhourtemplate")]
        [DisplayName("Work Hour Template")]
        public EntityReference msdyn_workhourtemplate {
            get {
                return GetAttributeValue<EntityReference>("msdyn_workhourtemplate");
            }
            set {
                SetAttributeValue("msdyn_workhourtemplate", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: DateOnly</para>
        /// </summary>
        [AttributeLogicalName("new_dateonly")]
        [DisplayName("DateOnly")]
        public DateTime? new_DateOnly {
            get {
                return GetAttributeValue<DateTime?>("new_dateonly");
            }
            set {
                SetAttributeValue("new_dateonly", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: DateTime</para>
        /// </summary>
        [AttributeLogicalName("new_datetime")]
        [DisplayName("DateTime")]
        public DateTime? new_DateTime {
            get {
                return GetAttributeValue<DateTime?>("new_datetime");
            }
            set {
                SetAttributeValue("new_datetime", value);
            }
        }
        
        [RelationshipSchemaName("Account_ActivityPointers")]
        public IEnumerable<ActivityPointer> Account_ActivityPointers {
            get {
                return GetRelatedEntities<ActivityPointer>("Account_ActivityPointers", null);
            }
            set {
                SetRelatedEntities("Account_ActivityPointers", null, value);
            }
        }
        
        [RelationshipSchemaName("Account_Appointments")]
        public IEnumerable<Appointment> Account_Appointments {
            get {
                return GetRelatedEntities<Appointment>("Account_Appointments", null);
            }
            set {
                SetRelatedEntities("Account_Appointments", null, value);
            }
        }
        
        [RelationshipSchemaName("Account_CustomerAddress")]
        public IEnumerable<CustomerAddress> Account_CustomerAddress {
            get {
                return GetRelatedEntities<CustomerAddress>("Account_CustomerAddress", null);
            }
            set {
                SetRelatedEntities("Account_CustomerAddress", null, value);
            }
        }
        
        [RelationshipSchemaName("Account_Email_EmailSender")]
        public IEnumerable<Email> Account_Email_EmailSender {
            get {
                return GetRelatedEntities<Email>("Account_Email_EmailSender", null);
            }
            set {
                SetRelatedEntities("Account_Email_EmailSender", null, value);
            }
        }
        
        [RelationshipSchemaName("Account_Email_SendersAccount")]
        public IEnumerable<Email> Account_Email_SendersAccount {
            get {
                return GetRelatedEntities<Email>("Account_Email_SendersAccount", null);
            }
            set {
                SetRelatedEntities("Account_Email_SendersAccount", null, value);
            }
        }
        
        [RelationshipSchemaName("Account_Emails")]
        public IEnumerable<Email> Account_Emails {
            get {
                return GetRelatedEntities<Email>("Account_Emails", null);
            }
            set {
                SetRelatedEntities("Account_Emails", null, value);
            }
        }
        
        [RelationshipSchemaName("Account_Faxes")]
        public IEnumerable<Fax> Account_Faxes {
            get {
                return GetRelatedEntities<Fax>("Account_Faxes", null);
            }
            set {
                SetRelatedEntities("Account_Faxes", null, value);
            }
        }
        
        [RelationshipSchemaName("Account_Letters")]
        public IEnumerable<Letter> Account_Letters {
            get {
                return GetRelatedEntities<Letter>("Account_Letters", null);
            }
            set {
                SetRelatedEntities("Account_Letters", null, value);
            }
        }
        
        [RelationshipSchemaName("Account_Phonecalls")]
        public IEnumerable<PhoneCall> Account_Phonecalls {
            get {
                return GetRelatedEntities<PhoneCall>("Account_Phonecalls", null);
            }
            set {
                SetRelatedEntities("Account_Phonecalls", null, value);
            }
        }
        
        [RelationshipSchemaName("Account_RecurringAppointmentMasters")]
        public IEnumerable<RecurringAppointmentMaster> Account_RecurringAppointmentMasters {
            get {
                return GetRelatedEntities<RecurringAppointmentMaster>("Account_RecurringAppointmentMasters", null);
            }
            set {
                SetRelatedEntities("Account_RecurringAppointmentMasters", null, value);
            }
        }
        
        [RelationshipSchemaName("Account_ServiceAppointments")]
        public IEnumerable<ServiceAppointment> Account_ServiceAppointments {
            get {
                return GetRelatedEntities<ServiceAppointment>("Account_ServiceAppointments", null);
            }
            set {
                SetRelatedEntities("Account_ServiceAppointments", null, value);
            }
        }
        
        [RelationshipSchemaName("Account_SharepointDocumentLocation")]
        public IEnumerable<SharePointDocumentLocation> Account_SharepointDocumentLocation {
            get {
                return GetRelatedEntities<SharePointDocumentLocation>("Account_SharepointDocumentLocation", null);
            }
            set {
                SetRelatedEntities("Account_SharepointDocumentLocation", null, value);
            }
        }
        
        [RelationshipSchemaName("Account_SocialActivities")]
        public IEnumerable<SocialActivity> Account_SocialActivities {
            get {
                return GetRelatedEntities<SocialActivity>("Account_SocialActivities", null);
            }
            set {
                SetRelatedEntities("Account_SocialActivities", null, value);
            }
        }
        
        [RelationshipSchemaName("Account_SyncErrors")]
        public IEnumerable<SyncError> Account_SyncErrors {
            get {
                return GetRelatedEntities<SyncError>("Account_SyncErrors", null);
            }
            set {
                SetRelatedEntities("Account_SyncErrors", null, value);
            }
        }
        
        [RelationshipSchemaName("Account_Tasks")]
        public IEnumerable<Task> Account_Tasks {
            get {
                return GetRelatedEntities<Task>("Account_Tasks", null);
            }
            set {
                SetRelatedEntities("Account_Tasks", null, value);
            }
        }
        
        [RelationshipSchemaName("CampaignActivity_Accounts")]
        public IEnumerable<CampaignActivity> CampaignActivity_Accounts {
            get {
                return GetRelatedEntities<CampaignActivity>("CampaignActivity_Accounts", null);
            }
            set {
                SetRelatedEntities("CampaignActivity_Accounts", null, value);
            }
        }
        
        [RelationshipSchemaName("CreatedAccount_BulkOperationLogs2")]
        public IEnumerable<BulkOperationLog> CreatedAccount_BulkOperationLogs2 {
            get {
                return GetRelatedEntities<BulkOperationLog>("CreatedAccount_BulkOperationLogs2", null);
            }
            set {
                SetRelatedEntities("CreatedAccount_BulkOperationLogs2", null, value);
            }
        }
        
        [RelationshipSchemaName("account_master_account", EntityRole.Referenced)]
        public IEnumerable<Account> Referencedaccount_master_account {
            get {
                return GetRelatedEntities<Account>("account_master_account", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("account_master_account", EntityRole.Referenced, value);
            }
        }
        
        [RelationshipSchemaName("account_parent_account", EntityRole.Referenced)]
        public IEnumerable<Account> Referencedaccount_parent_account {
            get {
                return GetRelatedEntities<Account>("account_parent_account", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("account_parent_account", EntityRole.Referenced, value);
            }
        }
        
        [RelationshipSchemaName("msdyn_account_account_BillingAccount", EntityRole.Referenced)]
        public IEnumerable<Account> Referencedmsdyn_account_account_BillingAccount {
            get {
                return GetRelatedEntities<Account>("msdyn_account_account_BillingAccount", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("msdyn_account_account_BillingAccount", EntityRole.Referenced, value);
            }
        }
        
        [AttributeLogicalName("masterid")]
        [RelationshipSchemaName("account_master_account", EntityRole.Referencing)]
        public Account Referencingaccount_master_account {
            get {
                return GetRelatedEntity<Account>("account_master_account", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("account_master_account", EntityRole.Referencing, value);
            }
        }
        
        [AttributeLogicalName("parentaccountid")]
        [RelationshipSchemaName("account_parent_account", EntityRole.Referencing)]
        public Account Referencingaccount_parent_account {
            get {
                return GetRelatedEntity<Account>("account_parent_account", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("account_parent_account", EntityRole.Referencing, value);
            }
        }
        
        [AttributeLogicalName("msdyn_billingaccount")]
        [RelationshipSchemaName("msdyn_account_account_BillingAccount", EntityRole.Referencing)]
        public Account Referencingmsdyn_account_account_BillingAccount {
            get {
                return GetRelatedEntity<Account>("msdyn_account_account_BillingAccount", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("msdyn_account_account_BillingAccount", EntityRole.Referencing, value);
            }
        }
        
        [RelationshipSchemaName("SocialActivity_PostAuthorAccount_accounts")]
        public IEnumerable<SocialActivity> SocialActivity_PostAuthorAccount_accounts {
            get {
                return GetRelatedEntities<SocialActivity>("SocialActivity_PostAuthorAccount_accounts", null);
            }
            set {
                SetRelatedEntities("SocialActivity_PostAuthorAccount_accounts", null, value);
            }
        }
        
        [RelationshipSchemaName("SocialActivity_PostAuthor_accounts")]
        public IEnumerable<SocialActivity> SocialActivity_PostAuthor_accounts {
            get {
                return GetRelatedEntities<SocialActivity>("SocialActivity_PostAuthor_accounts", null);
            }
            set {
                SetRelatedEntities("SocialActivity_PostAuthor_accounts", null, value);
            }
        }
        
        [RelationshipSchemaName("SourceAccount_BulkOperationLogs")]
        public IEnumerable<BulkOperationLog> SourceAccount_BulkOperationLogs {
            get {
                return GetRelatedEntities<BulkOperationLog>("SourceAccount_BulkOperationLogs", null);
            }
            set {
                SetRelatedEntities("SourceAccount_BulkOperationLogs", null, value);
            }
        }
        
        [RelationshipSchemaName("account_CampaignResponses")]
        public IEnumerable<CampaignResponse> account_CampaignResponses {
            get {
                return GetRelatedEntities<CampaignResponse>("account_CampaignResponses", null);
            }
            set {
                SetRelatedEntities("account_CampaignResponses", null, value);
            }
        }
        
        [RelationshipSchemaName("account_IncidentResolutions")]
        public IEnumerable<IncidentResolution> account_IncidentResolutions {
            get {
                return GetRelatedEntities<IncidentResolution>("account_IncidentResolutions", null);
            }
            set {
                SetRelatedEntities("account_IncidentResolutions", null, value);
            }
        }
        
        [RelationshipSchemaName("account_OpportunityCloses")]
        public IEnumerable<OpportunityClose> account_OpportunityCloses {
            get {
                return GetRelatedEntities<OpportunityClose>("account_OpportunityCloses", null);
            }
            set {
                SetRelatedEntities("account_OpportunityCloses", null, value);
            }
        }
        
        [RelationshipSchemaName("account_activity_parties")]
        public IEnumerable<ActivityParty> account_activity_parties {
            get {
                return GetRelatedEntities<ActivityParty>("account_activity_parties", null);
            }
            set {
                SetRelatedEntities("account_activity_parties", null, value);
            }
        }
        
        [RelationshipSchemaName("account_bookableresource_AccountId")]
        public IEnumerable<BookableResource> account_bookableresource_AccountId {
            get {
                return GetRelatedEntities<BookableResource>("account_bookableresource_AccountId", null);
            }
            set {
                SetRelatedEntities("account_bookableresource_AccountId", null, value);
            }
        }
        
        [RelationshipSchemaName("account_connections1")]
        public IEnumerable<Connection> account_connections1 {
            get {
                return GetRelatedEntities<Connection>("account_connections1", null);
            }
            set {
                SetRelatedEntities("account_connections1", null, value);
            }
        }
        
        [RelationshipSchemaName("account_connections2")]
        public IEnumerable<Connection> account_connections2 {
            get {
                return GetRelatedEntities<Connection>("account_connections2", null);
            }
            set {
                SetRelatedEntities("account_connections2", null, value);
            }
        }
        
        [RelationshipSchemaName("account_entitlement_Account")]
        public IEnumerable<Entitlement> account_entitlement_Account {
            get {
                return GetRelatedEntities<Entitlement>("account_entitlement_Account", null);
            }
            set {
                SetRelatedEntities("account_entitlement_Account", null, value);
            }
        }
        
        [RelationshipSchemaName("account_entitlement_Customer")]
        public IEnumerable<Entitlement> account_entitlement_Customer {
            get {
                return GetRelatedEntities<Entitlement>("account_entitlement_Customer", null);
            }
            set {
                SetRelatedEntities("account_entitlement_Customer", null, value);
            }
        }
        
        [AttributeLogicalName("originatingleadid")]
        [RelationshipSchemaName("account_originating_lead")]
        public Lead account_originating_lead {
            get {
                return GetRelatedEntity<Lead>("account_originating_lead", null);
            }
            set {
                SetRelatedEntity("account_originating_lead", null, value);
            }
        }
        
        [AttributeLogicalName("primarycontactid")]
        [RelationshipSchemaName("account_primary_contact")]
        public Contact account_primary_contact {
            get {
                return GetRelatedEntity<Contact>("account_primary_contact", null);
            }
            set {
                SetRelatedEntity("account_primary_contact", null, value);
            }
        }
        
        [RelationshipSchemaName("accountleads_association")]
        public IEnumerable<Lead> accountleads_association {
            get {
                return GetRelatedEntities<Lead>("accountleads_association", null);
            }
            set {
                SetRelatedEntities("accountleads_association", null, value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_accounts")]
        public BusinessUnit business_unit_accounts {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_accounts", null);
            }
            set {
                SetRelatedEntity("business_unit_accounts", null, value);
            }
        }
        
        [RelationshipSchemaName("contact_customer_accounts")]
        public IEnumerable<Contact> contact_customer_accounts {
            get {
                return GetRelatedEntities<Contact>("contact_customer_accounts", null);
            }
            set {
                SetRelatedEntities("contact_customer_accounts", null, value);
            }
        }
        
        [RelationshipSchemaName("contract_billingcustomer_accounts")]
        public IEnumerable<Contract> contract_billingcustomer_accounts {
            get {
                return GetRelatedEntities<Contract>("contract_billingcustomer_accounts", null);
            }
            set {
                SetRelatedEntities("contract_billingcustomer_accounts", null, value);
            }
        }
        
        [RelationshipSchemaName("contract_customer_accounts")]
        public IEnumerable<Contract> contract_customer_accounts {
            get {
                return GetRelatedEntities<Contract>("contract_customer_accounts", null);
            }
            set {
                SetRelatedEntities("contract_customer_accounts", null, value);
            }
        }
        
        [RelationshipSchemaName("dg_account_account")]
        public IEnumerable<Account> dg_account_account {
            get {
                return GetRelatedEntities<Account>("dg_account_account", null);
            }
            set {
                SetRelatedEntities("dg_account_account", null, value);
            }
        }
        
        [RelationshipSchemaName("dg_account_contact")]
        public IEnumerable<Contact> dg_account_contact {
            get {
                return GetRelatedEntities<Contact>("dg_account_contact", null);
            }
            set {
                SetRelatedEntities("dg_account_contact", null, value);
            }
        }
        
        [RelationshipSchemaName("dg_account_contact_TestAccount")]
        public IEnumerable<Contact> dg_account_contact_TestAccount {
            get {
                return GetRelatedEntities<Contact>("dg_account_contact_TestAccount", null);
            }
            set {
                SetRelatedEntities("dg_account_contact_TestAccount", null, value);
            }
        }
        
        [RelationshipSchemaName("dg_account_dg_configuration_RefAccount")]
        public IEnumerable<dg_configuration> dg_account_dg_configuration_RefAccount {
            get {
                return GetRelatedEntities<dg_configuration>("dg_account_dg_configuration_RefAccount", null);
            }
            set {
                SetRelatedEntities("dg_account_dg_configuration_RefAccount", null, value);
            }
        }
        
        [RelationshipSchemaName("incident_customer_accounts")]
        public IEnumerable<Incident> incident_customer_accounts {
            get {
                return GetRelatedEntities<Incident>("incident_customer_accounts", null);
            }
            set {
                SetRelatedEntities("incident_customer_accounts", null, value);
            }
        }
        
        [RelationshipSchemaName("invoice_customer_accounts")]
        public IEnumerable<Invoice> invoice_customer_accounts {
            get {
                return GetRelatedEntities<Invoice>("invoice_customer_accounts", null);
            }
            set {
                SetRelatedEntities("invoice_customer_accounts", null, value);
            }
        }
        
        [RelationshipSchemaName("lead_customer_accounts")]
        public IEnumerable<Lead> lead_customer_accounts {
            get {
                return GetRelatedEntities<Lead>("lead_customer_accounts", null);
            }
            set {
                SetRelatedEntities("lead_customer_accounts", null, value);
            }
        }
        
        [RelationshipSchemaName("lead_parent_account")]
        public IEnumerable<Lead> lead_parent_account {
            get {
                return GetRelatedEntities<Lead>("lead_parent_account", null);
            }
            set {
                SetRelatedEntities("lead_parent_account", null, value);
            }
        }
        
        [RelationshipSchemaName("listaccount_association")]
        public IEnumerable<List> listaccount_association {
            get {
                return GetRelatedEntities<List>("listaccount_association", null);
            }
            set {
                SetRelatedEntities("listaccount_association", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_accountbase_createdby")]
        public SystemUser lk_accountbase_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_accountbase_createdby", null);
            }
            set {
                SetRelatedEntity("lk_accountbase_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_accountbase_createdonbehalfby")]
        public SystemUser lk_accountbase_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_accountbase_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_accountbase_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_accountbase_modifiedby")]
        public SystemUser lk_accountbase_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_accountbase_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_accountbase_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_accountbase_modifiedonbehalfby")]
        public SystemUser lk_accountbase_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_accountbase_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_accountbase_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("slaid")]
        [RelationshipSchemaName("manualsla_account")]
        public SLA manualsla_account {
            get {
                return GetRelatedEntity<SLA>("manualsla_account", null);
            }
            set {
                SetRelatedEntity("manualsla_account", null, value);
            }
        }
        
        [RelationshipSchemaName("msdyn_account_msdyn_agreement_BillingAccount")]
        public IEnumerable<msdyn_agreement> msdyn_account_msdyn_agreement_BillingAccount {
            get {
                return GetRelatedEntities<msdyn_agreement>("msdyn_account_msdyn_agreement_BillingAccount", null);
            }
            set {
                SetRelatedEntities("msdyn_account_msdyn_agreement_BillingAccount", null, value);
            }
        }
        
        [RelationshipSchemaName("msdyn_account_msdyn_agreement_ServiceAccount")]
        public IEnumerable<msdyn_agreement> msdyn_account_msdyn_agreement_ServiceAccount {
            get {
                return GetRelatedEntities<msdyn_agreement>("msdyn_account_msdyn_agreement_ServiceAccount", null);
            }
            set {
                SetRelatedEntities("msdyn_account_msdyn_agreement_ServiceAccount", null, value);
            }
        }
        
        [RelationshipSchemaName("msdyn_account_quote_Account")]
        public IEnumerable<Quote> msdyn_account_quote_Account {
            get {
                return GetRelatedEntities<Quote>("msdyn_account_quote_Account", null);
            }
            set {
                SetRelatedEntities("msdyn_account_quote_Account", null, value);
            }
        }
        
        [RelationshipSchemaName("msdyn_account_salesorder_Account")]
        public IEnumerable<SalesOrder> msdyn_account_salesorder_Account {
            get {
                return GetRelatedEntities<SalesOrder>("msdyn_account_salesorder_Account", null);
            }
            set {
                SetRelatedEntities("msdyn_account_salesorder_Account", null, value);
            }
        }
        
        [AttributeLogicalName("msdyn_preferredresource")]
        [RelationshipSchemaName("msdyn_bookableresource_account_PreferredResource")]
        public BookableResource msdyn_bookableresource_account_PreferredResource {
            get {
                return GetRelatedEntity<BookableResource>("msdyn_bookableresource_account_PreferredResource", null);
            }
            set {
                SetRelatedEntity("msdyn_bookableresource_account_PreferredResource", null, value);
            }
        }
        
        [RelationshipSchemaName("opportunity_customer_accounts")]
        public IEnumerable<Opportunity> opportunity_customer_accounts {
            get {
                return GetRelatedEntities<Opportunity>("opportunity_customer_accounts", null);
            }
            set {
                SetRelatedEntities("opportunity_customer_accounts", null, value);
            }
        }
        
        [RelationshipSchemaName("opportunity_parent_account")]
        public IEnumerable<Opportunity> opportunity_parent_account {
            get {
                return GetRelatedEntities<Opportunity>("opportunity_parent_account", null);
            }
            set {
                SetRelatedEntities("opportunity_parent_account", null, value);
            }
        }
        
        [RelationshipSchemaName("order_customer_accounts")]
        public IEnumerable<SalesOrder> order_customer_accounts {
            get {
                return GetRelatedEntities<SalesOrder>("order_customer_accounts", null);
            }
            set {
                SetRelatedEntities("order_customer_accounts", null, value);
            }
        }
        
        [RelationshipSchemaName("quote_customer_accounts")]
        public IEnumerable<Quote> quote_customer_accounts {
            get {
                return GetRelatedEntities<Quote>("quote_customer_accounts", null);
            }
            set {
                SetRelatedEntities("quote_customer_accounts", null, value);
            }
        }
        
        [AttributeLogicalName("slainvokedid")]
        [RelationshipSchemaName("sla_account")]
        public SLA sla_account {
            get {
                return GetRelatedEntity<SLA>("sla_account", null);
            }
            set {
                SetRelatedEntity("sla_account", null, value);
            }
        }
        
        [AttributeLogicalName("preferredsystemuserid")]
        [RelationshipSchemaName("system_user_accounts")]
        public SystemUser system_user_accounts {
            get {
                return GetRelatedEntity<SystemUser>("system_user_accounts", null);
            }
            set {
                SetRelatedEntity("system_user_accounts", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_accounts")]
        public Team team_accounts {
            get {
                return GetRelatedEntity<Team>("team_accounts", null);
            }
            set {
                SetRelatedEntity("team_accounts", null, value);
            }
        }
        
        [AttributeLogicalName("transactioncurrencyid")]
        [RelationshipSchemaName("transactioncurrency_account")]
        public TransactionCurrency transactioncurrency_account {
            get {
                return GetRelatedEntity<TransactionCurrency>("transactioncurrency_account", null);
            }
            set {
                SetRelatedEntity("transactioncurrency_account", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_accounts")]
        public SystemUser user_accounts {
            get {
                return GetRelatedEntity<SystemUser>("user_accounts", null);
            }
            set {
                SetRelatedEntity("user_accounts", null, value);
            }
        }
        
        public static Account Retrieve(IOrganizationService service, Guid id, params Expression<Func<Account,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
        
        /// <summary>
        /// <para>Retrieves the record using the alternate key called 'name'</para>
        /// </summary>
        public static Account Retrieve_dg_name(IOrganizationService service, string Name, params Expression<Func<Account,object>>[] attrs) {
            KeyAttributeCollection keys = new KeyAttributeCollection();
            keys.Add("name", Name);
            return Retrieve_AltKey(service, keys, attrs);
        }
        
        /// <summary>
        /// <para>Set values for the alternate key called 'name'</para>
        /// </summary>
        public void AltKey_dg_name(string Name) {
            KeyAttributes.Clear();
            KeyAttributes.Add("name", Name);
        }
    }
    
    /// <summary>
    /// <para>description.</para>
    /// <para>Display Name: AccountLeads</para>
    /// </summary>
    [EntityLogicalName("accountleads")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class AccountLeads : ExtendedEntity<EmptyEnum, EmptyEnum> {
        
        public const string EntityLogicalName = "accountleads";
        
        public const string RelationshipSchemaName = "AccountLeads";
        
        public const int EntityTypeCode = 16;
        
        public AccountLeads() : 
                base(EntityLogicalName) {
        }
        
        public AccountLeads(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("name");
            }
        }
        
        [AttributeLogicalName("accountleadid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("accountleadid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the lead for the account.</para>
        /// </summary>
        [AttributeLogicalName("accountleadid")]
        public Guid? AccountLeadId {
            get {
                return GetAttributeValue<Guid?>("accountleadid");
            }
            set {
                SetId("accountleadid", value);
            }
        }
        
        [AttributeLogicalName("accountid")]
        public Guid? AccountId {
            get {
                return GetAttributeValue<Guid?>("accountid");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        [AttributeLogicalName("leadid")]
        public Guid? LeadId {
            get {
                return GetAttributeValue<Guid?>("leadid");
            }
        }
        
        /// <summary>
        /// <para>name</para>
        /// <para>Display Name: name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("name")]
        [MaxLength(100)]
        public string Name {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>name</para>
        /// <para>Display Name: name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("name")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        [RelationshipSchemaName("accountleads_Teams")]
        public IEnumerable<Team> accountleads_Teams {
            get {
                return GetRelatedEntities<Team>("accountleads_Teams", null);
            }
            set {
                SetRelatedEntities("accountleads_Teams", null, value);
            }
        }
        
        public static AccountLeads Retrieve(IOrganizationService service, Guid id, params Expression<Func<AccountLeads,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Person or group associated with an activity. An activity can have multiple activity parties.</para>
    /// <para>Display Name: Activity Party</para>
    /// </summary>
    [EntityLogicalName("activityparty")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class ActivityParty : ExtendedEntity<EmptyEnum, EmptyEnum> {
        
        public const string EntityLogicalName = "activityparty";
        
        public const int EntityTypeCode = 135;
        
        public ActivityParty() : 
                base(EntityLogicalName) {
        }
        
        public ActivityParty(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("partyidname");
            }
        }
        
        [AttributeLogicalName("activitypartyid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("activitypartyid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the activity party.</para>
        /// <para>Display Name: Activity Party</para>
        /// </summary>
        [AttributeLogicalName("activitypartyid")]
        [DisplayName("Activity Party")]
        public Guid? ActivityPartyId {
            get {
                return GetAttributeValue<Guid?>("activitypartyid");
            }
            set {
                SetId("activitypartyid", value);
            }
        }
        
        /// <summary>
        /// <para>quoteclose_activity_parties</para>
        /// <para>Display Name: Activity</para>
        /// </summary>
        [AttributeLogicalName("activityid")]
        [DisplayName("Activity")]
        public EntityReference ActivityId {
            get {
                return GetAttributeValue<EntityReference>("activityid");
            }
            set {
                SetAttributeValue("activityid", value);
            }
        }
        
        /// <summary>
        /// <para>Email address to which an email is delivered, and which is associated with the target entity.</para>
        /// <para>Display Name: Address </para>
        /// </summary>
        [AttributeLogicalName("addressused")]
        [DisplayName("Address ")]
        [MaxLength(200)]
        public string AddressUsed {
            get {
                return GetAttributeValue<string>("addressused");
            }
            set {
                SetAttributeValue("addressused", value);
            }
        }
        
        /// <summary>
        /// <para>Email address column number from associated party.</para>
        /// <para>Display Name: Email column number of party</para>
        /// </summary>
        [AttributeLogicalName("addressusedemailcolumnnumber")]
        [DisplayName("Email column number of party")]
        [Range(1, 2147483647)]
        public int? AddressUsedEmailColumnNumber {
            get {
                return GetAttributeValue<int?>("addressusedemailcolumnnumber");
            }
        }
        
        /// <summary>
        /// <para>Information about whether to allow sending email to the activity party.</para>
        /// <para>Display Name: Do not allow Emails</para>
        /// </summary>
        [AttributeLogicalName("donotemail")]
        [DisplayName("Do not allow Emails")]
        public bool? DoNotEmail {
            get {
                return GetAttributeValue<bool?>("donotemail");
            }
        }
        
        /// <summary>
        /// <para>Information about whether to allow sending faxes to the activity party.</para>
        /// <para>Display Name: Do not allow Faxes</para>
        /// </summary>
        [AttributeLogicalName("donotfax")]
        [DisplayName("Do not allow Faxes")]
        public bool? DoNotFax {
            get {
                return GetAttributeValue<bool?>("donotfax");
            }
        }
        
        /// <summary>
        /// <para>Information about whether to allow phone calls to the lead.</para>
        /// <para>Display Name: Do not allow Phone Calls</para>
        /// </summary>
        [AttributeLogicalName("donotphone")]
        [DisplayName("Do not allow Phone Calls")]
        public bool? DoNotPhone {
            get {
                return GetAttributeValue<bool?>("donotphone");
            }
        }
        
        /// <summary>
        /// <para>Information about whether to allow sending postal mail to the lead.</para>
        /// <para>Display Name: Do not allow Postal Mails</para>
        /// </summary>
        [AttributeLogicalName("donotpostalmail")]
        [DisplayName("Do not allow Postal Mails")]
        public bool? DoNotPostalMail {
            get {
                return GetAttributeValue<bool?>("donotpostalmail");
            }
        }
        
        /// <summary>
        /// <para>Amount of effort used by the resource in a service appointment activity.</para>
        /// <para>Display Name: Effort</para>
        /// </summary>
        [AttributeLogicalName("effort")]
        [DisplayName("Effort")]
        public double? Effort {
            get {
                return GetAttributeValue<double?>("effort");
            }
            set {
                SetAttributeValue("effort", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Exchange Entry</para>
        /// </summary>
        [AttributeLogicalName("exchangeentryid")]
        [DisplayName("Exchange Entry")]
        [MaxLength(1024)]
        public string ExchangeEntryId {
            get {
                return GetAttributeValue<string>("exchangeentryid");
            }
            set {
                SetAttributeValue("exchangeentryid", value);
            }
        }
        
        /// <summary>
        /// <para>Type of instance of a recurring series.</para>
        /// <para>Display Name: Appointment Type</para>
        /// </summary>
        [AttributeLogicalName("instancetypecode")]
        [DisplayName("Appointment Type")]
        public ActivityParty_InstanceTypeCode? InstanceTypeCode {
            get {
                return GetOptionSetValue<ActivityParty_InstanceTypeCode>("instancetypecode");
            }
        }
        
        /// <summary>
        /// <para>Information about whether the underlying entity record is deleted.</para>
        /// <para>Display Name: Is Party Deleted</para>
        /// </summary>
        [AttributeLogicalName("ispartydeleted")]
        [DisplayName("Is Party Deleted")]
        public bool? IsPartyDeleted {
            get {
                return GetAttributeValue<bool?>("ispartydeleted");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user or team who owns the activity_party.</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
        }
        
        /// <summary>
        /// <para>Role of the person in the activity, such as sender, to, cc, bcc, required, optional, organizer, regarding, or owner.</para>
        /// <para>Display Name: Participation Type</para>
        /// </summary>
        [AttributeLogicalName("participationtypemask")]
        [DisplayName("Participation Type")]
        public ActivityParty_ParticipationTypeMask? ParticipationTypeMask {
            get {
                return GetOptionSetValue<ActivityParty_ParticipationTypeMask>("participationtypemask");
            }
            set {
                SetOptionSetValue("participationtypemask", value);
            }
        }
        
        /// <summary>
        /// <para>salesorder_activity_parties</para>
        /// <para>Display Name: Party</para>
        /// </summary>
        [AttributeLogicalName("partyid")]
        [DisplayName("Party")]
        public EntityReference PartyId {
            get {
                return GetAttributeValue<EntityReference>("partyid");
            }
            set {
                SetAttributeValue("partyid", value);
            }
        }
        
        /// <summary>
        /// <para>ActivityPartyResourceSpec</para>
        /// <para>Display Name: Resource Specification</para>
        /// </summary>
        [AttributeLogicalName("resourcespecid")]
        [DisplayName("Resource Specification")]
        public EntityReference ResourceSpecId {
            get {
                return GetAttributeValue<EntityReference>("resourcespecid");
            }
            set {
                SetAttributeValue("resourcespecid", value);
            }
        }
        
        /// <summary>
        /// <para>Scheduled end time of the activity.</para>
        /// <para>Display Name: Scheduled End</para>
        /// </summary>
        [AttributeLogicalName("scheduledend")]
        [DisplayName("Scheduled End")]
        public DateTime? ScheduledEnd {
            get {
                return GetAttributeValue<DateTime?>("scheduledend");
            }
        }
        
        /// <summary>
        /// <para>Scheduled start time of the activity.</para>
        /// <para>Display Name: Scheduled Start</para>
        /// </summary>
        [AttributeLogicalName("scheduledstart")]
        [DisplayName("Scheduled Start")]
        public DateTime? ScheduledStart {
            get {
                return GetAttributeValue<DateTime?>("scheduledstart");
            }
        }
        
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        [RelationshipSchemaName("ActivityParty_SyncErrors")]
        public IEnumerable<SyncError> ActivityParty_SyncErrors {
            get {
                return GetRelatedEntities<SyncError>("ActivityParty_SyncErrors", null);
            }
            set {
                SetRelatedEntities("ActivityParty_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("partyid")]
        [RelationshipSchemaName("account_activity_parties")]
        public Account account_activity_parties {
            get {
                return GetRelatedEntity<Account>("account_activity_parties", null);
            }
            set {
                SetRelatedEntity("account_activity_parties", null, value);
            }
        }
        
        [AttributeLogicalName("activityid")]
        [RelationshipSchemaName("activitypointer_activity_parties")]
        public ActivityPointer activitypointer_activity_parties {
            get {
                return GetRelatedEntity<ActivityPointer>("activitypointer_activity_parties", null);
            }
            set {
                SetRelatedEntity("activitypointer_activity_parties", null, value);
            }
        }
        
        [AttributeLogicalName("activityid")]
        [RelationshipSchemaName("appointment_activity_parties")]
        public Appointment appointment_activity_parties {
            get {
                return GetRelatedEntity<Appointment>("appointment_activity_parties", null);
            }
            set {
                SetRelatedEntity("appointment_activity_parties", null, value);
            }
        }
        
        [AttributeLogicalName("partyid")]
        [RelationshipSchemaName("campaign_activity_parties")]
        public Campaign campaign_activity_parties {
            get {
                return GetRelatedEntity<Campaign>("campaign_activity_parties", null);
            }
            set {
                SetRelatedEntity("campaign_activity_parties", null, value);
            }
        }
        
        [AttributeLogicalName("activityid")]
        [RelationshipSchemaName("campaignactivity_activity_parties")]
        public CampaignActivity campaignactivity_activity_parties {
            get {
                return GetRelatedEntity<CampaignActivity>("campaignactivity_activity_parties", null);
            }
            set {
                SetRelatedEntity("campaignactivity_activity_parties", null, value);
            }
        }
        
        [AttributeLogicalName("partyid")]
        [RelationshipSchemaName("campaignactivity_activityparties")]
        public CampaignActivity campaignactivity_activityparties {
            get {
                return GetRelatedEntity<CampaignActivity>("campaignactivity_activityparties", null);
            }
            set {
                SetRelatedEntity("campaignactivity_activityparties", null, value);
            }
        }
        
        [AttributeLogicalName("activityid")]
        [RelationshipSchemaName("campaignresponse_activity_parties")]
        public CampaignResponse campaignresponse_activity_parties {
            get {
                return GetRelatedEntity<CampaignResponse>("campaignresponse_activity_parties", null);
            }
            set {
                SetRelatedEntity("campaignresponse_activity_parties", null, value);
            }
        }
        
        [AttributeLogicalName("partyid")]
        [RelationshipSchemaName("contact_activity_parties")]
        public Contact contact_activity_parties {
            get {
                return GetRelatedEntity<Contact>("contact_activity_parties", null);
            }
            set {
                SetRelatedEntity("contact_activity_parties", null, value);
            }
        }
        
        [AttributeLogicalName("partyid")]
        [RelationshipSchemaName("contract_activity_parties")]
        public Contract contract_activity_parties {
            get {
                return GetRelatedEntity<Contract>("contract_activity_parties", null);
            }
            set {
                SetRelatedEntity("contract_activity_parties", null, value);
            }
        }
        
        [AttributeLogicalName("activityid")]
        [RelationshipSchemaName("email_activity_parties")]
        public Email email_activity_parties {
            get {
                return GetRelatedEntity<Email>("email_activity_parties", null);
            }
            set {
                SetRelatedEntity("email_activity_parties", null, value);
            }
        }
        
        [AttributeLogicalName("partyid")]
        [RelationshipSchemaName("entitlement_ActivityParties")]
        public Entitlement entitlement_ActivityParties {
            get {
                return GetRelatedEntity<Entitlement>("entitlement_ActivityParties", null);
            }
            set {
                SetRelatedEntity("entitlement_ActivityParties", null, value);
            }
        }
        
        [AttributeLogicalName("activityid")]
        [RelationshipSchemaName("fax_activity_parties")]
        public Fax fax_activity_parties {
            get {
                return GetRelatedEntity<Fax>("fax_activity_parties", null);
            }
            set {
                SetRelatedEntity("fax_activity_parties", null, value);
            }
        }
        
        [AttributeLogicalName("partyid")]
        [RelationshipSchemaName("incident_activity_parties")]
        public Incident incident_activity_parties {
            get {
                return GetRelatedEntity<Incident>("incident_activity_parties", null);
            }
            set {
                SetRelatedEntity("incident_activity_parties", null, value);
            }
        }
        
        [AttributeLogicalName("activityid")]
        [RelationshipSchemaName("incidentresolution_activity_parties")]
        public IncidentResolution incidentresolution_activity_parties {
            get {
                return GetRelatedEntity<IncidentResolution>("incidentresolution_activity_parties", null);
            }
            set {
                SetRelatedEntity("incidentresolution_activity_parties", null, value);
            }
        }
        
        [AttributeLogicalName("partyid")]
        [RelationshipSchemaName("invoice_activity_parties")]
        public Invoice invoice_activity_parties {
            get {
                return GetRelatedEntity<Invoice>("invoice_activity_parties", null);
            }
            set {
                SetRelatedEntity("invoice_activity_parties", null, value);
            }
        }
        
        [AttributeLogicalName("partyid")]
        [RelationshipSchemaName("knowledgearticle_activity_parties")]
        public KnowledgeArticle knowledgearticle_activity_parties {
            get {
                return GetRelatedEntity<KnowledgeArticle>("knowledgearticle_activity_parties", null);
            }
            set {
                SetRelatedEntity("knowledgearticle_activity_parties", null, value);
            }
        }
        
        [AttributeLogicalName("partyid")]
        [RelationshipSchemaName("lead_activity_parties")]
        public Lead lead_activity_parties {
            get {
                return GetRelatedEntity<Lead>("lead_activity_parties", null);
            }
            set {
                SetRelatedEntity("lead_activity_parties", null, value);
            }
        }
        
        [AttributeLogicalName("activityid")]
        [RelationshipSchemaName("letter_activity_parties")]
        public Letter letter_activity_parties {
            get {
                return GetRelatedEntity<Letter>("letter_activity_parties", null);
            }
            set {
                SetRelatedEntity("letter_activity_parties", null, value);
            }
        }
        
        [AttributeLogicalName("partyid")]
        [RelationshipSchemaName("opportunity_activity_parties")]
        public Opportunity opportunity_activity_parties {
            get {
                return GetRelatedEntity<Opportunity>("opportunity_activity_parties", null);
            }
            set {
                SetRelatedEntity("opportunity_activity_parties", null, value);
            }
        }
        
        [AttributeLogicalName("activityid")]
        [RelationshipSchemaName("opportunityclose_activity_parties")]
        public OpportunityClose opportunityclose_activity_parties {
            get {
                return GetRelatedEntity<OpportunityClose>("opportunityclose_activity_parties", null);
            }
            set {
                SetRelatedEntity("opportunityclose_activity_parties", null, value);
            }
        }
        
        [AttributeLogicalName("activityid")]
        [RelationshipSchemaName("phonecall_activity_parties")]
        public PhoneCall phonecall_activity_parties {
            get {
                return GetRelatedEntity<PhoneCall>("phonecall_activity_parties", null);
            }
            set {
                SetRelatedEntity("phonecall_activity_parties", null, value);
            }
        }
        
        [AttributeLogicalName("partyid")]
        [RelationshipSchemaName("quote_activity_parties")]
        public Quote quote_activity_parties {
            get {
                return GetRelatedEntity<Quote>("quote_activity_parties", null);
            }
            set {
                SetRelatedEntity("quote_activity_parties", null, value);
            }
        }
        
        [AttributeLogicalName("activityid")]
        [RelationshipSchemaName("recurringappointmentmaster_activity_parties")]
        public RecurringAppointmentMaster recurringappointmentmaster_activity_parties {
            get {
                return GetRelatedEntity<RecurringAppointmentMaster>("recurringappointmentmaster_activity_parties", null);
            }
            set {
                SetRelatedEntity("recurringappointmentmaster_activity_parties", null, value);
            }
        }
        
        [AttributeLogicalName("partyid")]
        [RelationshipSchemaName("salesorder_activity_parties")]
        public SalesOrder salesorder_activity_parties {
            get {
                return GetRelatedEntity<SalesOrder>("salesorder_activity_parties", null);
            }
            set {
                SetRelatedEntity("salesorder_activity_parties", null, value);
            }
        }
        
        [AttributeLogicalName("activityid")]
        [RelationshipSchemaName("serviceappointment_activity_parties")]
        public ServiceAppointment serviceappointment_activity_parties {
            get {
                return GetRelatedEntity<ServiceAppointment>("serviceappointment_activity_parties", null);
            }
            set {
                SetRelatedEntity("serviceappointment_activity_parties", null, value);
            }
        }
        
        [AttributeLogicalName("activityid")]
        [RelationshipSchemaName("socialactivity_activity_parties")]
        public SocialActivity socialactivity_activity_parties {
            get {
                return GetRelatedEntity<SocialActivity>("socialactivity_activity_parties", null);
            }
            set {
                SetRelatedEntity("socialactivity_activity_parties", null, value);
            }
        }
        
        [AttributeLogicalName("partyid")]
        [RelationshipSchemaName("system_user_activity_parties")]
        public SystemUser system_user_activity_parties {
            get {
                return GetRelatedEntity<SystemUser>("system_user_activity_parties", null);
            }
            set {
                SetRelatedEntity("system_user_activity_parties", null, value);
            }
        }
        
        [AttributeLogicalName("activityid")]
        [RelationshipSchemaName("task_activity_parties")]
        public Task task_activity_parties {
            get {
                return GetRelatedEntity<Task>("task_activity_parties", null);
            }
            set {
                SetRelatedEntity("task_activity_parties", null, value);
            }
        }
        
        public static ActivityParty Retrieve(IOrganizationService service, Guid id, params Expression<Func<ActivityParty,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Task performed, or to be performed, by a user. An activity is any action for which an entry can be made on a calendar.</para>
    /// <para>Display Name: Activity</para>
    /// </summary>
    [EntityLogicalName("activitypointer")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class ActivityPointer : ExtendedEntity<ActivityPointerState, ActivityPointer_StatusCode> {
        
        public const string EntityLogicalName = "activitypointer";
        
        public const int EntityTypeCode = 4200;
        
        public ActivityPointer() : 
                base(EntityLogicalName) {
        }
        
        public ActivityPointer(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("subject");
            }
        }
        
        [AttributeLogicalName("activityid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("activityid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the activity.</para>
        /// <para>Display Name: Activity</para>
        /// </summary>
        [AttributeLogicalName("activityid")]
        [DisplayName("Activity")]
        public Guid? ActivityId {
            get {
                return GetAttributeValue<Guid?>("activityid");
            }
            set {
                SetId("activityid", value);
            }
        }
        
        /// <summary>
        /// <para>Additional information provided by the external application as JSON. For internal use only.</para>
        /// <para>Display Name: Activity Additional Parameters</para>
        /// </summary>
        [AttributeLogicalName("activityadditionalparams")]
        [DisplayName("Activity Additional Parameters")]
        public string ActivityAdditionalParams {
            get {
                return GetAttributeValue<string>("activityadditionalparams");
            }
            set {
                SetAttributeValue("activityadditionalparams", value);
            }
        }
        
        /// <summary>
        /// <para>Type of activity.</para>
        /// <para>Display Name: Activity Type</para>
        /// </summary>
        [AttributeLogicalName("activitytypecode")]
        [DisplayName("Activity Type")]
        public string ActivityTypeCode {
            get {
                return GetAttributeValue<string>("activitytypecode");
            }
        }
        
        /// <summary>
        /// <para>Actual duration of the activity in minutes.</para>
        /// <para>Display Name: Actual Duration</para>
        /// </summary>
        [AttributeLogicalName("actualdurationminutes")]
        [DisplayName("Actual Duration")]
        [Range(0, 2147483647)]
        public int? ActualDurationMinutes {
            get {
                return GetAttributeValue<int?>("actualdurationminutes");
            }
            set {
                SetAttributeValue("actualdurationminutes", value);
            }
        }
        
        /// <summary>
        /// <para>Actual end time of the activity.</para>
        /// <para>Display Name: Actual End</para>
        /// </summary>
        [AttributeLogicalName("actualend")]
        [DisplayName("Actual End")]
        public DateTime? ActualEnd {
            get {
                return GetAttributeValue<DateTime?>("actualend");
            }
            set {
                SetAttributeValue("actualend", value);
            }
        }
        
        /// <summary>
        /// <para>Actual start time of the activity.</para>
        /// <para>Display Name: Actual Start</para>
        /// </summary>
        [AttributeLogicalName("actualstart")]
        [DisplayName("Actual Start")]
        public DateTime? ActualStart {
            get {
                return GetAttributeValue<DateTime?>("actualstart");
            }
            set {
                SetAttributeValue("actualstart", value);
            }
        }
        
        /// <summary>
        /// <para>Shows how contact about the social activity originated, such as from Twitter or Facebook. This field is read-only.</para>
        /// <para>Display Name: Social Channel</para>
        /// </summary>
        [AttributeLogicalName("community")]
        [DisplayName("Social Channel")]
        public socialprofile_community? Community {
            get {
                return GetOptionSetValue<socialprofile_community>("community");
            }
            set {
                SetOptionSetValue("community", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the activity.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the activity was created.</para>
        /// <para>Display Name: Date Created</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Date Created")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the activitypointer.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the delivery of the activity was last attempted.</para>
        /// <para>Display Name: Date Delivery Last Attempted</para>
        /// </summary>
        [AttributeLogicalName("deliverylastattemptedon")]
        [DisplayName("Date Delivery Last Attempted")]
        public DateTime? DeliveryLastAttemptedOn {
            get {
                return GetAttributeValue<DateTime?>("deliverylastattemptedon");
            }
        }
        
        /// <summary>
        /// <para>Priority of delivery of the activity to the email server.</para>
        /// <para>Display Name: Delivery Priority</para>
        /// </summary>
        [AttributeLogicalName("deliveryprioritycode")]
        [DisplayName("Delivery Priority")]
        public activitypointer_deliveryprioritycode? DeliveryPriorityCode {
            get {
                return GetOptionSetValue<activitypointer_deliveryprioritycode>("deliveryprioritycode");
            }
            set {
                SetOptionSetValue("deliveryprioritycode", value);
            }
        }
        
        /// <summary>
        /// <para>Description of the activity.</para>
        /// <para>Display Name: Description</para>
        /// </summary>
        [AttributeLogicalName("description")]
        [DisplayName("Description")]
        public string Description {
            get {
                return GetAttributeValue<string>("description");
            }
            set {
                SetAttributeValue("description", value);
            }
        }
        
        /// <summary>
        /// <para>The message id of activity which is returned from Exchange Server.</para>
        /// <para>Display Name: Exchange Item ID</para>
        /// </summary>
        [AttributeLogicalName("exchangeitemid")]
        [DisplayName("Exchange Item ID")]
        [MaxLength(200)]
        public string ExchangeItemId {
            get {
                return GetAttributeValue<string>("exchangeitemid");
            }
            set {
                SetAttributeValue("exchangeitemid", value);
            }
        }
        
        /// <summary>
        /// <para>Exchange rate for the currency associated with the activitypointer with respect to the base currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("Exchange Rate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Shows the web link of Activity of type email.</para>
        /// <para>Display Name: Exchange WebLink</para>
        /// </summary>
        [AttributeLogicalName("exchangeweblink")]
        [DisplayName("Exchange WebLink")]
        [MaxLength(1250)]
        public string ExchangeWebLink {
            get {
                return GetAttributeValue<string>("exchangeweblink");
            }
            set {
                SetAttributeValue("exchangeweblink", value);
            }
        }
        
        /// <summary>
        /// <para>Type of instance of a recurring series.</para>
        /// <para>Display Name: Recurring Instance Type</para>
        /// </summary>
        [AttributeLogicalName("instancetypecode")]
        [DisplayName("Recurring Instance Type")]
        public ActivityPointer_InstanceTypeCode? InstanceTypeCode {
            get {
                return GetOptionSetValue<ActivityPointer_InstanceTypeCode>("instancetypecode");
            }
        }
        
        /// <summary>
        /// <para>Information regarding whether the activity was billed as part of resolving a case.</para>
        /// <para>Display Name: Is Billed</para>
        /// </summary>
        [AttributeLogicalName("isbilled")]
        [DisplayName("Is Billed")]
        public bool? IsBilled {
            get {
                return GetAttributeValue<bool?>("isbilled");
            }
            set {
                SetAttributeValue("isbilled", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Is Private</para>
        /// </summary>
        [AttributeLogicalName("ismapiprivate")]
        [DisplayName("Is Private")]
        public bool? IsMapiPrivate {
            get {
                return GetAttributeValue<bool?>("ismapiprivate");
            }
            set {
                SetAttributeValue("ismapiprivate", value);
            }
        }
        
        /// <summary>
        /// <para>Information regarding whether the activity is a regular activity type or event type.</para>
        /// <para>Display Name: Is Regular Activity</para>
        /// </summary>
        [AttributeLogicalName("isregularactivity")]
        [DisplayName("Is Regular Activity")]
        public bool? IsRegularActivity {
            get {
                return GetAttributeValue<bool?>("isregularactivity");
            }
        }
        
        /// <summary>
        /// <para>Information regarding whether the activity was created from a workflow rule.</para>
        /// <para>Display Name: Is Workflow Created</para>
        /// </summary>
        [AttributeLogicalName("isworkflowcreated")]
        [DisplayName("Is Workflow Created")]
        public bool? IsWorkflowCreated {
            get {
                return GetAttributeValue<bool?>("isworkflowcreated");
            }
            set {
                SetAttributeValue("isworkflowcreated", value);
            }
        }
        
        /// <summary>
        /// <para>Contains the date and time stamp of the last on hold time.</para>
        /// <para>Display Name: Last On Hold Time</para>
        /// </summary>
        [AttributeLogicalName("lastonholdtime")]
        [DisplayName("Last On Hold Time")]
        public DateTime? LastOnHoldTime {
            get {
                return GetAttributeValue<DateTime?>("lastonholdtime");
            }
            set {
                SetAttributeValue("lastonholdtime", value);
            }
        }
        
        /// <summary>
        /// <para>Left the voice mail</para>
        /// <para>Display Name: Left Voice Mail</para>
        /// </summary>
        [AttributeLogicalName("leftvoicemail")]
        [DisplayName("Left Voice Mail")]
        public bool? LeftVoiceMail {
            get {
                return GetAttributeValue<bool?>("leftvoicemail");
            }
            set {
                SetAttributeValue("leftvoicemail", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of user who last modified the activity.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when activity was last modified.</para>
        /// <para>Display Name: Last Updated</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Last Updated")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who last modified the activitypointer.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Shows how long, in minutes, that the record was on hold.</para>
        /// <para>Display Name: On Hold Time (Minutes)</para>
        /// </summary>
        [AttributeLogicalName("onholdtime")]
        [DisplayName("On Hold Time (Minutes)")]
        [Range(-2147483648, 2147483647)]
        public int? OnHoldTime {
            get {
                return GetAttributeValue<int?>("onholdtime");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user or team who owns the activity.</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the business unit that owns the activity.</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the team that owns the activity.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user that owns the activity.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Delay activity processing until</para>
        /// </summary>
        [AttributeLogicalName("postponeactivityprocessinguntil")]
        [DisplayName("Delay activity processing until")]
        public DateTime? PostponeActivityProcessingUntil {
            get {
                return GetAttributeValue<DateTime?>("postponeactivityprocessinguntil");
            }
        }
        
        /// <summary>
        /// <para>Subject associated with the activity.</para>
        /// <para>Display Name: Subject</para>
        /// </summary>
        [AttributeLogicalName("subject")]
        [DisplayName("Subject")]
        [MaxLength(400)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("subject");
            }
            set {
                SetAttributeValue("subject", value);
            }
        }
        
        /// <summary>
        /// <para>Priority of the activity.</para>
        /// <para>Display Name: Priority</para>
        /// </summary>
        [AttributeLogicalName("prioritycode")]
        [DisplayName("Priority")]
        public ActivityPointer_PriorityCode? PriorityCode {
            get {
                return GetOptionSetValue<ActivityPointer_PriorityCode>("prioritycode");
            }
            set {
                SetOptionSetValue("prioritycode", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the Process.</para>
        /// <para>Display Name: Process</para>
        /// </summary>
        [AttributeLogicalName("processid")]
        [DisplayName("Process")]
        public Guid? ProcessId {
            get {
                return GetAttributeValue<Guid?>("processid");
            }
            set {
                SetAttributeValue("processid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the object with which the activity is associated.</para>
        /// <para>Display Name: Regarding</para>
        /// </summary>
        [AttributeLogicalName("regardingobjectid")]
        [DisplayName("Regarding")]
        public EntityReference RegardingObjectId {
            get {
                return GetAttributeValue<EntityReference>("regardingobjectid");
            }
            set {
                SetAttributeValue("regardingobjectid", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the service level agreement (SLA) that you want to apply to the case record.</para>
        /// <para>Display Name: SLA</para>
        /// </summary>
        [AttributeLogicalName("slaid")]
        [DisplayName("SLA")]
        public EntityReference SLAId {
            get {
                return GetAttributeValue<EntityReference>("slaid");
            }
            set {
                SetAttributeValue("slaid", value);
            }
        }
        
        /// <summary>
        /// <para>Last SLA that was applied to this case. This field is for internal use only.</para>
        /// <para>Display Name: Last SLA applied</para>
        /// </summary>
        [AttributeLogicalName("slainvokedid")]
        [DisplayName("Last SLA applied")]
        public EntityReference SLAInvokedId {
            get {
                return GetAttributeValue<EntityReference>("slainvokedid");
            }
        }
        
        /// <summary>
        /// <para>Scheduled duration of the activity, specified in minutes.</para>
        /// <para>Display Name: Scheduled Duration</para>
        /// </summary>
        [AttributeLogicalName("scheduleddurationminutes")]
        [DisplayName("Scheduled Duration")]
        [Range(0, 2147483647)]
        public int? ScheduledDurationMinutes {
            get {
                return GetAttributeValue<int?>("scheduleddurationminutes");
            }
            set {
                SetAttributeValue("scheduleddurationminutes", value);
            }
        }
        
        /// <summary>
        /// <para>Scheduled end time of the activity.</para>
        /// <para>Display Name: Due Date</para>
        /// </summary>
        [AttributeLogicalName("scheduledend")]
        [DisplayName("Due Date")]
        public DateTime? ScheduledEnd {
            get {
                return GetAttributeValue<DateTime?>("scheduledend");
            }
            set {
                SetAttributeValue("scheduledend", value);
            }
        }
        
        /// <summary>
        /// <para>Scheduled start time of the activity.</para>
        /// <para>Display Name: Start Date</para>
        /// </summary>
        [AttributeLogicalName("scheduledstart")]
        [DisplayName("Start Date")]
        public DateTime? ScheduledStart {
            get {
                return GetAttributeValue<DateTime?>("scheduledstart");
            }
            set {
                SetAttributeValue("scheduledstart", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the mailbox associated with the sender of the email message.</para>
        /// <para>Display Name: Sender's Mailbox</para>
        /// </summary>
        [AttributeLogicalName("sendermailboxid")]
        [DisplayName("Sender\'s Mailbox")]
        public EntityReference SenderMailboxId {
            get {
                return GetAttributeValue<EntityReference>("sendermailboxid");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the activity was sent.</para>
        /// <para>Display Name: Date Sent</para>
        /// </summary>
        [AttributeLogicalName("senton")]
        [DisplayName("Date Sent")]
        public DateTime? SentOn {
            get {
                return GetAttributeValue<DateTime?>("senton");
            }
        }
        
        /// <summary>
        /// <para>Uniqueidentifier specifying the id of recurring series of an instance.</para>
        /// <para>Display Name: Series Id</para>
        /// </summary>
        [AttributeLogicalName("seriesid")]
        [DisplayName("Series Id")]
        public Guid? SeriesId {
            get {
                return GetAttributeValue<Guid?>("seriesid");
            }
        }
        
        /// <summary>
        /// <para>service_activity_pointers</para>
        /// <para>Display Name: Service</para>
        /// </summary>
        [AttributeLogicalName("serviceid")]
        [DisplayName("Service")]
        public EntityReference ServiceId {
            get {
                return GetAttributeValue<EntityReference>("serviceid");
            }
            set {
                SetAttributeValue("serviceid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time by which the activities are sorted.</para>
        /// <para>Display Name: Sort Date</para>
        /// </summary>
        [AttributeLogicalName("sortdate")]
        [DisplayName("Sort Date")]
        public DateTime? SortDate {
            get {
                return GetAttributeValue<DateTime?>("sortdate");
            }
            set {
                SetAttributeValue("sortdate", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the Stage.</para>
        /// <para>Display Name: (Deprecated) Process Stage</para>
        /// </summary>
        [AttributeLogicalName("stageid")]
        [DisplayName("(Deprecated) Process Stage")]
        public Guid? StageId {
            get {
                return GetAttributeValue<Guid?>("stageid");
            }
            set {
                SetAttributeValue("stageid", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the activity.</para>
        /// <para>Display Name: Activity Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Activity Status")]
        public ActivityPointerState? StateCode {
            get {
                return GetOptionSetValue<ActivityPointerState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the activity.</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public ActivityPointer_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<ActivityPointer_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>Subject associated with the activity.</para>
        /// <para>Display Name: Subject</para>
        /// </summary>
        [AttributeLogicalName("subject")]
        [DisplayName("Subject")]
        [MaxLength(400)]
        public string Subject {
            get {
                return GetAttributeValue<string>("subject");
            }
            set {
                SetAttributeValue("subject", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the currency associated with the activitypointer.</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: (Deprecated) Traversed Path</para>
        /// </summary>
        [AttributeLogicalName("traversedpath")]
        [DisplayName("(Deprecated) Traversed Path")]
        [MaxLength(1250)]
        public string TraversedPath {
            get {
                return GetAttributeValue<string>("traversedpath");
            }
            set {
                SetAttributeValue("traversedpath", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version number of the activity.</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>All activity parties associated with this activity.</para>
        /// <para>Display Name: All Activity Parties</para>
        /// </summary>
        [AttributeLogicalName("allparties")]
        [DisplayName("All Activity Parties")]
        public IEnumerable<ActivityParty> allparties {
            get {
                return GetEntityCollection<ActivityParty>("allparties");
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Account_ActivityPointers")]
        public Account Account_ActivityPointers {
            get {
                return GetRelatedEntity<Account>("Account_ActivityPointers", null);
            }
            set {
                SetRelatedEntity("Account_ActivityPointers", null, value);
            }
        }
        
        [RelationshipSchemaName("ActivityPointer_CampaignActivityItems")]
        public IEnumerable<CampaignActivityItem> ActivityPointer_CampaignActivityItems {
            get {
                return GetRelatedEntities<CampaignActivityItem>("ActivityPointer_CampaignActivityItems", null);
            }
            set {
                SetRelatedEntities("ActivityPointer_CampaignActivityItems", null, value);
            }
        }
        
        [RelationshipSchemaName("ActivityPointer_QueueItem")]
        public IEnumerable<QueueItem> ActivityPointer_QueueItem {
            get {
                return GetRelatedEntities<QueueItem>("ActivityPointer_QueueItem", null);
            }
            set {
                SetRelatedEntities("ActivityPointer_QueueItem", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("CampaignActivity_ActivityPointers")]
        public CampaignActivity CampaignActivity_ActivityPointers {
            get {
                return GetRelatedEntity<CampaignActivity>("CampaignActivity_ActivityPointers", null);
            }
            set {
                SetRelatedEntity("CampaignActivity_ActivityPointers", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Campaign_ActivityPointers")]
        public Campaign Campaign_ActivityPointers {
            get {
                return GetRelatedEntity<Campaign>("Campaign_ActivityPointers", null);
            }
            set {
                SetRelatedEntity("Campaign_ActivityPointers", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Contact_ActivityPointers")]
        public Contact Contact_ActivityPointers {
            get {
                return GetRelatedEntity<Contact>("Contact_ActivityPointers", null);
            }
            set {
                SetRelatedEntity("Contact_ActivityPointers", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Contract_ActivityPointers")]
        public Contract Contract_ActivityPointers {
            get {
                return GetRelatedEntity<Contract>("Contract_ActivityPointers", null);
            }
            set {
                SetRelatedEntity("Contract_ActivityPointers", null, value);
            }
        }
        
        [RelationshipSchemaName("CreatedActivity_BulkOperationLogs")]
        public IEnumerable<BulkOperationLog> CreatedActivity_BulkOperationLogs {
            get {
                return GetRelatedEntities<BulkOperationLog>("CreatedActivity_BulkOperationLogs", null);
            }
            set {
                SetRelatedEntities("CreatedActivity_BulkOperationLogs", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Incident_ActivityPointers")]
        public Incident Incident_ActivityPointers {
            get {
                return GetRelatedEntity<Incident>("Incident_ActivityPointers", null);
            }
            set {
                SetRelatedEntity("Incident_ActivityPointers", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Invoice_ActivityPointers")]
        public Invoice Invoice_ActivityPointers {
            get {
                return GetRelatedEntity<Invoice>("Invoice_ActivityPointers", null);
            }
            set {
                SetRelatedEntity("Invoice_ActivityPointers", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("KnowledgeArticle_ActivityPointers")]
        public KnowledgeArticle KnowledgeArticle_ActivityPointers {
            get {
                return GetRelatedEntity<KnowledgeArticle>("KnowledgeArticle_ActivityPointers", null);
            }
            set {
                SetRelatedEntity("KnowledgeArticle_ActivityPointers", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Lead_ActivityPointers")]
        public Lead Lead_ActivityPointers {
            get {
                return GetRelatedEntity<Lead>("Lead_ActivityPointers", null);
            }
            set {
                SetRelatedEntity("Lead_ActivityPointers", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Opportunity_ActivityPointers")]
        public Opportunity Opportunity_ActivityPointers {
            get {
                return GetRelatedEntity<Opportunity>("Opportunity_ActivityPointers", null);
            }
            set {
                SetRelatedEntity("Opportunity_ActivityPointers", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Quote_ActivityPointers")]
        public Quote Quote_ActivityPointers {
            get {
                return GetRelatedEntity<Quote>("Quote_ActivityPointers", null);
            }
            set {
                SetRelatedEntity("Quote_ActivityPointers", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("SalesOrder_ActivityPointers")]
        public SalesOrder SalesOrder_ActivityPointers {
            get {
                return GetRelatedEntity<SalesOrder>("SalesOrder_ActivityPointers", null);
            }
            set {
                SetRelatedEntity("SalesOrder_ActivityPointers", null, value);
            }
        }
        
        [AttributeLogicalName("transactioncurrencyid")]
        [RelationshipSchemaName("TransactionCurrency_ActivityPointer")]
        public TransactionCurrency TransactionCurrency_ActivityPointer {
            get {
                return GetRelatedEntity<TransactionCurrency>("TransactionCurrency_ActivityPointer", null);
            }
            set {
                SetRelatedEntity("TransactionCurrency_ActivityPointer", null, value);
            }
        }
        
        [RelationshipSchemaName("activity_campaignresponse")]
        public IEnumerable<CampaignResponse> activity_campaignresponse {
            get {
                return GetRelatedEntities<CampaignResponse>("activity_campaignresponse", null);
            }
            set {
                SetRelatedEntities("activity_campaignresponse", null, value);
            }
        }
        
        [RelationshipSchemaName("activity_pointer_BulkOperation_logs")]
        public IEnumerable<BulkOperationLog> activity_pointer_BulkOperation_logs {
            get {
                return GetRelatedEntities<BulkOperationLog>("activity_pointer_BulkOperation_logs", null);
            }
            set {
                SetRelatedEntities("activity_pointer_BulkOperation_logs", null, value);
            }
        }
        
        [RelationshipSchemaName("activity_pointer_appointment")]
        public IEnumerable<Appointment> activity_pointer_appointment {
            get {
                return GetRelatedEntities<Appointment>("activity_pointer_appointment", null);
            }
            set {
                SetRelatedEntities("activity_pointer_appointment", null, value);
            }
        }
        
        [RelationshipSchemaName("activity_pointer_campaignactivity")]
        public IEnumerable<CampaignActivity> activity_pointer_campaignactivity {
            get {
                return GetRelatedEntities<CampaignActivity>("activity_pointer_campaignactivity", null);
            }
            set {
                SetRelatedEntities("activity_pointer_campaignactivity", null, value);
            }
        }
        
        [RelationshipSchemaName("activity_pointer_campaignresponse")]
        public IEnumerable<CampaignResponse> activity_pointer_campaignresponse {
            get {
                return GetRelatedEntities<CampaignResponse>("activity_pointer_campaignresponse", null);
            }
            set {
                SetRelatedEntities("activity_pointer_campaignresponse", null, value);
            }
        }
        
        [RelationshipSchemaName("activity_pointer_email")]
        public IEnumerable<Email> activity_pointer_email {
            get {
                return GetRelatedEntities<Email>("activity_pointer_email", null);
            }
            set {
                SetRelatedEntities("activity_pointer_email", null, value);
            }
        }
        
        [RelationshipSchemaName("activity_pointer_fax")]
        public IEnumerable<Fax> activity_pointer_fax {
            get {
                return GetRelatedEntities<Fax>("activity_pointer_fax", null);
            }
            set {
                SetRelatedEntities("activity_pointer_fax", null, value);
            }
        }
        
        [RelationshipSchemaName("activity_pointer_incident_resolution")]
        public IEnumerable<IncidentResolution> activity_pointer_incident_resolution {
            get {
                return GetRelatedEntities<IncidentResolution>("activity_pointer_incident_resolution", null);
            }
            set {
                SetRelatedEntities("activity_pointer_incident_resolution", null, value);
            }
        }
        
        [RelationshipSchemaName("activity_pointer_letter")]
        public IEnumerable<Letter> activity_pointer_letter {
            get {
                return GetRelatedEntities<Letter>("activity_pointer_letter", null);
            }
            set {
                SetRelatedEntities("activity_pointer_letter", null, value);
            }
        }
        
        [RelationshipSchemaName("activity_pointer_opportunity_close")]
        public IEnumerable<OpportunityClose> activity_pointer_opportunity_close {
            get {
                return GetRelatedEntities<OpportunityClose>("activity_pointer_opportunity_close", null);
            }
            set {
                SetRelatedEntities("activity_pointer_opportunity_close", null, value);
            }
        }
        
        [RelationshipSchemaName("activity_pointer_phonecall")]
        public IEnumerable<PhoneCall> activity_pointer_phonecall {
            get {
                return GetRelatedEntities<PhoneCall>("activity_pointer_phonecall", null);
            }
            set {
                SetRelatedEntities("activity_pointer_phonecall", null, value);
            }
        }
        
        [RelationshipSchemaName("activity_pointer_recurringappointmentmaster")]
        public IEnumerable<RecurringAppointmentMaster> activity_pointer_recurringappointmentmaster {
            get {
                return GetRelatedEntities<RecurringAppointmentMaster>("activity_pointer_recurringappointmentmaster", null);
            }
            set {
                SetRelatedEntities("activity_pointer_recurringappointmentmaster", null, value);
            }
        }
        
        [RelationshipSchemaName("activity_pointer_service_appointment")]
        public IEnumerable<ServiceAppointment> activity_pointer_service_appointment {
            get {
                return GetRelatedEntities<ServiceAppointment>("activity_pointer_service_appointment", null);
            }
            set {
                SetRelatedEntities("activity_pointer_service_appointment", null, value);
            }
        }
        
        [RelationshipSchemaName("activity_pointer_socialactivity")]
        public IEnumerable<SocialActivity> activity_pointer_socialactivity {
            get {
                return GetRelatedEntities<SocialActivity>("activity_pointer_socialactivity", null);
            }
            set {
                SetRelatedEntities("activity_pointer_socialactivity", null, value);
            }
        }
        
        [RelationshipSchemaName("activity_pointer_task")]
        public IEnumerable<Task> activity_pointer_task {
            get {
                return GetRelatedEntities<Task>("activity_pointer_task", null);
            }
            set {
                SetRelatedEntities("activity_pointer_task", null, value);
            }
        }
        
        [RelationshipSchemaName("activitypointer_activity_parties")]
        public IEnumerable<ActivityParty> activitypointer_activity_parties {
            get {
                return GetRelatedEntities<ActivityParty>("activitypointer_activity_parties", null);
            }
            set {
                SetRelatedEntities("activitypointer_activity_parties", null, value);
            }
        }
        
        [RelationshipSchemaName("activitypointer_connections1")]
        public IEnumerable<Connection> activitypointer_connections1 {
            get {
                return GetRelatedEntities<Connection>("activitypointer_connections1", null);
            }
            set {
                SetRelatedEntities("activitypointer_connections1", null, value);
            }
        }
        
        [RelationshipSchemaName("activitypointer_connections2")]
        public IEnumerable<Connection> activitypointer_connections2 {
            get {
                return GetRelatedEntities<Connection>("activitypointer_connections2", null);
            }
            set {
                SetRelatedEntities("activitypointer_connections2", null, value);
            }
        }
        
        [AttributeLogicalName("sendermailboxid")]
        [RelationshipSchemaName("activitypointer_sendermailboxid_mailbox")]
        public Mailbox activitypointer_sendermailboxid_mailbox {
            get {
                return GetRelatedEntity<Mailbox>("activitypointer_sendermailboxid_mailbox", null);
            }
            set {
                SetRelatedEntity("activitypointer_sendermailboxid_mailbox", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("bookableresourcebooking_ActivityPointers")]
        public BookableResourceBooking bookableresourcebooking_ActivityPointers {
            get {
                return GetRelatedEntity<BookableResourceBooking>("bookableresourcebooking_ActivityPointers", null);
            }
            set {
                SetRelatedEntity("bookableresourcebooking_ActivityPointers", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("bookableresourcebookingheader_ActivityPointers")]
        public BookableResourceBookingHeader bookableresourcebookingheader_ActivityPointers {
            get {
                return GetRelatedEntity<BookableResourceBookingHeader>("bookableresourcebookingheader_ActivityPointers", null);
            }
            set {
                SetRelatedEntity("bookableresourcebookingheader_ActivityPointers", null, value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_activitypointer")]
        public BusinessUnit business_unit_activitypointer {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_activitypointer", null);
            }
            set {
                SetRelatedEntity("business_unit_activitypointer", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("dg_event_ActivityPointers")]
        public dg_event dg_event_ActivityPointers {
            get {
                return GetRelatedEntity<dg_event>("dg_event_ActivityPointers", null);
            }
            set {
                SetRelatedEntity("dg_event_ActivityPointers", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("dg_participant_ActivityPointers")]
        public dg_participant dg_participant_ActivityPointers {
            get {
                return GetRelatedEntity<dg_participant>("dg_participant_ActivityPointers", null);
            }
            set {
                SetRelatedEntity("dg_participant_ActivityPointers", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("entitlement_ActivityPointers")]
        public Entitlement entitlement_ActivityPointers {
            get {
                return GetRelatedEntity<Entitlement>("entitlement_ActivityPointers", null);
            }
            set {
                SetRelatedEntity("entitlement_ActivityPointers", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_activitypointer_createdby")]
        public SystemUser lk_activitypointer_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_activitypointer_createdby", null);
            }
            set {
                SetRelatedEntity("lk_activitypointer_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_activitypointer_createdonbehalfby")]
        public SystemUser lk_activitypointer_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_activitypointer_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_activitypointer_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_activitypointer_modifiedby")]
        public SystemUser lk_activitypointer_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_activitypointer_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_activitypointer_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_activitypointer_modifiedonbehalfby")]
        public SystemUser lk_activitypointer_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_activitypointer_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_activitypointer_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("slaid")]
        [RelationshipSchemaName("manualsla_activitypointer")]
        public SLA manualsla_activitypointer {
            get {
                return GetRelatedEntity<SLA>("manualsla_activitypointer", null);
            }
            set {
                SetRelatedEntity("manualsla_activitypointer", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("msdyn_agreement_ActivityPointers")]
        public msdyn_agreement msdyn_agreement_ActivityPointers {
            get {
                return GetRelatedEntity<msdyn_agreement>("msdyn_agreement_ActivityPointers", null);
            }
            set {
                SetRelatedEntity("msdyn_agreement_ActivityPointers", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("msdyn_postalbum_ActivityPointers")]
        public msdyn_PostAlbum msdyn_postalbum_ActivityPointers {
            get {
                return GetRelatedEntity<msdyn_PostAlbum>("msdyn_postalbum_ActivityPointers", null);
            }
            set {
                SetRelatedEntity("msdyn_postalbum_ActivityPointers", null, value);
            }
        }
        
        [AttributeLogicalName("slainvokedid")]
        [RelationshipSchemaName("sla_activitypointer")]
        public SLA sla_activitypointer {
            get {
                return GetRelatedEntity<SLA>("sla_activitypointer", null);
            }
            set {
                SetRelatedEntity("sla_activitypointer", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_activity")]
        public Team team_activity {
            get {
                return GetRelatedEntity<Team>("team_activity", null);
            }
            set {
                SetRelatedEntity("team_activity", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_activity")]
        public SystemUser user_activity {
            get {
                return GetRelatedEntity<SystemUser>("user_activity", null);
            }
            set {
                SetRelatedEntity("user_activity", null, value);
            }
        }
        
        public static ActivityPointer Retrieve(IOrganizationService service, Guid id, params Expression<Func<ActivityPointer,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Commitment representing a time interval with start/end times and duration.</para>
    /// <para>Display Name: Appointment</para>
    /// </summary>
    [EntityLogicalName("appointment")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class Appointment : ExtendedEntity<AppointmentState, Appointment_StatusCode> {
        
        public const string EntityLogicalName = "appointment";
        
        public const int EntityTypeCode = 4201;
        
        public Appointment() : 
                base(EntityLogicalName) {
        }
        
        public Appointment(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("subject");
            }
        }
        
        [AttributeLogicalName("activityid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("activityid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the appointment.</para>
        /// <para>Display Name: Appointment</para>
        /// </summary>
        [AttributeLogicalName("activityid")]
        [DisplayName("Appointment")]
        public Guid? ActivityId {
            get {
                return GetAttributeValue<Guid?>("activityid");
            }
            set {
                SetId("activityid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Additional Parameters</para>
        /// </summary>
        [AttributeLogicalName("activityadditionalparams")]
        [DisplayName("Additional Parameters")]
        public string ActivityAdditionalParams {
            get {
                return GetAttributeValue<string>("activityadditionalparams");
            }
            set {
                SetAttributeValue("activityadditionalparams", value);
            }
        }
        
        /// <summary>
        /// <para>Type of activity.</para>
        /// <para>Display Name: Activity Type</para>
        /// </summary>
        [AttributeLogicalName("activitytypecode")]
        [DisplayName("Activity Type")]
        public string ActivityTypeCode {
            get {
                return GetAttributeValue<string>("activitytypecode");
            }
        }
        
        /// <summary>
        /// <para>Shows the value selected in the Duration field on the appointment at the time that the appointment is closed as completed. The duration is used to report the time spent on the activity.</para>
        /// <para>Display Name: Actual Duration</para>
        /// </summary>
        [AttributeLogicalName("actualdurationminutes")]
        [DisplayName("Actual Duration")]
        [Range(0, 2147483647)]
        public int? ActualDurationMinutes {
            get {
                return GetAttributeValue<int?>("actualdurationminutes");
            }
            set {
                SetAttributeValue("actualdurationminutes", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the actual end date and time of the appointment. By default, it displays the date and time when the activity was completed or canceled, but can be edited to capture the actual duration of the appointment.</para>
        /// <para>Display Name: Actual End</para>
        /// </summary>
        [AttributeLogicalName("actualend")]
        [DisplayName("Actual End")]
        public DateTime? ActualEnd {
            get {
                return GetAttributeValue<DateTime?>("actualend");
            }
            set {
                SetAttributeValue("actualend", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the actual start date and time for the appointment. By default, it displays the date and time when the activity was created, but can be edited to capture the actual duration of the appointment.</para>
        /// <para>Display Name: Actual Start</para>
        /// </summary>
        [AttributeLogicalName("actualstart")]
        [DisplayName("Actual Start")]
        public DateTime? ActualStart {
            get {
                return GetAttributeValue<DateTime?>("actualstart");
            }
            set {
                SetAttributeValue("actualstart", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the number of attachments on the appointment.</para>
        /// <para>Display Name: Attachment Count</para>
        /// </summary>
        [AttributeLogicalName("attachmentcount")]
        [DisplayName("Attachment Count")]
        [Range(0, 2147483647)]
        public int? AttachmentCount {
            get {
                return GetAttributeValue<int?>("attachmentcount");
            }
        }
        
        /// <summary>
        /// <para>Select the error code to identify issues with the outlook item recipients or attachments, such as blocked attachments.</para>
        /// <para>Display Name: AttachmentErrors</para>
        /// </summary>
        [AttributeLogicalName("attachmenterrors")]
        [DisplayName("AttachmentErrors")]
        public Appointment_AttachmentErrors? AttachmentErrors {
            get {
                return GetOptionSetValue<Appointment_AttachmentErrors>("attachmenterrors");
            }
            set {
                SetOptionSetValue("attachmenterrors", value);
            }
        }
        
        /// <summary>
        /// <para>Type a category to identify the appointment type, such as sales demo, prospect call, or service call, to tie the appointment to a business group or function.</para>
        /// <para>Display Name: Category</para>
        /// </summary>
        [AttributeLogicalName("category")]
        [DisplayName("Category")]
        [MaxLength(250)]
        public string Category {
            get {
                return GetAttributeValue<string>("category");
            }
            set {
                SetAttributeValue("category", value);
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record on behalf of another user.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Type additional information to describe the purpose of the appointment.</para>
        /// <para>Display Name: Description</para>
        /// </summary>
        [AttributeLogicalName("description")]
        [DisplayName("Description")]
        public string Description {
            get {
                return GetAttributeValue<string>("description");
            }
            set {
                SetAttributeValue("description", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("Exchange Rate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the appointment in Microsoft Office Outlook. The ID is used to synchronize the appointment between Microsoft Dynamics 365 and the correct Exchange account.</para>
        /// <para>Display Name: Outlook Appointment</para>
        /// </summary>
        [AttributeLogicalName("globalobjectid")]
        [DisplayName("Outlook Appointment")]
        [MaxLength(300)]
        public string GlobalObjectId {
            get {
                return GetAttributeValue<string>("globalobjectid");
            }
            set {
                SetAttributeValue("globalobjectid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the data import or data migration that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Type of instance of a recurring series.</para>
        /// <para>Display Name: Appointment Type</para>
        /// </summary>
        [AttributeLogicalName("instancetypecode")]
        [DisplayName("Appointment Type")]
        public Appointment_InstanceTypeCode? InstanceTypeCode {
            get {
                return GetOptionSetValue<Appointment_InstanceTypeCode>("instancetypecode");
            }
        }
        
        /// <summary>
        /// <para>Select whether the appointment is an all-day event to make sure that the required resources are scheduled for the full day.</para>
        /// <para>Display Name: All Day Event</para>
        /// </summary>
        [AttributeLogicalName("isalldayevent")]
        [DisplayName("All Day Event")]
        public bool? IsAllDayEvent {
            get {
                return GetAttributeValue<bool?>("isalldayevent");
            }
            set {
                SetAttributeValue("isalldayevent", value);
            }
        }
        
        /// <summary>
        /// <para>Information regarding whether the appointment was billed as part of resolving a case.</para>
        /// <para>Display Name: Is Billed</para>
        /// </summary>
        [AttributeLogicalName("isbilled")]
        [DisplayName("Is Billed")]
        public bool? IsBilled {
            get {
                return GetAttributeValue<bool?>("isbilled");
            }
            set {
                SetAttributeValue("isbilled", value);
            }
        }
        
        /// <summary>
        /// <para>Information regarding whether the appointment is a draft.</para>
        /// <para>Display Name: IsDraft</para>
        /// </summary>
        [AttributeLogicalName("isdraft")]
        [DisplayName("IsDraft")]
        public bool? IsDraft {
            get {
                return GetAttributeValue<bool?>("isdraft");
            }
            set {
                SetAttributeValue("isdraft", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Is Private</para>
        /// </summary>
        [AttributeLogicalName("ismapiprivate")]
        [DisplayName("Is Private")]
        public bool? IsMapiPrivate {
            get {
                return GetAttributeValue<bool?>("ismapiprivate");
            }
            set {
                SetAttributeValue("ismapiprivate", value);
            }
        }
        
        /// <summary>
        /// <para>Information regarding whether the activity is a regular activity type or event type.</para>
        /// <para>Display Name: Is Regular Activity</para>
        /// </summary>
        [AttributeLogicalName("isregularactivity")]
        [DisplayName("Is Regular Activity")]
        public bool? IsRegularActivity {
            get {
                return GetAttributeValue<bool?>("isregularactivity");
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: IsUnsafe</para>
        /// </summary>
        [AttributeLogicalName("isunsafe")]
        [DisplayName("IsUnsafe")]
        [Range(0, 2147483647)]
        public int? IsUnsafe {
            get {
                return GetAttributeValue<int?>("isunsafe");
            }
        }
        
        /// <summary>
        /// <para>Information regarding whether the appointment was created from a workflow rule.</para>
        /// <para>Display Name: Is Workflow Created</para>
        /// </summary>
        [AttributeLogicalName("isworkflowcreated")]
        [DisplayName("Is Workflow Created")]
        public bool? IsWorkflowCreated {
            get {
                return GetAttributeValue<bool?>("isworkflowcreated");
            }
            set {
                SetAttributeValue("isworkflowcreated", value);
            }
        }
        
        /// <summary>
        /// <para>Contains the date and time stamp of the last on hold time.</para>
        /// <para>Display Name: Last On Hold Time</para>
        /// </summary>
        [AttributeLogicalName("lastonholdtime")]
        [DisplayName("Last On Hold Time")]
        public DateTime? LastOnHoldTime {
            get {
                return GetAttributeValue<DateTime?>("lastonholdtime");
            }
            set {
                SetAttributeValue("lastonholdtime", value);
            }
        }
        
        /// <summary>
        /// <para>Type the location where the appointment will take place, such as a conference room or customer office.</para>
        /// <para>Display Name: Location</para>
        /// </summary>
        [AttributeLogicalName("location")]
        [DisplayName("Location")]
        [MaxLength(200)]
        public string Location {
            get {
                return GetAttributeValue<string>("location");
            }
            set {
                SetAttributeValue("location", value);
            }
        }
        
        /// <summary>
        /// <para>Shows who last updated the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>For internal use only. </para>
        /// <para>Display Name: Modified Fields Mask</para>
        /// </summary>
        [AttributeLogicalName("modifiedfieldsmask")]
        [DisplayName("Modified Fields Mask")]
        public string ModifiedFieldsMask {
            get {
                return GetAttributeValue<string>("modifiedfieldsmask");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record on behalf of another user.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Shows how long, in minutes, that the record was on hold.</para>
        /// <para>Display Name: On Hold Time (Minutes)</para>
        /// </summary>
        [AttributeLogicalName("onholdtime")]
        [DisplayName("On Hold Time (Minutes)")]
        [Range(-2147483648, 2147483647)]
        public int? OnHoldTime {
            get {
                return GetAttributeValue<int?>("onholdtime");
            }
        }
        
        /// <summary>
        /// <para>Enter the account, contact, lead, user, or other equipment resources that are not needed at the appointment, but can optionally attend.</para>
        /// <para>Display Name: Optional Attendees</para>
        /// </summary>
        [AttributeLogicalName("optionalattendees")]
        [DisplayName("Optional Attendees")]
        public IEnumerable<ActivityParty> OptionalAttendees {
            get {
                return GetEntityCollection<ActivityParty>("optionalattendees");
            }
            set {
                SetEntityCollection("optionalattendees", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the user who is in charge of coordinating or leading the appointment to make sure the appointment is displayed in the user's My Activities view.</para>
        /// <para>Display Name: Organizer</para>
        /// </summary>
        [AttributeLogicalName("organizer")]
        [DisplayName("Organizer")]
        public IEnumerable<ActivityParty> Organizer {
            get {
                return GetEntityCollection<ActivityParty>("organizer");
            }
            set {
                SetEntityCollection("organizer", value);
            }
        }
        
        /// <summary>
        /// <para>The original start date of the appointment.</para>
        /// <para>Display Name: Original Start Date</para>
        /// </summary>
        [AttributeLogicalName("originalstartdate")]
        [DisplayName("Original Start Date")]
        public DateTime? OriginalStartDate {
            get {
                return GetAttributeValue<DateTime?>("originalstartdate");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the Microsoft Office Outlook appointment owner that correlates to the PR_OWNER_APPT_ID MAPI property.</para>
        /// <para>Display Name: Outlook Appointment Owner</para>
        /// </summary>
        [AttributeLogicalName("outlookownerapptid")]
        [DisplayName("Outlook Appointment Owner")]
        [Range(-2147483648, 2147483647)]
        public int? OutlookOwnerApptId {
            get {
                return GetAttributeValue<int?>("outlookownerapptid");
            }
            set {
                SetAttributeValue("outlookownerapptid", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the user or team who is assigned to manage the record. This field is updated every time the record is assigned to a different user.</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the business unit that the record owner belongs to.</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the team that owns the appointment.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user that owns the appointment.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Type a short description about the objective or primary topic of the appointment.</para>
        /// <para>Display Name: Subject</para>
        /// </summary>
        [AttributeLogicalName("subject")]
        [DisplayName("Subject")]
        [MaxLength(800)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("subject");
            }
            set {
                SetAttributeValue("subject", value);
            }
        }
        
        /// <summary>
        /// <para>Select the priority so that preferred customers or critical issues are handled quickly.</para>
        /// <para>Display Name: Priority</para>
        /// </summary>
        [AttributeLogicalName("prioritycode")]
        [DisplayName("Priority")]
        public Appointment_PriorityCode? PriorityCode {
            get {
                return GetOptionSetValue<Appointment_PriorityCode>("prioritycode");
            }
            set {
                SetOptionSetValue("prioritycode", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the process.</para>
        /// <para>Display Name: Process</para>
        /// </summary>
        [AttributeLogicalName("processid")]
        [DisplayName("Process")]
        public Guid? ProcessId {
            get {
                return GetAttributeValue<Guid?>("processid");
            }
            set {
                SetAttributeValue("processid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the object with which the appointment is associated.</para>
        /// <para>Display Name: Regarding</para>
        /// </summary>
        [AttributeLogicalName("regardingobjectid")]
        [DisplayName("Regarding")]
        public EntityReference RegardingObjectId {
            get {
                return GetAttributeValue<EntityReference>("regardingobjectid");
            }
            set {
                SetAttributeValue("regardingobjectid", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the account, contact, lead, user, or other equipment resources that are required to attend the appointment.</para>
        /// <para>Display Name: Required Attendees</para>
        /// </summary>
        [AttributeLogicalName("requiredattendees")]
        [DisplayName("Required Attendees")]
        public IEnumerable<ActivityParty> RequiredAttendees {
            get {
                return GetEntityCollection<ActivityParty>("requiredattendees");
            }
            set {
                SetEntityCollection("requiredattendees", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the service level agreement (SLA) that you want to apply to the appointment record.</para>
        /// <para>Display Name: SLA</para>
        /// </summary>
        [AttributeLogicalName("slaid")]
        [DisplayName("SLA")]
        public EntityReference SLAId {
            get {
                return GetAttributeValue<EntityReference>("slaid");
            }
            set {
                SetAttributeValue("slaid", value);
            }
        }
        
        /// <summary>
        /// <para>Last SLA that was applied to this appointment. This field is for internal use only.</para>
        /// <para>Display Name: Last SLA applied</para>
        /// </summary>
        [AttributeLogicalName("slainvokedid")]
        [DisplayName("Last SLA applied")]
        public EntityReference SLAInvokedId {
            get {
                return GetAttributeValue<EntityReference>("slainvokedid");
            }
        }
        
        /// <summary>
        /// <para>Shows the expected duration of the appointment, in minutes.</para>
        /// <para>Display Name: Duration</para>
        /// </summary>
        [AttributeLogicalName("scheduleddurationminutes")]
        [DisplayName("Duration")]
        [Range(0, 2147483647)]
        public int? ScheduledDurationMinutes {
            get {
                return GetAttributeValue<int?>("scheduleddurationminutes");
            }
            set {
                SetAttributeValue("scheduleddurationminutes", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the expected due date and time for the activity to be completed to provide details about the timing of the appointment.</para>
        /// <para>Display Name: End Time</para>
        /// </summary>
        [AttributeLogicalName("scheduledend")]
        [DisplayName("End Time")]
        public DateTime? ScheduledEnd {
            get {
                return GetAttributeValue<DateTime?>("scheduledend");
            }
            set {
                SetAttributeValue("scheduledend", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the expected start date and time for the activity to provide details about the timing of the appointment.</para>
        /// <para>Display Name: Start Time</para>
        /// </summary>
        [AttributeLogicalName("scheduledstart")]
        [DisplayName("Start Time")]
        public DateTime? ScheduledStart {
            get {
                return GetAttributeValue<DateTime?>("scheduledstart");
            }
            set {
                SetAttributeValue("scheduledstart", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the recurring series of an instance.</para>
        /// <para>Display Name: Series Id</para>
        /// </summary>
        [AttributeLogicalName("seriesid")]
        [DisplayName("Series Id")]
        public Guid? SeriesId {
            get {
                return GetAttributeValue<Guid?>("seriesid");
            }
        }
        
        /// <summary>
        /// <para>service_appointments</para>
        /// <para>Display Name: Service</para>
        /// </summary>
        [AttributeLogicalName("serviceid")]
        [DisplayName("Service")]
        public EntityReference ServiceId {
            get {
                return GetAttributeValue<EntityReference>("serviceid");
            }
            set {
                SetAttributeValue("serviceid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time by which the activities are sorted.</para>
        /// <para>Display Name: Sort Date</para>
        /// </summary>
        [AttributeLogicalName("sortdate")]
        [DisplayName("Sort Date")]
        public DateTime? SortDate {
            get {
                return GetAttributeValue<DateTime?>("sortdate");
            }
            set {
                SetAttributeValue("sortdate", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the stage.</para>
        /// <para>Display Name: (Deprecated) Process Stage</para>
        /// </summary>
        [AttributeLogicalName("stageid")]
        [DisplayName("(Deprecated) Process Stage")]
        public Guid? StageId {
            get {
                return GetAttributeValue<Guid?>("stageid");
            }
            set {
                SetAttributeValue("stageid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows whether the appointment is open, completed, or canceled. Completed and canceled appointments are read-only and can't be edited.</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public AppointmentState? StateCode {
            get {
                return GetOptionSetValue<AppointmentState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the appointment's status.</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public Appointment_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<Appointment_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>Type a subcategory to identify the appointment type and relate the activity to a specific product, sales region, business group, or other function.</para>
        /// <para>Display Name: Sub-Category</para>
        /// </summary>
        [AttributeLogicalName("subcategory")]
        [DisplayName("Sub-Category")]
        [MaxLength(250)]
        public string Subcategory {
            get {
                return GetAttributeValue<string>("subcategory");
            }
            set {
                SetAttributeValue("subcategory", value);
            }
        }
        
        /// <summary>
        /// <para>Type a short description about the objective or primary topic of the appointment.</para>
        /// <para>Display Name: Subject</para>
        /// </summary>
        [AttributeLogicalName("subject")]
        [DisplayName("Subject")]
        [MaxLength(800)]
        public string Subject {
            get {
                return GetAttributeValue<string>("subject");
            }
            set {
                SetAttributeValue("subject", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Subscription</para>
        /// </summary>
        [AttributeLogicalName("subscriptionid")]
        [DisplayName("Subscription")]
        public Guid? SubscriptionId {
            get {
                return GetAttributeValue<Guid?>("subscriptionid");
            }
            set {
                SetAttributeValue("subscriptionid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the local currency for the record to make sure budgets are reported in the correct currency.</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: (Deprecated) Traversed Path</para>
        /// </summary>
        [AttributeLogicalName("traversedpath")]
        [DisplayName("(Deprecated) Traversed Path")]
        [MaxLength(1250)]
        public string TraversedPath {
            get {
                return GetAttributeValue<string>("traversedpath");
            }
            set {
                SetAttributeValue("traversedpath", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version number of the appointment.</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Display Name: ci_call_summary_control_field</para>
        /// </summary>
        [AttributeLogicalName("msdyn_ci_call_summary_control_field")]
        [DisplayName("ci_call_summary_control_field")]
        [Range(-2147483648, 2147483647)]
        public int? msdyn_ci_call_summary_control_field {
            get {
                return GetAttributeValue<int?>("msdyn_ci_call_summary_control_field");
            }
            set {
                SetAttributeValue("msdyn_ci_call_summary_control_field", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Conversation Id</para>
        /// </summary>
        [AttributeLogicalName("msdyn_ci_id")]
        [DisplayName("Conversation Id")]
        [MaxLength(100)]
        public string msdyn_ci_id {
            get {
                return GetAttributeValue<string>("msdyn_ci_id");
            }
            set {
                SetAttributeValue("msdyn_ci_id", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Insights Json</para>
        /// </summary>
        [AttributeLogicalName("msdyn_ci_insights_json")]
        [DisplayName("Insights Json")]
        public string msdyn_ci_insights_json {
            get {
                return GetAttributeValue<string>("msdyn_ci_insights_json");
            }
            set {
                SetAttributeValue("msdyn_ci_insights_json", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Conversation Keywords</para>
        /// </summary>
        [AttributeLogicalName("msdyn_ci_keywords")]
        [DisplayName("Conversation Keywords")]
        [MaxLength(4000)]
        public string msdyn_ci_keywords {
            get {
                return GetAttributeValue<string>("msdyn_ci_keywords");
            }
            set {
                SetAttributeValue("msdyn_ci_keywords", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Media Reference Id</para>
        /// </summary>
        [AttributeLogicalName("msdyn_ci_media_reference_id")]
        [DisplayName("Media Reference Id")]
        [MaxLength(100)]
        public string msdyn_ci_media_reference_id {
            get {
                return GetAttributeValue<string>("msdyn_ci_media_reference_id");
            }
            set {
                SetAttributeValue("msdyn_ci_media_reference_id", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: CI Transcript</para>
        /// </summary>
        [AttributeLogicalName("msdyn_ci_transcript")]
        [DisplayName("CI Transcript")]
        public string msdyn_ci_transcript {
            get {
                return GetAttributeValue<string>("msdyn_ci_transcript");
            }
            set {
                SetAttributeValue("msdyn_ci_transcript", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Transcript Json</para>
        /// </summary>
        [AttributeLogicalName("msdyn_ci_transcript_json")]
        [DisplayName("Transcript Json")]
        public string msdyn_ci_transcript_json {
            get {
                return GetAttributeValue<string>("msdyn_ci_transcript_json");
            }
            set {
                SetAttributeValue("msdyn_ci_transcript_json", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: CI Translated Transcript</para>
        /// </summary>
        [AttributeLogicalName("msdyn_ci_translated_transcript")]
        [DisplayName("CI Translated Transcript")]
        public string msdyn_ci_translated_transcript {
            get {
                return GetAttributeValue<string>("msdyn_ci_translated_transcript");
            }
            set {
                SetAttributeValue("msdyn_ci_translated_transcript", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Translated Transcript Json</para>
        /// </summary>
        [AttributeLogicalName("msdyn_ci_translated_transcript_json")]
        [DisplayName("Translated Transcript Json")]
        public string msdyn_ci_translated_transcript_json {
            get {
                return GetAttributeValue<string>("msdyn_ci_translated_transcript_json");
            }
            set {
                SetAttributeValue("msdyn_ci_translated_transcript_json", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Conversation Url</para>
        /// </summary>
        [AttributeLogicalName("msdyn_ci_url")]
        [DisplayName("Conversation Url")]
        [MaxLength(1024)]
        public string msdyn_ci_url {
            get {
                return GetAttributeValue<string>("msdyn_ci_url");
            }
            set {
                SetAttributeValue("msdyn_ci_url", value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Account_Appointments")]
        public Account Account_Appointments {
            get {
                return GetRelatedEntity<Account>("Account_Appointments", null);
            }
            set {
                SetRelatedEntity("Account_Appointments", null, value);
            }
        }
        
        [RelationshipSchemaName("Appointment_QueueItem")]
        public IEnumerable<QueueItem> Appointment_QueueItem {
            get {
                return GetRelatedEntities<QueueItem>("Appointment_QueueItem", null);
            }
            set {
                SetRelatedEntities("Appointment_QueueItem", null, value);
            }
        }
        
        [RelationshipSchemaName("Appointment_SyncErrors")]
        public IEnumerable<SyncError> Appointment_SyncErrors {
            get {
                return GetRelatedEntities<SyncError>("Appointment_SyncErrors", null);
            }
            set {
                SetRelatedEntities("Appointment_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("CampaignActivity_Appointments")]
        public CampaignActivity CampaignActivity_Appointments {
            get {
                return GetRelatedEntity<CampaignActivity>("CampaignActivity_Appointments", null);
            }
            set {
                SetRelatedEntity("CampaignActivity_Appointments", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Campaign_Appointments")]
        public Campaign Campaign_Appointments {
            get {
                return GetRelatedEntity<Campaign>("Campaign_Appointments", null);
            }
            set {
                SetRelatedEntity("Campaign_Appointments", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Contact_Appointments")]
        public Contact Contact_Appointments {
            get {
                return GetRelatedEntity<Contact>("Contact_Appointments", null);
            }
            set {
                SetRelatedEntity("Contact_Appointments", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Contract_Appointments")]
        public Contract Contract_Appointments {
            get {
                return GetRelatedEntity<Contract>("Contract_Appointments", null);
            }
            set {
                SetRelatedEntity("Contract_Appointments", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Incident_Appointments")]
        public Incident Incident_Appointments {
            get {
                return GetRelatedEntity<Incident>("Incident_Appointments", null);
            }
            set {
                SetRelatedEntity("Incident_Appointments", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Invoice_Appointments")]
        public Invoice Invoice_Appointments {
            get {
                return GetRelatedEntity<Invoice>("Invoice_Appointments", null);
            }
            set {
                SetRelatedEntity("Invoice_Appointments", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("KnowledgeArticle_Appointments")]
        public KnowledgeArticle KnowledgeArticle_Appointments {
            get {
                return GetRelatedEntity<KnowledgeArticle>("KnowledgeArticle_Appointments", null);
            }
            set {
                SetRelatedEntity("KnowledgeArticle_Appointments", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Lead_Appointments")]
        public Lead Lead_Appointments {
            get {
                return GetRelatedEntity<Lead>("Lead_Appointments", null);
            }
            set {
                SetRelatedEntity("Lead_Appointments", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Opportunity_Appointments")]
        public Opportunity Opportunity_Appointments {
            get {
                return GetRelatedEntity<Opportunity>("Opportunity_Appointments", null);
            }
            set {
                SetRelatedEntity("Opportunity_Appointments", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Quote_Appointments")]
        public Quote Quote_Appointments {
            get {
                return GetRelatedEntity<Quote>("Quote_Appointments", null);
            }
            set {
                SetRelatedEntity("Quote_Appointments", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("SalesOrder_Appointments")]
        public SalesOrder SalesOrder_Appointments {
            get {
                return GetRelatedEntity<SalesOrder>("SalesOrder_Appointments", null);
            }
            set {
                SetRelatedEntity("SalesOrder_Appointments", null, value);
            }
        }
        
        [AttributeLogicalName("transactioncurrencyid")]
        [RelationshipSchemaName("TransactionCurrency_Appointment")]
        public TransactionCurrency TransactionCurrency_Appointment {
            get {
                return GetRelatedEntity<TransactionCurrency>("TransactionCurrency_Appointment", null);
            }
            set {
                SetRelatedEntity("TransactionCurrency_Appointment", null, value);
            }
        }
        
        [AttributeLogicalName("activityid")]
        [RelationshipSchemaName("activity_pointer_appointment")]
        public ActivityPointer activity_pointer_appointment {
            get {
                return GetRelatedEntity<ActivityPointer>("activity_pointer_appointment", null);
            }
            set {
                SetRelatedEntity("activity_pointer_appointment", null, value);
            }
        }
        
        [RelationshipSchemaName("appointment_activity_parties")]
        public IEnumerable<ActivityParty> appointment_activity_parties {
            get {
                return GetRelatedEntities<ActivityParty>("appointment_activity_parties", null);
            }
            set {
                SetRelatedEntities("appointment_activity_parties", null, value);
            }
        }
        
        [RelationshipSchemaName("appointment_campaignresponse")]
        public IEnumerable<CampaignResponse> appointment_campaignresponse {
            get {
                return GetRelatedEntities<CampaignResponse>("appointment_campaignresponse", null);
            }
            set {
                SetRelatedEntities("appointment_campaignresponse", null, value);
            }
        }
        
        [RelationshipSchemaName("appointment_connections1")]
        public IEnumerable<Connection> appointment_connections1 {
            get {
                return GetRelatedEntities<Connection>("appointment_connections1", null);
            }
            set {
                SetRelatedEntities("appointment_connections1", null, value);
            }
        }
        
        [RelationshipSchemaName("appointment_connections2")]
        public IEnumerable<Connection> appointment_connections2 {
            get {
                return GetRelatedEntities<Connection>("appointment_connections2", null);
            }
            set {
                SetRelatedEntities("appointment_connections2", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("bookableresourcebooking_Appointments")]
        public BookableResourceBooking bookableresourcebooking_Appointments {
            get {
                return GetRelatedEntity<BookableResourceBooking>("bookableresourcebooking_Appointments", null);
            }
            set {
                SetRelatedEntity("bookableresourcebooking_Appointments", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("bookableresourcebookingheader_Appointments")]
        public BookableResourceBookingHeader bookableresourcebookingheader_Appointments {
            get {
                return GetRelatedEntity<BookableResourceBookingHeader>("bookableresourcebookingheader_Appointments", null);
            }
            set {
                SetRelatedEntity("bookableresourcebookingheader_Appointments", null, value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_appointment_activities")]
        public BusinessUnit business_unit_appointment_activities {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_appointment_activities", null);
            }
            set {
                SetRelatedEntity("business_unit_appointment_activities", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("dg_event_Appointments")]
        public dg_event dg_event_Appointments {
            get {
                return GetRelatedEntity<dg_event>("dg_event_Appointments", null);
            }
            set {
                SetRelatedEntity("dg_event_Appointments", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("dg_participant_Appointments")]
        public dg_participant dg_participant_Appointments {
            get {
                return GetRelatedEntity<dg_participant>("dg_participant_Appointments", null);
            }
            set {
                SetRelatedEntity("dg_participant_Appointments", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("entitlement_Appointments")]
        public Entitlement entitlement_Appointments {
            get {
                return GetRelatedEntity<Entitlement>("entitlement_Appointments", null);
            }
            set {
                SetRelatedEntity("entitlement_Appointments", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_appointment_createdby")]
        public SystemUser lk_appointment_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_appointment_createdby", null);
            }
            set {
                SetRelatedEntity("lk_appointment_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_appointment_createdonbehalfby")]
        public SystemUser lk_appointment_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_appointment_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_appointment_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_appointment_modifiedby")]
        public SystemUser lk_appointment_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_appointment_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_appointment_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_appointment_modifiedonbehalfby")]
        public SystemUser lk_appointment_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_appointment_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_appointment_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("slaid")]
        [RelationshipSchemaName("manualsla_appointment")]
        public SLA manualsla_appointment {
            get {
                return GetRelatedEntity<SLA>("manualsla_appointment", null);
            }
            set {
                SetRelatedEntity("manualsla_appointment", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("msdyn_agreement_Appointments")]
        public msdyn_agreement msdyn_agreement_Appointments {
            get {
                return GetRelatedEntity<msdyn_agreement>("msdyn_agreement_Appointments", null);
            }
            set {
                SetRelatedEntity("msdyn_agreement_Appointments", null, value);
            }
        }
        
        [RelationshipSchemaName("msdyn_appointment_bookableresourcebooking")]
        public IEnumerable<BookableResourceBooking> msdyn_appointment_bookableresourcebooking {
            get {
                return GetRelatedEntities<BookableResourceBooking>("msdyn_appointment_bookableresourcebooking", null);
            }
            set {
                SetRelatedEntities("msdyn_appointment_bookableresourcebooking", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("msdyn_postalbum_Appointments")]
        public msdyn_PostAlbum msdyn_postalbum_Appointments {
            get {
                return GetRelatedEntity<msdyn_PostAlbum>("msdyn_postalbum_Appointments", null);
            }
            set {
                SetRelatedEntity("msdyn_postalbum_Appointments", null, value);
            }
        }
        
        [AttributeLogicalName("seriesid")]
        [RelationshipSchemaName("recurringappointmentmaster_appointment")]
        public RecurringAppointmentMaster recurringappointmentmaster_appointment {
            get {
                return GetRelatedEntity<RecurringAppointmentMaster>("recurringappointmentmaster_appointment", null);
            }
            set {
                SetRelatedEntity("recurringappointmentmaster_appointment", null, value);
            }
        }
        
        [AttributeLogicalName("slainvokedid")]
        [RelationshipSchemaName("sla_appointment")]
        public SLA sla_appointment {
            get {
                return GetRelatedEntity<SLA>("sla_appointment", null);
            }
            set {
                SetRelatedEntity("sla_appointment", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_appointment")]
        public Team team_appointment {
            get {
                return GetRelatedEntity<Team>("team_appointment", null);
            }
            set {
                SetRelatedEntity("team_appointment", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_appointment")]
        public SystemUser user_appointment {
            get {
                return GetRelatedEntity<SystemUser>("user_appointment", null);
            }
            set {
                SetRelatedEntity("user_appointment", null, value);
            }
        }
        
        public static Appointment Retrieve(IOrganizationService service, Guid id, params Expression<Func<Appointment,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Resource that has capacity which can be allocated to work.</para>
    /// <para>Display Name: Bookable Resource</para>
    /// </summary>
    [EntityLogicalName("bookableresource")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class BookableResource : ExtendedEntity<BookableResourceState, BookableResource_StatusCode> {
        
        public const string EntityLogicalName = "bookableresource";
        
        public const int EntityTypeCode = 1150;
        
        public BookableResource() : 
                base(EntityLogicalName) {
        }
        
        public BookableResource(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("name");
            }
        }
        
        [AttributeLogicalName("bookableresourceid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("bookableresourceid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the resource.</para>
        /// <para>Display Name: Bookable Resource</para>
        /// </summary>
        [AttributeLogicalName("bookableresourceid")]
        [DisplayName("Bookable Resource")]
        public Guid? BookableResourceId {
            get {
                return GetAttributeValue<Guid?>("bookableresourceid");
            }
            set {
                SetId("bookableresourceid", value);
            }
        }
        
        /// <summary>
        /// <para>account_bookableresource_AccountId</para>
        /// <para>Display Name: Account</para>
        /// </summary>
        [AttributeLogicalName("accountid")]
        [DisplayName("Account")]
        public EntityReference AccountId {
            get {
                return GetAttributeValue<EntityReference>("accountid");
            }
            set {
                SetAttributeValue("accountid", value);
            }
        }
        
        /// <summary>
        /// <para>calendar_bookableresources</para>
        /// <para>Display Name: Calendar</para>
        /// </summary>
        [AttributeLogicalName("calendarid")]
        [DisplayName("Calendar")]
        public EntityReference CalendarId {
            get {
                return GetAttributeValue<EntityReference>("calendarid");
            }
            set {
                SetAttributeValue("calendarid", value);
            }
        }
        
        /// <summary>
        /// <para>contact_bookableresource_ContactId</para>
        /// <para>Display Name: Contact</para>
        /// </summary>
        [AttributeLogicalName("contactid")]
        [DisplayName("Contact")]
        public EntityReference ContactId {
            get {
                return GetAttributeValue<EntityReference>("contactid");
            }
            set {
                SetAttributeValue("contactid", value);
            }
        }
        
        /// <summary>
        /// <para>lk_bookableresource_createdby</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>lk_bookableresource_createdonbehalfby</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Exchange rate for the currency associated with the bookableresource with respect to the base currency.</para>
        /// <para>Display Name: ExchangeRate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("ExchangeRate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>lk_bookableresource_modifiedby</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>lk_bookableresource_modifiedonbehalfby</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Type the name of the resource.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string Name {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>owner_bookableresource</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>business_unit_bookableresource</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>team_bookableresource</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>user_bookableresource</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Type the name of the resource.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the process.</para>
        /// <para>Display Name: Process</para>
        /// </summary>
        [AttributeLogicalName("processid")]
        [DisplayName("Process")]
        public Guid? ProcessId {
            get {
                return GetAttributeValue<Guid?>("processid");
            }
            set {
                SetAttributeValue("processid", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the resource is a user, equipment, contact, account, generic resource or a group of resources.</para>
        /// <para>Display Name: Resource Type</para>
        /// </summary>
        [AttributeLogicalName("resourcetype")]
        [DisplayName("Resource Type")]
        public BookableResource_ResourceType? ResourceType {
            get {
                return GetOptionSetValue<BookableResource_ResourceType>("resourcetype");
            }
            set {
                SetOptionSetValue("resourcetype", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the stage.</para>
        /// <para>Display Name: Process Stage</para>
        /// </summary>
        [AttributeLogicalName("stageid")]
        [DisplayName("Process Stage")]
        public Guid? StageId {
            get {
                return GetAttributeValue<Guid?>("stageid");
            }
            set {
                SetAttributeValue("stageid", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the Bookable Resource</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public BookableResourceState? StateCode {
            get {
                return GetOptionSetValue<BookableResourceState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the Bookable Resource</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public BookableResource_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<BookableResource_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>Specifies the timezone for the resource's working hours.</para>
        /// <para>Display Name: Time Zone</para>
        /// </summary>
        [AttributeLogicalName("timezone")]
        [DisplayName("Time Zone")]
        [Range(-1500, 1500)]
        public int? TimeZone {
            get {
                return GetAttributeValue<int?>("timezone");
            }
            set {
                SetAttributeValue("timezone", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>TransactionCurrency_bookableresource</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Traversed Path</para>
        /// </summary>
        [AttributeLogicalName("traversedpath")]
        [DisplayName("Traversed Path")]
        [MaxLength(1250)]
        public string TraversedPath {
            get {
                return GetAttributeValue<string>("traversedpath");
            }
            set {
                SetAttributeValue("traversedpath", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>systemuser_bookableresource_UserId</para>
        /// <para>Display Name: User</para>
        /// </summary>
        [AttributeLogicalName("userid")]
        [DisplayName("User")]
        public EntityReference UserId {
            get {
                return GetAttributeValue<EntityReference>("userid");
            }
            set {
                SetAttributeValue("userid", value);
            }
        }
        
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>The number of bookings to drip on the Mobile . This field is disabled/enabled based on Enable Drip Scheduling field</para>
        /// <para>Display Name: Bookings To Drip</para>
        /// </summary>
        [AttributeLogicalName("msdyn_bookingstodrip")]
        [DisplayName("Bookings To Drip")]
        [Range(1, 50)]
        public int? msdyn_BookingsToDrip {
            get {
                return GetAttributeValue<int?>("msdyn_bookingstodrip");
            }
            set {
                SetAttributeValue("msdyn_bookingstodrip", value);
            }
        }
        
        /// <summary>
        /// <para>Crew Strategy</para>
        /// <para>Display Name: Crew Strategy</para>
        /// </summary>
        [AttributeLogicalName("msdyn_crewstrategy")]
        [DisplayName("Crew Strategy")]
        public msdyn_crewstrategy? msdyn_CrewStrategy {
            get {
                return GetOptionSetValue<msdyn_crewstrategy>("msdyn_crewstrategy");
            }
            set {
                SetOptionSetValue("msdyn_crewstrategy", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Derive Capacity From Group Members</para>
        /// </summary>
        [AttributeLogicalName("msdyn_derivecapacity")]
        [DisplayName("Derive Capacity From Group Members")]
        public bool? msdyn_DeriveCapacity {
            get {
                return GetAttributeValue<bool?>("msdyn_derivecapacity");
            }
            set {
                SetAttributeValue("msdyn_derivecapacity", value);
            }
        }
        
        /// <summary>
        /// <para>Specify if this resource should be enabled for availablity search.</para>
        /// <para>Display Name: Enable for Availability Search</para>
        /// </summary>
        [AttributeLogicalName("msdyn_displayonscheduleassistant")]
        [DisplayName("Enable for Availability Search")]
        public bool? msdyn_DisplayOnScheduleAssistant {
            get {
                return GetAttributeValue<bool?>("msdyn_displayonscheduleassistant");
            }
            set {
                SetAttributeValue("msdyn_displayonscheduleassistant", value);
            }
        }
        
        /// <summary>
        /// <para>Specify if this resource should be displayed on the schedule board.</para>
        /// <para>Display Name: Display On Schedule Board</para>
        /// </summary>
        [AttributeLogicalName("msdyn_displayonscheduleboard")]
        [DisplayName("Display On Schedule Board")]
        public bool? msdyn_DisplayOnScheduleBoard {
            get {
                return GetAttributeValue<bool?>("msdyn_displayonscheduleboard");
            }
            set {
                SetAttributeValue("msdyn_displayonscheduleboard", value);
            }
        }
        
        /// <summary>
        /// <para>Enable appointments to display on the new schedule board and be considered in availability search for resources.</para>
        /// <para>Display Name: Include Appointments</para>
        /// </summary>
        [AttributeLogicalName("msdyn_enableappointments")]
        [DisplayName("Include Appointments")]
        public msdyn_enableappointmentsoption? msdyn_EnableAppointments {
            get {
                return GetOptionSetValue<msdyn_enableappointmentsoption>("msdyn_enableappointments");
            }
            set {
                SetOptionSetValue("msdyn_enableappointments", value);
            }
        }
        
        /// <summary>
        /// <para>Enables drip scheduling on the mobile app.</para>
        /// <para>Display Name: Enable Drip Scheduling</para>
        /// </summary>
        [AttributeLogicalName("msdyn_enabledripscheduling")]
        [DisplayName("Enable Drip Scheduling")]
        public bool? msdyn_EnableDripScheduling {
            get {
                return GetAttributeValue<bool?>("msdyn_enabledripscheduling");
            }
            set {
                SetAttributeValue("msdyn_enabledripscheduling", value);
            }
        }
        
        /// <summary>
        /// <para>This only applies when directly calling the API. It does not apply when the Book button is clicked on the Schedule Board or on any schedulable entity.</para>
        /// <para>Display Name: Include Outlook Free/Busy in Search Resource Availability API</para>
        /// </summary>
        [AttributeLogicalName("msdyn_enableoutlookschedules")]
        [DisplayName("Include Outlook Free/Busy in Search Resource Availability API")]
        public msdyn_enableappointmentsoption? msdyn_EnableOutlookSchedules {
            get {
                return GetOptionSetValue<msdyn_enableappointmentsoption>("msdyn_enableoutlookschedules");
            }
            set {
                SetOptionSetValue("msdyn_enableoutlookschedules", value);
            }
        }
        
        /// <summary>
        /// <para>Set this field to Yes if this resource requires access to the legacy Field Service Mobile application.</para>
        /// <para>Display Name: Enable for Field Service Mobile (legacy Xamarin app)</para>
        /// </summary>
        [AttributeLogicalName("msdyn_enabledforfieldservicemobile")]
        [DisplayName("Enable for Field Service Mobile (legacy Xamarin app)")]
        public bool? msdyn_EnabledForFieldServiceMobile {
            get {
                return GetAttributeValue<bool?>("msdyn_enabledforfieldservicemobile");
            }
            set {
                SetAttributeValue("msdyn_enabledforfieldservicemobile", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the default ending location type when booking daily schedules for this resource.</para>
        /// <para>Display Name: End Location</para>
        /// </summary>
        [AttributeLogicalName("msdyn_endlocation")]
        [DisplayName("End Location")]
        public msdyn_workstartlocationtype? msdyn_EndLocation {
            get {
                return GetOptionSetValue<msdyn_workstartlocationtype>("msdyn_endlocation");
            }
            set {
                SetOptionSetValue("msdyn_endlocation", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Generic Type (Deprecated)</para>
        /// </summary>
        [AttributeLogicalName("msdyn_generictype")]
        [DisplayName("Generic Type (Deprecated)")]
        public msdyn_generictype? msdyn_GenericType {
            get {
                return GetOptionSetValue<msdyn_generictype>("msdyn_generictype");
            }
            set {
                SetOptionSetValue("msdyn_generictype", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Hourly Rate</para>
        /// </summary>
        [AttributeLogicalName("msdyn_hourlyrate")]
        [DisplayName("Hourly Rate")]
        public decimal? msdyn_HourlyRate {
            get {
                return GetMoneyValue("msdyn_hourlyrate");
            }
            set {
                SetMoneyValue("msdyn_hourlyrate", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Internal Flags</para>
        /// </summary>
        [AttributeLogicalName("msdyn_internalflags")]
        [DisplayName("Internal Flags")]
        public string msdyn_InternalFlags {
            get {
                return GetAttributeValue<string>("msdyn_internalflags");
            }
            set {
                SetAttributeValue("msdyn_internalflags", value);
            }
        }
        
        /// <summary>
        /// <para>The location latitude.</para>
        /// <para>Display Name: Latitude</para>
        /// </summary>
        [AttributeLogicalName("msdyn_latitude")]
        [DisplayName("Latitude")]
        public double? msdyn_Latitude {
            get {
                return GetAttributeValue<double?>("msdyn_latitude");
            }
            set {
                SetAttributeValue("msdyn_latitude", value);
            }
        }
        
        /// <summary>
        /// <para>The location longitude.</para>
        /// <para>Display Name: Longitude</para>
        /// </summary>
        [AttributeLogicalName("msdyn_longitude")]
        [DisplayName("Longitude")]
        public double? msdyn_Longitude {
            get {
                return GetAttributeValue<double?>("msdyn_longitude");
            }
            set {
                SetAttributeValue("msdyn_longitude", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the pool is an account, contact, user, equipment or a facility of resources.</para>
        /// <para>Display Name: Pool Type</para>
        /// </summary>
        [AttributeLogicalName("msdyn_pooltype")]
        [DisplayName("Pool Type")]
        public IEnumerable<msdyn_pooltype> msdyn_PoolType {
            get {
                return GetOptionSetCollectionValue<msdyn_pooltype>("msdyn_pooltype");
            }
            set {
                SetOptionSetCollectionValue("msdyn_pooltype", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Primary Email</para>
        /// </summary>
        [AttributeLogicalName("msdyn_primaryemail")]
        [DisplayName("Primary Email")]
        [MaxLength(100)]
        public string msdyn_PrimaryEMail {
            get {
                return GetAttributeValue<string>("msdyn_primaryemail");
            }
            set {
                SetAttributeValue("msdyn_primaryemail", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the default starting location type when booking daily schedules for this resource.</para>
        /// <para>Display Name: Start Location</para>
        /// </summary>
        [AttributeLogicalName("msdyn_startlocation")]
        [DisplayName("Start Location")]
        public msdyn_workstartlocationtype? msdyn_StartLocation {
            get {
                return GetOptionSetValue<msdyn_workstartlocationtype>("msdyn_startlocation");
            }
            set {
                SetOptionSetValue("msdyn_startlocation", value);
            }
        }
        
        /// <summary>
        /// <para>Specifies if approval required for Time Off Requests.</para>
        /// <para>Display Name: Time Off Approval Required</para>
        /// </summary>
        [AttributeLogicalName("msdyn_timeoffapprovalrequired")]
        [DisplayName("Time Off Approval Required")]
        public bool? msdyn_TimeOffApprovalRequired {
            get {
                return GetAttributeValue<bool?>("msdyn_timeoffapprovalrequired");
            }
            set {
                SetAttributeValue("msdyn_timeoffapprovalrequired", value);
            }
        }
        
        /// <summary>
        /// <para>Default Warehouse for this resource.</para>
        /// <para>Display Name: Warehouse</para>
        /// </summary>
        [AttributeLogicalName("msdyn_warehouse")]
        [DisplayName("Warehouse")]
        public EntityReference msdyn_Warehouse {
            get {
                return GetAttributeValue<EntityReference>("msdyn_warehouse");
            }
            set {
                SetAttributeValue("msdyn_warehouse", value);
            }
        }
        
        /// <summary>
        /// <para>Value of the Hourly Rate in base currency.</para>
        /// <para>Display Name: Hourly Rate (Base)</para>
        /// </summary>
        [AttributeLogicalName("msdyn_hourlyrate_base")]
        [DisplayName("Hourly Rate (Base)")]
        public decimal? msdyn_hourlyrate_Base {
            get {
                return GetMoneyValue("msdyn_hourlyrate_base");
            }
        }
        
        /// <summary>
        /// <para>The location timestamp.</para>
        /// <para>Display Name: Location Timestamp</para>
        /// </summary>
        [AttributeLogicalName("msdyn_locationtimestamp")]
        [DisplayName("Location Timestamp")]
        public DateTime? msdyn_locationtimestamp {
            get {
                return GetAttributeValue<DateTime?>("msdyn_locationtimestamp");
            }
            set {
                SetAttributeValue("msdyn_locationtimestamp", value);
            }
        }
        
        /// <summary>
        /// <para>Organizational Unit that resource belong to</para>
        /// <para>Display Name: Organizational Unit</para>
        /// </summary>
        [AttributeLogicalName("msdyn_organizationalunit")]
        [DisplayName("Organizational Unit")]
        public EntityReference msdyn_organizationalunit {
            get {
                return GetAttributeValue<EntityReference>("msdyn_organizationalunit");
            }
            set {
                SetAttributeValue("msdyn_organizationalunit", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the target utilization for the resource.</para>
        /// <para>Display Name: Target Utilization</para>
        /// </summary>
        [AttributeLogicalName("msdyn_targetutilization")]
        [DisplayName("Target Utilization")]
        [Range(1, 100)]
        public int? msdyn_targetutilization {
            get {
                return GetAttributeValue<int?>("msdyn_targetutilization");
            }
            set {
                SetAttributeValue("msdyn_targetutilization", value);
            }
        }
        
        [RelationshipSchemaName("BookableResource_SyncErrors")]
        public IEnumerable<SyncError> BookableResource_SyncErrors {
            get {
                return GetRelatedEntities<SyncError>("BookableResource_SyncErrors", null);
            }
            set {
                SetRelatedEntities("BookableResource_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("transactioncurrencyid")]
        [RelationshipSchemaName("TransactionCurrency_bookableresource")]
        public TransactionCurrency TransactionCurrency_bookableresource {
            get {
                return GetRelatedEntity<TransactionCurrency>("TransactionCurrency_bookableresource", null);
            }
            set {
                SetRelatedEntity("TransactionCurrency_bookableresource", null, value);
            }
        }
        
        [AttributeLogicalName("accountid")]
        [RelationshipSchemaName("account_bookableresource_AccountId")]
        public Account account_bookableresource_AccountId {
            get {
                return GetRelatedEntity<Account>("account_bookableresource_AccountId", null);
            }
            set {
                SetRelatedEntity("account_bookableresource_AccountId", null, value);
            }
        }
        
        [RelationshipSchemaName("bookableresource_Teams")]
        public IEnumerable<Team> bookableresource_Teams {
            get {
                return GetRelatedEntities<Team>("bookableresource_Teams", null);
            }
            set {
                SetRelatedEntities("bookableresource_Teams", null, value);
            }
        }
        
        [RelationshipSchemaName("bookableresource_bookableresourcebooking_Resource")]
        public IEnumerable<BookableResourceBooking> bookableresource_bookableresourcebooking_Resource {
            get {
                return GetRelatedEntities<BookableResourceBooking>("bookableresource_bookableresourcebooking_Resource", null);
            }
            set {
                SetRelatedEntities("bookableresource_bookableresourcebooking_Resource", null, value);
            }
        }
        
        [RelationshipSchemaName("bookableresource_bookableresourcecategoryassn_Resource")]
        public IEnumerable<BookableResourceCategoryAssn> bookableresource_bookableresourcecategoryassn_Resource {
            get {
                return GetRelatedEntities<BookableResourceCategoryAssn>("bookableresource_bookableresourcecategoryassn_Resource", null);
            }
            set {
                SetRelatedEntities("bookableresource_bookableresourcecategoryassn_Resource", null, value);
            }
        }
        
        [RelationshipSchemaName("bookableresource_bookableresourcecharacteristic_Resource")]
        public IEnumerable<BookableResourceCharacteristic> bookableresource_bookableresourcecharacteristic_Resource {
            get {
                return GetRelatedEntities<BookableResourceCharacteristic>("bookableresource_bookableresourcecharacteristic_Resource", null);
            }
            set {
                SetRelatedEntities("bookableresource_bookableresourcecharacteristic_Resource", null, value);
            }
        }
        
        [RelationshipSchemaName("bookableresource_bookableresourcegroup_ChildResource")]
        public IEnumerable<BookableResourceGroup> bookableresource_bookableresourcegroup_ChildResource {
            get {
                return GetRelatedEntities<BookableResourceGroup>("bookableresource_bookableresourcegroup_ChildResource", null);
            }
            set {
                SetRelatedEntities("bookableresource_bookableresourcegroup_ChildResource", null, value);
            }
        }
        
        [RelationshipSchemaName("bookableresource_bookableresourcegroup_ParentResource")]
        public IEnumerable<BookableResourceGroup> bookableresource_bookableresourcegroup_ParentResource {
            get {
                return GetRelatedEntities<BookableResourceGroup>("bookableresource_bookableresourcegroup_ParentResource", null);
            }
            set {
                SetRelatedEntities("bookableresource_bookableresourcegroup_ParentResource", null, value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_bookableresource")]
        public BusinessUnit business_unit_bookableresource {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_bookableresource", null);
            }
            set {
                SetRelatedEntity("business_unit_bookableresource", null, value);
            }
        }
        
        [AttributeLogicalName("calendarid")]
        [RelationshipSchemaName("calendar_bookableresources")]
        public Calendar calendar_bookableresources {
            get {
                return GetRelatedEntity<Calendar>("calendar_bookableresources", null);
            }
            set {
                SetRelatedEntity("calendar_bookableresources", null, value);
            }
        }
        
        [AttributeLogicalName("contactid")]
        [RelationshipSchemaName("contact_bookableresource_ContactId")]
        public Contact contact_bookableresource_ContactId {
            get {
                return GetRelatedEntity<Contact>("contact_bookableresource_ContactId", null);
            }
            set {
                SetRelatedEntity("contact_bookableresource_ContactId", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_bookableresource_createdby")]
        public SystemUser lk_bookableresource_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_bookableresource_createdby", null);
            }
            set {
                SetRelatedEntity("lk_bookableresource_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_bookableresource_createdonbehalfby")]
        public SystemUser lk_bookableresource_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_bookableresource_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_bookableresource_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_bookableresource_modifiedby")]
        public SystemUser lk_bookableresource_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_bookableresource_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_bookableresource_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_bookableresource_modifiedonbehalfby")]
        public SystemUser lk_bookableresource_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_bookableresource_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_bookableresource_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("msdyn_bookableresource_account_PreferredResource")]
        public IEnumerable<Account> msdyn_bookableresource_account_PreferredResource {
            get {
                return GetRelatedEntities<Account>("msdyn_bookableresource_account_PreferredResource", null);
            }
            set {
                SetRelatedEntities("msdyn_bookableresource_account_PreferredResource", null, value);
            }
        }
        
        [RelationshipSchemaName("msdyn_bookableresource_bookableresourcebooking_Crew")]
        public IEnumerable<BookableResourceBooking> msdyn_bookableresource_bookableresourcebooking_Crew {
            get {
                return GetRelatedEntities<BookableResourceBooking>("msdyn_bookableresource_bookableresourcebooking_Crew", null);
            }
            set {
                SetRelatedEntities("msdyn_bookableresource_bookableresourcebooking_Crew", null, value);
            }
        }
        
        [RelationshipSchemaName("msdyn_bookableresource_bookableresourcebooking_ResourceGroup")]
        public IEnumerable<BookableResourceBooking> msdyn_bookableresource_bookableresourcebooking_ResourceGroup {
            get {
                return GetRelatedEntities<BookableResourceBooking>("msdyn_bookableresource_bookableresourcebooking_ResourceGroup", null);
            }
            set {
                SetRelatedEntities("msdyn_bookableresource_bookableresourcebooking_ResourceGroup", null, value);
            }
        }
        
        [RelationshipSchemaName("msdyn_bookableresource_bookableresourcebookingheader_bookableresourceid")]
        public IEnumerable<BookableResourceBookingHeader> msdyn_bookableresource_bookableresourcebookingheader_bookableresourceid {
            get {
                return GetRelatedEntities<BookableResourceBookingHeader>("msdyn_bookableresource_bookableresourcebookingheader_bookableresourceid", null);
            }
            set {
                SetRelatedEntities("msdyn_bookableresource_bookableresourcebookingheader_bookableresourceid", null, value);
            }
        }
        
        [AttributeLogicalName("userid")]
        [RelationshipSchemaName("systemuser_bookableresource_UserId")]
        public SystemUser systemuser_bookableresource_UserId {
            get {
                return GetRelatedEntity<SystemUser>("systemuser_bookableresource_UserId", null);
            }
            set {
                SetRelatedEntity("systemuser_bookableresource_UserId", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_bookableresource")]
        public Team team_bookableresource {
            get {
                return GetRelatedEntity<Team>("team_bookableresource", null);
            }
            set {
                SetRelatedEntity("team_bookableresource", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_bookableresource")]
        public SystemUser user_bookableresource {
            get {
                return GetRelatedEntity<SystemUser>("user_bookableresource", null);
            }
            set {
                SetRelatedEntity("user_bookableresource", null, value);
            }
        }
        
        public static BookableResource Retrieve(IOrganizationService service, Guid id, params Expression<Func<BookableResource,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Represents the line details of a resource booking.</para>
    /// <para>Display Name: Bookable Resource Booking</para>
    /// </summary>
    [EntityLogicalName("bookableresourcebooking")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class BookableResourceBooking : ExtendedEntity<BookableResourceBookingState, BookableResourceBooking_StatusCode> {
        
        public const string EntityLogicalName = "bookableresourcebooking";
        
        public const int EntityTypeCode = 1145;
        
        public BookableResourceBooking() : 
                base(EntityLogicalName) {
        }
        
        public BookableResourceBooking(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("name");
            }
        }
        
        [AttributeLogicalName("bookableresourcebookingid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("bookableresourcebookingid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the resource booking.</para>
        /// <para>Display Name: Bookable Resource Booking</para>
        /// </summary>
        [AttributeLogicalName("bookableresourcebookingid")]
        [DisplayName("Bookable Resource Booking")]
        public Guid? BookableResourceBookingId {
            get {
                return GetAttributeValue<Guid?>("bookableresourcebookingid");
            }
            set {
                SetId("bookableresourcebookingid", value);
            }
        }
        
        /// <summary>
        /// <para>bookingstatus_bookableresourcebooking_BookingStatus</para>
        /// <para>Display Name: Booking Status</para>
        /// </summary>
        [AttributeLogicalName("bookingstatus")]
        [DisplayName("Booking Status")]
        public EntityReference BookingStatus {
            get {
                return GetAttributeValue<EntityReference>("bookingstatus");
            }
            set {
                SetAttributeValue("bookingstatus", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the booking is solid or liquid. Solid bookings are firm and cannot be changed whereas liquid bookings can be changed.</para>
        /// <para>Display Name: Booking Type</para>
        /// </summary>
        [AttributeLogicalName("bookingtype")]
        [DisplayName("Booking Type")]
        public BookableResourceBooking_BookingType? BookingType {
            get {
                return GetOptionSetValue<BookableResourceBooking_BookingType>("bookingtype");
            }
            set {
                SetOptionSetValue("bookingtype", value);
            }
        }
        
        /// <summary>
        /// <para>lk_bookableresourcebooking_createdby</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>lk_bookableresourcebooking_createdonbehalfby</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Enter the duration of the booking.</para>
        /// <para>Display Name: Duration</para>
        /// </summary>
        [AttributeLogicalName("duration")]
        [DisplayName("Duration")]
        [Range(0, 2147483647)]
        public int? Duration {
            get {
                return GetAttributeValue<int?>("duration");
            }
            set {
                SetAttributeValue("duration", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the end date and time of the booking.</para>
        /// <para>Display Name: End Time</para>
        /// </summary>
        [AttributeLogicalName("endtime")]
        [DisplayName("End Time")]
        public DateTime? EndTime {
            get {
                return GetAttributeValue<DateTime?>("endtime");
            }
            set {
                SetAttributeValue("endtime", value);
            }
        }
        
        /// <summary>
        /// <para>Exchange rate for the currency associated with the bookableresourcebooking with respect to the base currency.</para>
        /// <para>Display Name: ExchangeRate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("ExchangeRate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>bookableresourcebookingheader_bookableresourcebooking_Header</para>
        /// <para>Display Name: Header</para>
        /// </summary>
        [AttributeLogicalName("header")]
        [DisplayName("Header")]
        public EntityReference Header {
            get {
                return GetAttributeValue<EntityReference>("header");
            }
            set {
                SetAttributeValue("header", value);
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>lk_bookableresourcebooking_modifiedby</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>lk_bookableresourcebooking_modifiedonbehalfby</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Type a name for the booking.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string Name {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>owner_bookableresourcebooking</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>business_unit_bookableresourcebooking</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>team_bookableresourcebooking</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>user_bookableresourcebooking</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Type a name for the booking.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the process.</para>
        /// <para>Display Name: Process</para>
        /// </summary>
        [AttributeLogicalName("processid")]
        [DisplayName("Process")]
        public Guid? ProcessId {
            get {
                return GetAttributeValue<Guid?>("processid");
            }
            set {
                SetAttributeValue("processid", value);
            }
        }
        
        /// <summary>
        /// <para>bookableresource_bookableresourcebooking_Resource</para>
        /// <para>Display Name: Resource</para>
        /// </summary>
        [AttributeLogicalName("resource")]
        [DisplayName("Resource")]
        public EntityReference Resource {
            get {
                return GetAttributeValue<EntityReference>("resource");
            }
            set {
                SetAttributeValue("resource", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the stage.</para>
        /// <para>Display Name: Process Stage</para>
        /// </summary>
        [AttributeLogicalName("stageid")]
        [DisplayName("Process Stage")]
        public Guid? StageId {
            get {
                return GetAttributeValue<Guid?>("stageid");
            }
            set {
                SetAttributeValue("stageid", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the start date and time of the booking.</para>
        /// <para>Display Name: Start Time</para>
        /// </summary>
        [AttributeLogicalName("starttime")]
        [DisplayName("Start Time")]
        public DateTime? StartTime {
            get {
                return GetAttributeValue<DateTime?>("starttime");
            }
            set {
                SetAttributeValue("starttime", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the Bookable Resource Booking</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public BookableResourceBookingState? StateCode {
            get {
                return GetOptionSetValue<BookableResourceBookingState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the Bookable Resource Booking</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public BookableResourceBooking_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<BookableResourceBooking_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>TransactionCurrency_bookableresourcebooking</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Traversed Path</para>
        /// </summary>
        [AttributeLogicalName("traversedpath")]
        [DisplayName("Traversed Path")]
        [MaxLength(1250)]
        public string TraversedPath {
            get {
                return GetAttributeValue<string>("traversedpath");
            }
            set {
                SetAttributeValue("traversedpath", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Defines whether this booking accepts changes propagated as cascading changes</para>
        /// <para>Display Name: Accept Cascade Crew Changes</para>
        /// </summary>
        [AttributeLogicalName("msdyn_acceptcascadecrewchanges")]
        [DisplayName("Accept Cascade Crew Changes")]
        public bool? msdyn_AcceptCascadeCrewChanges {
            get {
                return GetAttributeValue<bool?>("msdyn_acceptcascadecrewchanges");
            }
            set {
                SetAttributeValue("msdyn_acceptcascadecrewchanges", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the time that work started.</para>
        /// <para>Display Name: Actual Arrival Time</para>
        /// </summary>
        [AttributeLogicalName("msdyn_actualarrivaltime")]
        [DisplayName("Actual Arrival Time")]
        public DateTime? msdyn_ActualArrivalTime {
            get {
                return GetAttributeValue<DateTime?>("msdyn_actualarrivaltime");
            }
            set {
                SetAttributeValue("msdyn_actualarrivaltime", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the total travel duration. Calculated based on the difference between the Bookable Resource Booking's start time and actual arrival time.</para>
        /// <para>Display Name: Actual Travel Duration</para>
        /// </summary>
        [AttributeLogicalName("msdyn_actualtravelduration")]
        [DisplayName("Actual Travel Duration")]
        [Range(0, 2147483647)]
        public int? msdyn_ActualTravelDuration {
            get {
                return GetAttributeValue<int?>("msdyn_actualtravelduration");
            }
            set {
                SetAttributeValue("msdyn_actualtravelduration", value);
            }
        }
        
        /// <summary>
        /// <para>Agreement Booking Date from where this Booking was generated</para>
        /// <para>Display Name: Agreement Booking Date</para>
        /// </summary>
        [AttributeLogicalName("msdyn_agreementbookingdate")]
        [DisplayName("Agreement Booking Date")]
        public EntityReference msdyn_AgreementBookingDate {
            get {
                return GetAttributeValue<EntityReference>("msdyn_agreementbookingdate");
            }
            set {
                SetAttributeValue("msdyn_agreementbookingdate", value);
            }
        }
        
        /// <summary>
        /// <para>Allow the time of this booking to be displayed on the schedule assistant as available.</para>
        /// <para>Display Name: Allow Overlapping</para>
        /// </summary>
        [AttributeLogicalName("msdyn_allowoverlapping")]
        [DisplayName("Allow Overlapping")]
        public bool? msdyn_AllowOverlapping {
            get {
                return GetAttributeValue<bool?>("msdyn_allowoverlapping");
            }
            set {
                SetAttributeValue("msdyn_allowoverlapping", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for Appointment associated with Bookable Resource Booking.</para>
        /// <para>Display Name: Appointment Booking</para>
        /// </summary>
        [AttributeLogicalName("msdyn_appointmentbookingid")]
        [DisplayName("Appointment Booking")]
        public EntityReference msdyn_AppointmentBookingId {
            get {
                return GetAttributeValue<EntityReference>("msdyn_appointmentbookingid");
            }
            set {
                SetAttributeValue("msdyn_appointmentbookingid", value);
            }
        }
        
        /// <summary>
        /// <para>The Base travel duration indicates the travel time without traffic</para>
        /// <para>Display Name: Base Travel Duration</para>
        /// </summary>
        [AttributeLogicalName("msdyn_basetravelduration")]
        [DisplayName("Base Travel Duration")]
        [Range(0, 2147483647)]
        public int? msdyn_BaseTravelDuration {
            get {
                return GetAttributeValue<int?>("msdyn_basetravelduration");
            }
            set {
                SetAttributeValue("msdyn_basetravelduration", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the method used to create this booking.</para>
        /// <para>Display Name: Booking Method</para>
        /// </summary>
        [AttributeLogicalName("msdyn_bookingmethod")]
        [DisplayName("Booking Method")]
        public msdyn_resourceschedulesource? msdyn_BookingMethod {
            get {
                return GetOptionSetValue<msdyn_resourceschedulesource>("msdyn_bookingmethod");
            }
            set {
                SetOptionSetValue("msdyn_bookingmethod", value);
            }
        }
        
        /// <summary>
        /// <para>A unique identifier for the booking setup metadata that is associated with a bookable resource booking.</para>
        /// <para>Display Name: Booking Setup Metadata</para>
        /// </summary>
        [AttributeLogicalName("msdyn_bookingsetupmetadataid")]
        [DisplayName("Booking Setup Metadata")]
        public EntityReference msdyn_BookingSetupMetadataId {
            get {
                return GetAttributeValue<EntityReference>("msdyn_bookingsetupmetadataid");
            }
            set {
                SetAttributeValue("msdyn_bookingsetupmetadataid", value);
            }
        }
        
        /// <summary>
        /// <para>Defines whether changing any of the following fields (Start Time, End Time, Status) should cascade the changes to other bookings on this requirement that have the same start and end time.</para>
        /// <para>Display Name: Cascade Crew Changes</para>
        /// </summary>
        [AttributeLogicalName("msdyn_cascadecrewchanges")]
        [DisplayName("Cascade Crew Changes")]
        public bool? msdyn_CascadeCrewChanges {
            get {
                return GetAttributeValue<bool?>("msdyn_cascadecrewchanges");
            }
            set {
                SetAttributeValue("msdyn_cascadecrewchanges", value);
            }
        }
        
        /// <summary>
        /// <para>This field is populated by the Field Service solution to define to which crew a booking is connected.</para>
        /// <para>Display Name: Crew</para>
        /// </summary>
        [AttributeLogicalName("msdyn_crew")]
        [DisplayName("Crew")]
        public EntityReference msdyn_Crew {
            get {
                return GetAttributeValue<EntityReference>("msdyn_crew");
            }
            set {
                SetAttributeValue("msdyn_crew", value);
            }
        }
        
        /// <summary>
        /// <para>Crew Member Type</para>
        /// <para>Display Name: Crew Member Type</para>
        /// </summary>
        [AttributeLogicalName("msdyn_crewmembertype")]
        [DisplayName("Crew Member Type")]
        public msdyn_crewmembertype? msdyn_CrewMemberType {
            get {
                return GetOptionSetValue<msdyn_crewmembertype>("msdyn_crewmembertype");
            }
            set {
                SetOptionSetValue("msdyn_crewmembertype", value);
            }
        }
        
        /// <summary>
        /// <para>Estimated Arrival Time</para>
        /// <para>Display Name: Estimated Arrival Time</para>
        /// </summary>
        [AttributeLogicalName("msdyn_estimatedarrivaltime")]
        [DisplayName("Estimated Arrival Time")]
        public DateTime? msdyn_EstimatedArrivalTime {
            get {
                return GetAttributeValue<DateTime?>("msdyn_estimatedarrivaltime");
            }
            set {
                SetAttributeValue("msdyn_estimatedarrivaltime", value);
            }
        }
        
        /// <summary>
        /// <para>Estimated Travel Duration</para>
        /// <para>Display Name: Estimated Travel Duration</para>
        /// </summary>
        [AttributeLogicalName("msdyn_estimatedtravelduration")]
        [DisplayName("Estimated Travel Duration")]
        [Range(0, 2147483647)]
        public int? msdyn_EstimatedTravelDuration {
            get {
                return GetAttributeValue<int?>("msdyn_estimatedtravelduration");
            }
            set {
                SetAttributeValue("msdyn_estimatedtravelduration", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Internal Flags</para>
        /// </summary>
        [AttributeLogicalName("msdyn_internalflags")]
        [DisplayName("Internal Flags")]
        public string msdyn_InternalFlags {
            get {
                return GetAttributeValue<string>("msdyn_internalflags");
            }
            set {
                SetAttributeValue("msdyn_internalflags", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Latitude</para>
        /// </summary>
        [AttributeLogicalName("msdyn_latitude")]
        [DisplayName("Latitude")]
        public double? msdyn_Latitude {
            get {
                return GetAttributeValue<double?>("msdyn_latitude");
            }
            set {
                SetAttributeValue("msdyn_latitude", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Longitude</para>
        /// </summary>
        [AttributeLogicalName("msdyn_longitude")]
        [DisplayName("Longitude")]
        public double? msdyn_Longitude {
            get {
                return GetAttributeValue<double?>("msdyn_longitude");
            }
            set {
                SetAttributeValue("msdyn_longitude", value);
            }
        }
        
        /// <summary>
        /// <para>In this field you can enter the total miles the resource drove to the job site</para>
        /// <para>Display Name: Miles Traveled</para>
        /// </summary>
        [AttributeLogicalName("msdyn_milestraveled")]
        [DisplayName("Miles Traveled")]
        public double? msdyn_MilesTraveled {
            get {
                return GetAttributeValue<double?>("msdyn_milestraveled");
            }
            set {
                SetAttributeValue("msdyn_milestraveled", value);
            }
        }
        
        /// <summary>
        /// <para>Internal Use. This field is used to capture the time when the Booking was updated on mobile offline.</para>
        /// <para>Display Name: Offline Timestamp</para>
        /// </summary>
        [AttributeLogicalName("msdyn_offlinetimestamp")]
        [DisplayName("Offline Timestamp")]
        public DateTime? msdyn_OfflineTimestamp {
            get {
                return GetAttributeValue<DateTime?>("msdyn_offlinetimestamp");
            }
            set {
                SetAttributeValue("msdyn_offlinetimestamp", value);
            }
        }
        
        /// <summary>
        /// <para>Prevents time stamp creation if the time stamp was already created on a mobile device.</para>
        /// <para>Display Name: Prevent Timestamp Creation</para>
        /// </summary>
        [AttributeLogicalName("msdyn_preventtimestampcreation")]
        [DisplayName("Prevent Timestamp Creation")]
        public bool? msdyn_PreventTimestampCreation {
            get {
                return GetAttributeValue<bool?>("msdyn_preventtimestampcreation");
            }
            set {
                SetAttributeValue("msdyn_preventtimestampcreation", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for Resource associated with Resource Booking</para>
        /// <para>Display Name: Resource Group</para>
        /// </summary>
        [AttributeLogicalName("msdyn_resourcegroup")]
        [DisplayName("Resource Group")]
        public EntityReference msdyn_ResourceGroup {
            get {
                return GetAttributeValue<EntityReference>("msdyn_resourcegroup");
            }
            set {
                SetAttributeValue("msdyn_resourcegroup", value);
            }
        }
        
        /// <summary>
        /// <para>Resource Requirement</para>
        /// <para>Display Name: Resource Requirement</para>
        /// </summary>
        [AttributeLogicalName("msdyn_resourcerequirement")]
        [DisplayName("Resource Requirement")]
        public EntityReference msdyn_ResourceRequirement {
            get {
                return GetAttributeValue<EntityReference>("msdyn_resourcerequirement");
            }
            set {
                SetAttributeValue("msdyn_resourcerequirement", value);
            }
        }
        
        /// <summary>
        /// <para>This field is used for capturing signature on Mobile (using the Pen Control)</para>
        /// <para>Display Name: Signature</para>
        /// </summary>
        [AttributeLogicalName("msdyn_signature")]
        [DisplayName("Signature")]
        public string msdyn_Signature {
            get {
                return GetAttributeValue<string>("msdyn_signature");
            }
            set {
                SetAttributeValue("msdyn_signature", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the automatically generated text of the time slot on the schedule board.</para>
        /// <para>Display Name: Slot Text</para>
        /// </summary>
        [AttributeLogicalName("msdyn_slottext")]
        [DisplayName("Slot Text")]
        public string msdyn_SlotText {
            get {
                return GetAttributeValue<string>("msdyn_slottext");
            }
            set {
                SetAttributeValue("msdyn_slottext", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Time Group Detail Selected</para>
        /// </summary>
        [AttributeLogicalName("msdyn_timegroupdetailselected")]
        [DisplayName("Time Group Detail Selected")]
        public EntityReference msdyn_TimeGroupDetailSelected {
            get {
                return GetAttributeValue<EntityReference>("msdyn_timegroupdetailselected");
            }
            set {
                SetAttributeValue("msdyn_timegroupdetailselected", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the total billable duration. If you leave this field blank the system automatically determines the billable duration by calculating the resource journal details.</para>
        /// <para>Display Name: Total Billable Duration</para>
        /// </summary>
        [AttributeLogicalName("msdyn_totalbillableduration")]
        [DisplayName("Total Billable Duration")]
        [Range(0, 2147483647)]
        public int? msdyn_TotalBillableDuration {
            get {
                return GetAttributeValue<int?>("msdyn_totalbillableduration");
            }
            set {
                SetAttributeValue("msdyn_totalbillableduration", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the total break duration. If you leave this field blank the system automatically determines the break duration by calculating the resource journal details.</para>
        /// <para>Display Name: Total Break Duration</para>
        /// </summary>
        [AttributeLogicalName("msdyn_totalbreakduration")]
        [DisplayName("Total Break Duration")]
        [Range(0, 2147483647)]
        public int? msdyn_TotalBreakDuration {
            get {
                return GetAttributeValue<int?>("msdyn_totalbreakduration");
            }
            set {
                SetAttributeValue("msdyn_totalbreakduration", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the total cost for this booking.</para>
        /// <para>Display Name: Total Cost</para>
        /// </summary>
        [AttributeLogicalName("msdyn_totalcost")]
        [DisplayName("Total Cost")]
        public decimal? msdyn_TotalCost {
            get {
                return GetMoneyValue("msdyn_totalcost");
            }
            set {
                SetMoneyValue("msdyn_totalcost", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the total duration that this booking was in progress.</para>
        /// <para>Display Name: Total Duration In Progress</para>
        /// </summary>
        [AttributeLogicalName("msdyn_totaldurationinprogress")]
        [DisplayName("Total Duration In Progress")]
        [Range(0, 2147483647)]
        public int? msdyn_TotalDurationInProgress {
            get {
                return GetAttributeValue<int?>("msdyn_totaldurationinprogress");
            }
            set {
                SetAttributeValue("msdyn_totaldurationinprogress", value);
            }
        }
        
        /// <summary>
        /// <para>Travel Time Calculation</para>
        /// <para>Display Name: Travel Time Calculation</para>
        /// </summary>
        [AttributeLogicalName("msdyn_traveltimecalculationtype")]
        [DisplayName("Travel Time Calculation")]
        public msdyn_traveltimetype? msdyn_TravelTimeCalculationType {
            get {
                return GetOptionSetValue<msdyn_traveltimetype>("msdyn_traveltimecalculationtype");
            }
            set {
                SetOptionSetValue("msdyn_traveltimecalculationtype", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Travel Time Rescheduling (Deprecated)</para>
        /// </summary>
        [AttributeLogicalName("msdyn_traveltimerescheduling")]
        [DisplayName("Travel Time Rescheduling (Deprecated)")]
        public bool? msdyn_TravelTimeRescheduling {
            get {
                return GetAttributeValue<bool?>("msdyn_traveltimerescheduling");
            }
            set {
                SetAttributeValue("msdyn_traveltimerescheduling", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Internal Flags</para>
        /// </summary>
        [AttributeLogicalName("msdyn_ursinternalflags")]
        [DisplayName("Internal Flags")]
        public string msdyn_URSInternalFlags {
            get {
                return GetAttributeValue<string>("msdyn_ursinternalflags");
            }
            set {
                SetAttributeValue("msdyn_ursinternalflags", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Work Location</para>
        /// </summary>
        [AttributeLogicalName("msdyn_worklocation")]
        [DisplayName("Work Location")]
        public msdyn_worklocation? msdyn_WorkLocation {
            get {
                return GetOptionSetValue<msdyn_worklocation>("msdyn_worklocation");
            }
            set {
                SetOptionSetValue("msdyn_worklocation", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for Work Order associated with Resource Booking.</para>
        /// <para>Display Name: Work Order</para>
        /// </summary>
        [AttributeLogicalName("msdyn_workorder")]
        [DisplayName("Work Order")]
        public EntityReference msdyn_WorkOrder {
            get {
                return GetAttributeValue<EntityReference>("msdyn_workorder");
            }
            set {
                SetAttributeValue("msdyn_workorder", value);
            }
        }
        
        /// <summary>
        /// <para>Capacity that needs to take from resource capacity</para>
        /// <para>Display Name: Capacity</para>
        /// </summary>
        [AttributeLogicalName("msdyn_effort")]
        [DisplayName("Capacity")]
        public decimal? msdyn_effort {
            get {
                return GetAttributeValue<decimal?>("msdyn_effort");
            }
            set {
                SetAttributeValue("msdyn_effort", value);
            }
        }
        
        /// <summary>
        /// <para>Internal For Quick note pcf control actions</para>
        /// <para>Display Name: Quick note actions</para>
        /// </summary>
        [AttributeLogicalName("msdyn_quickNoteAction")]
        [DisplayName("Quick note actions")]
        public msdyn_quicknote_type? msdyn_quickNoteAction {
            get {
                return GetOptionSetValue<msdyn_quicknote_type>("msdyn_quickNoteAction");
            }
            set {
                SetOptionSetValue("msdyn_quickNoteAction", value);
            }
        }
        
        /// <summary>
        /// <para>Requirement Group</para>
        /// <para>Display Name: Requirement Group</para>
        /// </summary>
        [AttributeLogicalName("msdyn_requirementgroupid")]
        [DisplayName("Requirement Group")]
        public EntityReference msdyn_requirementgroupid {
            get {
                return GetAttributeValue<EntityReference>("msdyn_requirementgroupid");
            }
            set {
                SetAttributeValue("msdyn_requirementgroupid", value);
            }
        }
        
        /// <summary>
        /// <para>Requirement Group Set</para>
        /// <para>Display Name: Requirement Group Set</para>
        /// </summary>
        [AttributeLogicalName("msdyn_requirementgroupset")]
        [DisplayName("Requirement Group Set")]
        [MaxLength(40)]
        public string msdyn_requirementgroupset {
            get {
                return GetAttributeValue<string>("msdyn_requirementgroupset");
            }
            set {
                SetAttributeValue("msdyn_requirementgroupset", value);
            }
        }
        
        /// <summary>
        /// <para>Value of the Total Cost in base currency.</para>
        /// <para>Display Name: Total Cost (Base)</para>
        /// </summary>
        [AttributeLogicalName("msdyn_totalcost_base")]
        [DisplayName("Total Cost (Base)")]
        public decimal? msdyn_totalcost_Base {
            get {
                return GetMoneyValue("msdyn_totalcost_base");
            }
        }
        
        [RelationshipSchemaName("BookableResourceBooking_SyncErrors")]
        public IEnumerable<SyncError> BookableResourceBooking_SyncErrors {
            get {
                return GetRelatedEntities<SyncError>("BookableResourceBooking_SyncErrors", null);
            }
            set {
                SetRelatedEntities("BookableResourceBooking_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("transactioncurrencyid")]
        [RelationshipSchemaName("TransactionCurrency_bookableresourcebooking")]
        public TransactionCurrency TransactionCurrency_bookableresourcebooking {
            get {
                return GetRelatedEntity<TransactionCurrency>("TransactionCurrency_bookableresourcebooking", null);
            }
            set {
                SetRelatedEntity("TransactionCurrency_bookableresourcebooking", null, value);
            }
        }
        
        [AttributeLogicalName("resource")]
        [RelationshipSchemaName("bookableresource_bookableresourcebooking_Resource")]
        public BookableResource bookableresource_bookableresourcebooking_Resource {
            get {
                return GetRelatedEntity<BookableResource>("bookableresource_bookableresourcebooking_Resource", null);
            }
            set {
                SetRelatedEntity("bookableresource_bookableresourcebooking_Resource", null, value);
            }
        }
        
        [RelationshipSchemaName("bookableresourcebooking_ActivityPointers")]
        public IEnumerable<ActivityPointer> bookableresourcebooking_ActivityPointers {
            get {
                return GetRelatedEntities<ActivityPointer>("bookableresourcebooking_ActivityPointers", null);
            }
            set {
                SetRelatedEntities("bookableresourcebooking_ActivityPointers", null, value);
            }
        }
        
        [RelationshipSchemaName("bookableresourcebooking_Appointments")]
        public IEnumerable<Appointment> bookableresourcebooking_Appointments {
            get {
                return GetRelatedEntities<Appointment>("bookableresourcebooking_Appointments", null);
            }
            set {
                SetRelatedEntities("bookableresourcebooking_Appointments", null, value);
            }
        }
        
        [RelationshipSchemaName("bookableresourcebooking_CampaignActivities")]
        public IEnumerable<CampaignActivity> bookableresourcebooking_CampaignActivities {
            get {
                return GetRelatedEntities<CampaignActivity>("bookableresourcebooking_CampaignActivities", null);
            }
            set {
                SetRelatedEntities("bookableresourcebooking_CampaignActivities", null, value);
            }
        }
        
        [RelationshipSchemaName("bookableresourcebooking_CampaignResponses")]
        public IEnumerable<CampaignResponse> bookableresourcebooking_CampaignResponses {
            get {
                return GetRelatedEntities<CampaignResponse>("bookableresourcebooking_CampaignResponses", null);
            }
            set {
                SetRelatedEntities("bookableresourcebooking_CampaignResponses", null, value);
            }
        }
        
        [RelationshipSchemaName("bookableresourcebooking_Emails")]
        public IEnumerable<Email> bookableresourcebooking_Emails {
            get {
                return GetRelatedEntities<Email>("bookableresourcebooking_Emails", null);
            }
            set {
                SetRelatedEntities("bookableresourcebooking_Emails", null, value);
            }
        }
        
        [RelationshipSchemaName("bookableresourcebooking_Faxes")]
        public IEnumerable<Fax> bookableresourcebooking_Faxes {
            get {
                return GetRelatedEntities<Fax>("bookableresourcebooking_Faxes", null);
            }
            set {
                SetRelatedEntities("bookableresourcebooking_Faxes", null, value);
            }
        }
        
        [RelationshipSchemaName("bookableresourcebooking_IncidentResolutions")]
        public IEnumerable<IncidentResolution> bookableresourcebooking_IncidentResolutions {
            get {
                return GetRelatedEntities<IncidentResolution>("bookableresourcebooking_IncidentResolutions", null);
            }
            set {
                SetRelatedEntities("bookableresourcebooking_IncidentResolutions", null, value);
            }
        }
        
        [RelationshipSchemaName("bookableresourcebooking_Letters")]
        public IEnumerable<Letter> bookableresourcebooking_Letters {
            get {
                return GetRelatedEntities<Letter>("bookableresourcebooking_Letters", null);
            }
            set {
                SetRelatedEntities("bookableresourcebooking_Letters", null, value);
            }
        }
        
        [RelationshipSchemaName("bookableresourcebooking_OpportunityCloses")]
        public IEnumerable<OpportunityClose> bookableresourcebooking_OpportunityCloses {
            get {
                return GetRelatedEntities<OpportunityClose>("bookableresourcebooking_OpportunityCloses", null);
            }
            set {
                SetRelatedEntities("bookableresourcebooking_OpportunityCloses", null, value);
            }
        }
        
        [RelationshipSchemaName("bookableresourcebooking_PhoneCalls")]
        public IEnumerable<PhoneCall> bookableresourcebooking_PhoneCalls {
            get {
                return GetRelatedEntities<PhoneCall>("bookableresourcebooking_PhoneCalls", null);
            }
            set {
                SetRelatedEntities("bookableresourcebooking_PhoneCalls", null, value);
            }
        }
        
        [RelationshipSchemaName("bookableresourcebooking_RecurringAppointmentMasters")]
        public IEnumerable<RecurringAppointmentMaster> bookableresourcebooking_RecurringAppointmentMasters {
            get {
                return GetRelatedEntities<RecurringAppointmentMaster>("bookableresourcebooking_RecurringAppointmentMasters", null);
            }
            set {
                SetRelatedEntities("bookableresourcebooking_RecurringAppointmentMasters", null, value);
            }
        }
        
        [RelationshipSchemaName("bookableresourcebooking_ServiceAppointments")]
        public IEnumerable<ServiceAppointment> bookableresourcebooking_ServiceAppointments {
            get {
                return GetRelatedEntities<ServiceAppointment>("bookableresourcebooking_ServiceAppointments", null);
            }
            set {
                SetRelatedEntities("bookableresourcebooking_ServiceAppointments", null, value);
            }
        }
        
        [RelationshipSchemaName("bookableresourcebooking_SocialActivities")]
        public IEnumerable<SocialActivity> bookableresourcebooking_SocialActivities {
            get {
                return GetRelatedEntities<SocialActivity>("bookableresourcebooking_SocialActivities", null);
            }
            set {
                SetRelatedEntities("bookableresourcebooking_SocialActivities", null, value);
            }
        }
        
        [RelationshipSchemaName("bookableresourcebooking_Tasks")]
        public IEnumerable<Task> bookableresourcebooking_Tasks {
            get {
                return GetRelatedEntities<Task>("bookableresourcebooking_Tasks", null);
            }
            set {
                SetRelatedEntities("bookableresourcebooking_Tasks", null, value);
            }
        }
        
        [RelationshipSchemaName("bookableresourcebooking_Teams")]
        public IEnumerable<Team> bookableresourcebooking_Teams {
            get {
                return GetRelatedEntities<Team>("bookableresourcebooking_Teams", null);
            }
            set {
                SetRelatedEntities("bookableresourcebooking_Teams", null, value);
            }
        }
        
        [AttributeLogicalName("header")]
        [RelationshipSchemaName("bookableresourcebookingheader_bookableresourcebooking_Header")]
        public BookableResourceBookingHeader bookableresourcebookingheader_bookableresourcebooking_Header {
            get {
                return GetRelatedEntity<BookableResourceBookingHeader>("bookableresourcebookingheader_bookableresourcebooking_Header", null);
            }
            set {
                SetRelatedEntity("bookableresourcebookingheader_bookableresourcebooking_Header", null, value);
            }
        }
        
        [AttributeLogicalName("bookingstatus")]
        [RelationshipSchemaName("bookingstatus_bookableresourcebooking_BookingStatus")]
        public BookingStatus bookingstatus_bookableresourcebooking_BookingStatus {
            get {
                return GetRelatedEntity<BookingStatus>("bookingstatus_bookableresourcebooking_BookingStatus", null);
            }
            set {
                SetRelatedEntity("bookingstatus_bookableresourcebooking_BookingStatus", null, value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_bookableresourcebooking")]
        public BusinessUnit business_unit_bookableresourcebooking {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_bookableresourcebooking", null);
            }
            set {
                SetRelatedEntity("business_unit_bookableresourcebooking", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_bookableresourcebooking_createdby")]
        public SystemUser lk_bookableresourcebooking_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_bookableresourcebooking_createdby", null);
            }
            set {
                SetRelatedEntity("lk_bookableresourcebooking_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_bookableresourcebooking_createdonbehalfby")]
        public SystemUser lk_bookableresourcebooking_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_bookableresourcebooking_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_bookableresourcebooking_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_bookableresourcebooking_modifiedby")]
        public SystemUser lk_bookableresourcebooking_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_bookableresourcebooking_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_bookableresourcebooking_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_bookableresourcebooking_modifiedonbehalfby")]
        public SystemUser lk_bookableresourcebooking_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_bookableresourcebooking_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_bookableresourcebooking_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("msdyn_appointmentbookingid")]
        [RelationshipSchemaName("msdyn_appointment_bookableresourcebooking")]
        public Appointment msdyn_appointment_bookableresourcebooking {
            get {
                return GetRelatedEntity<Appointment>("msdyn_appointment_bookableresourcebooking", null);
            }
            set {
                SetRelatedEntity("msdyn_appointment_bookableresourcebooking", null, value);
            }
        }
        
        [AttributeLogicalName("msdyn_crew")]
        [RelationshipSchemaName("msdyn_bookableresource_bookableresourcebooking_Crew")]
        public BookableResource msdyn_bookableresource_bookableresourcebooking_Crew {
            get {
                return GetRelatedEntity<BookableResource>("msdyn_bookableresource_bookableresourcebooking_Crew", null);
            }
            set {
                SetRelatedEntity("msdyn_bookableresource_bookableresourcebooking_Crew", null, value);
            }
        }
        
        [AttributeLogicalName("msdyn_resourcegroup")]
        [RelationshipSchemaName("msdyn_bookableresource_bookableresourcebooking_ResourceGroup")]
        public BookableResource msdyn_bookableresource_bookableresourcebooking_ResourceGroup {
            get {
                return GetRelatedEntity<BookableResource>("msdyn_bookableresource_bookableresourcebooking_ResourceGroup", null);
            }
            set {
                SetRelatedEntity("msdyn_bookableresource_bookableresourcebooking_ResourceGroup", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_bookableresourcebooking")]
        public Team team_bookableresourcebooking {
            get {
                return GetRelatedEntity<Team>("team_bookableresourcebooking", null);
            }
            set {
                SetRelatedEntity("team_bookableresourcebooking", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_bookableresourcebooking")]
        public SystemUser user_bookableresourcebooking {
            get {
                return GetRelatedEntity<SystemUser>("user_bookableresourcebooking", null);
            }
            set {
                SetRelatedEntity("user_bookableresourcebooking", null, value);
            }
        }
        
        public static BookableResourceBooking Retrieve(IOrganizationService service, Guid id, params Expression<Func<BookableResourceBooking,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Reservation entity representing the summary of the associated resource bookings.</para>
    /// <para>Display Name: Bookable Resource Booking Header</para>
    /// </summary>
    [EntityLogicalName("bookableresourcebookingheader")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class BookableResourceBookingHeader : ExtendedEntity<BookableResourceBookingHeaderState, BookableResourceBookingHeader_StatusCode> {
        
        public const string EntityLogicalName = "bookableresourcebookingheader";
        
        public const int EntityTypeCode = 1146;
        
        public BookableResourceBookingHeader() : 
                base(EntityLogicalName) {
        }
        
        public BookableResourceBookingHeader(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("name");
            }
        }
        
        [AttributeLogicalName("bookableresourcebookingheaderid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("bookableresourcebookingheaderid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the resource booking header.</para>
        /// <para>Display Name: Bookable Resource Booking Header</para>
        /// </summary>
        [AttributeLogicalName("bookableresourcebookingheaderid")]
        [DisplayName("Bookable Resource Booking Header")]
        public Guid? BookableResourceBookingHeaderId {
            get {
                return GetAttributeValue<Guid?>("bookableresourcebookingheaderid");
            }
            set {
                SetId("bookableresourcebookingheaderid", value);
            }
        }
        
        /// <summary>
        /// <para>lk_bookableresourcebookingheader_createdby</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>lk_bookableresourcebookingheader_createdonbehalfby</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Shows the aggregate duration of the linked bookings.</para>
        /// <para>Display Name: Duration</para>
        /// </summary>
        [AttributeLogicalName("duration")]
        [DisplayName("Duration")]
        [Range(0, 2147483647)]
        public int? Duration {
            get {
                return GetAttributeValue<int?>("duration");
            }
            set {
                SetAttributeValue("duration", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the end date and time of the booking summary.</para>
        /// <para>Display Name: End Time</para>
        /// </summary>
        [AttributeLogicalName("endtime")]
        [DisplayName("End Time")]
        public DateTime? EndTime {
            get {
                return GetAttributeValue<DateTime?>("endtime");
            }
            set {
                SetAttributeValue("endtime", value);
            }
        }
        
        /// <summary>
        /// <para>Exchange rate for the currency associated with the bookableresourcebookingheader with respect to the base currency.</para>
        /// <para>Display Name: ExchangeRate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("ExchangeRate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>lk_bookableresourcebookingheader_modifiedby</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>lk_bookableresourcebookingheader_modifiedonbehalfby</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>The name of the booking summary.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string Name {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>owner_bookableresourcebookingheader</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>business_unit_bookableresourcebookingheader</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>team_bookableresourcebookingheader</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>user_bookableresourcebookingheader</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>The name of the booking summary.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the process.</para>
        /// <para>Display Name: Process</para>
        /// </summary>
        [AttributeLogicalName("processid")]
        [DisplayName("Process")]
        public Guid? ProcessId {
            get {
                return GetAttributeValue<Guid?>("processid");
            }
            set {
                SetAttributeValue("processid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the stage.</para>
        /// <para>Display Name: Process Stage</para>
        /// </summary>
        [AttributeLogicalName("stageid")]
        [DisplayName("Process Stage")]
        public Guid? StageId {
            get {
                return GetAttributeValue<Guid?>("stageid");
            }
            set {
                SetAttributeValue("stageid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the start date and time of the booking summary.</para>
        /// <para>Display Name: Start Time</para>
        /// </summary>
        [AttributeLogicalName("starttime")]
        [DisplayName("Start Time")]
        public DateTime? StartTime {
            get {
                return GetAttributeValue<DateTime?>("starttime");
            }
            set {
                SetAttributeValue("starttime", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the Bookable Resource Booking Header</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public BookableResourceBookingHeaderState? StateCode {
            get {
                return GetOptionSetValue<BookableResourceBookingHeaderState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the Bookable Resource Booking Header</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public BookableResourceBookingHeader_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<BookableResourceBookingHeader_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>TransactionCurrency_bookableresourcebookingheader</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Traversed Path</para>
        /// </summary>
        [AttributeLogicalName("traversedpath")]
        [DisplayName("Traversed Path")]
        [MaxLength(1250)]
        public string TraversedPath {
            get {
                return GetAttributeValue<string>("traversedpath");
            }
            set {
                SetAttributeValue("traversedpath", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Select whether the booking is solid or liquid. Solid bookings are firm and cannot be changed whereas liquid bookings can be changed.</para>
        /// <para>Display Name: Booking Type</para>
        /// </summary>
        [AttributeLogicalName("msdyn_bookingtype")]
        [DisplayName("Booking Type")]
        public BookableResourceBookingHeader_msdyn_BookingType? msdyn_BookingType {
            get {
                return GetOptionSetValue<BookableResourceBookingHeader_msdyn_BookingType>("msdyn_bookingtype");
            }
            set {
                SetOptionSetValue("msdyn_bookingtype", value);
            }
        }
        
        /// <summary>
        /// <para>Resource Requirement</para>
        /// <para>Display Name: Resource Requirement</para>
        /// </summary>
        [AttributeLogicalName("msdyn_resourcerequirement")]
        [DisplayName("Resource Requirement")]
        public EntityReference msdyn_ResourceRequirement {
            get {
                return GetAttributeValue<EntityReference>("msdyn_resourcerequirement");
            }
            set {
                SetAttributeValue("msdyn_resourcerequirement", value);
            }
        }
        
        /// <summary>
        /// <para>Bookable Resource</para>
        /// <para>Display Name: Bookable Resource</para>
        /// </summary>
        [AttributeLogicalName("msdyn_bookableresourceid")]
        [DisplayName("Bookable Resource")]
        public EntityReference msdyn_bookableresourceid {
            get {
                return GetAttributeValue<EntityReference>("msdyn_bookableresourceid");
            }
            set {
                SetAttributeValue("msdyn_bookableresourceid", value);
            }
        }
        
        /// <summary>
        /// <para>Booking Status</para>
        /// <para>Display Name: Booking Status</para>
        /// </summary>
        [AttributeLogicalName("msdyn_bookingstatusid")]
        [DisplayName("Booking Status")]
        public EntityReference msdyn_bookingstatusid {
            get {
                return GetAttributeValue<EntityReference>("msdyn_bookingstatusid");
            }
            set {
                SetAttributeValue("msdyn_bookingstatusid", value);
            }
        }
        
        [RelationshipSchemaName("BookableResourceBookingHeader_SyncErrors")]
        public IEnumerable<SyncError> BookableResourceBookingHeader_SyncErrors {
            get {
                return GetRelatedEntities<SyncError>("BookableResourceBookingHeader_SyncErrors", null);
            }
            set {
                SetRelatedEntities("BookableResourceBookingHeader_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("transactioncurrencyid")]
        [RelationshipSchemaName("TransactionCurrency_bookableresourcebookingheader")]
        public TransactionCurrency TransactionCurrency_bookableresourcebookingheader {
            get {
                return GetRelatedEntity<TransactionCurrency>("TransactionCurrency_bookableresourcebookingheader", null);
            }
            set {
                SetRelatedEntity("TransactionCurrency_bookableresourcebookingheader", null, value);
            }
        }
        
        [RelationshipSchemaName("bookableresourcebookingheader_ActivityPointers")]
        public IEnumerable<ActivityPointer> bookableresourcebookingheader_ActivityPointers {
            get {
                return GetRelatedEntities<ActivityPointer>("bookableresourcebookingheader_ActivityPointers", null);
            }
            set {
                SetRelatedEntities("bookableresourcebookingheader_ActivityPointers", null, value);
            }
        }
        
        [RelationshipSchemaName("bookableresourcebookingheader_Appointments")]
        public IEnumerable<Appointment> bookableresourcebookingheader_Appointments {
            get {
                return GetRelatedEntities<Appointment>("bookableresourcebookingheader_Appointments", null);
            }
            set {
                SetRelatedEntities("bookableresourcebookingheader_Appointments", null, value);
            }
        }
        
        [RelationshipSchemaName("bookableresourcebookingheader_CampaignActivities")]
        public IEnumerable<CampaignActivity> bookableresourcebookingheader_CampaignActivities {
            get {
                return GetRelatedEntities<CampaignActivity>("bookableresourcebookingheader_CampaignActivities", null);
            }
            set {
                SetRelatedEntities("bookableresourcebookingheader_CampaignActivities", null, value);
            }
        }
        
        [RelationshipSchemaName("bookableresourcebookingheader_CampaignResponses")]
        public IEnumerable<CampaignResponse> bookableresourcebookingheader_CampaignResponses {
            get {
                return GetRelatedEntities<CampaignResponse>("bookableresourcebookingheader_CampaignResponses", null);
            }
            set {
                SetRelatedEntities("bookableresourcebookingheader_CampaignResponses", null, value);
            }
        }
        
        [RelationshipSchemaName("bookableresourcebookingheader_Emails")]
        public IEnumerable<Email> bookableresourcebookingheader_Emails {
            get {
                return GetRelatedEntities<Email>("bookableresourcebookingheader_Emails", null);
            }
            set {
                SetRelatedEntities("bookableresourcebookingheader_Emails", null, value);
            }
        }
        
        [RelationshipSchemaName("bookableresourcebookingheader_Faxes")]
        public IEnumerable<Fax> bookableresourcebookingheader_Faxes {
            get {
                return GetRelatedEntities<Fax>("bookableresourcebookingheader_Faxes", null);
            }
            set {
                SetRelatedEntities("bookableresourcebookingheader_Faxes", null, value);
            }
        }
        
        [RelationshipSchemaName("bookableresourcebookingheader_IncidentResolutions")]
        public IEnumerable<IncidentResolution> bookableresourcebookingheader_IncidentResolutions {
            get {
                return GetRelatedEntities<IncidentResolution>("bookableresourcebookingheader_IncidentResolutions", null);
            }
            set {
                SetRelatedEntities("bookableresourcebookingheader_IncidentResolutions", null, value);
            }
        }
        
        [RelationshipSchemaName("bookableresourcebookingheader_Letters")]
        public IEnumerable<Letter> bookableresourcebookingheader_Letters {
            get {
                return GetRelatedEntities<Letter>("bookableresourcebookingheader_Letters", null);
            }
            set {
                SetRelatedEntities("bookableresourcebookingheader_Letters", null, value);
            }
        }
        
        [RelationshipSchemaName("bookableresourcebookingheader_OpportunityCloses")]
        public IEnumerable<OpportunityClose> bookableresourcebookingheader_OpportunityCloses {
            get {
                return GetRelatedEntities<OpportunityClose>("bookableresourcebookingheader_OpportunityCloses", null);
            }
            set {
                SetRelatedEntities("bookableresourcebookingheader_OpportunityCloses", null, value);
            }
        }
        
        [RelationshipSchemaName("bookableresourcebookingheader_PhoneCalls")]
        public IEnumerable<PhoneCall> bookableresourcebookingheader_PhoneCalls {
            get {
                return GetRelatedEntities<PhoneCall>("bookableresourcebookingheader_PhoneCalls", null);
            }
            set {
                SetRelatedEntities("bookableresourcebookingheader_PhoneCalls", null, value);
            }
        }
        
        [RelationshipSchemaName("bookableresourcebookingheader_RecurringAppointmentMasters")]
        public IEnumerable<RecurringAppointmentMaster> bookableresourcebookingheader_RecurringAppointmentMasters {
            get {
                return GetRelatedEntities<RecurringAppointmentMaster>("bookableresourcebookingheader_RecurringAppointmentMasters", null);
            }
            set {
                SetRelatedEntities("bookableresourcebookingheader_RecurringAppointmentMasters", null, value);
            }
        }
        
        [RelationshipSchemaName("bookableresourcebookingheader_ServiceAppointments")]
        public IEnumerable<ServiceAppointment> bookableresourcebookingheader_ServiceAppointments {
            get {
                return GetRelatedEntities<ServiceAppointment>("bookableresourcebookingheader_ServiceAppointments", null);
            }
            set {
                SetRelatedEntities("bookableresourcebookingheader_ServiceAppointments", null, value);
            }
        }
        
        [RelationshipSchemaName("bookableresourcebookingheader_SocialActivities")]
        public IEnumerable<SocialActivity> bookableresourcebookingheader_SocialActivities {
            get {
                return GetRelatedEntities<SocialActivity>("bookableresourcebookingheader_SocialActivities", null);
            }
            set {
                SetRelatedEntities("bookableresourcebookingheader_SocialActivities", null, value);
            }
        }
        
        [RelationshipSchemaName("bookableresourcebookingheader_Tasks")]
        public IEnumerable<Task> bookableresourcebookingheader_Tasks {
            get {
                return GetRelatedEntities<Task>("bookableresourcebookingheader_Tasks", null);
            }
            set {
                SetRelatedEntities("bookableresourcebookingheader_Tasks", null, value);
            }
        }
        
        [RelationshipSchemaName("bookableresourcebookingheader_Teams")]
        public IEnumerable<Team> bookableresourcebookingheader_Teams {
            get {
                return GetRelatedEntities<Team>("bookableresourcebookingheader_Teams", null);
            }
            set {
                SetRelatedEntities("bookableresourcebookingheader_Teams", null, value);
            }
        }
        
        [RelationshipSchemaName("bookableresourcebookingheader_bookableresourcebooking_Header")]
        public IEnumerable<BookableResourceBooking> bookableresourcebookingheader_bookableresourcebooking_Header {
            get {
                return GetRelatedEntities<BookableResourceBooking>("bookableresourcebookingheader_bookableresourcebooking_Header", null);
            }
            set {
                SetRelatedEntities("bookableresourcebookingheader_bookableresourcebooking_Header", null, value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_bookableresourcebookingheader")]
        public BusinessUnit business_unit_bookableresourcebookingheader {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_bookableresourcebookingheader", null);
            }
            set {
                SetRelatedEntity("business_unit_bookableresourcebookingheader", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_bookableresourcebookingheader_createdby")]
        public SystemUser lk_bookableresourcebookingheader_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_bookableresourcebookingheader_createdby", null);
            }
            set {
                SetRelatedEntity("lk_bookableresourcebookingheader_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_bookableresourcebookingheader_createdonbehalfby")]
        public SystemUser lk_bookableresourcebookingheader_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_bookableresourcebookingheader_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_bookableresourcebookingheader_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_bookableresourcebookingheader_modifiedby")]
        public SystemUser lk_bookableresourcebookingheader_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_bookableresourcebookingheader_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_bookableresourcebookingheader_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_bookableresourcebookingheader_modifiedonbehalfby")]
        public SystemUser lk_bookableresourcebookingheader_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_bookableresourcebookingheader_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_bookableresourcebookingheader_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("msdyn_bookableresourceid")]
        [RelationshipSchemaName("msdyn_bookableresource_bookableresourcebookingheader_bookableresourceid")]
        public BookableResource msdyn_bookableresource_bookableresourcebookingheader_bookableresourceid {
            get {
                return GetRelatedEntity<BookableResource>("msdyn_bookableresource_bookableresourcebookingheader_bookableresourceid", null);
            }
            set {
                SetRelatedEntity("msdyn_bookableresource_bookableresourcebookingheader_bookableresourceid", null, value);
            }
        }
        
        [AttributeLogicalName("msdyn_bookingstatusid")]
        [RelationshipSchemaName("msdyn_bookingstatus_bookableresourcebookingheader_bookingstatusid")]
        public BookingStatus msdyn_bookingstatus_bookableresourcebookingheader_bookingstatusid {
            get {
                return GetRelatedEntity<BookingStatus>("msdyn_bookingstatus_bookableresourcebookingheader_bookingstatusid", null);
            }
            set {
                SetRelatedEntity("msdyn_bookingstatus_bookableresourcebookingheader_bookingstatusid", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_bookableresourcebookingheader")]
        public Team team_bookableresourcebookingheader {
            get {
                return GetRelatedEntity<Team>("team_bookableresourcebookingheader", null);
            }
            set {
                SetRelatedEntity("team_bookableresourcebookingheader", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_bookableresourcebookingheader")]
        public SystemUser user_bookableresourcebookingheader {
            get {
                return GetRelatedEntity<SystemUser>("user_bookableresourcebookingheader", null);
            }
            set {
                SetRelatedEntity("user_bookableresourcebookingheader", null, value);
            }
        }
        
        public static BookableResourceBookingHeader Retrieve(IOrganizationService service, Guid id, params Expression<Func<BookableResourceBookingHeader,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Categorize resources that have capacity into categories such as roles.</para>
    /// <para>Display Name: Bookable Resource Category</para>
    /// </summary>
    [EntityLogicalName("bookableresourcecategory")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class BookableResourceCategory : ExtendedEntity<BookableResourceCategoryState, BookableResourceCategory_StatusCode> {
        
        public const string EntityLogicalName = "bookableresourcecategory";
        
        public const int EntityTypeCode = 1147;
        
        public BookableResourceCategory() : 
                base(EntityLogicalName) {
        }
        
        public BookableResourceCategory(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("name");
            }
        }
        
        [AttributeLogicalName("bookableresourcecategoryid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("bookableresourcecategoryid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the resource category.</para>
        /// <para>Display Name: Resource Category</para>
        /// </summary>
        [AttributeLogicalName("bookableresourcecategoryid")]
        [DisplayName("Resource Category")]
        public Guid? BookableResourceCategoryId {
            get {
                return GetAttributeValue<Guid?>("bookableresourcecategoryid");
            }
            set {
                SetId("bookableresourcecategoryid", value);
            }
        }
        
        /// <summary>
        /// <para>lk_bookableresourcecategory_createdby</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>lk_bookableresourcecategory_createdonbehalfby</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Type a detailed description of what the categorization is about.</para>
        /// <para>Display Name: Description</para>
        /// </summary>
        [AttributeLogicalName("description")]
        [DisplayName("Description")]
        [MaxLength(100)]
        public string Description {
            get {
                return GetAttributeValue<string>("description");
            }
            set {
                SetAttributeValue("description", value);
            }
        }
        
        /// <summary>
        /// <para>Exchange rate for the currency associated with the bookableresourcecategory with respect to the base currency.</para>
        /// <para>Display Name: ExchangeRate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("ExchangeRate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>lk_bookableresourcecategory_modifiedby</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>lk_bookableresourcecategory_modifiedonbehalfby</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Type the name of the resource category.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string Name {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>owner_bookableresourcecategory</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>business_unit_bookableresourcecategory</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>team_bookableresourcecategory</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>user_bookableresourcecategory</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Type the name of the resource category.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the Resource Category</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public BookableResourceCategoryState? StateCode {
            get {
                return GetOptionSetValue<BookableResourceCategoryState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the Resource Category</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public BookableResourceCategory_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<BookableResourceCategory_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>TransactionCurrency_bookableresourcecategory</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        [RelationshipSchemaName("BookableResourceCategory_SyncErrors")]
        public IEnumerable<SyncError> BookableResourceCategory_SyncErrors {
            get {
                return GetRelatedEntities<SyncError>("BookableResourceCategory_SyncErrors", null);
            }
            set {
                SetRelatedEntities("BookableResourceCategory_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("transactioncurrencyid")]
        [RelationshipSchemaName("TransactionCurrency_bookableresourcecategory")]
        public TransactionCurrency TransactionCurrency_bookableresourcecategory {
            get {
                return GetRelatedEntity<TransactionCurrency>("TransactionCurrency_bookableresourcecategory", null);
            }
            set {
                SetRelatedEntity("TransactionCurrency_bookableresourcecategory", null, value);
            }
        }
        
        [RelationshipSchemaName("bookableresourcecategory_Teams")]
        public IEnumerable<Team> bookableresourcecategory_Teams {
            get {
                return GetRelatedEntities<Team>("bookableresourcecategory_Teams", null);
            }
            set {
                SetRelatedEntities("bookableresourcecategory_Teams", null, value);
            }
        }
        
        [RelationshipSchemaName("bookableresourcecategory_bookableresourcecategoryassn_ResourceCategory")]
        public IEnumerable<BookableResourceCategoryAssn> bookableresourcecategory_bookableresourcecategoryassn_ResourceCategory {
            get {
                return GetRelatedEntities<BookableResourceCategoryAssn>("bookableresourcecategory_bookableresourcecategoryassn_ResourceCategory", null);
            }
            set {
                SetRelatedEntities("bookableresourcecategory_bookableresourcecategoryassn_ResourceCategory", null, value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_bookableresourcecategory")]
        public BusinessUnit business_unit_bookableresourcecategory {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_bookableresourcecategory", null);
            }
            set {
                SetRelatedEntity("business_unit_bookableresourcecategory", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_bookableresourcecategory_createdby")]
        public SystemUser lk_bookableresourcecategory_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_bookableresourcecategory_createdby", null);
            }
            set {
                SetRelatedEntity("lk_bookableresourcecategory_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_bookableresourcecategory_createdonbehalfby")]
        public SystemUser lk_bookableresourcecategory_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_bookableresourcecategory_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_bookableresourcecategory_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_bookableresourcecategory_modifiedby")]
        public SystemUser lk_bookableresourcecategory_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_bookableresourcecategory_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_bookableresourcecategory_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_bookableresourcecategory_modifiedonbehalfby")]
        public SystemUser lk_bookableresourcecategory_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_bookableresourcecategory_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_bookableresourcecategory_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_bookableresourcecategory")]
        public Team team_bookableresourcecategory {
            get {
                return GetRelatedEntity<Team>("team_bookableresourcecategory", null);
            }
            set {
                SetRelatedEntity("team_bookableresourcecategory", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_bookableresourcecategory")]
        public SystemUser user_bookableresourcecategory {
            get {
                return GetRelatedEntity<SystemUser>("user_bookableresourcecategory", null);
            }
            set {
                SetRelatedEntity("user_bookableresourcecategory", null, value);
            }
        }
        
        public static BookableResourceCategory Retrieve(IOrganizationService service, Guid id, params Expression<Func<BookableResourceCategory,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Association entity to model the categorization of resources.</para>
    /// <para>Display Name: Bookable Resource Category Assn</para>
    /// </summary>
    [EntityLogicalName("bookableresourcecategoryassn")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class BookableResourceCategoryAssn : ExtendedEntity<BookableResourceCategoryAssnState, BookableResourceCategoryAssn_StatusCode> {
        
        public const string EntityLogicalName = "bookableresourcecategoryassn";
        
        public const int EntityTypeCode = 1149;
        
        public BookableResourceCategoryAssn() : 
                base(EntityLogicalName) {
        }
        
        public BookableResourceCategoryAssn(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("name");
            }
        }
        
        [AttributeLogicalName("bookableresourcecategoryassnid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("bookableresourcecategoryassnid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the resource and category association.</para>
        /// <para>Display Name: Resource Category Assn</para>
        /// </summary>
        [AttributeLogicalName("bookableresourcecategoryassnid")]
        [DisplayName("Resource Category Assn")]
        public Guid? BookableResourceCategoryAssnId {
            get {
                return GetAttributeValue<Guid?>("bookableresourcecategoryassnid");
            }
            set {
                SetId("bookableresourcecategoryassnid", value);
            }
        }
        
        /// <summary>
        /// <para>lk_bookableresourcecategoryassn_createdby</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>lk_bookableresourcecategoryassn_createdonbehalfby</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Exchange rate for the currency associated with the bookableresourcecategoryassn with respect to the base currency.</para>
        /// <para>Display Name: ExchangeRate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("ExchangeRate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>lk_bookableresourcecategoryassn_modifiedby</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>lk_bookableresourcecategoryassn_modifiedonbehalfby</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>The name of the association beween a resource and a category.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string Name {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>owner_bookableresourcecategoryassn</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>business_unit_bookableresourcecategoryassn</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>team_bookableresourcecategoryassn</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>user_bookableresourcecategoryassn</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>The name of the association beween a resource and a category.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>bookableresource_bookableresourcecategoryassn_Resource</para>
        /// <para>Display Name: Resource</para>
        /// </summary>
        [AttributeLogicalName("resource")]
        [DisplayName("Resource")]
        public EntityReference Resource {
            get {
                return GetAttributeValue<EntityReference>("resource");
            }
            set {
                SetAttributeValue("resource", value);
            }
        }
        
        /// <summary>
        /// <para>bookableresourcecategory_bookableresourcecategoryassn_ResourceCategory</para>
        /// <para>Display Name: Resource Category</para>
        /// </summary>
        [AttributeLogicalName("resourcecategory")]
        [DisplayName("Resource Category")]
        public EntityReference ResourceCategory {
            get {
                return GetAttributeValue<EntityReference>("resourcecategory");
            }
            set {
                SetAttributeValue("resourcecategory", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the Resource Category Assn</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public BookableResourceCategoryAssnState? StateCode {
            get {
                return GetOptionSetValue<BookableResourceCategoryAssnState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the Resource Category Assn</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public BookableResourceCategoryAssn_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<BookableResourceCategoryAssn_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>TransactionCurrency_bookableresourcecategoryassn</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        [RelationshipSchemaName("BookableResourceCategoryAssn_SyncErrors")]
        public IEnumerable<SyncError> BookableResourceCategoryAssn_SyncErrors {
            get {
                return GetRelatedEntities<SyncError>("BookableResourceCategoryAssn_SyncErrors", null);
            }
            set {
                SetRelatedEntities("BookableResourceCategoryAssn_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("transactioncurrencyid")]
        [RelationshipSchemaName("TransactionCurrency_bookableresourcecategoryassn")]
        public TransactionCurrency TransactionCurrency_bookableresourcecategoryassn {
            get {
                return GetRelatedEntity<TransactionCurrency>("TransactionCurrency_bookableresourcecategoryassn", null);
            }
            set {
                SetRelatedEntity("TransactionCurrency_bookableresourcecategoryassn", null, value);
            }
        }
        
        [AttributeLogicalName("resource")]
        [RelationshipSchemaName("bookableresource_bookableresourcecategoryassn_Resource")]
        public BookableResource bookableresource_bookableresourcecategoryassn_Resource {
            get {
                return GetRelatedEntity<BookableResource>("bookableresource_bookableresourcecategoryassn_Resource", null);
            }
            set {
                SetRelatedEntity("bookableresource_bookableresourcecategoryassn_Resource", null, value);
            }
        }
        
        [AttributeLogicalName("resourcecategory")]
        [RelationshipSchemaName("bookableresourcecategory_bookableresourcecategoryassn_ResourceCategory")]
        public BookableResourceCategory bookableresourcecategory_bookableresourcecategoryassn_ResourceCategory {
            get {
                return GetRelatedEntity<BookableResourceCategory>("bookableresourcecategory_bookableresourcecategoryassn_ResourceCategory", null);
            }
            set {
                SetRelatedEntity("bookableresourcecategory_bookableresourcecategoryassn_ResourceCategory", null, value);
            }
        }
        
        [RelationshipSchemaName("bookableresourcecategoryassn_Teams")]
        public IEnumerable<Team> bookableresourcecategoryassn_Teams {
            get {
                return GetRelatedEntities<Team>("bookableresourcecategoryassn_Teams", null);
            }
            set {
                SetRelatedEntities("bookableresourcecategoryassn_Teams", null, value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_bookableresourcecategoryassn")]
        public BusinessUnit business_unit_bookableresourcecategoryassn {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_bookableresourcecategoryassn", null);
            }
            set {
                SetRelatedEntity("business_unit_bookableresourcecategoryassn", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_bookableresourcecategoryassn_createdby")]
        public SystemUser lk_bookableresourcecategoryassn_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_bookableresourcecategoryassn_createdby", null);
            }
            set {
                SetRelatedEntity("lk_bookableresourcecategoryassn_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_bookableresourcecategoryassn_createdonbehalfby")]
        public SystemUser lk_bookableresourcecategoryassn_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_bookableresourcecategoryassn_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_bookableresourcecategoryassn_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_bookableresourcecategoryassn_modifiedby")]
        public SystemUser lk_bookableresourcecategoryassn_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_bookableresourcecategoryassn_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_bookableresourcecategoryassn_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_bookableresourcecategoryassn_modifiedonbehalfby")]
        public SystemUser lk_bookableresourcecategoryassn_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_bookableresourcecategoryassn_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_bookableresourcecategoryassn_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_bookableresourcecategoryassn")]
        public Team team_bookableresourcecategoryassn {
            get {
                return GetRelatedEntity<Team>("team_bookableresourcecategoryassn", null);
            }
            set {
                SetRelatedEntity("team_bookableresourcecategoryassn", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_bookableresourcecategoryassn")]
        public SystemUser user_bookableresourcecategoryassn {
            get {
                return GetRelatedEntity<SystemUser>("user_bookableresourcecategoryassn", null);
            }
            set {
                SetRelatedEntity("user_bookableresourcecategoryassn", null, value);
            }
        }
        
        public static BookableResourceCategoryAssn Retrieve(IOrganizationService service, Guid id, params Expression<Func<BookableResourceCategoryAssn,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Associates resources with their characteristics and specifies the proficiency level of a resource for that characteristic.</para>
    /// <para>Display Name: Bookable Resource Characteristic</para>
    /// </summary>
    [EntityLogicalName("bookableresourcecharacteristic")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class BookableResourceCharacteristic : ExtendedEntity<BookableResourceCharacteristicState, BookableResourceCharacteristic_StatusCode> {
        
        public const string EntityLogicalName = "bookableresourcecharacteristic";
        
        public const int EntityTypeCode = 1148;
        
        public BookableResourceCharacteristic() : 
                base(EntityLogicalName) {
        }
        
        public BookableResourceCharacteristic(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("name");
            }
        }
        
        [AttributeLogicalName("bookableresourcecharacteristicid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("bookableresourcecharacteristicid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the resource characteristic.</para>
        /// <para>Display Name: Bookable Resource Characteristic</para>
        /// </summary>
        [AttributeLogicalName("bookableresourcecharacteristicid")]
        [DisplayName("Bookable Resource Characteristic")]
        public Guid? BookableResourceCharacteristicId {
            get {
                return GetAttributeValue<Guid?>("bookableresourcecharacteristicid");
            }
            set {
                SetId("bookableresourcecharacteristicid", value);
            }
        }
        
        /// <summary>
        /// <para>characteristic_bookableresourcecharacteristic_Characteristic</para>
        /// <para>Display Name: Characteristic</para>
        /// </summary>
        [AttributeLogicalName("characteristic")]
        [DisplayName("Characteristic")]
        public EntityReference Characteristic {
            get {
                return GetAttributeValue<EntityReference>("characteristic");
            }
            set {
                SetAttributeValue("characteristic", value);
            }
        }
        
        /// <summary>
        /// <para>lk_bookableresourcecharacteristic_createdby</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>lk_bookableresourcecharacteristic_createdonbehalfby</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Exchange rate for the currency associated with the bookableresourcecharacteristic with respect to the base currency.</para>
        /// <para>Display Name: ExchangeRate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("ExchangeRate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>lk_bookableresourcecharacteristic_modifiedby</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>lk_bookableresourcecharacteristic_modifiedonbehalfby</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Type the name of the association between the resource and characteristic.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string Name {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>owner_bookableresourcecharacteristic</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>business_unit_bookableresourcecharacteristic</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>team_bookableresourcecharacteristic</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>user_bookableresourcecharacteristic</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Type the name of the association between the resource and characteristic.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the process.</para>
        /// <para>Display Name: Process</para>
        /// </summary>
        [AttributeLogicalName("processid")]
        [DisplayName("Process")]
        public Guid? ProcessId {
            get {
                return GetAttributeValue<Guid?>("processid");
            }
            set {
                SetAttributeValue("processid", value);
            }
        }
        
        /// <summary>
        /// <para>ratingvalue_bookableresourcecharacteristic_RatingValue</para>
        /// <para>Display Name: Rating Value</para>
        /// </summary>
        [AttributeLogicalName("ratingvalue")]
        [DisplayName("Rating Value")]
        public EntityReference RatingValue {
            get {
                return GetAttributeValue<EntityReference>("ratingvalue");
            }
            set {
                SetAttributeValue("ratingvalue", value);
            }
        }
        
        /// <summary>
        /// <para>bookableresource_bookableresourcecharacteristic_Resource</para>
        /// <para>Display Name: Resource</para>
        /// </summary>
        [AttributeLogicalName("resource")]
        [DisplayName("Resource")]
        public EntityReference Resource {
            get {
                return GetAttributeValue<EntityReference>("resource");
            }
            set {
                SetAttributeValue("resource", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the stage.</para>
        /// <para>Display Name: Process Stage</para>
        /// </summary>
        [AttributeLogicalName("stageid")]
        [DisplayName("Process Stage")]
        public Guid? StageId {
            get {
                return GetAttributeValue<Guid?>("stageid");
            }
            set {
                SetAttributeValue("stageid", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the Bookable Resource Characteristic</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public BookableResourceCharacteristicState? StateCode {
            get {
                return GetOptionSetValue<BookableResourceCharacteristicState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the Bookable Resource Characteristic</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public BookableResourceCharacteristic_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<BookableResourceCharacteristic_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>TransactionCurrency_bookableresourcecharacteristic</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Traversed Path</para>
        /// </summary>
        [AttributeLogicalName("traversedpath")]
        [DisplayName("Traversed Path")]
        [MaxLength(1250)]
        public string TraversedPath {
            get {
                return GetAttributeValue<string>("traversedpath");
            }
            set {
                SetAttributeValue("traversedpath", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        [RelationshipSchemaName("BookableResourceCharacteristic_SyncErrors")]
        public IEnumerable<SyncError> BookableResourceCharacteristic_SyncErrors {
            get {
                return GetRelatedEntities<SyncError>("BookableResourceCharacteristic_SyncErrors", null);
            }
            set {
                SetRelatedEntities("BookableResourceCharacteristic_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("transactioncurrencyid")]
        [RelationshipSchemaName("TransactionCurrency_bookableresourcecharacteristic")]
        public TransactionCurrency TransactionCurrency_bookableresourcecharacteristic {
            get {
                return GetRelatedEntity<TransactionCurrency>("TransactionCurrency_bookableresourcecharacteristic", null);
            }
            set {
                SetRelatedEntity("TransactionCurrency_bookableresourcecharacteristic", null, value);
            }
        }
        
        [AttributeLogicalName("resource")]
        [RelationshipSchemaName("bookableresource_bookableresourcecharacteristic_Resource")]
        public BookableResource bookableresource_bookableresourcecharacteristic_Resource {
            get {
                return GetRelatedEntity<BookableResource>("bookableresource_bookableresourcecharacteristic_Resource", null);
            }
            set {
                SetRelatedEntity("bookableresource_bookableresourcecharacteristic_Resource", null, value);
            }
        }
        
        [RelationshipSchemaName("bookableresourcecharacteristic_Teams")]
        public IEnumerable<Team> bookableresourcecharacteristic_Teams {
            get {
                return GetRelatedEntities<Team>("bookableresourcecharacteristic_Teams", null);
            }
            set {
                SetRelatedEntities("bookableresourcecharacteristic_Teams", null, value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_bookableresourcecharacteristic")]
        public BusinessUnit business_unit_bookableresourcecharacteristic {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_bookableresourcecharacteristic", null);
            }
            set {
                SetRelatedEntity("business_unit_bookableresourcecharacteristic", null, value);
            }
        }
        
        [AttributeLogicalName("characteristic")]
        [RelationshipSchemaName("characteristic_bookableresourcecharacteristic_Characteristic")]
        public Characteristic characteristic_bookableresourcecharacteristic_Characteristic {
            get {
                return GetRelatedEntity<Characteristic>("characteristic_bookableresourcecharacteristic_Characteristic", null);
            }
            set {
                SetRelatedEntity("characteristic_bookableresourcecharacteristic_Characteristic", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_bookableresourcecharacteristic_createdby")]
        public SystemUser lk_bookableresourcecharacteristic_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_bookableresourcecharacteristic_createdby", null);
            }
            set {
                SetRelatedEntity("lk_bookableresourcecharacteristic_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_bookableresourcecharacteristic_createdonbehalfby")]
        public SystemUser lk_bookableresourcecharacteristic_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_bookableresourcecharacteristic_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_bookableresourcecharacteristic_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_bookableresourcecharacteristic_modifiedby")]
        public SystemUser lk_bookableresourcecharacteristic_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_bookableresourcecharacteristic_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_bookableresourcecharacteristic_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_bookableresourcecharacteristic_modifiedonbehalfby")]
        public SystemUser lk_bookableresourcecharacteristic_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_bookableresourcecharacteristic_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_bookableresourcecharacteristic_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("ratingvalue")]
        [RelationshipSchemaName("ratingvalue_bookableresourcecharacteristic_RatingValue")]
        public RatingValue ratingvalue_bookableresourcecharacteristic_RatingValue {
            get {
                return GetRelatedEntity<RatingValue>("ratingvalue_bookableresourcecharacteristic_RatingValue", null);
            }
            set {
                SetRelatedEntity("ratingvalue_bookableresourcecharacteristic_RatingValue", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_bookableresourcecharacteristic")]
        public Team team_bookableresourcecharacteristic {
            get {
                return GetRelatedEntity<Team>("team_bookableresourcecharacteristic", null);
            }
            set {
                SetRelatedEntity("team_bookableresourcecharacteristic", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_bookableresourcecharacteristic")]
        public SystemUser user_bookableresourcecharacteristic {
            get {
                return GetRelatedEntity<SystemUser>("user_bookableresourcecharacteristic", null);
            }
            set {
                SetRelatedEntity("user_bookableresourcecharacteristic", null, value);
            }
        }
        
        public static BookableResourceCharacteristic Retrieve(IOrganizationService service, Guid id, params Expression<Func<BookableResourceCharacteristic,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Associates resources with resource groups that they are a member of.</para>
    /// <para>Display Name: Bookable Resource Group</para>
    /// </summary>
    [EntityLogicalName("bookableresourcegroup")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class BookableResourceGroup : ExtendedEntity<BookableResourceGroupState, BookableResourceGroup_StatusCode> {
        
        public const string EntityLogicalName = "bookableresourcegroup";
        
        public const int EntityTypeCode = 1151;
        
        public BookableResourceGroup() : 
                base(EntityLogicalName) {
        }
        
        public BookableResourceGroup(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("name");
            }
        }
        
        [AttributeLogicalName("bookableresourcegroupid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("bookableresourcegroupid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the resource group.</para>
        /// <para>Display Name: Bookable Resource Group</para>
        /// </summary>
        [AttributeLogicalName("bookableresourcegroupid")]
        [DisplayName("Bookable Resource Group")]
        public Guid? BookableResourceGroupId {
            get {
                return GetAttributeValue<Guid?>("bookableresourcegroupid");
            }
            set {
                SetId("bookableresourcegroupid", value);
            }
        }
        
        /// <summary>
        /// <para>bookableresource_bookableresourcegroup_ChildResource</para>
        /// <para>Display Name: Child Resource</para>
        /// </summary>
        [AttributeLogicalName("childresource")]
        [DisplayName("Child Resource")]
        public EntityReference ChildResource {
            get {
                return GetAttributeValue<EntityReference>("childresource");
            }
            set {
                SetAttributeValue("childresource", value);
            }
        }
        
        /// <summary>
        /// <para>lk_bookableresourcegroup_createdby</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>lk_bookableresourcegroup_createdonbehalfby</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Exchange rate for the currency associated with the bookableresourcegroup with respect to the base currency.</para>
        /// <para>Display Name: ExchangeRate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("ExchangeRate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Enter the group membership start date.</para>
        /// <para>Display Name: From Date</para>
        /// </summary>
        [AttributeLogicalName("fromdate")]
        [DisplayName("From Date")]
        public DateTime? FromDate {
            get {
                return GetAttributeValue<DateTime?>("fromdate");
            }
            set {
                SetAttributeValue("fromdate", value);
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>lk_bookableresourcegroup_modifiedby</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>lk_bookableresourcegroup_modifiedonbehalfby</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Type the name of the resource group.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string Name {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>owner_bookableresourcegroup</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>business_unit_bookableresourcegroup</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>team_bookableresourcegroup</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>user_bookableresourcegroup</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>bookableresource_bookableresourcegroup_ParentResource</para>
        /// <para>Display Name: Parent Resource</para>
        /// </summary>
        [AttributeLogicalName("parentresource")]
        [DisplayName("Parent Resource")]
        public EntityReference ParentResource {
            get {
                return GetAttributeValue<EntityReference>("parentresource");
            }
            set {
                SetAttributeValue("parentresource", value);
            }
        }
        
        /// <summary>
        /// <para>Type the name of the resource group.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the Bookable Resource Group</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public BookableResourceGroupState? StateCode {
            get {
                return GetOptionSetValue<BookableResourceGroupState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the Bookable Resource Group</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public BookableResourceGroup_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<BookableResourceGroup_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the group membership end date.</para>
        /// <para>Display Name: To Date</para>
        /// </summary>
        [AttributeLogicalName("todate")]
        [DisplayName("To Date")]
        public DateTime? ToDate {
            get {
                return GetAttributeValue<DateTime?>("todate");
            }
            set {
                SetAttributeValue("todate", value);
            }
        }
        
        /// <summary>
        /// <para>TransactionCurrency_bookableresourcegroup</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Indicates whether crew member is a leader or member.</para>
        /// <para>Display Name: Crew Member Type</para>
        /// </summary>
        [AttributeLogicalName("msdyn_crewmembertype")]
        [DisplayName("Crew Member Type")]
        public msdyn_crewmembertype? msdyn_CrewMemberType {
            get {
                return GetOptionSetValue<msdyn_crewmembertype>("msdyn_crewmembertype");
            }
            set {
                SetOptionSetValue("msdyn_crewmembertype", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Internal Flags</para>
        /// </summary>
        [AttributeLogicalName("msdyn_internalflags")]
        [DisplayName("Internal Flags")]
        public string msdyn_InternalFlags {
            get {
                return GetAttributeValue<string>("msdyn_internalflags");
            }
            set {
                SetAttributeValue("msdyn_internalflags", value);
            }
        }
        
        [RelationshipSchemaName("BookableResourceGroup_SyncErrors")]
        public IEnumerable<SyncError> BookableResourceGroup_SyncErrors {
            get {
                return GetRelatedEntities<SyncError>("BookableResourceGroup_SyncErrors", null);
            }
            set {
                SetRelatedEntities("BookableResourceGroup_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("transactioncurrencyid")]
        [RelationshipSchemaName("TransactionCurrency_bookableresourcegroup")]
        public TransactionCurrency TransactionCurrency_bookableresourcegroup {
            get {
                return GetRelatedEntity<TransactionCurrency>("TransactionCurrency_bookableresourcegroup", null);
            }
            set {
                SetRelatedEntity("TransactionCurrency_bookableresourcegroup", null, value);
            }
        }
        
        [AttributeLogicalName("childresource")]
        [RelationshipSchemaName("bookableresource_bookableresourcegroup_ChildResource")]
        public BookableResource bookableresource_bookableresourcegroup_ChildResource {
            get {
                return GetRelatedEntity<BookableResource>("bookableresource_bookableresourcegroup_ChildResource", null);
            }
            set {
                SetRelatedEntity("bookableresource_bookableresourcegroup_ChildResource", null, value);
            }
        }
        
        [AttributeLogicalName("parentresource")]
        [RelationshipSchemaName("bookableresource_bookableresourcegroup_ParentResource")]
        public BookableResource bookableresource_bookableresourcegroup_ParentResource {
            get {
                return GetRelatedEntity<BookableResource>("bookableresource_bookableresourcegroup_ParentResource", null);
            }
            set {
                SetRelatedEntity("bookableresource_bookableresourcegroup_ParentResource", null, value);
            }
        }
        
        [RelationshipSchemaName("bookableresourcegroup_Teams")]
        public IEnumerable<Team> bookableresourcegroup_Teams {
            get {
                return GetRelatedEntities<Team>("bookableresourcegroup_Teams", null);
            }
            set {
                SetRelatedEntities("bookableresourcegroup_Teams", null, value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_bookableresourcegroup")]
        public BusinessUnit business_unit_bookableresourcegroup {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_bookableresourcegroup", null);
            }
            set {
                SetRelatedEntity("business_unit_bookableresourcegroup", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_bookableresourcegroup_createdby")]
        public SystemUser lk_bookableresourcegroup_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_bookableresourcegroup_createdby", null);
            }
            set {
                SetRelatedEntity("lk_bookableresourcegroup_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_bookableresourcegroup_createdonbehalfby")]
        public SystemUser lk_bookableresourcegroup_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_bookableresourcegroup_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_bookableresourcegroup_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_bookableresourcegroup_modifiedby")]
        public SystemUser lk_bookableresourcegroup_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_bookableresourcegroup_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_bookableresourcegroup_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_bookableresourcegroup_modifiedonbehalfby")]
        public SystemUser lk_bookableresourcegroup_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_bookableresourcegroup_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_bookableresourcegroup_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_bookableresourcegroup")]
        public Team team_bookableresourcegroup {
            get {
                return GetRelatedEntity<Team>("team_bookableresourcegroup", null);
            }
            set {
                SetRelatedEntity("team_bookableresourcegroup", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_bookableresourcegroup")]
        public SystemUser user_bookableresourcegroup {
            get {
                return GetRelatedEntity<SystemUser>("user_bookableresourcegroup", null);
            }
            set {
                SetRelatedEntity("user_bookableresourcegroup", null, value);
            }
        }
        
        public static BookableResourceGroup Retrieve(IOrganizationService service, Guid id, params Expression<Func<BookableResourceGroup,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Allows creation of multiple sub statuses mapped to a booking status option.</para>
    /// <para>Display Name: Booking Status</para>
    /// </summary>
    [EntityLogicalName("bookingstatus")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class BookingStatus : ExtendedEntity<BookingStatusState, BookingStatus_StatusCode> {
        
        public const string EntityLogicalName = "bookingstatus";
        
        public const int EntityTypeCode = 1152;
        
        public BookingStatus() : 
                base(EntityLogicalName) {
        }
        
        public BookingStatus(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("name");
            }
        }
        
        [AttributeLogicalName("bookingstatusid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("bookingstatusid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the booking status.</para>
        /// <para>Display Name: Booking Status</para>
        /// </summary>
        [AttributeLogicalName("bookingstatusid")]
        [DisplayName("Booking Status")]
        public Guid? BookingStatusId {
            get {
                return GetAttributeValue<Guid?>("bookingstatusid");
            }
            set {
                SetId("bookingstatusid", value);
            }
        }
        
        /// <summary>
        /// <para>lk_bookingstatus_createdby</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>lk_bookingstatus_createdonbehalfby</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Type a detailed description for the booking status.</para>
        /// <para>Display Name: Description</para>
        /// </summary>
        [AttributeLogicalName("description")]
        [DisplayName("Description")]
        [MaxLength(100)]
        public string Description {
            get {
                return GetAttributeValue<string>("description");
            }
            set {
                SetAttributeValue("description", value);
            }
        }
        
        /// <summary>
        /// <para>Exchange rate for the currency associated with the bookingstatus with respect to the base currency.</para>
        /// <para>Display Name: ExchangeRate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("ExchangeRate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>lk_bookingstatus_modifiedby</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>lk_bookingstatus_modifiedonbehalfby</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Type the name of the booking status.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string Name {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>owner_bookingstatus</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>business_unit_bookingstatus</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>team_bookingstatus</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>user_bookingstatus</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Type the name of the booking status.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the Booking Status</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public BookingStatusState? StateCode {
            get {
                return GetOptionSetValue<BookingStatusState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the booking status should be proposed, committed or canceled.</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("status")]
        [DisplayName("Status")]
        public BookingStatus_Status? Status {
            get {
                return GetOptionSetValue<BookingStatus_Status>("status");
            }
            set {
                SetOptionSetValue("status", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the Booking Status</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public BookingStatus_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<BookingStatus_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>TransactionCurrency_bookingstatus</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Field Service Status</para>
        /// </summary>
        [AttributeLogicalName("msdyn_fieldservicestatus")]
        [DisplayName("Field Service Status")]
        public msdyn_bookingsystemstatus? msdyn_FieldServiceStatus {
            get {
                return GetOptionSetValue<msdyn_bookingsystemstatus>("msdyn_fieldservicestatus");
            }
            set {
                SetOptionSetValue("msdyn_fieldservicestatus", value);
            }
        }
        
        /// <summary>
        /// <para>The URL for a web resource image.</para>
        /// <para>Display Name: Image Url</para>
        /// </summary>
        [AttributeLogicalName("msdyn_imageurl")]
        [DisplayName("Image Url")]
        [MaxLength(200)]
        public string msdyn_ImageUrl {
            get {
                return GetAttributeValue<string>("msdyn_imageurl");
            }
            set {
                SetAttributeValue("msdyn_imageurl", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Internal Flags</para>
        /// </summary>
        [AttributeLogicalName("msdyn_internalflags")]
        [DisplayName("Internal Flags")]
        public string msdyn_InternalFlags {
            get {
                return GetAttributeValue<string>("msdyn_internalflags");
            }
            set {
                SetAttributeValue("msdyn_internalflags", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Status Color</para>
        /// </summary>
        [AttributeLogicalName("msdyn_statuscolor")]
        [DisplayName("Status Color")]
        [MaxLength(100)]
        public string msdyn_StatusColor {
            get {
                return GetAttributeValue<string>("msdyn_statuscolor");
            }
            set {
                SetAttributeValue("msdyn_statuscolor", value);
            }
        }
        
        [RelationshipSchemaName("BookingStatus_SyncErrors")]
        public IEnumerable<SyncError> BookingStatus_SyncErrors {
            get {
                return GetRelatedEntities<SyncError>("BookingStatus_SyncErrors", null);
            }
            set {
                SetRelatedEntities("BookingStatus_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("transactioncurrencyid")]
        [RelationshipSchemaName("TransactionCurrency_bookingstatus")]
        public TransactionCurrency TransactionCurrency_bookingstatus {
            get {
                return GetRelatedEntity<TransactionCurrency>("TransactionCurrency_bookingstatus", null);
            }
            set {
                SetRelatedEntity("TransactionCurrency_bookingstatus", null, value);
            }
        }
        
        [RelationshipSchemaName("bookingstatus_Teams")]
        public IEnumerable<Team> bookingstatus_Teams {
            get {
                return GetRelatedEntities<Team>("bookingstatus_Teams", null);
            }
            set {
                SetRelatedEntities("bookingstatus_Teams", null, value);
            }
        }
        
        [RelationshipSchemaName("bookingstatus_bookableresourcebooking_BookingStatus")]
        public IEnumerable<BookableResourceBooking> bookingstatus_bookableresourcebooking_BookingStatus {
            get {
                return GetRelatedEntities<BookableResourceBooking>("bookingstatus_bookableresourcebooking_BookingStatus", null);
            }
            set {
                SetRelatedEntities("bookingstatus_bookableresourcebooking_BookingStatus", null, value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_bookingstatus")]
        public BusinessUnit business_unit_bookingstatus {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_bookingstatus", null);
            }
            set {
                SetRelatedEntity("business_unit_bookingstatus", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_bookingstatus_createdby")]
        public SystemUser lk_bookingstatus_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_bookingstatus_createdby", null);
            }
            set {
                SetRelatedEntity("lk_bookingstatus_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_bookingstatus_createdonbehalfby")]
        public SystemUser lk_bookingstatus_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_bookingstatus_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_bookingstatus_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_bookingstatus_modifiedby")]
        public SystemUser lk_bookingstatus_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_bookingstatus_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_bookingstatus_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_bookingstatus_modifiedonbehalfby")]
        public SystemUser lk_bookingstatus_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_bookingstatus_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_bookingstatus_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("msdyn_bookingstatus_bookableresourcebookingheader_bookingstatusid")]
        public IEnumerable<BookableResourceBookingHeader> msdyn_bookingstatus_bookableresourcebookingheader_bookingstatusid {
            get {
                return GetRelatedEntities<BookableResourceBookingHeader>("msdyn_bookingstatus_bookableresourcebookingheader_bookingstatusid", null);
            }
            set {
                SetRelatedEntities("msdyn_bookingstatus_bookableresourcebookingheader_bookingstatusid", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_bookingstatus")]
        public Team team_bookingstatus {
            get {
                return GetRelatedEntity<Team>("team_bookingstatus", null);
            }
            set {
                SetRelatedEntity("team_bookingstatus", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_bookingstatus")]
        public SystemUser user_bookingstatus {
            get {
                return GetRelatedEntity<SystemUser>("user_bookingstatus", null);
            }
            set {
                SetRelatedEntity("user_bookingstatus", null, value);
            }
        }
        
        public static BookingStatus Retrieve(IOrganizationService service, Guid id, params Expression<Func<BookingStatus,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Log used to track bulk operation execution, successes, and failures.</para>
    /// <para>Display Name: Bulk Operation Log</para>
    /// </summary>
    [EntityLogicalName("bulkoperationlog")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class BulkOperationLog : ExtendedEntity<EmptyEnum, EmptyEnum> {
        
        public const string EntityLogicalName = "bulkoperationlog";
        
        public const string RelationshipSchemaName = "BulkOperationLog";
        
        public const int EntityTypeCode = 4405;
        
        public BulkOperationLog() : 
                base(EntityLogicalName) {
        }
        
        public BulkOperationLog(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("name");
            }
        }
        
        [AttributeLogicalName("bulkoperationlogid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("bulkoperationlogid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the bulk operation log.</para>
        /// <para>Display Name: Bulk Operation Log Number</para>
        /// </summary>
        [AttributeLogicalName("bulkoperationlogid")]
        [DisplayName("Bulk Operation Log Number")]
        public Guid? BulkOperationLogId {
            get {
                return GetAttributeValue<Guid?>("bulkoperationlogid");
            }
            set {
                SetId("bulkoperationlogid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the data value at which an error occurred during the quick campaign.</para>
        /// <para>Display Name: Failed on Line</para>
        /// </summary>
        [AttributeLogicalName("additionalinfo")]
        [DisplayName("Failed on Line")]
        public string AdditionalInfo {
            get {
                return GetAttributeValue<string>("additionalinfo");
            }
            set {
                SetAttributeValue("additionalinfo", value);
            }
        }
        
        /// <summary>
        /// <para>BulkOperation_logs</para>
        /// <para>Display Name: Bulk Operation Number</para>
        /// </summary>
        [AttributeLogicalName("bulkoperationid")]
        [DisplayName("Bulk Operation Number")]
        public EntityReference BulkOperationId {
            get {
                return GetAttributeValue<EntityReference>("bulkoperationid");
            }
            set {
                SetAttributeValue("bulkoperationid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the campaign activity record that the log applies to. This information is used to relate log data to the parent campaign activity.</para>
        /// <para>Display Name: Campaign Activity Number</para>
        /// </summary>
        [AttributeLogicalName("campaignactivityid")]
        [DisplayName("Campaign Activity Number")]
        public EntityReference CampaignActivityId {
            get {
                return GetAttributeValue<EntityReference>("campaignactivityid");
            }
            set {
                SetAttributeValue("campaignactivityid", value);
            }
        }
        
        /// <summary>
        /// <para>CreatedOpportunity_BulkOperationLogs</para>
        /// <para>Display Name: Created Object</para>
        /// </summary>
        [AttributeLogicalName("createdobjectid")]
        [DisplayName("Created Object")]
        public EntityReference CreatedObjectId {
            get {
                return GetAttributeValue<EntityReference>("createdobjectid");
            }
            set {
                SetAttributeValue("createdobjectid", value);
            }
        }
        
        /// <summary>
        /// <para>The error description formatted.</para>
        /// <para>Display Name: Error description</para>
        /// </summary>
        [AttributeLogicalName("errordescriptionformatted")]
        [DisplayName("Error description")]
        public string ErrorDescriptionFormatted {
            get {
                return GetAttributeValue<string>("errordescriptionformatted");
            }
            set {
                SetAttributeValue("errordescriptionformatted", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the error code that is used to troubleshoot issues in the bulk operation.</para>
        /// <para>Display Name: Reason Id</para>
        /// </summary>
        [AttributeLogicalName("errornumber")]
        [DisplayName("Reason Id")]
        [Range(-2147483648, 2147483647)]
        public int? ErrorNumber {
            get {
                return GetAttributeValue<int?>("errornumber");
            }
        }
        
        /// <summary>
        /// <para>The error number formatted.</para>
        /// <para>Display Name: Error number</para>
        /// </summary>
        [AttributeLogicalName("errornumberformatted")]
        [DisplayName("Error number")]
        public string ErrorNumberFormatted {
            get {
                return GetAttributeValue<string>("errornumberformatted");
            }
            set {
                SetAttributeValue("errornumberformatted", value);
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>name</para>
        /// <para>Display Name: name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("name")]
        [MaxLength(100)]
        public string Name {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user or team who owns the bulk operation log.</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the business unit that owns the bulk operation log.</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public Guid? OwningBusinessUnit {
            get {
                return GetAttributeValue<Guid?>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the team that owns the record.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who owns the bulk operation log.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public Guid? OwningUser {
            get {
                return GetAttributeValue<Guid?>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>name</para>
        /// <para>Display Name: name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("name")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the account, contact, lead, or list that the bulk operation log item applies to.</para>
        /// <para>Display Name: Customers</para>
        /// </summary>
        [AttributeLogicalName("regardingobjectid")]
        [DisplayName("Customers")]
        public EntityReference RegardingObjectId {
            get {
                return GetAttributeValue<EntityReference>("regardingobjectid");
            }
            set {
                SetAttributeValue("regardingobjectid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version Number</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        [AttributeLogicalName("campaignactivityid")]
        [RelationshipSchemaName("CampaignActivity_logs")]
        public CampaignActivity CampaignActivity_logs {
            get {
                return GetRelatedEntity<CampaignActivity>("CampaignActivity_logs", null);
            }
            set {
                SetRelatedEntity("CampaignActivity_logs", null, value);
            }
        }
        
        [AttributeLogicalName("createdobjectid")]
        [RelationshipSchemaName("CreatedAccount_BulkOperationLogs2")]
        public Account CreatedAccount_BulkOperationLogs2 {
            get {
                return GetRelatedEntity<Account>("CreatedAccount_BulkOperationLogs2", null);
            }
            set {
                SetRelatedEntity("CreatedAccount_BulkOperationLogs2", null, value);
            }
        }
        
        [AttributeLogicalName("createdobjectid")]
        [RelationshipSchemaName("CreatedActivity_BulkOperationLogs")]
        public ActivityPointer CreatedActivity_BulkOperationLogs {
            get {
                return GetRelatedEntity<ActivityPointer>("CreatedActivity_BulkOperationLogs", null);
            }
            set {
                SetRelatedEntity("CreatedActivity_BulkOperationLogs", null, value);
            }
        }
        
        [AttributeLogicalName("createdobjectid")]
        [RelationshipSchemaName("CreatedContact_BulkOperationLogs")]
        public Contact CreatedContact_BulkOperationLogs {
            get {
                return GetRelatedEntity<Contact>("CreatedContact_BulkOperationLogs", null);
            }
            set {
                SetRelatedEntity("CreatedContact_BulkOperationLogs", null, value);
            }
        }
        
        [AttributeLogicalName("createdobjectid")]
        [RelationshipSchemaName("CreatedLead_BulkOperationLogs")]
        public Lead CreatedLead_BulkOperationLogs {
            get {
                return GetRelatedEntity<Lead>("CreatedLead_BulkOperationLogs", null);
            }
            set {
                SetRelatedEntity("CreatedLead_BulkOperationLogs", null, value);
            }
        }
        
        [AttributeLogicalName("createdobjectid")]
        [RelationshipSchemaName("CreatedOpportunity_BulkOperationLogs")]
        public Opportunity CreatedOpportunity_BulkOperationLogs {
            get {
                return GetRelatedEntity<Opportunity>("CreatedOpportunity_BulkOperationLogs", null);
            }
            set {
                SetRelatedEntity("CreatedOpportunity_BulkOperationLogs", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("SourceAccount_BulkOperationLogs")]
        public Account SourceAccount_BulkOperationLogs {
            get {
                return GetRelatedEntity<Account>("SourceAccount_BulkOperationLogs", null);
            }
            set {
                SetRelatedEntity("SourceAccount_BulkOperationLogs", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("SourceContact_BulkOperationLogs")]
        public Contact SourceContact_BulkOperationLogs {
            get {
                return GetRelatedEntity<Contact>("SourceContact_BulkOperationLogs", null);
            }
            set {
                SetRelatedEntity("SourceContact_BulkOperationLogs", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("SourceLead_BulkOperationLogs")]
        public Lead SourceLead_BulkOperationLogs {
            get {
                return GetRelatedEntity<Lead>("SourceLead_BulkOperationLogs", null);
            }
            set {
                SetRelatedEntity("SourceLead_BulkOperationLogs", null, value);
            }
        }
        
        [AttributeLogicalName("bulkoperationid")]
        [RelationshipSchemaName("activity_pointer_BulkOperation_logs")]
        public ActivityPointer activity_pointer_BulkOperation_logs {
            get {
                return GetRelatedEntity<ActivityPointer>("activity_pointer_BulkOperation_logs", null);
            }
            set {
                SetRelatedEntity("activity_pointer_BulkOperation_logs", null, value);
            }
        }
        
        [RelationshipSchemaName("bulkoperationlog_SyncErrors")]
        public IEnumerable<SyncError> bulkoperationlog_SyncErrors {
            get {
                return GetRelatedEntities<SyncError>("bulkoperationlog_SyncErrors", null);
            }
            set {
                SetRelatedEntities("bulkoperationlog_SyncErrors", null, value);
            }
        }
        
        [RelationshipSchemaName("bulkoperationlog_Teams")]
        public IEnumerable<Team> bulkoperationlog_Teams {
            get {
                return GetRelatedEntities<Team>("bulkoperationlog_Teams", null);
            }
            set {
                SetRelatedEntities("bulkoperationlog_Teams", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_bulkoperationlog")]
        public Team team_bulkoperationlog {
            get {
                return GetRelatedEntity<Team>("team_bulkoperationlog", null);
            }
            set {
                SetRelatedEntity("team_bulkoperationlog", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_bulkoperationlog")]
        public SystemUser user_bulkoperationlog {
            get {
                return GetRelatedEntity<SystemUser>("user_bulkoperationlog", null);
            }
            set {
                SetRelatedEntity("user_bulkoperationlog", null, value);
            }
        }
        
        public static BulkOperationLog Retrieve(IOrganizationService service, Guid id, params Expression<Func<BulkOperationLog,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Business, division, or department in the Microsoft Dynamics 365 database.</para>
    /// <para>Display Name: Business Unit</para>
    /// </summary>
    [EntityLogicalName("businessunit")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class BusinessUnit : ExtendedEntity<EmptyEnum, EmptyEnum> {
        
        public const string EntityLogicalName = "businessunit";
        
        public const int EntityTypeCode = 10;
        
        public BusinessUnit() : 
                base(EntityLogicalName) {
        }
        
        public BusinessUnit(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("name");
            }
        }
        
        [AttributeLogicalName("businessunitid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("businessunitid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the business unit.</para>
        /// <para>Display Name: Business Unit</para>
        /// </summary>
        [AttributeLogicalName("businessunitid")]
        [DisplayName("Business Unit")]
        public Guid? BusinessUnitId {
            get {
                return GetAttributeValue<Guid?>("businessunitid");
            }
            set {
                SetId("businessunitid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for address 1.</para>
        /// <para>Display Name: Address 1: ID</para>
        /// </summary>
        [AttributeLogicalName("address1_addressid")]
        [DisplayName("Address 1: ID")]
        public Guid? Address1_AddressId {
            get {
                return GetAttributeValue<Guid?>("address1_addressid");
            }
            set {
                SetAttributeValue("address1_addressid", value);
            }
        }
        
        /// <summary>
        /// <para>Type of address for address 1, such as billing, shipping, or primary address.</para>
        /// <para>Display Name: Address 1: Address Type</para>
        /// </summary>
        [AttributeLogicalName("address1_addresstypecode")]
        [DisplayName("Address 1: Address Type")]
        public BusinessUnit_Address1_AddressTypeCode? Address1_AddressTypeCode {
            get {
                return GetOptionSetValue<BusinessUnit_Address1_AddressTypeCode>("address1_addresstypecode");
            }
            set {
                SetOptionSetValue("address1_addresstypecode", value);
            }
        }
        
        /// <summary>
        /// <para>City name for address 1.</para>
        /// <para>Display Name: Bill To City</para>
        /// </summary>
        [AttributeLogicalName("address1_city")]
        [DisplayName("Bill To City")]
        [MaxLength(80)]
        public string Address1_City {
            get {
                return GetAttributeValue<string>("address1_city");
            }
            set {
                SetAttributeValue("address1_city", value);
            }
        }
        
        /// <summary>
        /// <para>Country/region name for address 1.</para>
        /// <para>Display Name: Bill To Country/Region</para>
        /// </summary>
        [AttributeLogicalName("address1_country")]
        [DisplayName("Bill To Country/Region")]
        [MaxLength(80)]
        public string Address1_Country {
            get {
                return GetAttributeValue<string>("address1_country");
            }
            set {
                SetAttributeValue("address1_country", value);
            }
        }
        
        /// <summary>
        /// <para>County name for address 1.</para>
        /// <para>Display Name: Address 1: County</para>
        /// </summary>
        [AttributeLogicalName("address1_county")]
        [DisplayName("Address 1: County")]
        [MaxLength(50)]
        public string Address1_County {
            get {
                return GetAttributeValue<string>("address1_county");
            }
            set {
                SetAttributeValue("address1_county", value);
            }
        }
        
        /// <summary>
        /// <para>Fax number for address 1.</para>
        /// <para>Display Name: Address 1: Fax</para>
        /// </summary>
        [AttributeLogicalName("address1_fax")]
        [DisplayName("Address 1: Fax")]
        [MaxLength(50)]
        public string Address1_Fax {
            get {
                return GetAttributeValue<string>("address1_fax");
            }
            set {
                SetAttributeValue("address1_fax", value);
            }
        }
        
        /// <summary>
        /// <para>Latitude for address 1.</para>
        /// <para>Display Name: Address 1: Latitude</para>
        /// </summary>
        [AttributeLogicalName("address1_latitude")]
        [DisplayName("Address 1: Latitude")]
        public double? Address1_Latitude {
            get {
                return GetAttributeValue<double?>("address1_latitude");
            }
            set {
                SetAttributeValue("address1_latitude", value);
            }
        }
        
        /// <summary>
        /// <para>First line for entering address 1 information.</para>
        /// <para>Display Name: Bill To Street 1</para>
        /// </summary>
        [AttributeLogicalName("address1_line1")]
        [DisplayName("Bill To Street 1")]
        [MaxLength(250)]
        public string Address1_Line1 {
            get {
                return GetAttributeValue<string>("address1_line1");
            }
            set {
                SetAttributeValue("address1_line1", value);
            }
        }
        
        /// <summary>
        /// <para>Second line for entering address 1 information.</para>
        /// <para>Display Name: Bill To Street 2</para>
        /// </summary>
        [AttributeLogicalName("address1_line2")]
        [DisplayName("Bill To Street 2")]
        [MaxLength(250)]
        public string Address1_Line2 {
            get {
                return GetAttributeValue<string>("address1_line2");
            }
            set {
                SetAttributeValue("address1_line2", value);
            }
        }
        
        /// <summary>
        /// <para>Third line for entering address 1 information.</para>
        /// <para>Display Name: Bill To Street 3</para>
        /// </summary>
        [AttributeLogicalName("address1_line3")]
        [DisplayName("Bill To Street 3")]
        [MaxLength(250)]
        public string Address1_Line3 {
            get {
                return GetAttributeValue<string>("address1_line3");
            }
            set {
                SetAttributeValue("address1_line3", value);
            }
        }
        
        /// <summary>
        /// <para>Longitude for address 1.</para>
        /// <para>Display Name: Address 1: Longitude</para>
        /// </summary>
        [AttributeLogicalName("address1_longitude")]
        [DisplayName("Address 1: Longitude")]
        public double? Address1_Longitude {
            get {
                return GetAttributeValue<double?>("address1_longitude");
            }
            set {
                SetAttributeValue("address1_longitude", value);
            }
        }
        
        /// <summary>
        /// <para>Name to enter for address 1.</para>
        /// <para>Display Name: Address 1: Name</para>
        /// </summary>
        [AttributeLogicalName("address1_name")]
        [DisplayName("Address 1: Name")]
        [MaxLength(100)]
        public string Address1_Name {
            get {
                return GetAttributeValue<string>("address1_name");
            }
            set {
                SetAttributeValue("address1_name", value);
            }
        }
        
        /// <summary>
        /// <para>Post office box number for address 1.</para>
        /// <para>Display Name: Address 1: Post Office Box</para>
        /// </summary>
        [AttributeLogicalName("address1_postofficebox")]
        [DisplayName("Address 1: Post Office Box")]
        [MaxLength(20)]
        public string Address1_PostOfficeBox {
            get {
                return GetAttributeValue<string>("address1_postofficebox");
            }
            set {
                SetAttributeValue("address1_postofficebox", value);
            }
        }
        
        /// <summary>
        /// <para>ZIP Code or postal code for address 1.</para>
        /// <para>Display Name: Bill To ZIP/Postal Code</para>
        /// </summary>
        [AttributeLogicalName("address1_postalcode")]
        [DisplayName("Bill To ZIP/Postal Code")]
        [MaxLength(20)]
        public string Address1_PostalCode {
            get {
                return GetAttributeValue<string>("address1_postalcode");
            }
            set {
                SetAttributeValue("address1_postalcode", value);
            }
        }
        
        /// <summary>
        /// <para>Method of shipment for address 1.</para>
        /// <para>Display Name: Address 1: Shipping Method</para>
        /// </summary>
        [AttributeLogicalName("address1_shippingmethodcode")]
        [DisplayName("Address 1: Shipping Method")]
        public BusinessUnit_Address1_ShippingMethodCode? Address1_ShippingMethodCode {
            get {
                return GetOptionSetValue<BusinessUnit_Address1_ShippingMethodCode>("address1_shippingmethodcode");
            }
            set {
                SetOptionSetValue("address1_shippingmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>State or province for address 1.</para>
        /// <para>Display Name: Bill To State/Province</para>
        /// </summary>
        [AttributeLogicalName("address1_stateorprovince")]
        [DisplayName("Bill To State/Province")]
        [MaxLength(50)]
        public string Address1_StateOrProvince {
            get {
                return GetAttributeValue<string>("address1_stateorprovince");
            }
            set {
                SetAttributeValue("address1_stateorprovince", value);
            }
        }
        
        /// <summary>
        /// <para>First telephone number associated with address 1.</para>
        /// <para>Display Name: Main Phone</para>
        /// </summary>
        [AttributeLogicalName("address1_telephone1")]
        [DisplayName("Main Phone")]
        [MaxLength(50)]
        public string Address1_Telephone1 {
            get {
                return GetAttributeValue<string>("address1_telephone1");
            }
            set {
                SetAttributeValue("address1_telephone1", value);
            }
        }
        
        /// <summary>
        /// <para>Second telephone number associated with address 1.</para>
        /// <para>Display Name: Other Phone</para>
        /// </summary>
        [AttributeLogicalName("address1_telephone2")]
        [DisplayName("Other Phone")]
        [MaxLength(50)]
        public string Address1_Telephone2 {
            get {
                return GetAttributeValue<string>("address1_telephone2");
            }
            set {
                SetAttributeValue("address1_telephone2", value);
            }
        }
        
        /// <summary>
        /// <para>Third telephone number associated with address 1.</para>
        /// <para>Display Name: Address 1: Telephone 3</para>
        /// </summary>
        [AttributeLogicalName("address1_telephone3")]
        [DisplayName("Address 1: Telephone 3")]
        [MaxLength(50)]
        public string Address1_Telephone3 {
            get {
                return GetAttributeValue<string>("address1_telephone3");
            }
            set {
                SetAttributeValue("address1_telephone3", value);
            }
        }
        
        /// <summary>
        /// <para>United Parcel Service (UPS) zone for address 1.</para>
        /// <para>Display Name: Address 1: UPS Zone</para>
        /// </summary>
        [AttributeLogicalName("address1_upszone")]
        [DisplayName("Address 1: UPS Zone")]
        [MaxLength(4)]
        public string Address1_UPSZone {
            get {
                return GetAttributeValue<string>("address1_upszone");
            }
            set {
                SetAttributeValue("address1_upszone", value);
            }
        }
        
        /// <summary>
        /// <para>UTC offset for address 1. This is the difference between local time and standard Coordinated Universal Time.</para>
        /// <para>Display Name: Address 1: UTC Offset</para>
        /// </summary>
        [AttributeLogicalName("address1_utcoffset")]
        [DisplayName("Address 1: UTC Offset")]
        [Range(-1500, 1500)]
        public int? Address1_UTCOffset {
            get {
                return GetAttributeValue<int?>("address1_utcoffset");
            }
            set {
                SetAttributeValue("address1_utcoffset", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for address 2.</para>
        /// <para>Display Name: Address 2: ID</para>
        /// </summary>
        [AttributeLogicalName("address2_addressid")]
        [DisplayName("Address 2: ID")]
        public Guid? Address2_AddressId {
            get {
                return GetAttributeValue<Guid?>("address2_addressid");
            }
            set {
                SetAttributeValue("address2_addressid", value);
            }
        }
        
        /// <summary>
        /// <para>Type of address for address 2, such as billing, shipping, or primary address.</para>
        /// <para>Display Name: Address 2: Address Type</para>
        /// </summary>
        [AttributeLogicalName("address2_addresstypecode")]
        [DisplayName("Address 2: Address Type")]
        public BusinessUnit_Address2_AddressTypeCode? Address2_AddressTypeCode {
            get {
                return GetOptionSetValue<BusinessUnit_Address2_AddressTypeCode>("address2_addresstypecode");
            }
            set {
                SetOptionSetValue("address2_addresstypecode", value);
            }
        }
        
        /// <summary>
        /// <para>City name for address 2.</para>
        /// <para>Display Name: Ship To City</para>
        /// </summary>
        [AttributeLogicalName("address2_city")]
        [DisplayName("Ship To City")]
        [MaxLength(80)]
        public string Address2_City {
            get {
                return GetAttributeValue<string>("address2_city");
            }
            set {
                SetAttributeValue("address2_city", value);
            }
        }
        
        /// <summary>
        /// <para>Country/region name for address 2.</para>
        /// <para>Display Name: Ship To Country/Region</para>
        /// </summary>
        [AttributeLogicalName("address2_country")]
        [DisplayName("Ship To Country/Region")]
        [MaxLength(80)]
        public string Address2_Country {
            get {
                return GetAttributeValue<string>("address2_country");
            }
            set {
                SetAttributeValue("address2_country", value);
            }
        }
        
        /// <summary>
        /// <para>County name for address 2.</para>
        /// <para>Display Name: Address 2: County</para>
        /// </summary>
        [AttributeLogicalName("address2_county")]
        [DisplayName("Address 2: County")]
        [MaxLength(50)]
        public string Address2_County {
            get {
                return GetAttributeValue<string>("address2_county");
            }
            set {
                SetAttributeValue("address2_county", value);
            }
        }
        
        /// <summary>
        /// <para>Fax number for address 2.</para>
        /// <para>Display Name: Address 2: Fax</para>
        /// </summary>
        [AttributeLogicalName("address2_fax")]
        [DisplayName("Address 2: Fax")]
        [MaxLength(50)]
        public string Address2_Fax {
            get {
                return GetAttributeValue<string>("address2_fax");
            }
            set {
                SetAttributeValue("address2_fax", value);
            }
        }
        
        /// <summary>
        /// <para>Latitude for address 2.</para>
        /// <para>Display Name: Address 2: Latitude</para>
        /// </summary>
        [AttributeLogicalName("address2_latitude")]
        [DisplayName("Address 2: Latitude")]
        public double? Address2_Latitude {
            get {
                return GetAttributeValue<double?>("address2_latitude");
            }
            set {
                SetAttributeValue("address2_latitude", value);
            }
        }
        
        /// <summary>
        /// <para>First line for entering address 2 information.</para>
        /// <para>Display Name: Ship To Street 1</para>
        /// </summary>
        [AttributeLogicalName("address2_line1")]
        [DisplayName("Ship To Street 1")]
        [MaxLength(250)]
        public string Address2_Line1 {
            get {
                return GetAttributeValue<string>("address2_line1");
            }
            set {
                SetAttributeValue("address2_line1", value);
            }
        }
        
        /// <summary>
        /// <para>Second line for entering address 2 information.</para>
        /// <para>Display Name: Ship To Street 2</para>
        /// </summary>
        [AttributeLogicalName("address2_line2")]
        [DisplayName("Ship To Street 2")]
        [MaxLength(250)]
        public string Address2_Line2 {
            get {
                return GetAttributeValue<string>("address2_line2");
            }
            set {
                SetAttributeValue("address2_line2", value);
            }
        }
        
        /// <summary>
        /// <para>Third line for entering address 2 information.</para>
        /// <para>Display Name: Ship To Street 3</para>
        /// </summary>
        [AttributeLogicalName("address2_line3")]
        [DisplayName("Ship To Street 3")]
        [MaxLength(250)]
        public string Address2_Line3 {
            get {
                return GetAttributeValue<string>("address2_line3");
            }
            set {
                SetAttributeValue("address2_line3", value);
            }
        }
        
        /// <summary>
        /// <para>Longitude for address 2.</para>
        /// <para>Display Name: Address 2: Longitude</para>
        /// </summary>
        [AttributeLogicalName("address2_longitude")]
        [DisplayName("Address 2: Longitude")]
        public double? Address2_Longitude {
            get {
                return GetAttributeValue<double?>("address2_longitude");
            }
            set {
                SetAttributeValue("address2_longitude", value);
            }
        }
        
        /// <summary>
        /// <para>Name to enter for address 2.</para>
        /// <para>Display Name: Address 2: Name</para>
        /// </summary>
        [AttributeLogicalName("address2_name")]
        [DisplayName("Address 2: Name")]
        [MaxLength(100)]
        public string Address2_Name {
            get {
                return GetAttributeValue<string>("address2_name");
            }
            set {
                SetAttributeValue("address2_name", value);
            }
        }
        
        /// <summary>
        /// <para>Post office box number for address 2.</para>
        /// <para>Display Name: Address 2: Post Office Box</para>
        /// </summary>
        [AttributeLogicalName("address2_postofficebox")]
        [DisplayName("Address 2: Post Office Box")]
        [MaxLength(20)]
        public string Address2_PostOfficeBox {
            get {
                return GetAttributeValue<string>("address2_postofficebox");
            }
            set {
                SetAttributeValue("address2_postofficebox", value);
            }
        }
        
        /// <summary>
        /// <para>ZIP Code or postal code for address 2.</para>
        /// <para>Display Name: Ship To ZIP/Postal Code</para>
        /// </summary>
        [AttributeLogicalName("address2_postalcode")]
        [DisplayName("Ship To ZIP/Postal Code")]
        [MaxLength(20)]
        public string Address2_PostalCode {
            get {
                return GetAttributeValue<string>("address2_postalcode");
            }
            set {
                SetAttributeValue("address2_postalcode", value);
            }
        }
        
        /// <summary>
        /// <para>Method of shipment for address 2.</para>
        /// <para>Display Name: Address 2: Shipping Method</para>
        /// </summary>
        [AttributeLogicalName("address2_shippingmethodcode")]
        [DisplayName("Address 2: Shipping Method")]
        public BusinessUnit_Address2_ShippingMethodCode? Address2_ShippingMethodCode {
            get {
                return GetOptionSetValue<BusinessUnit_Address2_ShippingMethodCode>("address2_shippingmethodcode");
            }
            set {
                SetOptionSetValue("address2_shippingmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>State or province for address 2.</para>
        /// <para>Display Name: Ship To State/Province</para>
        /// </summary>
        [AttributeLogicalName("address2_stateorprovince")]
        [DisplayName("Ship To State/Province")]
        [MaxLength(50)]
        public string Address2_StateOrProvince {
            get {
                return GetAttributeValue<string>("address2_stateorprovince");
            }
            set {
                SetAttributeValue("address2_stateorprovince", value);
            }
        }
        
        /// <summary>
        /// <para>First telephone number associated with address 2.</para>
        /// <para>Display Name: Address 2: Telephone 1</para>
        /// </summary>
        [AttributeLogicalName("address2_telephone1")]
        [DisplayName("Address 2: Telephone 1")]
        [MaxLength(50)]
        public string Address2_Telephone1 {
            get {
                return GetAttributeValue<string>("address2_telephone1");
            }
            set {
                SetAttributeValue("address2_telephone1", value);
            }
        }
        
        /// <summary>
        /// <para>Second telephone number associated with address 2.</para>
        /// <para>Display Name: Address 2: Telephone 2</para>
        /// </summary>
        [AttributeLogicalName("address2_telephone2")]
        [DisplayName("Address 2: Telephone 2")]
        [MaxLength(50)]
        public string Address2_Telephone2 {
            get {
                return GetAttributeValue<string>("address2_telephone2");
            }
            set {
                SetAttributeValue("address2_telephone2", value);
            }
        }
        
        /// <summary>
        /// <para>Third telephone number associated with address 2.</para>
        /// <para>Display Name: Address 2: Telephone 3</para>
        /// </summary>
        [AttributeLogicalName("address2_telephone3")]
        [DisplayName("Address 2: Telephone 3")]
        [MaxLength(50)]
        public string Address2_Telephone3 {
            get {
                return GetAttributeValue<string>("address2_telephone3");
            }
            set {
                SetAttributeValue("address2_telephone3", value);
            }
        }
        
        /// <summary>
        /// <para>United Parcel Service (UPS) zone for address 2.</para>
        /// <para>Display Name: Address 2: UPS Zone</para>
        /// </summary>
        [AttributeLogicalName("address2_upszone")]
        [DisplayName("Address 2: UPS Zone")]
        [MaxLength(4)]
        public string Address2_UPSZone {
            get {
                return GetAttributeValue<string>("address2_upszone");
            }
            set {
                SetAttributeValue("address2_upszone", value);
            }
        }
        
        /// <summary>
        /// <para>UTC offset for address 2. This is the difference between local time and standard Coordinated Universal Time.</para>
        /// <para>Display Name: Address 2: UTC Offset</para>
        /// </summary>
        [AttributeLogicalName("address2_utcoffset")]
        [DisplayName("Address 2: UTC Offset")]
        [Range(-1500, 1500)]
        public int? Address2_UTCOffset {
            get {
                return GetAttributeValue<int?>("address2_utcoffset");
            }
            set {
                SetAttributeValue("address2_utcoffset", value);
            }
        }
        
        /// <summary>
        /// <para>Fiscal calendar associated with the business unit.</para>
        /// <para>Display Name: Calendar</para>
        /// </summary>
        [AttributeLogicalName("calendarid")]
        [DisplayName("Calendar")]
        public EntityReference CalendarId {
            get {
                return GetAttributeValue<EntityReference>("calendarid");
            }
            set {
                SetAttributeValue("calendarid", value);
            }
        }
        
        /// <summary>
        /// <para>Name of the business unit cost center.</para>
        /// <para>Display Name: Cost Center</para>
        /// </summary>
        [AttributeLogicalName("costcenter")]
        [DisplayName("Cost Center")]
        [MaxLength(100)]
        public string CostCenter {
            get {
                return GetAttributeValue<string>("costcenter");
            }
            set {
                SetAttributeValue("costcenter", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the business unit.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the business unit was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the businessunit.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Credit limit for the business unit.</para>
        /// <para>Display Name: Credit Limit</para>
        /// </summary>
        [AttributeLogicalName("creditlimit")]
        [DisplayName("Credit Limit")]
        public double? CreditLimit {
            get {
                return GetAttributeValue<double?>("creditlimit");
            }
            set {
                SetAttributeValue("creditlimit", value);
            }
        }
        
        /// <summary>
        /// <para>Description of the business unit.</para>
        /// <para>Display Name: Description</para>
        /// </summary>
        [AttributeLogicalName("description")]
        [DisplayName("Description")]
        public string Description {
            get {
                return GetAttributeValue<string>("description");
            }
            set {
                SetAttributeValue("description", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for disabling the business unit.</para>
        /// <para>Display Name: Disable Reason</para>
        /// </summary>
        [AttributeLogicalName("disabledreason")]
        [DisplayName("Disable Reason")]
        [MaxLength(500)]
        public string DisabledReason {
            get {
                return GetAttributeValue<string>("disabledreason");
            }
        }
        
        /// <summary>
        /// <para>Name of the division to which the business unit belongs.</para>
        /// <para>Display Name: Division</para>
        /// </summary>
        [AttributeLogicalName("divisionname")]
        [DisplayName("Division")]
        [MaxLength(100)]
        public string DivisionName {
            get {
                return GetAttributeValue<string>("divisionname");
            }
            set {
                SetAttributeValue("divisionname", value);
            }
        }
        
        /// <summary>
        /// <para>Email address for the business unit.</para>
        /// <para>Display Name: Email</para>
        /// </summary>
        [AttributeLogicalName("emailaddress")]
        [DisplayName("Email")]
        [MaxLength(100)]
        public string EMailAddress {
            get {
                return GetAttributeValue<string>("emailaddress");
            }
            set {
                SetAttributeValue("emailaddress", value);
            }
        }
        
        /// <summary>
        /// <para>Exchange rate for the currency associated with the businessunit with respect to the base currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("Exchange Rate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Alternative name under which the business unit can be filed.</para>
        /// <para>Display Name: File as Name</para>
        /// </summary>
        [AttributeLogicalName("fileasname")]
        [DisplayName("File as Name")]
        [MaxLength(100)]
        public string FileAsName {
            get {
                return GetAttributeValue<string>("fileasname");
            }
            set {
                SetAttributeValue("fileasname", value);
            }
        }
        
        /// <summary>
        /// <para>FTP site URL for the business unit.</para>
        /// <para>Display Name: FTP Site</para>
        /// </summary>
        [AttributeLogicalName("ftpsiteurl")]
        [DisplayName("FTP Site")]
        [MaxLength(200)]
        public string FtpSiteUrl {
            get {
                return GetAttributeValue<string>("ftpsiteurl");
            }
            set {
                SetAttributeValue("ftpsiteurl", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the data import or data migration that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Inheritance mask for the business unit.</para>
        /// <para>Display Name: Inheritance Mask</para>
        /// </summary>
        [AttributeLogicalName("inheritancemask")]
        [DisplayName("Inheritance Mask")]
        [Range(0, 1000000000)]
        public int? InheritanceMask {
            get {
                return GetAttributeValue<int?>("inheritancemask");
            }
            set {
                SetAttributeValue("inheritancemask", value);
            }
        }
        
        /// <summary>
        /// <para>Information about whether the business unit is enabled or disabled.</para>
        /// <para>Display Name: Is Disabled</para>
        /// </summary>
        [AttributeLogicalName("isdisabled")]
        [DisplayName("Is Disabled")]
        public bool? IsDisabled {
            get {
                return GetAttributeValue<bool?>("isdisabled");
            }
            set {
                SetAttributeValue("isdisabled", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who last modified the business unit.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the business unit was last modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who last modified the businessunit.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Name of the business unit.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Name")]
        [MaxLength(160)]
        public string Name {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the organization associated with the business unit.</para>
        /// <para>Display Name: Organization</para>
        /// </summary>
        [AttributeLogicalName("organizationid")]
        [DisplayName("Organization")]
        public EntityReference OrganizationId {
            get {
                return GetAttributeValue<EntityReference>("organizationid");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the parent business unit.</para>
        /// <para>Display Name: Parent Business</para>
        /// </summary>
        [AttributeLogicalName("parentbusinessunitid")]
        [DisplayName("Parent Business")]
        public EntityReference ParentBusinessUnitId {
            get {
                return GetAttributeValue<EntityReference>("parentbusinessunitid");
            }
            set {
                SetAttributeValue("parentbusinessunitid", value);
            }
        }
        
        /// <summary>
        /// <para>Picture or diagram of the business unit.</para>
        /// <para>Display Name: Picture</para>
        /// </summary>
        [AttributeLogicalName("picture")]
        [DisplayName("Picture")]
        public string Picture {
            get {
                return GetAttributeValue<string>("picture");
            }
            set {
                SetAttributeValue("picture", value);
            }
        }
        
        /// <summary>
        /// <para>Name of the business unit.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Name")]
        [MaxLength(160)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Stock exchange on which the business is listed.</para>
        /// <para>Display Name: Stock Exchange</para>
        /// </summary>
        [AttributeLogicalName("stockexchange")]
        [DisplayName("Stock Exchange")]
        [MaxLength(20)]
        public string StockExchange {
            get {
                return GetAttributeValue<string>("stockexchange");
            }
            set {
                SetAttributeValue("stockexchange", value);
            }
        }
        
        /// <summary>
        /// <para>Stock exchange ticker symbol for the business unit.</para>
        /// <para>Display Name: Ticker Symbol</para>
        /// </summary>
        [AttributeLogicalName("tickersymbol")]
        [DisplayName("Ticker Symbol")]
        [MaxLength(10)]
        public string TickerSymbol {
            get {
                return GetAttributeValue<string>("tickersymbol");
            }
            set {
                SetAttributeValue("tickersymbol", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the currency associated with the businessunit.</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>UTC offset for the business unit. This is the difference between local time and standard Coordinated Universal Time.</para>
        /// <para>Display Name: UTC Offset</para>
        /// </summary>
        [AttributeLogicalName("utcoffset")]
        [DisplayName("UTC Offset")]
        [Range(-1500, 1500)]
        public int? UTCOffset {
            get {
                return GetAttributeValue<int?>("utcoffset");
            }
            set {
                SetAttributeValue("utcoffset", value);
            }
        }
        
        /// <summary>
        /// <para>Version number of the business unit.</para>
        /// <para>Display Name: Version number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Website URL for the business unit.</para>
        /// <para>Display Name: Website</para>
        /// </summary>
        [AttributeLogicalName("websiteurl")]
        [DisplayName("Website")]
        [MaxLength(200)]
        public string WebSiteUrl {
            get {
                return GetAttributeValue<string>("websiteurl");
            }
            set {
                SetAttributeValue("websiteurl", value);
            }
        }
        
        /// <summary>
        /// <para>Information about whether workflow or sales process rules have been suspended.</para>
        /// <para>Display Name: Workflow Suspended</para>
        /// </summary>
        [AttributeLogicalName("workflowsuspended")]
        [DisplayName("Workflow Suspended")]
        public bool? WorkflowSuspended {
            get {
                return GetAttributeValue<bool?>("workflowsuspended");
            }
            set {
                SetAttributeValue("workflowsuspended", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for Warehouse associated with Business Unit.</para>
        /// <para>Display Name: Warehouse (Deprecated)</para>
        /// </summary>
        [AttributeLogicalName("msdyn_warehouse")]
        [DisplayName("Warehouse (Deprecated)")]
        public EntityReference msdyn_Warehouse {
            get {
                return GetAttributeValue<EntityReference>("msdyn_warehouse");
            }
            set {
                SetAttributeValue("msdyn_warehouse", value);
            }
        }
        
        [AttributeLogicalName("calendarid")]
        [RelationshipSchemaName("BusinessUnit_Calendar")]
        public Calendar BusinessUnit_Calendar {
            get {
                return GetRelatedEntity<Calendar>("BusinessUnit_Calendar", null);
            }
            set {
                SetRelatedEntity("BusinessUnit_Calendar", null, value);
            }
        }
        
        [RelationshipSchemaName("BusinessUnit_Campaigns")]
        public IEnumerable<Campaign> BusinessUnit_Campaigns {
            get {
                return GetRelatedEntities<Campaign>("BusinessUnit_Campaigns", null);
            }
            set {
                SetRelatedEntities("BusinessUnit_Campaigns", null, value);
            }
        }
        
        [RelationshipSchemaName("BusinessUnit_SyncError")]
        public IEnumerable<SyncError> BusinessUnit_SyncError {
            get {
                return GetRelatedEntities<SyncError>("BusinessUnit_SyncError", null);
            }
            set {
                SetRelatedEntities("BusinessUnit_SyncError", null, value);
            }
        }
        
        [RelationshipSchemaName("BusinessUnit_SyncErrors")]
        public IEnumerable<SyncError> BusinessUnit_SyncErrors {
            get {
                return GetRelatedEntities<SyncError>("BusinessUnit_SyncErrors", null);
            }
            set {
                SetRelatedEntities("BusinessUnit_SyncErrors", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_parent_business_unit", EntityRole.Referenced)]
        public IEnumerable<BusinessUnit> Referencedbusiness_unit_parent_business_unit {
            get {
                return GetRelatedEntities<BusinessUnit>("business_unit_parent_business_unit", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("business_unit_parent_business_unit", EntityRole.Referenced, value);
            }
        }
        
        [AttributeLogicalName("parentbusinessunitid")]
        [RelationshipSchemaName("business_unit_parent_business_unit", EntityRole.Referencing)]
        public BusinessUnit Referencingbusiness_unit_parent_business_unit {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_parent_business_unit", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("business_unit_parent_business_unit", EntityRole.Referencing, value);
            }
        }
        
        [AttributeLogicalName("transactioncurrencyid")]
        [RelationshipSchemaName("TransactionCurrency_BusinessUnit")]
        public TransactionCurrency TransactionCurrency_BusinessUnit {
            get {
                return GetRelatedEntity<TransactionCurrency>("TransactionCurrency_BusinessUnit", null);
            }
            set {
                SetRelatedEntity("TransactionCurrency_BusinessUnit", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_accounts")]
        public IEnumerable<Account> business_unit_accounts {
            get {
                return GetRelatedEntities<Account>("business_unit_accounts", null);
            }
            set {
                SetRelatedEntities("business_unit_accounts", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_activitypointer")]
        public IEnumerable<ActivityPointer> business_unit_activitypointer {
            get {
                return GetRelatedEntities<ActivityPointer>("business_unit_activitypointer", null);
            }
            set {
                SetRelatedEntities("business_unit_activitypointer", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_appointment_activities")]
        public IEnumerable<Appointment> business_unit_appointment_activities {
            get {
                return GetRelatedEntities<Appointment>("business_unit_appointment_activities", null);
            }
            set {
                SetRelatedEntities("business_unit_appointment_activities", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_bookableresource")]
        public IEnumerable<BookableResource> business_unit_bookableresource {
            get {
                return GetRelatedEntities<BookableResource>("business_unit_bookableresource", null);
            }
            set {
                SetRelatedEntities("business_unit_bookableresource", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_bookableresourcebooking")]
        public IEnumerable<BookableResourceBooking> business_unit_bookableresourcebooking {
            get {
                return GetRelatedEntities<BookableResourceBooking>("business_unit_bookableresourcebooking", null);
            }
            set {
                SetRelatedEntities("business_unit_bookableresourcebooking", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_bookableresourcebookingheader")]
        public IEnumerable<BookableResourceBookingHeader> business_unit_bookableresourcebookingheader {
            get {
                return GetRelatedEntities<BookableResourceBookingHeader>("business_unit_bookableresourcebookingheader", null);
            }
            set {
                SetRelatedEntities("business_unit_bookableresourcebookingheader", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_bookableresourcecategory")]
        public IEnumerable<BookableResourceCategory> business_unit_bookableresourcecategory {
            get {
                return GetRelatedEntities<BookableResourceCategory>("business_unit_bookableresourcecategory", null);
            }
            set {
                SetRelatedEntities("business_unit_bookableresourcecategory", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_bookableresourcecategoryassn")]
        public IEnumerable<BookableResourceCategoryAssn> business_unit_bookableresourcecategoryassn {
            get {
                return GetRelatedEntities<BookableResourceCategoryAssn>("business_unit_bookableresourcecategoryassn", null);
            }
            set {
                SetRelatedEntities("business_unit_bookableresourcecategoryassn", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_bookableresourcecharacteristic")]
        public IEnumerable<BookableResourceCharacteristic> business_unit_bookableresourcecharacteristic {
            get {
                return GetRelatedEntities<BookableResourceCharacteristic>("business_unit_bookableresourcecharacteristic", null);
            }
            set {
                SetRelatedEntities("business_unit_bookableresourcecharacteristic", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_bookableresourcegroup")]
        public IEnumerable<BookableResourceGroup> business_unit_bookableresourcegroup {
            get {
                return GetRelatedEntities<BookableResourceGroup>("business_unit_bookableresourcegroup", null);
            }
            set {
                SetRelatedEntities("business_unit_bookableresourcegroup", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_bookingstatus")]
        public IEnumerable<BookingStatus> business_unit_bookingstatus {
            get {
                return GetRelatedEntities<BookingStatus>("business_unit_bookingstatus", null);
            }
            set {
                SetRelatedEntities("business_unit_bookingstatus", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_calendars")]
        public IEnumerable<Calendar> business_unit_calendars {
            get {
                return GetRelatedEntities<Calendar>("business_unit_calendars", null);
            }
            set {
                SetRelatedEntities("business_unit_calendars", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_campaignactivity_activities")]
        public IEnumerable<CampaignActivity> business_unit_campaignactivity_activities {
            get {
                return GetRelatedEntities<CampaignActivity>("business_unit_campaignactivity_activities", null);
            }
            set {
                SetRelatedEntities("business_unit_campaignactivity_activities", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_campaignresponse_activities")]
        public IEnumerable<CampaignResponse> business_unit_campaignresponse_activities {
            get {
                return GetRelatedEntities<CampaignResponse>("business_unit_campaignresponse_activities", null);
            }
            set {
                SetRelatedEntities("business_unit_campaignresponse_activities", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_characteristic")]
        public IEnumerable<Characteristic> business_unit_characteristic {
            get {
                return GetRelatedEntities<Characteristic>("business_unit_characteristic", null);
            }
            set {
                SetRelatedEntities("business_unit_characteristic", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_connections")]
        public IEnumerable<Connection> business_unit_connections {
            get {
                return GetRelatedEntities<Connection>("business_unit_connections", null);
            }
            set {
                SetRelatedEntities("business_unit_connections", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_contacts")]
        public IEnumerable<Contact> business_unit_contacts {
            get {
                return GetRelatedEntities<Contact>("business_unit_contacts", null);
            }
            set {
                SetRelatedEntities("business_unit_contacts", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_dg_animal")]
        public IEnumerable<dg_animal> business_unit_dg_animal {
            get {
                return GetRelatedEntities<dg_animal>("business_unit_dg_animal", null);
            }
            set {
                SetRelatedEntities("business_unit_dg_animal", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_dg_animalfood")]
        public IEnumerable<dg_animalfood> business_unit_dg_animalfood {
            get {
                return GetRelatedEntities<dg_animalfood>("business_unit_dg_animalfood", null);
            }
            set {
                SetRelatedEntities("business_unit_dg_animalfood", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_dg_bus")]
        public IEnumerable<dg_bus> business_unit_dg_bus {
            get {
                return GetRelatedEntities<dg_bus>("business_unit_dg_bus", null);
            }
            set {
                SetRelatedEntities("business_unit_dg_bus", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_dg_child")]
        public IEnumerable<dg_child> business_unit_dg_child {
            get {
                return GetRelatedEntities<dg_child>("business_unit_dg_child", null);
            }
            set {
                SetRelatedEntities("business_unit_dg_child", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_dg_configuration")]
        public IEnumerable<dg_configuration> business_unit_dg_configuration {
            get {
                return GetRelatedEntities<dg_configuration>("business_unit_dg_configuration", null);
            }
            set {
                SetRelatedEntities("business_unit_dg_configuration", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_dg_country")]
        public IEnumerable<dg_country> business_unit_dg_country {
            get {
                return GetRelatedEntities<dg_country>("business_unit_dg_country", null);
            }
            set {
                SetRelatedEntities("business_unit_dg_country", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_dg_event")]
        public IEnumerable<dg_event> business_unit_dg_event {
            get {
                return GetRelatedEntities<dg_event>("business_unit_dg_event", null);
            }
            set {
                SetRelatedEntities("business_unit_dg_event", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_dg_field")]
        public IEnumerable<dg_field> business_unit_dg_field {
            get {
                return GetRelatedEntities<dg_field>("business_unit_dg_field", null);
            }
            set {
                SetRelatedEntities("business_unit_dg_field", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_dg_food")]
        public IEnumerable<dg_food> business_unit_dg_food {
            get {
                return GetRelatedEntities<dg_food>("business_unit_dg_food", null);
            }
            set {
                SetRelatedEntities("business_unit_dg_food", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_dg_man")]
        public IEnumerable<dg_man> business_unit_dg_man {
            get {
                return GetRelatedEntities<dg_man>("business_unit_dg_man", null);
            }
            set {
                SetRelatedEntities("business_unit_dg_man", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_dg_mild")]
        public IEnumerable<dg_mild> business_unit_dg_mild {
            get {
                return GetRelatedEntities<dg_mild>("business_unit_dg_mild", null);
            }
            set {
                SetRelatedEntities("business_unit_dg_mild", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_dg_participant")]
        public IEnumerable<dg_participant> business_unit_dg_participant {
            get {
                return GetRelatedEntities<dg_participant>("business_unit_dg_participant", null);
            }
            set {
                SetRelatedEntities("business_unit_dg_participant", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_dg_secroletest")]
        public IEnumerable<dg_secroletest> business_unit_dg_secroletest {
            get {
                return GetRelatedEntities<dg_secroletest>("business_unit_dg_secroletest", null);
            }
            set {
                SetRelatedEntities("business_unit_dg_secroletest", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_dg_sheep")]
        public IEnumerable<dg_sheep> business_unit_dg_sheep {
            get {
                return GetRelatedEntities<dg_sheep>("business_unit_dg_sheep", null);
            }
            set {
                SetRelatedEntities("business_unit_dg_sheep", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_dg_tooth")]
        public IEnumerable<dg_tooth> business_unit_dg_tooth {
            get {
                return GetRelatedEntities<dg_tooth>("business_unit_dg_tooth", null);
            }
            set {
                SetRelatedEntities("business_unit_dg_tooth", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_dg_zipcodecity")]
        public IEnumerable<dg_zipCodeCity> business_unit_dg_zipcodecity {
            get {
                return GetRelatedEntities<dg_zipCodeCity>("business_unit_dg_zipcodecity", null);
            }
            set {
                SetRelatedEntities("business_unit_dg_zipcodecity", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_email_activities")]
        public IEnumerable<Email> business_unit_email_activities {
            get {
                return GetRelatedEntities<Email>("business_unit_email_activities", null);
            }
            set {
                SetRelatedEntities("business_unit_email_activities", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_emailserverprofile")]
        public IEnumerable<EmailServerProfile> business_unit_emailserverprofile {
            get {
                return GetRelatedEntities<EmailServerProfile>("business_unit_emailserverprofile", null);
            }
            set {
                SetRelatedEntities("business_unit_emailserverprofile", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_entitlement")]
        public IEnumerable<Entitlement> business_unit_entitlement {
            get {
                return GetRelatedEntities<Entitlement>("business_unit_entitlement", null);
            }
            set {
                SetRelatedEntities("business_unit_entitlement", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_fax_activities")]
        public IEnumerable<Fax> business_unit_fax_activities {
            get {
                return GetRelatedEntities<Fax>("business_unit_fax_activities", null);
            }
            set {
                SetRelatedEntities("business_unit_fax_activities", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_goal")]
        public IEnumerable<Goal> business_unit_goal {
            get {
                return GetRelatedEntities<Goal>("business_unit_goal", null);
            }
            set {
                SetRelatedEntities("business_unit_goal", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_incident_resolution_activities")]
        public IEnumerable<IncidentResolution> business_unit_incident_resolution_activities {
            get {
                return GetRelatedEntities<IncidentResolution>("business_unit_incident_resolution_activities", null);
            }
            set {
                SetRelatedEntities("business_unit_incident_resolution_activities", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_incidents")]
        public IEnumerable<Incident> business_unit_incidents {
            get {
                return GetRelatedEntities<Incident>("business_unit_incidents", null);
            }
            set {
                SetRelatedEntities("business_unit_incidents", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_invoices")]
        public IEnumerable<Invoice> business_unit_invoices {
            get {
                return GetRelatedEntities<Invoice>("business_unit_invoices", null);
            }
            set {
                SetRelatedEntities("business_unit_invoices", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_knowledgearticle")]
        public IEnumerable<KnowledgeArticle> business_unit_knowledgearticle {
            get {
                return GetRelatedEntities<KnowledgeArticle>("business_unit_knowledgearticle", null);
            }
            set {
                SetRelatedEntities("business_unit_knowledgearticle", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_leads")]
        public IEnumerable<Lead> business_unit_leads {
            get {
                return GetRelatedEntities<Lead>("business_unit_leads", null);
            }
            set {
                SetRelatedEntities("business_unit_leads", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_letter_activities")]
        public IEnumerable<Letter> business_unit_letter_activities {
            get {
                return GetRelatedEntities<Letter>("business_unit_letter_activities", null);
            }
            set {
                SetRelatedEntities("business_unit_letter_activities", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_list")]
        public IEnumerable<List> business_unit_list {
            get {
                return GetRelatedEntities<List>("business_unit_list", null);
            }
            set {
                SetRelatedEntities("business_unit_list", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_mailbox")]
        public IEnumerable<Mailbox> business_unit_mailbox {
            get {
                return GetRelatedEntities<Mailbox>("business_unit_mailbox", null);
            }
            set {
                SetRelatedEntities("business_unit_mailbox", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_msdyn_agreement")]
        public IEnumerable<msdyn_agreement> business_unit_msdyn_agreement {
            get {
                return GetRelatedEntities<msdyn_agreement>("business_unit_msdyn_agreement", null);
            }
            set {
                SetRelatedEntities("business_unit_msdyn_agreement", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_msdyn_postalbum")]
        public IEnumerable<msdyn_PostAlbum> business_unit_msdyn_postalbum {
            get {
                return GetRelatedEntities<msdyn_PostAlbum>("business_unit_msdyn_postalbum", null);
            }
            set {
                SetRelatedEntities("business_unit_msdyn_postalbum", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_msdyn_wallsavedqueryusersettings")]
        public IEnumerable<msdyn_wallsavedqueryusersettings> business_unit_msdyn_wallsavedqueryusersettings {
            get {
                return GetRelatedEntities<msdyn_wallsavedqueryusersettings>("business_unit_msdyn_wallsavedqueryusersettings", null);
            }
            set {
                SetRelatedEntities("business_unit_msdyn_wallsavedqueryusersettings", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_opportunities")]
        public IEnumerable<Opportunity> business_unit_opportunities {
            get {
                return GetRelatedEntities<Opportunity>("business_unit_opportunities", null);
            }
            set {
                SetRelatedEntities("business_unit_opportunities", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_opportunity_close_activities")]
        public IEnumerable<OpportunityClose> business_unit_opportunity_close_activities {
            get {
                return GetRelatedEntities<OpportunityClose>("business_unit_opportunity_close_activities", null);
            }
            set {
                SetRelatedEntities("business_unit_opportunity_close_activities", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_orders")]
        public IEnumerable<SalesOrder> business_unit_orders {
            get {
                return GetRelatedEntities<SalesOrder>("business_unit_orders", null);
            }
            set {
                SetRelatedEntities("business_unit_orders", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_phone_call_activities")]
        public IEnumerable<PhoneCall> business_unit_phone_call_activities {
            get {
                return GetRelatedEntities<PhoneCall>("business_unit_phone_call_activities", null);
            }
            set {
                SetRelatedEntities("business_unit_phone_call_activities", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_quotes")]
        public IEnumerable<Quote> business_unit_quotes {
            get {
                return GetRelatedEntities<Quote>("business_unit_quotes", null);
            }
            set {
                SetRelatedEntities("business_unit_quotes", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_ratingmodel")]
        public IEnumerable<RatingModel> business_unit_ratingmodel {
            get {
                return GetRelatedEntities<RatingModel>("business_unit_ratingmodel", null);
            }
            set {
                SetRelatedEntities("business_unit_ratingmodel", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_ratingvalue")]
        public IEnumerable<RatingValue> business_unit_ratingvalue {
            get {
                return GetRelatedEntities<RatingValue>("business_unit_ratingvalue", null);
            }
            set {
                SetRelatedEntities("business_unit_ratingvalue", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_recurringappointmentmaster_activities")]
        public IEnumerable<RecurringAppointmentMaster> business_unit_recurringappointmentmaster_activities {
            get {
                return GetRelatedEntities<RecurringAppointmentMaster>("business_unit_recurringappointmentmaster_activities", null);
            }
            set {
                SetRelatedEntities("business_unit_recurringappointmentmaster_activities", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_service_appointments")]
        public IEnumerable<ServiceAppointment> business_unit_service_appointments {
            get {
                return GetRelatedEntities<ServiceAppointment>("business_unit_service_appointments", null);
            }
            set {
                SetRelatedEntities("business_unit_service_appointments", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_service_contracts")]
        public IEnumerable<Contract> business_unit_service_contracts {
            get {
                return GetRelatedEntities<Contract>("business_unit_service_contracts", null);
            }
            set {
                SetRelatedEntities("business_unit_service_contracts", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_sharepointdocumentlocation")]
        public IEnumerable<SharePointDocumentLocation> business_unit_sharepointdocumentlocation {
            get {
                return GetRelatedEntities<SharePointDocumentLocation>("business_unit_sharepointdocumentlocation", null);
            }
            set {
                SetRelatedEntities("business_unit_sharepointdocumentlocation", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_sharepointsites")]
        public IEnumerable<SharePointSite> business_unit_sharepointsites {
            get {
                return GetRelatedEntities<SharePointSite>("business_unit_sharepointsites", null);
            }
            set {
                SetRelatedEntities("business_unit_sharepointsites", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_slabase")]
        public IEnumerable<SLA> business_unit_slabase {
            get {
                return GetRelatedEntities<SLA>("business_unit_slabase", null);
            }
            set {
                SetRelatedEntities("business_unit_slabase", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_socialactivity")]
        public IEnumerable<SocialActivity> business_unit_socialactivity {
            get {
                return GetRelatedEntities<SocialActivity>("business_unit_socialactivity", null);
            }
            set {
                SetRelatedEntities("business_unit_socialactivity", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_system_users")]
        public IEnumerable<SystemUser> business_unit_system_users {
            get {
                return GetRelatedEntities<SystemUser>("business_unit_system_users", null);
            }
            set {
                SetRelatedEntities("business_unit_system_users", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_task_activities")]
        public IEnumerable<Task> business_unit_task_activities {
            get {
                return GetRelatedEntities<Task>("business_unit_task_activities", null);
            }
            set {
                SetRelatedEntities("business_unit_task_activities", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_teams")]
        public IEnumerable<Team> business_unit_teams {
            get {
                return GetRelatedEntities<Team>("business_unit_teams", null);
            }
            set {
                SetRelatedEntities("business_unit_teams", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_workflow")]
        public IEnumerable<Workflow> business_unit_workflow {
            get {
                return GetRelatedEntities<Workflow>("business_unit_workflow", null);
            }
            set {
                SetRelatedEntities("business_unit_workflow", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_businessunit_createdonbehalfby")]
        public SystemUser lk_businessunit_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_businessunit_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_businessunit_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_businessunit_modifiedonbehalfby")]
        public SystemUser lk_businessunit_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_businessunit_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_businessunit_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_businessunitbase_createdby")]
        public SystemUser lk_businessunitbase_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_businessunitbase_createdby", null);
            }
            set {
                SetRelatedEntity("lk_businessunitbase_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_businessunitbase_modifiedby")]
        public SystemUser lk_businessunitbase_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_businessunitbase_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_businessunitbase_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("organizationid")]
        [RelationshipSchemaName("organization_business_units")]
        public Organization organization_business_units {
            get {
                return GetRelatedEntity<Organization>("organization_business_units", null);
            }
            set {
                SetRelatedEntity("organization_business_units", null, value);
            }
        }
        
        public static BusinessUnit Retrieve(IOrganizationService service, Guid id, params Expression<Func<BusinessUnit,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Calendar used by the scheduling system to define when an appointment or activity is to occur.</para>
    /// <para>Display Name: Calendar</para>
    /// </summary>
    [EntityLogicalName("calendar")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class Calendar : ExtendedEntity<EmptyEnum, EmptyEnum> {
        
        public const string EntityLogicalName = "calendar";
        
        public const int EntityTypeCode = 4003;
        
        public Calendar() : 
                base(EntityLogicalName) {
        }
        
        public Calendar(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("name");
            }
        }
        
        [AttributeLogicalName("calendarid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("calendarid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the calendar.</para>
        /// <para>Display Name: Calendar</para>
        /// </summary>
        [AttributeLogicalName("calendarid")]
        [DisplayName("Calendar")]
        public Guid? CalendarId {
            get {
                return GetAttributeValue<Guid?>("calendarid");
            }
            set {
                SetId("calendarid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the business unit with which the calendar is associated.</para>
        /// <para>Display Name: Business Unit</para>
        /// </summary>
        [AttributeLogicalName("businessunitid")]
        [DisplayName("Business Unit")]
        public EntityReference BusinessUnitId {
            get {
                return GetAttributeValue<EntityReference>("businessunitid");
            }
            set {
                SetAttributeValue("businessunitid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the calendar.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the calendar was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the calendar.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Calendar used by the scheduling system to define when an appointment or activity is to occur.</para>
        /// <para>Display Name: Description</para>
        /// </summary>
        [AttributeLogicalName("description")]
        [DisplayName("Description")]
        public string Description {
            get {
                return GetAttributeValue<string>("description");
            }
            set {
                SetAttributeValue("description", value);
            }
        }
        
        /// <summary>
        /// <para>Holiday Schedule CalendarId</para>
        /// <para>Display Name: Holiday Schedule CalendarId</para>
        /// </summary>
        [AttributeLogicalName("holidayschedulecalendarid")]
        [DisplayName("Holiday Schedule CalendarId")]
        public EntityReference HolidayScheduleCalendarId {
            get {
                return GetAttributeValue<EntityReference>("holidayschedulecalendarid");
            }
            set {
                SetAttributeValue("holidayschedulecalendarid", value);
            }
        }
        
        /// <summary>
        /// <para>Calendar is shared by other calendars, such as the organization calendar.</para>
        /// <para>Display Name: Is Shared</para>
        /// </summary>
        [AttributeLogicalName("isshared")]
        [DisplayName("Is Shared")]
        public bool? IsShared {
            get {
                return GetAttributeValue<bool?>("isshared");
            }
            set {
                SetAttributeValue("isshared", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who last modified the calendar.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the calendar was last modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who last modified the calendar.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Name of the calendar.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Name")]
        [MaxLength(160)]
        public string Name {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the organization with which the calendar is associated.</para>
        /// <para>Display Name: Organization</para>
        /// </summary>
        [AttributeLogicalName("organizationid")]
        [DisplayName("Organization")]
        public EntityReference OrganizationId {
            get {
                return GetAttributeValue<EntityReference>("organizationid");
            }
        }
        
        /// <summary>
        /// <para>Name of the calendar.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Name")]
        [MaxLength(160)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the primary user of this calendar.</para>
        /// <para>Display Name: Primary User</para>
        /// </summary>
        [AttributeLogicalName("primaryuserid")]
        [DisplayName("Primary User")]
        public Guid? PrimaryUserId {
            get {
                return GetAttributeValue<Guid?>("primaryuserid");
            }
            set {
                SetAttributeValue("primaryuserid", value);
            }
        }
        
        /// <summary>
        /// <para>Calendar type, such as User work hour calendar, or Customer service hour calendar.</para>
        /// <para>Display Name: Calendar type</para>
        /// </summary>
        [AttributeLogicalName("type")]
        [DisplayName("Calendar type")]
        public Calendar_Type? Type {
            get {
                return GetOptionSetValue<Calendar_Type>("type");
            }
            set {
                SetOptionSetValue("type", value);
            }
        }
        
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        [RelationshipSchemaName("BusinessUnit_Calendar")]
        public IEnumerable<BusinessUnit> BusinessUnit_Calendar {
            get {
                return GetRelatedEntities<BusinessUnit>("BusinessUnit_Calendar", null);
            }
            set {
                SetRelatedEntities("BusinessUnit_Calendar", null, value);
            }
        }
        
        [RelationshipSchemaName("calendar_customercalendar_holidaycalendar", EntityRole.Referenced)]
        public IEnumerable<Calendar> Referencedcalendar_customercalendar_holidaycalendar {
            get {
                return GetRelatedEntities<Calendar>("calendar_customercalendar_holidaycalendar", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("calendar_customercalendar_holidaycalendar", EntityRole.Referenced, value);
            }
        }
        
        [AttributeLogicalName("holidayschedulecalendarid")]
        [RelationshipSchemaName("calendar_customercalendar_holidaycalendar", EntityRole.Referencing)]
        public Calendar Referencingcalendar_customercalendar_holidaycalendar {
            get {
                return GetRelatedEntity<Calendar>("calendar_customercalendar_holidaycalendar", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("calendar_customercalendar_holidaycalendar", EntityRole.Referencing, value);
            }
        }
        
        [AttributeLogicalName("businessunitid")]
        [RelationshipSchemaName("business_unit_calendars")]
        public BusinessUnit business_unit_calendars {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_calendars", null);
            }
            set {
                SetRelatedEntity("business_unit_calendars", null, value);
            }
        }
        
        [RelationshipSchemaName("calendar_bookableresources")]
        public IEnumerable<BookableResource> calendar_bookableresources {
            get {
                return GetRelatedEntities<BookableResource>("calendar_bookableresources", null);
            }
            set {
                SetRelatedEntities("calendar_bookableresources", null, value);
            }
        }
        
        [RelationshipSchemaName("calendar_organization")]
        public IEnumerable<Organization> calendar_organization {
            get {
                return GetRelatedEntities<Organization>("calendar_organization", null);
            }
            set {
                SetRelatedEntities("calendar_organization", null, value);
            }
        }
        
        [RelationshipSchemaName("calendar_system_users")]
        public IEnumerable<SystemUser> calendar_system_users {
            get {
                return GetRelatedEntities<SystemUser>("calendar_system_users", null);
            }
            set {
                SetRelatedEntities("calendar_system_users", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_calendar_createdby")]
        public SystemUser lk_calendar_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_calendar_createdby", null);
            }
            set {
                SetRelatedEntity("lk_calendar_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_calendar_createdonbehalfby")]
        public SystemUser lk_calendar_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_calendar_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_calendar_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_calendar_modifiedby")]
        public SystemUser lk_calendar_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_calendar_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_calendar_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_calendar_modifiedonbehalfby")]
        public SystemUser lk_calendar_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_calendar_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_calendar_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("organizationid")]
        [RelationshipSchemaName("organization_calendars")]
        public Organization organization_calendars {
            get {
                return GetRelatedEntity<Organization>("organization_calendars", null);
            }
            set {
                SetRelatedEntity("organization_calendars", null, value);
            }
        }
        
        [RelationshipSchemaName("slabase_businesshoursid")]
        public IEnumerable<SLA> slabase_businesshoursid {
            get {
                return GetRelatedEntities<SLA>("slabase_businesshoursid", null);
            }
            set {
                SetRelatedEntities("slabase_businesshoursid", null, value);
            }
        }
        
        public static Calendar Retrieve(IOrganizationService service, Guid id, params Expression<Func<Calendar,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Container for campaign activities and responses, sales literature, products, and lists to create, plan, execute, and track the results of a specific marketing campaign through its life.</para>
    /// <para>Display Name: Campaign</para>
    /// </summary>
    [EntityLogicalName("campaign")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class Campaign : ExtendedEntity<CampaignState, Campaign_StatusCode> {
        
        public const string EntityLogicalName = "campaign";
        
        public const int EntityTypeCode = 4400;
        
        public Campaign() : 
                base(EntityLogicalName) {
        }
        
        public Campaign(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("name");
            }
        }
        
        [AttributeLogicalName("campaignid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("campaignid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the campaign.</para>
        /// <para>Display Name: Campaign</para>
        /// </summary>
        [AttributeLogicalName("campaignid")]
        [DisplayName("Campaign")]
        public Guid? CampaignId {
            get {
                return GetAttributeValue<Guid?>("campaignid");
            }
            set {
                SetId("campaignid", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the date when the campaign was closed or completed.</para>
        /// <para>Display Name: Actual End Date</para>
        /// </summary>
        [AttributeLogicalName("actualend")]
        [DisplayName("Actual End Date")]
        public DateTime? ActualEnd {
            get {
                return GetAttributeValue<DateTime?>("actualend");
            }
            set {
                SetAttributeValue("actualend", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the actual start date and time for the campaign.</para>
        /// <para>Display Name: Actual Start Date</para>
        /// </summary>
        [AttributeLogicalName("actualstart")]
        [DisplayName("Actual Start Date")]
        public DateTime? ActualStart {
            get {
                return GetAttributeValue<DateTime?>("actualstart");
            }
            set {
                SetAttributeValue("actualstart", value);
            }
        }
        
        /// <summary>
        /// <para>Type the amount budgeted for the campaign to define a limit for how much you can spend.</para>
        /// <para>Display Name: Budget Allocated</para>
        /// </summary>
        [AttributeLogicalName("budgetedcost")]
        [DisplayName("Budget Allocated")]
        public decimal? BudgetedCost {
            get {
                return GetMoneyValue("budgetedcost");
            }
            set {
                SetMoneyValue("budgetedcost", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the Budget Allocated field converted to the system's default base currency. The calculations use the exchange rate specified in the Currencies area.</para>
        /// <para>Display Name: Budget Allocated (Base)</para>
        /// </summary>
        [AttributeLogicalName("budgetedcost_base")]
        [DisplayName("Budget Allocated (Base)")]
        public decimal? BudgetedCost_Base {
            get {
                return GetMoneyValue("budgetedcost_base");
            }
        }
        
        /// <summary>
        /// <para>Type a number or other tracking code to identify the campaign. If no value is entered, a code will be generated automatically.</para>
        /// <para>Display Name: Campaign Code</para>
        /// </summary>
        [AttributeLogicalName("codename")]
        [DisplayName("Campaign Code")]
        [MaxLength(32)]
        public string CodeName {
            get {
                return GetAttributeValue<string>("codename");
            }
            set {
                SetAttributeValue("codename", value);
            }
        }
        
        /// <summary>
        /// <para>lk_campaign_createdby</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics CRM options.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>lk_campaign_createdonbehalfby</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Type additional information to describe the campaign, such as the products or services offered or the targeted audience.</para>
        /// <para>Display Name: Description</para>
        /// </summary>
        [AttributeLogicalName("description")]
        [DisplayName("Description")]
        public string Description {
            get {
                return GetAttributeValue<string>("description");
            }
            set {
                SetAttributeValue("description", value);
            }
        }
        
        /// <summary>
        /// <para>The primary email address for the entity.</para>
        /// <para>Display Name: Email Address</para>
        /// </summary>
        [AttributeLogicalName("emailaddress")]
        [DisplayName("Email Address")]
        [MaxLength(100)]
        public string EmailAddress {
            get {
                return GetAttributeValue<string>("emailaddress");
            }
            set {
                SetAttributeValue("emailaddress", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Entity Image Id</para>
        /// </summary>
        [AttributeLogicalName("entityimageid")]
        [DisplayName("Entity Image Id")]
        public Guid? EntityImageId {
            get {
                return GetAttributeValue<Guid?>("entityimageid");
            }
        }
        
        /// <summary>
        /// <para>Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("Exchange Rate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Type the expected response rate for the campaign as a full number between 0 and 100.</para>
        /// <para>Display Name: Expected Response Percentage</para>
        /// </summary>
        [AttributeLogicalName("expectedresponse")]
        [DisplayName("Expected Response Percentage")]
        [Range(0, 100)]
        public int? ExpectedResponse {
            get {
                return GetAttributeValue<int?>("expectedresponse");
            }
            set {
                SetAttributeValue("expectedresponse", value);
            }
        }
        
        /// <summary>
        /// <para>Type the expected revenue for the campaign for return on investment projections and post-campaign reporting.</para>
        /// <para>Display Name: Estimated Revenue</para>
        /// </summary>
        [AttributeLogicalName("expectedrevenue")]
        [DisplayName("Estimated Revenue")]
        public decimal? ExpectedRevenue {
            get {
                return GetMoneyValue("expectedrevenue");
            }
            set {
                SetMoneyValue("expectedrevenue", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the estimated revenue converted to the system's default base currency. The calculations use the exchange rate specified in the Currencies area.</para>
        /// <para>Display Name: Expected Revenue (Base)</para>
        /// </summary>
        [AttributeLogicalName("expectedrevenue_base")]
        [DisplayName("Expected Revenue (Base)")]
        public decimal? ExpectedRevenue_Base {
            get {
                return GetMoneyValue("expectedrevenue_base");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the data import or data migration that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the campaign is a template that can be copied when you create future campaigns.</para>
        /// <para>Display Name: Template</para>
        /// </summary>
        [AttributeLogicalName("istemplate")]
        [DisplayName("Template")]
        public bool? IsTemplate {
            get {
                return GetAttributeValue<bool?>("istemplate");
            }
            set {
                SetAttributeValue("istemplate", value);
            }
        }
        
        /// <summary>
        /// <para>Type the promotional message or marketing copy for the campaign.</para>
        /// <para>Display Name: Message</para>
        /// </summary>
        [AttributeLogicalName("message")]
        [DisplayName("Message")]
        [MaxLength(256)]
        public string Message {
            get {
                return GetAttributeValue<string>("message");
            }
            set {
                SetAttributeValue("message", value);
            }
        }
        
        /// <summary>
        /// <para>lk_campaign_modifiedby</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics CRM options.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>lk_campaign_modifiedonbehalfby</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Type a name for the campaign so that it is identified correctly in lists.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Name")]
        [MaxLength(128)]
        public string Name {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Type the objective of the campaign, including products, services, discounts, and pricing.</para>
        /// <para>Display Name: Offer</para>
        /// </summary>
        [AttributeLogicalName("objective")]
        [DisplayName("Offer")]
        public string Objective {
            get {
                return GetAttributeValue<string>("objective");
            }
            set {
                SetAttributeValue("objective", value);
            }
        }
        
        /// <summary>
        /// <para>Type the sum of any miscellaneous campaign costs not included in the campaign activities to make sure the actual cost of the campaign is calculated correctly.</para>
        /// <para>Display Name: Miscellaneous Costs</para>
        /// </summary>
        [AttributeLogicalName("othercost")]
        [DisplayName("Miscellaneous Costs")]
        public decimal? OtherCost {
            get {
                return GetMoneyValue("othercost");
            }
            set {
                SetMoneyValue("othercost", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the Miscellaneous Costs field converted to the system's default base currency for reporting purposes. The calculations use the exchange rate specified in the Currencies area.</para>
        /// <para>Display Name: Miscellaneous Costs (Base)</para>
        /// </summary>
        [AttributeLogicalName("othercost_base")]
        [DisplayName("Miscellaneous Costs (Base)")]
        public decimal? OtherCost_Base {
            get {
                return GetMoneyValue("othercost_base");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>owner_campaigns</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>BusinessUnit_Campaigns</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>team_Campaigns</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>SystemUser_Campaigns</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>PriceList_Campaigns</para>
        /// <para>Display Name: Price List</para>
        /// </summary>
        [AttributeLogicalName("pricelistid")]
        [DisplayName("Price List")]
        public EntityReference PriceListId {
            get {
                return GetAttributeValue<EntityReference>("pricelistid");
            }
            set {
                SetAttributeValue("pricelistid", value);
            }
        }
        
        /// <summary>
        /// <para>Type a name for the campaign so that it is identified correctly in lists.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Name")]
        [MaxLength(128)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the process.</para>
        /// <para>Display Name: Process</para>
        /// </summary>
        [AttributeLogicalName("processid")]
        [DisplayName("Process")]
        public Guid? ProcessId {
            get {
                return GetAttributeValue<Guid?>("processid");
            }
            set {
                SetAttributeValue("processid", value);
            }
        }
        
        /// <summary>
        /// <para>Type a promotional code to track sales related to the campaign or allow customers to redeem a discount offer.</para>
        /// <para>Display Name: Promotion Code</para>
        /// </summary>
        [AttributeLogicalName("promotioncodename")]
        [DisplayName("Promotion Code")]
        [MaxLength(128)]
        public string PromotionCodeName {
            get {
                return GetAttributeValue<string>("promotioncodename");
            }
            set {
                SetAttributeValue("promotioncodename", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the date when the campaign is scheduled to end.</para>
        /// <para>Display Name: Proposed End Date</para>
        /// </summary>
        [AttributeLogicalName("proposedend")]
        [DisplayName("Proposed End Date")]
        public DateTime? ProposedEnd {
            get {
                return GetAttributeValue<DateTime?>("proposedend");
            }
            set {
                SetAttributeValue("proposedend", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the date when the campaign is scheduled to start.</para>
        /// <para>Display Name: Proposed Start Date</para>
        /// </summary>
        [AttributeLogicalName("proposedstart")]
        [DisplayName("Proposed Start Date")]
        public DateTime? ProposedStart {
            get {
                return GetAttributeValue<DateTime?>("proposedstart");
            }
            set {
                SetAttributeValue("proposedstart", value);
            }
        }
        
        /// <summary>
        /// <para>processstage_campaigns</para>
        /// <para>Display Name: Process Stage</para>
        /// </summary>
        [AttributeLogicalName("stageid")]
        [DisplayName("Process Stage")]
        public Guid? StageId {
            get {
                return GetAttributeValue<Guid?>("stageid");
            }
            set {
                SetAttributeValue("stageid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the status of the campaign. By default, campaigns are active and can't be deactivated.</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public CampaignState? StateCode {
            get {
                return GetOptionSetValue<CampaignState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the campaign's status.</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public Campaign_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<Campaign_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: TmpRegardingObjectId</para>
        /// </summary>
        [AttributeLogicalName("tmpregardingobjectid")]
        [DisplayName("TmpRegardingObjectId")]
        [MaxLength(100)]
        public string TmpRegardingObjectId {
            get {
                return GetAttributeValue<string>("tmpregardingobjectid");
            }
            set {
                SetAttributeValue("tmpregardingobjectid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the sum of the amounts entered in the Total Cost of Campaign Activities and Miscellaneous Costs fields.</para>
        /// <para>Display Name: Total Cost of Campaign</para>
        /// </summary>
        [AttributeLogicalName("totalactualcost")]
        [DisplayName("Total Cost of Campaign")]
        public decimal? TotalActualCost {
            get {
                return GetMoneyValue("totalactualcost");
            }
        }
        
        /// <summary>
        /// <para>Shows the Total Cost of Campaign field converted to the system's default base currency for reporting purposes. The calculations use the exchange rate specified in the Currencies area.</para>
        /// <para>Display Name: Total Cost of Campaign (Base)</para>
        /// </summary>
        [AttributeLogicalName("totalactualcost_base")]
        [DisplayName("Total Cost of Campaign (Base)")]
        public decimal? TotalActualCost_Base {
            get {
                return GetMoneyValue("totalactualcost_base");
            }
        }
        
        /// <summary>
        /// <para>Shows the sum of the values entered in the Actual Cost field on all campaign activities related to the campaign.</para>
        /// <para>Display Name: Total Cost of Campaign Activities</para>
        /// </summary>
        [AttributeLogicalName("totalcampaignactivityactualcost")]
        [DisplayName("Total Cost of Campaign Activities")]
        public decimal? TotalCampaignActivityActualCost {
            get {
                return GetMoneyValue("totalcampaignactivityactualcost");
            }
        }
        
        /// <summary>
        /// <para>Shows the Total Cost of Campaign Activities field converted to the system's default base currency. The calculations use the exchange rate specified in the Currencies area.</para>
        /// <para>Display Name: Total Cost of Campaign Activities (Base)</para>
        /// </summary>
        [AttributeLogicalName("totalcampaignactivityactualcost_base")]
        [DisplayName("Total Cost of Campaign Activities (Base)")]
        public decimal? TotalCampaignActivityActualCost_Base {
            get {
                return GetMoneyValue("totalcampaignactivityactualcost_base");
            }
        }
        
        /// <summary>
        /// <para>transactioncurrency_campaign</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Traversed Path</para>
        /// </summary>
        [AttributeLogicalName("traversedpath")]
        [DisplayName("Traversed Path")]
        [MaxLength(1250)]
        public string TraversedPath {
            get {
                return GetAttributeValue<string>("traversedpath");
            }
            set {
                SetAttributeValue("traversedpath", value);
            }
        }
        
        /// <summary>
        /// <para>Select the type of the campaign.</para>
        /// <para>Display Name: Campaign Type</para>
        /// </summary>
        [AttributeLogicalName("typecode")]
        [DisplayName("Campaign Type")]
        public Campaign_TypeCode? TypeCode {
            get {
                return GetOptionSetValue<Campaign_TypeCode>("typecode");
            }
            set {
                SetOptionSetValue("typecode", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version number of the campaign.</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Describes whether campaign is opted out or not</para>
        /// <para>Display Name: GDPR Optout</para>
        /// </summary>
        [AttributeLogicalName("msdyn_gdproptout")]
        [DisplayName("GDPR Optout")]
        public bool? msdyn_gdproptout {
            get {
                return GetAttributeValue<bool?>("msdyn_gdproptout");
            }
            set {
                SetAttributeValue("msdyn_gdproptout", value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("BusinessUnit_Campaigns")]
        public BusinessUnit BusinessUnit_Campaigns {
            get {
                return GetRelatedEntity<BusinessUnit>("BusinessUnit_Campaigns", null);
            }
            set {
                SetRelatedEntity("BusinessUnit_Campaigns", null, value);
            }
        }
        
        [RelationshipSchemaName("Campaign_ActivityPointers")]
        public IEnumerable<ActivityPointer> Campaign_ActivityPointers {
            get {
                return GetRelatedEntities<ActivityPointer>("Campaign_ActivityPointers", null);
            }
            set {
                SetRelatedEntities("Campaign_ActivityPointers", null, value);
            }
        }
        
        [RelationshipSchemaName("Campaign_Appointments")]
        public IEnumerable<Appointment> Campaign_Appointments {
            get {
                return GetRelatedEntities<Appointment>("Campaign_Appointments", null);
            }
            set {
                SetRelatedEntities("Campaign_Appointments", null, value);
            }
        }
        
        [RelationshipSchemaName("Campaign_CampaignActivities")]
        public IEnumerable<CampaignActivity> Campaign_CampaignActivities {
            get {
                return GetRelatedEntities<CampaignActivity>("Campaign_CampaignActivities", null);
            }
            set {
                SetRelatedEntities("Campaign_CampaignActivities", null, value);
            }
        }
        
        [RelationshipSchemaName("Campaign_CampaignResponses")]
        public IEnumerable<CampaignResponse> Campaign_CampaignResponses {
            get {
                return GetRelatedEntities<CampaignResponse>("Campaign_CampaignResponses", null);
            }
            set {
                SetRelatedEntities("Campaign_CampaignResponses", null, value);
            }
        }
        
        [RelationshipSchemaName("Campaign_Emails")]
        public IEnumerable<Email> Campaign_Emails {
            get {
                return GetRelatedEntities<Email>("Campaign_Emails", null);
            }
            set {
                SetRelatedEntities("Campaign_Emails", null, value);
            }
        }
        
        [RelationshipSchemaName("Campaign_Faxes")]
        public IEnumerable<Fax> Campaign_Faxes {
            get {
                return GetRelatedEntities<Fax>("Campaign_Faxes", null);
            }
            set {
                SetRelatedEntities("Campaign_Faxes", null, value);
            }
        }
        
        [RelationshipSchemaName("Campaign_Letters")]
        public IEnumerable<Letter> Campaign_Letters {
            get {
                return GetRelatedEntities<Letter>("Campaign_Letters", null);
            }
            set {
                SetRelatedEntities("Campaign_Letters", null, value);
            }
        }
        
        [RelationshipSchemaName("Campaign_Phonecalls")]
        public IEnumerable<PhoneCall> Campaign_Phonecalls {
            get {
                return GetRelatedEntities<PhoneCall>("Campaign_Phonecalls", null);
            }
            set {
                SetRelatedEntities("Campaign_Phonecalls", null, value);
            }
        }
        
        [RelationshipSchemaName("Campaign_RecurringAppointmentMasters")]
        public IEnumerable<RecurringAppointmentMaster> Campaign_RecurringAppointmentMasters {
            get {
                return GetRelatedEntities<RecurringAppointmentMaster>("Campaign_RecurringAppointmentMasters", null);
            }
            set {
                SetRelatedEntities("Campaign_RecurringAppointmentMasters", null, value);
            }
        }
        
        [RelationshipSchemaName("Campaign_ServiceAppointments")]
        public IEnumerable<ServiceAppointment> Campaign_ServiceAppointments {
            get {
                return GetRelatedEntities<ServiceAppointment>("Campaign_ServiceAppointments", null);
            }
            set {
                SetRelatedEntities("Campaign_ServiceAppointments", null, value);
            }
        }
        
        [RelationshipSchemaName("Campaign_SyncErrors")]
        public IEnumerable<SyncError> Campaign_SyncErrors {
            get {
                return GetRelatedEntities<SyncError>("Campaign_SyncErrors", null);
            }
            set {
                SetRelatedEntities("Campaign_SyncErrors", null, value);
            }
        }
        
        [RelationshipSchemaName("Campaign_Tasks")]
        public IEnumerable<Task> Campaign_Tasks {
            get {
                return GetRelatedEntities<Task>("Campaign_Tasks", null);
            }
            set {
                SetRelatedEntities("Campaign_Tasks", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("SystemUser_Campaigns")]
        public SystemUser SystemUser_Campaigns {
            get {
                return GetRelatedEntity<SystemUser>("SystemUser_Campaigns", null);
            }
            set {
                SetRelatedEntity("SystemUser_Campaigns", null, value);
            }
        }
        
        [RelationshipSchemaName("campaign_IncidentResolutions")]
        public IEnumerable<IncidentResolution> campaign_IncidentResolutions {
            get {
                return GetRelatedEntities<IncidentResolution>("campaign_IncidentResolutions", null);
            }
            set {
                SetRelatedEntities("campaign_IncidentResolutions", null, value);
            }
        }
        
        [RelationshipSchemaName("campaign_OpportunityCloses")]
        public IEnumerable<OpportunityClose> campaign_OpportunityCloses {
            get {
                return GetRelatedEntities<OpportunityClose>("campaign_OpportunityCloses", null);
            }
            set {
                SetRelatedEntities("campaign_OpportunityCloses", null, value);
            }
        }
        
        [RelationshipSchemaName("campaign_Teams")]
        public IEnumerable<Team> campaign_Teams {
            get {
                return GetRelatedEntities<Team>("campaign_Teams", null);
            }
            set {
                SetRelatedEntities("campaign_Teams", null, value);
            }
        }
        
        [RelationshipSchemaName("campaign_activity_parties")]
        public IEnumerable<ActivityParty> campaign_activity_parties {
            get {
                return GetRelatedEntities<ActivityParty>("campaign_activity_parties", null);
            }
            set {
                SetRelatedEntities("campaign_activity_parties", null, value);
            }
        }
        
        [RelationshipSchemaName("campaign_connections1")]
        public IEnumerable<Connection> campaign_connections1 {
            get {
                return GetRelatedEntities<Connection>("campaign_connections1", null);
            }
            set {
                SetRelatedEntities("campaign_connections1", null, value);
            }
        }
        
        [RelationshipSchemaName("campaign_connections2")]
        public IEnumerable<Connection> campaign_connections2 {
            get {
                return GetRelatedEntities<Connection>("campaign_connections2", null);
            }
            set {
                SetRelatedEntities("campaign_connections2", null, value);
            }
        }
        
        [RelationshipSchemaName("campaign_leads")]
        public IEnumerable<Lead> campaign_leads {
            get {
                return GetRelatedEntities<Lead>("campaign_leads", null);
            }
            set {
                SetRelatedEntities("campaign_leads", null, value);
            }
        }
        
        [RelationshipSchemaName("campaign_opportunities")]
        public IEnumerable<Opportunity> campaign_opportunities {
            get {
                return GetRelatedEntities<Opportunity>("campaign_opportunities", null);
            }
            set {
                SetRelatedEntities("campaign_opportunities", null, value);
            }
        }
        
        [RelationshipSchemaName("campaign_orders")]
        public IEnumerable<SalesOrder> campaign_orders {
            get {
                return GetRelatedEntities<SalesOrder>("campaign_orders", null);
            }
            set {
                SetRelatedEntities("campaign_orders", null, value);
            }
        }
        
        [RelationshipSchemaName("campaign_quotes")]
        public IEnumerable<Quote> campaign_quotes {
            get {
                return GetRelatedEntities<Quote>("campaign_quotes", null);
            }
            set {
                SetRelatedEntities("campaign_quotes", null, value);
            }
        }
        
        [RelationshipSchemaName("campaigncampaign_association")]
        public IEnumerable<Campaign> campaigncampaign_association {
            get {
                return GetRelatedEntities<Campaign>("campaigncampaign_association", null);
            }
            set {
                SetRelatedEntities("campaigncampaign_association", null, value);
            }
        }
        
        [RelationshipSchemaName("campaignlist_association")]
        public IEnumerable<List> campaignlist_association {
            get {
                return GetRelatedEntities<List>("campaignlist_association", null);
            }
            set {
                SetRelatedEntities("campaignlist_association", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_campaign_createdby")]
        public SystemUser lk_campaign_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_campaign_createdby", null);
            }
            set {
                SetRelatedEntity("lk_campaign_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_campaign_createdonbehalfby")]
        public SystemUser lk_campaign_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_campaign_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_campaign_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_campaign_modifiedby")]
        public SystemUser lk_campaign_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_campaign_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_campaign_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_campaign_modifiedonbehalfby")]
        public SystemUser lk_campaign_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_campaign_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_campaign_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_Campaigns")]
        public Team team_Campaigns {
            get {
                return GetRelatedEntity<Team>("team_Campaigns", null);
            }
            set {
                SetRelatedEntity("team_Campaigns", null, value);
            }
        }
        
        [AttributeLogicalName("transactioncurrencyid")]
        [RelationshipSchemaName("transactioncurrency_campaign")]
        public TransactionCurrency transactioncurrency_campaign {
            get {
                return GetRelatedEntity<TransactionCurrency>("transactioncurrency_campaign", null);
            }
            set {
                SetRelatedEntity("transactioncurrency_campaign", null, value);
            }
        }
        
        public static Campaign Retrieve(IOrganizationService service, Guid id, params Expression<Func<Campaign,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Task performed, or to be performed, by a user for planning or running a campaign.</para>
    /// <para>Display Name: Campaign Activity</para>
    /// </summary>
    [EntityLogicalName("campaignactivity")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class CampaignActivity : ExtendedEntity<CampaignActivityState, CampaignActivity_StatusCode> {
        
        public const string EntityLogicalName = "campaignactivity";
        
        public const int EntityTypeCode = 4402;
        
        public CampaignActivity() : 
                base(EntityLogicalName) {
        }
        
        public CampaignActivity(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("subject");
            }
        }
        
        [AttributeLogicalName("activityid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("activityid", value);
            }
        }
        
        /// <summary>
        /// <para>activity_pointer_campaignactivity</para>
        /// <para>Display Name: Campaign Activity</para>
        /// </summary>
        [AttributeLogicalName("activityid")]
        [DisplayName("Campaign Activity")]
        public Guid? ActivityId {
            get {
                return GetAttributeValue<Guid?>("activityid");
            }
            set {
                SetId("activityid", value);
            }
        }
        
        /// <summary>
        /// <para>Additional information provided by the external application as JSON. For internal use only.</para>
        /// <para>Display Name: Activity Additional Parameters</para>
        /// </summary>
        [AttributeLogicalName("activityadditionalparams")]
        [DisplayName("Activity Additional Parameters")]
        public string ActivityAdditionalParams {
            get {
                return GetAttributeValue<string>("activityadditionalparams");
            }
            set {
                SetAttributeValue("activityadditionalparams", value);
            }
        }
        
        /// <summary>
        /// <para>Type of activity.</para>
        /// <para>Display Name: Activity Type</para>
        /// </summary>
        [AttributeLogicalName("activitytypecode")]
        [DisplayName("Activity Type")]
        public string ActivityTypeCode {
            get {
                return GetAttributeValue<string>("activitytypecode");
            }
        }
        
        /// <summary>
        /// <para>Type the actual cost of the campaign activity. The value entered is rolled up to the related campaign in the total cost calculations.</para>
        /// <para>Display Name: Actual Cost</para>
        /// </summary>
        [AttributeLogicalName("actualcost")]
        [DisplayName("Actual Cost")]
        public decimal? ActualCost {
            get {
                return GetMoneyValue("actualcost");
            }
            set {
                SetMoneyValue("actualcost", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the Actual Cost field converted to the system's default base currency for reporting purposes. The calculations use the exchange rate specified in the Currencies area.</para>
        /// <para>Display Name: Actual Cost (Base)</para>
        /// </summary>
        [AttributeLogicalName("actualcost_base")]
        [DisplayName("Actual Cost (Base)")]
        public decimal? ActualCost_Base {
            get {
                return GetMoneyValue("actualcost_base");
            }
        }
        
        /// <summary>
        /// <para>Shows the value selected in the Duration field on the campaign activity. The duration is used to report the time spent on the activity.</para>
        /// <para>Display Name: Actual Duration </para>
        /// </summary>
        [AttributeLogicalName("actualdurationminutes")]
        [DisplayName("Actual Duration ")]
        [Range(0, 2147483647)]
        public int? ActualDurationMinutes {
            get {
                return GetAttributeValue<int?>("actualdurationminutes");
            }
            set {
                SetAttributeValue("actualdurationminutes", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the date when the campaign activity was actually  completed.</para>
        /// <para>Display Name: Actual End</para>
        /// </summary>
        [AttributeLogicalName("actualend")]
        [DisplayName("Actual End")]
        public DateTime? ActualEnd {
            get {
                return GetAttributeValue<DateTime?>("actualend");
            }
            set {
                SetAttributeValue("actualend", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the actual start date and time for the campaign activity to determine if the campaign activity started on the scheduled time.</para>
        /// <para>Display Name: Actual Start</para>
        /// </summary>
        [AttributeLogicalName("actualstart")]
        [DisplayName("Actual Start")]
        public DateTime? ActualStart {
            get {
                return GetAttributeValue<DateTime?>("actualstart");
            }
            set {
                SetAttributeValue("actualstart", value);
            }
        }
        
        /// <summary>
        /// <para>Blind Carbon-copy (bcc) recipients of the activity.</para>
        /// <para>Display Name: BCC</para>
        /// </summary>
        [AttributeLogicalName("bcc")]
        [DisplayName("BCC")]
        public IEnumerable<ActivityParty> Bcc {
            get {
                return GetEntityCollection<ActivityParty>("bcc");
            }
            set {
                SetEntityCollection("bcc", value);
            }
        }
        
        /// <summary>
        /// <para>Type the allocated budget of the campaign activity for estimated versus actual cost reporting.</para>
        /// <para>Display Name: Budget Allocated</para>
        /// </summary>
        [AttributeLogicalName("budgetedcost")]
        [DisplayName("Budget Allocated")]
        public decimal? BudgetedCost {
            get {
                return GetMoneyValue("budgetedcost");
            }
            set {
                SetMoneyValue("budgetedcost", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the Budget Allocated field converted to the system's default base currency. The calculations use the exchange rate specified in the Currencies area.</para>
        /// <para>Display Name: Budget Allocated (Base)</para>
        /// </summary>
        [AttributeLogicalName("budgetedcost_base")]
        [DisplayName("Budget Allocated (Base)")]
        public decimal? BudgetedCost_Base {
            get {
                return GetMoneyValue("budgetedcost_base");
            }
        }
        
        /// <summary>
        /// <para>Type a category to identify the campaign activity type, such as new business development or customer retention, to tie the campaign activity to a business group or function.</para>
        /// <para>Display Name: Category</para>
        /// </summary>
        [AttributeLogicalName("category")]
        [DisplayName("Category")]
        [MaxLength(250)]
        public string Category {
            get {
                return GetAttributeValue<string>("category");
            }
            set {
                SetAttributeValue("category", value);
            }
        }
        
        /// <summary>
        /// <para>Carbon-copy (cc) recipients of the activity.</para>
        /// <para>Display Name: CC</para>
        /// </summary>
        [AttributeLogicalName("cc")]
        [DisplayName("CC")]
        public IEnumerable<ActivityParty> Cc {
            get {
                return GetEntityCollection<ActivityParty>("cc");
            }
            set {
                SetEntityCollection("cc", value);
            }
        }
        
        /// <summary>
        /// <para>Select how communications for this activity will be sent, such as phone, letter, fax, or email.</para>
        /// <para>Display Name: Channel</para>
        /// </summary>
        [AttributeLogicalName("channeltypecode")]
        [DisplayName("Channel")]
        public CampaignActivity_ChannelTypeCode? ChannelTypeCode {
            get {
                return GetOptionSetValue<CampaignActivity_ChannelTypeCode>("channeltypecode");
            }
            set {
                SetOptionSetValue("channeltypecode", value);
            }
        }
        
        /// <summary>
        /// <para>Shows how contact about the social activity originated, such as from Twitter or Facebook. This field is read-only.</para>
        /// <para>Display Name: Social Channel</para>
        /// </summary>
        [AttributeLogicalName("community")]
        [DisplayName("Social Channel")]
        public socialprofile_community? Community {
            get {
                return GetOptionSetValue<socialprofile_community>("community");
            }
            set {
                SetOptionSetValue("community", value);
            }
        }
        
        /// <summary>
        /// <para>lk_campaignactivity_createdby</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics CRM options.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>lk_campaignactivity_createdonbehalfby</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Customer with which the activity is associated.</para>
        /// <para>Display Name: Customers</para>
        /// </summary>
        [AttributeLogicalName("customers")]
        [DisplayName("Customers")]
        public IEnumerable<ActivityParty> Customers {
            get {
                return GetEntityCollection<ActivityParty>("customers");
            }
            set {
                SetEntityCollection("customers", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time when the delivery of the activity was last attempted.</para>
        /// <para>Display Name: Date Delivery Last Attempted</para>
        /// </summary>
        [AttributeLogicalName("deliverylastattemptedon")]
        [DisplayName("Date Delivery Last Attempted")]
        public DateTime? DeliveryLastAttemptedOn {
            get {
                return GetAttributeValue<DateTime?>("deliverylastattemptedon");
            }
        }
        
        /// <summary>
        /// <para>Priority of delivery of the activity to the email server.</para>
        /// <para>Display Name: Delivery Priority</para>
        /// </summary>
        [AttributeLogicalName("deliveryprioritycode")]
        [DisplayName("Delivery Priority")]
        public activitypointer_deliveryprioritycode? DeliveryPriorityCode {
            get {
                return GetOptionSetValue<activitypointer_deliveryprioritycode>("deliveryprioritycode");
            }
            set {
                SetOptionSetValue("deliveryprioritycode", value);
            }
        }
        
        /// <summary>
        /// <para>Type additional information to describe the campaign activity, such as key talking points, objectives, or details about the target audience.</para>
        /// <para>Display Name: Description</para>
        /// </summary>
        [AttributeLogicalName("description")]
        [DisplayName("Description")]
        public string Description {
            get {
                return GetAttributeValue<string>("description");
            }
            set {
                SetAttributeValue("description", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether to override the opt-out settings on leads, contacts, and accounts for the members of the target marketing lists of the campaign activity. If No is selected, marketing materials will be sent to members who have opted out.</para>
        /// <para>Display Name: Exclude Members Who Opt Out</para>
        /// </summary>
        [AttributeLogicalName("donotsendonoptout")]
        [DisplayName("Exclude Members Who Opt Out")]
        public bool? DoNotSendOnOptOut {
            get {
                return GetAttributeValue<bool?>("donotsendonoptout");
            }
            set {
                SetAttributeValue("donotsendonoptout", value);
            }
        }
        
        /// <summary>
        /// <para>The message id of activity which is returned from Exchange Server.</para>
        /// <para>Display Name: Exchange Item ID</para>
        /// </summary>
        [AttributeLogicalName("exchangeitemid")]
        [DisplayName("Exchange Item ID")]
        [MaxLength(200)]
        public string ExchangeItemId {
            get {
                return GetAttributeValue<string>("exchangeitemid");
            }
            set {
                SetAttributeValue("exchangeitemid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("Exchange Rate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Shows the web link of Activity of type email.</para>
        /// <para>Display Name: Exchange WebLink</para>
        /// </summary>
        [AttributeLogicalName("exchangeweblink")]
        [DisplayName("Exchange WebLink")]
        [MaxLength(1250)]
        public string ExchangeWebLink {
            get {
                return GetAttributeValue<string>("exchangeweblink");
            }
            set {
                SetAttributeValue("exchangeweblink", value);
            }
        }
        
        /// <summary>
        /// <para>Limits the frequency (in days) of marketing activities directed at any contact. Contacts that have been contacted more recently than this will be excluded from new campaign activity distributions. Enter a value of zero to disable the limit.</para>
        /// <para>Display Name: No. of Days</para>
        /// </summary>
        [AttributeLogicalName("excludeifcontactedinxdays")]
        [DisplayName("No. of Days")]
        [Range(0, 9999)]
        public int? ExcludeIfContactedInXDays {
            get {
                return GetAttributeValue<int?>("excludeifcontactedinxdays");
            }
            set {
                SetAttributeValue("excludeifcontactedinxdays", value);
            }
        }
        
        /// <summary>
        /// <para>For system use only.</para>
        /// <para>Display Name: From</para>
        /// </summary>
        [AttributeLogicalName("from")]
        [DisplayName("From")]
        public IEnumerable<ActivityParty> From {
            get {
                return GetEntityCollection<ActivityParty>("from");
            }
            set {
                SetEntityCollection("from", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether inactive marketing list members will be excluded from the campaign activity distribution.</para>
        /// <para>Display Name: Ignore Inactive Marketing List Members</para>
        /// </summary>
        [AttributeLogicalName("ignoreinactivelistmembers")]
        [DisplayName("Ignore Inactive Marketing List Members")]
        public bool? IgnoreInactiveListMembers {
            get {
                return GetAttributeValue<bool?>("ignoreinactivelistmembers");
            }
            set {
                SetAttributeValue("ignoreinactivelistmembers", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the data import or data migration that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Type of instance of a recurring series.</para>
        /// <para>Display Name: Recurring Instance Type</para>
        /// </summary>
        [AttributeLogicalName("instancetypecode")]
        [DisplayName("Recurring Instance Type")]
        public CampaignActivity_InstanceTypeCode? InstanceTypeCode {
            get {
                return GetOptionSetValue<CampaignActivity_InstanceTypeCode>("instancetypecode");
            }
        }
        
        /// <summary>
        /// <para>Information regarding whether the campaign activity was billed as part of resolving a case.</para>
        /// <para>Display Name: Is Billed</para>
        /// </summary>
        [AttributeLogicalName("isbilled")]
        [DisplayName("Is Billed")]
        public bool? IsBilled {
            get {
                return GetAttributeValue<bool?>("isbilled");
            }
            set {
                SetAttributeValue("isbilled", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Is Private</para>
        /// </summary>
        [AttributeLogicalName("ismapiprivate")]
        [DisplayName("Is Private")]
        public bool? IsMapiPrivate {
            get {
                return GetAttributeValue<bool?>("ismapiprivate");
            }
            set {
                SetAttributeValue("ismapiprivate", value);
            }
        }
        
        /// <summary>
        /// <para>Information regarding whether the activity is a regular activity type or event type.</para>
        /// <para>Display Name: Is Regular Activity</para>
        /// </summary>
        [AttributeLogicalName("isregularactivity")]
        [DisplayName("Is Regular Activity")]
        public bool? IsRegularActivity {
            get {
                return GetAttributeValue<bool?>("isregularactivity");
            }
        }
        
        /// <summary>
        /// <para>Information about whether the campaign activity is created by a workflow rule.</para>
        /// <para>Display Name: Is Workflow Created</para>
        /// </summary>
        [AttributeLogicalName("isworkflowcreated")]
        [DisplayName("Is Workflow Created")]
        public bool? IsWorkflowCreated {
            get {
                return GetAttributeValue<bool?>("isworkflowcreated");
            }
            set {
                SetAttributeValue("isworkflowcreated", value);
            }
        }
        
        /// <summary>
        /// <para>Contains the date and time stamp of the last on hold time.</para>
        /// <para>Display Name: Last On Hold Time</para>
        /// </summary>
        [AttributeLogicalName("lastonholdtime")]
        [DisplayName("Last On Hold Time")]
        public DateTime? LastOnHoldTime {
            get {
                return GetAttributeValue<DateTime?>("lastonholdtime");
            }
            set {
                SetAttributeValue("lastonholdtime", value);
            }
        }
        
        /// <summary>
        /// <para>Left the voice mail</para>
        /// <para>Display Name: Left Voice Mail</para>
        /// </summary>
        [AttributeLogicalName("leftvoicemail")]
        [DisplayName("Left Voice Mail")]
        public bool? LeftVoiceMail {
            get {
                return GetAttributeValue<bool?>("leftvoicemail");
            }
            set {
                SetAttributeValue("leftvoicemail", value);
            }
        }
        
        /// <summary>
        /// <para>lk_campaignactivity_modifiedby</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics CRM options.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>lk_campaignactivity_modifiedonbehalfby</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Shows how long, in minutes, that the record was on hold.</para>
        /// <para>Display Name: On Hold Time (Minutes)</para>
        /// </summary>
        [AttributeLogicalName("onholdtime")]
        [DisplayName("On Hold Time (Minutes)")]
        [Range(-2147483648, 2147483647)]
        public int? OnHoldTime {
            get {
                return GetAttributeValue<int?>("onholdtime");
            }
        }
        
        /// <summary>
        /// <para>List of optional attendees for the activity.</para>
        /// <para>Display Name: Optional Attendees</para>
        /// </summary>
        [AttributeLogicalName("optionalattendees")]
        [DisplayName("Optional Attendees")]
        public IEnumerable<ActivityParty> OptionalAttendees {
            get {
                return GetEntityCollection<ActivityParty>("optionalattendees");
            }
            set {
                SetEntityCollection("optionalattendees", value);
            }
        }
        
        /// <summary>
        /// <para>Person who organized the activity.</para>
        /// <para>Display Name: Organizer</para>
        /// </summary>
        [AttributeLogicalName("organizer")]
        [DisplayName("Organizer")]
        public IEnumerable<ActivityParty> Organizer {
            get {
                return GetEntityCollection<ActivityParty>("organizer");
            }
            set {
                SetEntityCollection("organizer", value);
            }
        }
        
        [AttributeLogicalName("overriddencreatedon")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the user or team who is assigned to manage the record. This field is updated every time the record is assigned to a different user.</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>business_unit_campaignactivity_activities</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>team_campaignactivity</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>user_campaignactivity</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Enter the vendor accounts or contacts to capture any third-party suppliers used for the campaign activity.</para>
        /// <para>Display Name: Outsource Vendors</para>
        /// </summary>
        [AttributeLogicalName("partners")]
        [DisplayName("Outsource Vendors")]
        public IEnumerable<ActivityParty> Partners {
            get {
                return GetEntityCollection<ActivityParty>("partners");
            }
            set {
                SetEntityCollection("partners", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Delay activity processing until</para>
        /// </summary>
        [AttributeLogicalName("postponeactivityprocessinguntil")]
        [DisplayName("Delay activity processing until")]
        public DateTime? PostponeActivityProcessingUntil {
            get {
                return GetAttributeValue<DateTime?>("postponeactivityprocessinguntil");
            }
        }
        
        /// <summary>
        /// <para>Type a short description about the objective or primary topic of the campaign activity.</para>
        /// <para>Display Name: Subject</para>
        /// </summary>
        [AttributeLogicalName("subject")]
        [DisplayName("Subject")]
        [MaxLength(200)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("subject");
            }
            set {
                SetAttributeValue("subject", value);
            }
        }
        
        /// <summary>
        /// <para>Select the priority so that preferred customers or critical issues are handled quickly.</para>
        /// <para>Display Name: Priority</para>
        /// </summary>
        [AttributeLogicalName("prioritycode")]
        [DisplayName("Priority")]
        public CampaignActivity_PriorityCode? PriorityCode {
            get {
                return GetOptionSetValue<CampaignActivity_PriorityCode>("prioritycode");
            }
            set {
                SetOptionSetValue("prioritycode", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the process.</para>
        /// <para>Display Name: Process</para>
        /// </summary>
        [AttributeLogicalName("processid")]
        [DisplayName("Process")]
        public Guid? ProcessId {
            get {
                return GetAttributeValue<Guid?>("processid");
            }
            set {
                SetAttributeValue("processid", value);
            }
        }
        
        /// <summary>
        /// <para>Campaign_CampaignActivities</para>
        /// <para>Display Name: Parent Campaign</para>
        /// </summary>
        [AttributeLogicalName("regardingobjectid")]
        [DisplayName("Parent Campaign")]
        public EntityReference RegardingObjectId {
            get {
                return GetAttributeValue<EntityReference>("regardingobjectid");
            }
            set {
                SetAttributeValue("regardingobjectid", value);
            }
        }
        
        /// <summary>
        /// <para>List of required attendees for the activity.</para>
        /// <para>Display Name: Required Attendees</para>
        /// </summary>
        [AttributeLogicalName("requiredattendees")]
        [DisplayName("Required Attendees")]
        public IEnumerable<ActivityParty> RequiredAttendees {
            get {
                return GetEntityCollection<ActivityParty>("requiredattendees");
            }
            set {
                SetEntityCollection("requiredattendees", value);
            }
        }
        
        /// <summary>
        /// <para>Users or facility/equipment that are required for the activity.</para>
        /// <para>Display Name: Resources</para>
        /// </summary>
        [AttributeLogicalName("resources")]
        [DisplayName("Resources")]
        public IEnumerable<ActivityParty> Resources {
            get {
                return GetEntityCollection<ActivityParty>("resources");
            }
            set {
                SetEntityCollection("resources", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the service level agreement (SLA) that you want to apply to the case record.</para>
        /// <para>Display Name: SLA</para>
        /// </summary>
        [AttributeLogicalName("slaid")]
        [DisplayName("SLA")]
        public EntityReference SLAId {
            get {
                return GetAttributeValue<EntityReference>("slaid");
            }
            set {
                SetAttributeValue("slaid", value);
            }
        }
        
        /// <summary>
        /// <para>Last SLA that was applied to this case. This field is for internal use only.</para>
        /// <para>Display Name: Last SLA applied</para>
        /// </summary>
        [AttributeLogicalName("slainvokedid")]
        [DisplayName("Last SLA applied")]
        public EntityReference SLAInvokedId {
            get {
                return GetAttributeValue<EntityReference>("slainvokedid");
            }
        }
        
        /// <summary>
        /// <para>Scheduled duration, specified in minutes, of the campaign activity.</para>
        /// <para>Display Name: Scheduled Duration</para>
        /// </summary>
        [AttributeLogicalName("scheduleddurationminutes")]
        [DisplayName("Scheduled Duration")]
        [Range(0, 2147483647)]
        public int? ScheduledDurationMinutes {
            get {
                return GetAttributeValue<int?>("scheduleddurationminutes");
            }
        }
        
        /// <summary>
        /// <para>Enter the expected due date and time for the activity to be completed to provide details about the timing of the campaign activity.</para>
        /// <para>Display Name: Scheduled End</para>
        /// </summary>
        [AttributeLogicalName("scheduledend")]
        [DisplayName("Scheduled End")]
        public DateTime? ScheduledEnd {
            get {
                return GetAttributeValue<DateTime?>("scheduledend");
            }
            set {
                SetAttributeValue("scheduledend", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the expected start date and time for the activity to provide details about timing of the campaign activity.</para>
        /// <para>Display Name: Scheduled Start</para>
        /// </summary>
        [AttributeLogicalName("scheduledstart")]
        [DisplayName("Scheduled Start")]
        public DateTime? ScheduledStart {
            get {
                return GetAttributeValue<DateTime?>("scheduledstart");
            }
            set {
                SetAttributeValue("scheduledstart", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the mailbox associated with the sender of the email message.</para>
        /// <para>Display Name: Sender's Mailbox</para>
        /// </summary>
        [AttributeLogicalName("sendermailboxid")]
        [DisplayName("Sender\'s Mailbox")]
        public EntityReference SenderMailboxId {
            get {
                return GetAttributeValue<EntityReference>("sendermailboxid");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the activity was sent.</para>
        /// <para>Display Name: Date Sent</para>
        /// </summary>
        [AttributeLogicalName("senton")]
        [DisplayName("Date Sent")]
        public DateTime? SentOn {
            get {
                return GetAttributeValue<DateTime?>("senton");
            }
        }
        
        /// <summary>
        /// <para>Uniqueidentifier specifying the id of recurring series of an instance.</para>
        /// <para>Display Name: Series Id</para>
        /// </summary>
        [AttributeLogicalName("seriesid")]
        [DisplayName("Series Id")]
        public Guid? SeriesId {
            get {
                return GetAttributeValue<Guid?>("seriesid");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the associated service.</para>
        /// <para>Display Name: Service</para>
        /// </summary>
        [AttributeLogicalName("serviceid")]
        [DisplayName("Service")]
        public EntityReference ServiceId {
            get {
                return GetAttributeValue<EntityReference>("serviceid");
            }
            set {
                SetAttributeValue("serviceid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time by which the activities are sorted.</para>
        /// <para>Display Name: Sort Date</para>
        /// </summary>
        [AttributeLogicalName("sortdate")]
        [DisplayName("Sort Date")]
        public DateTime? SortDate {
            get {
                return GetAttributeValue<DateTime?>("sortdate");
            }
            set {
                SetAttributeValue("sortdate", value);
            }
        }
        
        /// <summary>
        /// <para>processstage_campaignactivities</para>
        /// <para>Display Name: Process Stage</para>
        /// </summary>
        [AttributeLogicalName("stageid")]
        [DisplayName("Process Stage")]
        public Guid? StageId {
            get {
                return GetAttributeValue<Guid?>("stageid");
            }
            set {
                SetAttributeValue("stageid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows whether the campaign activity is open, completed, or canceled. Completed and canceled campaign activities are read-only and can't be edited.</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public CampaignActivityState? StateCode {
            get {
                return GetOptionSetValue<CampaignActivityState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the campaign activity's status.</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public CampaignActivity_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<CampaignActivity_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>Type a subcategory to identify the campaign activity type and relate the activity to a specific product, sales region, business group, or other function.</para>
        /// <para>Display Name: Sub-Category</para>
        /// </summary>
        [AttributeLogicalName("subcategory")]
        [DisplayName("Sub-Category")]
        [MaxLength(250)]
        public string Subcategory {
            get {
                return GetAttributeValue<string>("subcategory");
            }
            set {
                SetAttributeValue("subcategory", value);
            }
        }
        
        /// <summary>
        /// <para>Type a short description about the objective or primary topic of the campaign activity.</para>
        /// <para>Display Name: Subject</para>
        /// </summary>
        [AttributeLogicalName("subject")]
        [DisplayName("Subject")]
        [MaxLength(200)]
        public string Subject {
            get {
                return GetAttributeValue<string>("subject");
            }
            set {
                SetAttributeValue("subject", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Person who is the receiver of the activity.</para>
        /// <para>Display Name: To</para>
        /// </summary>
        [AttributeLogicalName("to")]
        [DisplayName("To")]
        public IEnumerable<ActivityParty> To {
            get {
                return GetEntityCollection<ActivityParty>("to");
            }
            set {
                SetEntityCollection("to", value);
            }
        }
        
        /// <summary>
        /// <para>transactioncurrency_campaignactivity</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Traversed Path</para>
        /// </summary>
        [AttributeLogicalName("traversedpath")]
        [DisplayName("Traversed Path")]
        [MaxLength(1250)]
        public string TraversedPath {
            get {
                return GetAttributeValue<string>("traversedpath");
            }
            set {
                SetAttributeValue("traversedpath", value);
            }
        }
        
        /// <summary>
        /// <para>Select the type of campaign activity to indicate the purpose of the activity.</para>
        /// <para>Display Name: Type</para>
        /// </summary>
        [AttributeLogicalName("typecode")]
        [DisplayName("Type")]
        public CampaignActivity_TypeCode? TypeCode {
            get {
                return GetOptionSetValue<CampaignActivity_TypeCode>("typecode");
            }
            set {
                SetOptionSetValue("typecode", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version number of the campaign activity.</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        [RelationshipSchemaName("CampaignActivity_Accounts")]
        public IEnumerable<Account> CampaignActivity_Accounts {
            get {
                return GetRelatedEntities<Account>("CampaignActivity_Accounts", null);
            }
            set {
                SetRelatedEntities("CampaignActivity_Accounts", null, value);
            }
        }
        
        [RelationshipSchemaName("CampaignActivity_ActivityPointers")]
        public IEnumerable<ActivityPointer> CampaignActivity_ActivityPointers {
            get {
                return GetRelatedEntities<ActivityPointer>("CampaignActivity_ActivityPointers", null);
            }
            set {
                SetRelatedEntities("CampaignActivity_ActivityPointers", null, value);
            }
        }
        
        [RelationshipSchemaName("CampaignActivity_Appointments")]
        public IEnumerable<Appointment> CampaignActivity_Appointments {
            get {
                return GetRelatedEntities<Appointment>("CampaignActivity_Appointments", null);
            }
            set {
                SetRelatedEntities("CampaignActivity_Appointments", null, value);
            }
        }
        
        [RelationshipSchemaName("CampaignActivity_Contacts")]
        public IEnumerable<Contact> CampaignActivity_Contacts {
            get {
                return GetRelatedEntities<Contact>("CampaignActivity_Contacts", null);
            }
            set {
                SetRelatedEntities("CampaignActivity_Contacts", null, value);
            }
        }
        
        [RelationshipSchemaName("CampaignActivity_Emails")]
        public IEnumerable<Email> CampaignActivity_Emails {
            get {
                return GetRelatedEntities<Email>("CampaignActivity_Emails", null);
            }
            set {
                SetRelatedEntities("CampaignActivity_Emails", null, value);
            }
        }
        
        [RelationshipSchemaName("CampaignActivity_Faxes")]
        public IEnumerable<Fax> CampaignActivity_Faxes {
            get {
                return GetRelatedEntities<Fax>("CampaignActivity_Faxes", null);
            }
            set {
                SetRelatedEntities("CampaignActivity_Faxes", null, value);
            }
        }
        
        [RelationshipSchemaName("CampaignActivity_Leads")]
        public IEnumerable<Lead> CampaignActivity_Leads {
            get {
                return GetRelatedEntities<Lead>("CampaignActivity_Leads", null);
            }
            set {
                SetRelatedEntities("CampaignActivity_Leads", null, value);
            }
        }
        
        [RelationshipSchemaName("CampaignActivity_Letters")]
        public IEnumerable<Letter> CampaignActivity_Letters {
            get {
                return GetRelatedEntities<Letter>("CampaignActivity_Letters", null);
            }
            set {
                SetRelatedEntities("CampaignActivity_Letters", null, value);
            }
        }
        
        [RelationshipSchemaName("CampaignActivity_Phonecalls")]
        public IEnumerable<PhoneCall> CampaignActivity_Phonecalls {
            get {
                return GetRelatedEntities<PhoneCall>("CampaignActivity_Phonecalls", null);
            }
            set {
                SetRelatedEntities("CampaignActivity_Phonecalls", null, value);
            }
        }
        
        [RelationshipSchemaName("CampaignActivity_QueueItem")]
        public IEnumerable<QueueItem> CampaignActivity_QueueItem {
            get {
                return GetRelatedEntities<QueueItem>("CampaignActivity_QueueItem", null);
            }
            set {
                SetRelatedEntities("CampaignActivity_QueueItem", null, value);
            }
        }
        
        [RelationshipSchemaName("CampaignActivity_RecurringAppointmentMasters")]
        public IEnumerable<RecurringAppointmentMaster> CampaignActivity_RecurringAppointmentMasters {
            get {
                return GetRelatedEntities<RecurringAppointmentMaster>("CampaignActivity_RecurringAppointmentMasters", null);
            }
            set {
                SetRelatedEntities("CampaignActivity_RecurringAppointmentMasters", null, value);
            }
        }
        
        [RelationshipSchemaName("CampaignActivity_SyncErrors")]
        public IEnumerable<SyncError> CampaignActivity_SyncErrors {
            get {
                return GetRelatedEntities<SyncError>("CampaignActivity_SyncErrors", null);
            }
            set {
                SetRelatedEntities("CampaignActivity_SyncErrors", null, value);
            }
        }
        
        [RelationshipSchemaName("CampaignActivity_Tasks")]
        public IEnumerable<Task> CampaignActivity_Tasks {
            get {
                return GetRelatedEntities<Task>("CampaignActivity_Tasks", null);
            }
            set {
                SetRelatedEntities("CampaignActivity_Tasks", null, value);
            }
        }
        
        [RelationshipSchemaName("CampaignActivity_logs")]
        public IEnumerable<BulkOperationLog> CampaignActivity_logs {
            get {
                return GetRelatedEntities<BulkOperationLog>("CampaignActivity_logs", null);
            }
            set {
                SetRelatedEntities("CampaignActivity_logs", null, value);
            }
        }
        
        [RelationshipSchemaName("CampaignResponse_CampaignActivities")]
        public IEnumerable<CampaignResponse> CampaignResponse_CampaignActivities {
            get {
                return GetRelatedEntities<CampaignResponse>("CampaignResponse_CampaignActivities", null);
            }
            set {
                SetRelatedEntities("CampaignResponse_CampaignActivities", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Campaign_CampaignActivities")]
        public Campaign Campaign_CampaignActivities {
            get {
                return GetRelatedEntity<Campaign>("Campaign_CampaignActivities", null);
            }
            set {
                SetRelatedEntity("Campaign_CampaignActivities", null, value);
            }
        }
        
        [AttributeLogicalName("activityid")]
        [RelationshipSchemaName("activity_pointer_campaignactivity")]
        public ActivityPointer activity_pointer_campaignactivity {
            get {
                return GetRelatedEntity<ActivityPointer>("activity_pointer_campaignactivity", null);
            }
            set {
                SetRelatedEntity("activity_pointer_campaignactivity", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("bookableresourcebooking_CampaignActivities")]
        public BookableResourceBooking bookableresourcebooking_CampaignActivities {
            get {
                return GetRelatedEntity<BookableResourceBooking>("bookableresourcebooking_CampaignActivities", null);
            }
            set {
                SetRelatedEntity("bookableresourcebooking_CampaignActivities", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("bookableresourcebookingheader_CampaignActivities")]
        public BookableResourceBookingHeader bookableresourcebookingheader_CampaignActivities {
            get {
                return GetRelatedEntity<BookableResourceBookingHeader>("bookableresourcebookingheader_CampaignActivities", null);
            }
            set {
                SetRelatedEntity("bookableresourcebookingheader_CampaignActivities", null, value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_campaignactivity_activities")]
        public BusinessUnit business_unit_campaignactivity_activities {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_campaignactivity_activities", null);
            }
            set {
                SetRelatedEntity("business_unit_campaignactivity_activities", null, value);
            }
        }
        
        [RelationshipSchemaName("campaignactivity_CampaignResponses")]
        public IEnumerable<CampaignResponse> campaignactivity_CampaignResponses {
            get {
                return GetRelatedEntities<CampaignResponse>("campaignactivity_CampaignResponses", null);
            }
            set {
                SetRelatedEntities("campaignactivity_CampaignResponses", null, value);
            }
        }
        
        [RelationshipSchemaName("campaignactivity_IncidentResolutions")]
        public IEnumerable<IncidentResolution> campaignactivity_IncidentResolutions {
            get {
                return GetRelatedEntities<IncidentResolution>("campaignactivity_IncidentResolutions", null);
            }
            set {
                SetRelatedEntities("campaignactivity_IncidentResolutions", null, value);
            }
        }
        
        [RelationshipSchemaName("campaignactivity_OpportunityCloses")]
        public IEnumerable<OpportunityClose> campaignactivity_OpportunityCloses {
            get {
                return GetRelatedEntities<OpportunityClose>("campaignactivity_OpportunityCloses", null);
            }
            set {
                SetRelatedEntities("campaignactivity_OpportunityCloses", null, value);
            }
        }
        
        [RelationshipSchemaName("campaignactivity_ServiceAppointments")]
        public IEnumerable<ServiceAppointment> campaignactivity_ServiceAppointments {
            get {
                return GetRelatedEntities<ServiceAppointment>("campaignactivity_ServiceAppointments", null);
            }
            set {
                SetRelatedEntities("campaignactivity_ServiceAppointments", null, value);
            }
        }
        
        [RelationshipSchemaName("campaignactivity_Teams")]
        public IEnumerable<Team> campaignactivity_Teams {
            get {
                return GetRelatedEntities<Team>("campaignactivity_Teams", null);
            }
            set {
                SetRelatedEntities("campaignactivity_Teams", null, value);
            }
        }
        
        [RelationshipSchemaName("campaignactivity_activity_parties")]
        public IEnumerable<ActivityParty> campaignactivity_activity_parties {
            get {
                return GetRelatedEntities<ActivityParty>("campaignactivity_activity_parties", null);
            }
            set {
                SetRelatedEntities("campaignactivity_activity_parties", null, value);
            }
        }
        
        [RelationshipSchemaName("campaignactivity_activityparties")]
        public IEnumerable<ActivityParty> campaignactivity_activityparties {
            get {
                return GetRelatedEntities<ActivityParty>("campaignactivity_activityparties", null);
            }
            set {
                SetRelatedEntities("campaignactivity_activityparties", null, value);
            }
        }
        
        [RelationshipSchemaName("campaignactivity_connections1")]
        public IEnumerable<Connection> campaignactivity_connections1 {
            get {
                return GetRelatedEntities<Connection>("campaignactivity_connections1", null);
            }
            set {
                SetRelatedEntities("campaignactivity_connections1", null, value);
            }
        }
        
        [RelationshipSchemaName("campaignactivity_connections2")]
        public IEnumerable<Connection> campaignactivity_connections2 {
            get {
                return GetRelatedEntities<Connection>("campaignactivity_connections2", null);
            }
            set {
                SetRelatedEntities("campaignactivity_connections2", null, value);
            }
        }
        
        [AttributeLogicalName("sendermailboxid")]
        [RelationshipSchemaName("campaignactivity_mailbox_sendermailboxid")]
        public Mailbox campaignactivity_mailbox_sendermailboxid {
            get {
                return GetRelatedEntity<Mailbox>("campaignactivity_mailbox_sendermailboxid", null);
            }
            set {
                SetRelatedEntity("campaignactivity_mailbox_sendermailboxid", null, value);
            }
        }
        
        [AttributeLogicalName("slaid")]
        [RelationshipSchemaName("campaignactivity_sla_slaid")]
        public SLA campaignactivity_sla_slaid {
            get {
                return GetRelatedEntity<SLA>("campaignactivity_sla_slaid", null);
            }
            set {
                SetRelatedEntity("campaignactivity_sla_slaid", null, value);
            }
        }
        
        [AttributeLogicalName("slainvokedid")]
        [RelationshipSchemaName("campaignactivity_sla_slainvokedid")]
        public SLA campaignactivity_sla_slainvokedid {
            get {
                return GetRelatedEntity<SLA>("campaignactivity_sla_slainvokedid", null);
            }
            set {
                SetRelatedEntity("campaignactivity_sla_slainvokedid", null, value);
            }
        }
        
        [RelationshipSchemaName("campaignactivitylist_association")]
        public IEnumerable<List> campaignactivitylist_association {
            get {
                return GetRelatedEntities<List>("campaignactivitylist_association", null);
            }
            set {
                SetRelatedEntities("campaignactivitylist_association", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_campaignactivity_createdby")]
        public SystemUser lk_campaignactivity_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_campaignactivity_createdby", null);
            }
            set {
                SetRelatedEntity("lk_campaignactivity_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_campaignactivity_createdonbehalfby")]
        public SystemUser lk_campaignactivity_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_campaignactivity_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_campaignactivity_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_campaignactivity_modifiedby")]
        public SystemUser lk_campaignactivity_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_campaignactivity_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_campaignactivity_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_campaignactivity_modifiedonbehalfby")]
        public SystemUser lk_campaignactivity_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_campaignactivity_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_campaignactivity_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_campaignactivity")]
        public Team team_campaignactivity {
            get {
                return GetRelatedEntity<Team>("team_campaignactivity", null);
            }
            set {
                SetRelatedEntity("team_campaignactivity", null, value);
            }
        }
        
        [AttributeLogicalName("transactioncurrencyid")]
        [RelationshipSchemaName("transactioncurrency_campaignactivity")]
        public TransactionCurrency transactioncurrency_campaignactivity {
            get {
                return GetRelatedEntity<TransactionCurrency>("transactioncurrency_campaignactivity", null);
            }
            set {
                SetRelatedEntity("transactioncurrency_campaignactivity", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_campaignactivity")]
        public SystemUser user_campaignactivity {
            get {
                return GetRelatedEntity<SystemUser>("user_campaignactivity", null);
            }
            set {
                SetRelatedEntity("user_campaignactivity", null, value);
            }
        }
        
        public static CampaignActivity Retrieve(IOrganizationService service, Guid id, params Expression<Func<CampaignActivity,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Work item of a campaign activity, such as a list or sales literature.</para>
    /// <para>Display Name: Campaign Activity Item</para>
    /// </summary>
    [EntityLogicalName("campaignactivityitem")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class CampaignActivityItem : ExtendedEntity<EmptyEnum, EmptyEnum> {
        
        public const string EntityLogicalName = "campaignactivityitem";
        
        public const string RelationshipSchemaName = "CampaignActivityItem";
        
        public const int EntityTypeCode = 4404;
        
        public CampaignActivityItem() : 
                base(EntityLogicalName) {
        }
        
        public CampaignActivityItem(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("name");
            }
        }
        
        [AttributeLogicalName("campaignactivityitemid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("campaignactivityitemid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the campaign activity item.</para>
        /// </summary>
        [AttributeLogicalName("campaignactivityitemid")]
        public Guid? CampaignActivityItemId {
            get {
                return GetAttributeValue<Guid?>("campaignactivityitemid");
            }
            set {
                SetId("campaignactivityitemid", value);
            }
        }
        
        /// <summary>
        /// <para>ActivityPointer_CampaignActivityItems</para>
        /// </summary>
        [AttributeLogicalName("campaignactivityid")]
        public EntityReference CampaignActivityId {
            get {
                return GetAttributeValue<EntityReference>("campaignactivityid");
            }
            set {
                SetAttributeValue("campaignactivityid", value);
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the item.</para>
        /// </summary>
        [AttributeLogicalName("itemid")]
        public Guid? ItemId {
            get {
                return GetAttributeValue<Guid?>("itemid");
            }
            set {
                SetAttributeValue("itemid", value);
            }
        }
        
        /// <summary>
        /// <para>Identification of the type of the campaign activity item.</para>
        /// </summary>
        [AttributeLogicalName("itemobjecttypecode")]
        public string ItemObjectTypeCode {
            get {
                return GetAttributeValue<string>("itemobjecttypecode");
            }
            set {
                SetAttributeValue("itemobjecttypecode", value);
            }
        }
        
        /// <summary>
        /// <para>name</para>
        /// <para>Display Name: name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("name")]
        [MaxLength(100)]
        public string Name {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user or team who owns the campaign activity item.</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the business unit that owns the campaign activity item.</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        public Guid? OwningBusinessUnit {
            get {
                return GetAttributeValue<Guid?>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user that owns the campaign activity item.</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        public Guid? OwningUser {
            get {
                return GetAttributeValue<Guid?>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>name</para>
        /// <para>Display Name: name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("name")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        [AttributeLogicalName("campaignactivityid")]
        [RelationshipSchemaName("ActivityPointer_CampaignActivityItems")]
        public ActivityPointer ActivityPointer_CampaignActivityItems {
            get {
                return GetRelatedEntity<ActivityPointer>("ActivityPointer_CampaignActivityItems", null);
            }
            set {
                SetRelatedEntity("ActivityPointer_CampaignActivityItems", null, value);
            }
        }
        
        [RelationshipSchemaName("campaignactivityitem_Teams")]
        public IEnumerable<Team> campaignactivityitem_Teams {
            get {
                return GetRelatedEntities<Team>("campaignactivityitem_Teams", null);
            }
            set {
                SetRelatedEntities("campaignactivityitem_Teams", null, value);
            }
        }
        
        public static CampaignActivityItem Retrieve(IOrganizationService service, Guid id, params Expression<Func<CampaignActivityItem,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Work item in a campaign, a list or sales literature.</para>
    /// <para>Display Name: Campaign Item</para>
    /// </summary>
    [EntityLogicalName("campaignitem")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class CampaignItem : ExtendedEntity<EmptyEnum, EmptyEnum> {
        
        public const string EntityLogicalName = "campaignitem";
        
        public const string RelationshipSchemaName = "CampaignItem";
        
        public const int EntityTypeCode = 4403;
        
        public CampaignItem() : 
                base(EntityLogicalName) {
        }
        
        public CampaignItem(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("name");
            }
        }
        
        [AttributeLogicalName("campaignitemid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("campaignitemid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the campaign item.</para>
        /// </summary>
        [AttributeLogicalName("campaignitemid")]
        public Guid? CampaignItemId {
            get {
                return GetAttributeValue<Guid?>("campaignitemid");
            }
            set {
                SetId("campaignitemid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the campaign that is associated with the individual item.</para>
        /// </summary>
        [AttributeLogicalName("campaignid")]
        public EntityReference CampaignId {
            get {
                return GetAttributeValue<EntityReference>("campaignid");
            }
            set {
                SetAttributeValue("campaignid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the entity for the campaign item.</para>
        /// </summary>
        [AttributeLogicalName("entityid")]
        public Guid? EntityId {
            get {
                return GetAttributeValue<Guid?>("entityid");
            }
            set {
                SetAttributeValue("entityid", value);
            }
        }
        
        /// <summary>
        /// <para>Object type of entity for the campaign item.</para>
        /// </summary>
        [AttributeLogicalName("entitytype")]
        public string EntityType {
            get {
                return GetAttributeValue<string>("entitytype");
            }
            set {
                SetAttributeValue("entitytype", value);
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>name</para>
        /// <para>Display Name: name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("name")]
        [MaxLength(100)]
        public string Name {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user or team who owns the campaign item.</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the business unit that owns the campaign item.</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        public Guid? OwningBusinessUnit {
            get {
                return GetAttributeValue<Guid?>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user that owns the campaign item.</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        public Guid? OwningUser {
            get {
                return GetAttributeValue<Guid?>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>name</para>
        /// <para>Display Name: name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("name")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        [RelationshipSchemaName("campaignitem_Teams")]
        public IEnumerable<Team> campaignitem_Teams {
            get {
                return GetRelatedEntities<Team>("campaignitem_Teams", null);
            }
            set {
                SetRelatedEntities("campaignitem_Teams", null, value);
            }
        }
        
        public static CampaignItem Retrieve(IOrganizationService service, Guid id, params Expression<Func<CampaignItem,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Response from an existing or a potential new customer for a campaign.</para>
    /// <para>Display Name: Campaign Response</para>
    /// </summary>
    [EntityLogicalName("campaignresponse")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class CampaignResponse : ExtendedEntity<CampaignResponseState, CampaignResponse_StatusCode> {
        
        public const string EntityLogicalName = "campaignresponse";
        
        public const int EntityTypeCode = 4401;
        
        public CampaignResponse() : 
                base(EntityLogicalName) {
        }
        
        public CampaignResponse(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("subject");
            }
        }
        
        [AttributeLogicalName("activityid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("activityid", value);
            }
        }
        
        /// <summary>
        /// <para>activity_pointer_campaignresponse</para>
        /// <para>Display Name: Campaign Response</para>
        /// </summary>
        [AttributeLogicalName("activityid")]
        [DisplayName("Campaign Response")]
        public Guid? ActivityId {
            get {
                return GetAttributeValue<Guid?>("activityid");
            }
            set {
                SetId("activityid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Additional Parameters</para>
        /// </summary>
        [AttributeLogicalName("activityadditionalparams")]
        [DisplayName("Additional Parameters")]
        public string ActivityAdditionalParams {
            get {
                return GetAttributeValue<string>("activityadditionalparams");
            }
            set {
                SetAttributeValue("activityadditionalparams", value);
            }
        }
        
        /// <summary>
        /// <para>Type of activity.</para>
        /// <para>Display Name: Activity Type</para>
        /// </summary>
        [AttributeLogicalName("activitytypecode")]
        [DisplayName("Activity Type")]
        public string ActivityTypeCode {
            get {
                return GetAttributeValue<string>("activitytypecode");
            }
        }
        
        /// <summary>
        /// <para>Type the number of minutes spent on this activity. The duration is used in reporting.</para>
        /// <para>Display Name: Actual Duration </para>
        /// </summary>
        [AttributeLogicalName("actualdurationminutes")]
        [DisplayName("Actual Duration ")]
        [Range(0, 2147483647)]
        public int? ActualDurationMinutes {
            get {
                return GetAttributeValue<int?>("actualdurationminutes");
            }
            set {
                SetAttributeValue("actualdurationminutes", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the date when the campaign response was actually completed.</para>
        /// <para>Display Name: Actual End</para>
        /// </summary>
        [AttributeLogicalName("actualend")]
        [DisplayName("Actual End")]
        public DateTime? ActualEnd {
            get {
                return GetAttributeValue<DateTime?>("actualend");
            }
            set {
                SetAttributeValue("actualend", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the actual start date and time for the campaign response.</para>
        /// <para>Display Name: Actual Start</para>
        /// </summary>
        [AttributeLogicalName("actualstart")]
        [DisplayName("Actual Start")]
        public DateTime? ActualStart {
            get {
                return GetAttributeValue<DateTime?>("actualstart");
            }
            set {
                SetAttributeValue("actualstart", value);
            }
        }
        
        /// <summary>
        /// <para>Blind Carbon-copy (bcc) recipients of the activity.</para>
        /// <para>Display Name: BCC</para>
        /// </summary>
        [AttributeLogicalName("bcc")]
        [DisplayName("BCC")]
        public IEnumerable<ActivityParty> Bcc {
            get {
                return GetEntityCollection<ActivityParty>("bcc");
            }
            set {
                SetEntityCollection("bcc", value);
            }
        }
        
        /// <summary>
        /// <para>Type a category to identify the campaign response type, such as new business development or customer retention, to tie the campaign response to a business group or function.</para>
        /// <para>Display Name: Category</para>
        /// </summary>
        [AttributeLogicalName("category")]
        [DisplayName("Category")]
        [MaxLength(250)]
        public string Category {
            get {
                return GetAttributeValue<string>("category");
            }
            set {
                SetAttributeValue("category", value);
            }
        }
        
        /// <summary>
        /// <para>Carbon-copy (cc) recipients of the activity.</para>
        /// <para>Display Name: CC</para>
        /// </summary>
        [AttributeLogicalName("cc")]
        [DisplayName("CC")]
        public IEnumerable<ActivityParty> Cc {
            get {
                return GetEntityCollection<ActivityParty>("cc");
            }
            set {
                SetEntityCollection("cc", value);
            }
        }
        
        /// <summary>
        /// <para>Select how the response was received, such as phone, letter, fax, or email.</para>
        /// <para>Display Name: Channel</para>
        /// </summary>
        [AttributeLogicalName("channeltypecode")]
        [DisplayName("Channel")]
        public CampaignResponse_ChannelTypeCode? ChannelTypeCode {
            get {
                return GetOptionSetValue<CampaignResponse_ChannelTypeCode>("channeltypecode");
            }
            set {
                SetOptionSetValue("channeltypecode", value);
            }
        }
        
        /// <summary>
        /// <para>Shows how contact about the social activity originated, such as from Twitter or Facebook. This field is read-only.</para>
        /// <para>Display Name: Social Channel</para>
        /// </summary>
        [AttributeLogicalName("community")]
        [DisplayName("Social Channel")]
        public socialprofile_community? Community {
            get {
                return GetOptionSetValue<socialprofile_community>("community");
            }
            set {
                SetOptionSetValue("community", value);
            }
        }
        
        /// <summary>
        /// <para>Type the name of the company if the campaign response was received from a new prospect or customer.</para>
        /// <para>Display Name: Company Name</para>
        /// </summary>
        [AttributeLogicalName("companyname")]
        [DisplayName("Company Name")]
        [MaxLength(100)]
        public string CompanyName {
            get {
                return GetAttributeValue<string>("companyname");
            }
            set {
                SetAttributeValue("companyname", value);
            }
        }
        
        /// <summary>
        /// <para>lk_campaignresponse_createdby</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics CRM options.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>lk_campaignresponse_createdonbehalfby</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Enter the account, contact, or lead that submitted the campaign response, if it was received from an existing prospect or customer.</para>
        /// <para>Display Name: Customer</para>
        /// </summary>
        [AttributeLogicalName("customer")]
        [DisplayName("Customer")]
        public IEnumerable<ActivityParty> Customer {
            get {
                return GetEntityCollection<ActivityParty>("customer");
            }
            set {
                SetEntityCollection("customer", value);
            }
        }
        
        /// <summary>
        /// <para>Customer with which the activity is associated.</para>
        /// <para>Display Name: Customers</para>
        /// </summary>
        [AttributeLogicalName("customers")]
        [DisplayName("Customers")]
        public IEnumerable<ActivityParty> Customers {
            get {
                return GetEntityCollection<ActivityParty>("customers");
            }
            set {
                SetEntityCollection("customers", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time when the delivery of the activity was last attempted.</para>
        /// <para>Display Name: Date Delivery Last Attempted</para>
        /// </summary>
        [AttributeLogicalName("deliverylastattemptedon")]
        [DisplayName("Date Delivery Last Attempted")]
        public DateTime? DeliveryLastAttemptedOn {
            get {
                return GetAttributeValue<DateTime?>("deliverylastattemptedon");
            }
        }
        
        /// <summary>
        /// <para>Priority of delivery of the activity to the email server.</para>
        /// <para>Display Name: Delivery Priority</para>
        /// </summary>
        [AttributeLogicalName("deliveryprioritycode")]
        [DisplayName("Delivery Priority")]
        public activitypointer_deliveryprioritycode? DeliveryPriorityCode {
            get {
                return GetOptionSetValue<activitypointer_deliveryprioritycode>("deliveryprioritycode");
            }
            set {
                SetOptionSetValue("deliveryprioritycode", value);
            }
        }
        
        /// <summary>
        /// <para>Type additional information to describe the campaign response, such as key discussion points or objectives.</para>
        /// <para>Display Name: Description</para>
        /// </summary>
        [AttributeLogicalName("description")]
        [DisplayName("Description")]
        public string Description {
            get {
                return GetAttributeValue<string>("description");
            }
            set {
                SetAttributeValue("description", value);
            }
        }
        
        /// <summary>
        /// <para>Type the responder's email address.</para>
        /// <para>Display Name: Email</para>
        /// </summary>
        [AttributeLogicalName("emailaddress")]
        [DisplayName("Email")]
        [MaxLength(100)]
        public string EMailAddress {
            get {
                return GetAttributeValue<string>("emailaddress");
            }
            set {
                SetAttributeValue("emailaddress", value);
            }
        }
        
        /// <summary>
        /// <para>The message id of activity which is returned from Exchange Server.</para>
        /// <para>Display Name: Exchange Item ID</para>
        /// </summary>
        [AttributeLogicalName("exchangeitemid")]
        [DisplayName("Exchange Item ID")]
        [MaxLength(200)]
        public string ExchangeItemId {
            get {
                return GetAttributeValue<string>("exchangeitemid");
            }
            set {
                SetAttributeValue("exchangeitemid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("Exchange Rate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Shows the web link of Activity of type email.</para>
        /// <para>Display Name: Exchange WebLink</para>
        /// </summary>
        [AttributeLogicalName("exchangeweblink")]
        [DisplayName("Exchange WebLink")]
        [MaxLength(1250)]
        public string ExchangeWebLink {
            get {
                return GetAttributeValue<string>("exchangeweblink");
            }
            set {
                SetAttributeValue("exchangeweblink", value);
            }
        }
        
        /// <summary>
        /// <para>Type the responder's fax number.</para>
        /// <para>Display Name: Fax</para>
        /// </summary>
        [AttributeLogicalName("fax")]
        [DisplayName("Fax")]
        [MaxLength(50)]
        public string Fax {
            get {
                return GetAttributeValue<string>("fax");
            }
            set {
                SetAttributeValue("fax", value);
            }
        }
        
        /// <summary>
        /// <para>Type the responder's first name if the campaign response was received from a new prospect or customer.</para>
        /// <para>Display Name: First Name</para>
        /// </summary>
        [AttributeLogicalName("firstname")]
        [DisplayName("First Name")]
        [MaxLength(50)]
        public string FirstName {
            get {
                return GetAttributeValue<string>("firstname");
            }
            set {
                SetAttributeValue("firstname", value);
            }
        }
        
        /// <summary>
        /// <para>For system use only.</para>
        /// <para>Display Name: From</para>
        /// </summary>
        [AttributeLogicalName("from")]
        [DisplayName("From")]
        public IEnumerable<ActivityParty> From {
            get {
                return GetEntityCollection<ActivityParty>("from");
            }
            set {
                SetEntityCollection("from", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the data import or data migration that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Type of instance of a recurring series.</para>
        /// <para>Display Name: Recurring Instance Type</para>
        /// </summary>
        [AttributeLogicalName("instancetypecode")]
        [DisplayName("Recurring Instance Type")]
        public CampaignResponse_InstanceTypeCode? InstanceTypeCode {
            get {
                return GetOptionSetValue<CampaignResponse_InstanceTypeCode>("instancetypecode");
            }
        }
        
        /// <summary>
        /// <para>Specifies whether the campaign response was billed as part of resolving a case.</para>
        /// <para>Display Name: Is Billed</para>
        /// </summary>
        [AttributeLogicalName("isbilled")]
        [DisplayName("Is Billed")]
        public bool? IsBilled {
            get {
                return GetAttributeValue<bool?>("isbilled");
            }
            set {
                SetAttributeValue("isbilled", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Is Private</para>
        /// </summary>
        [AttributeLogicalName("ismapiprivate")]
        [DisplayName("Is Private")]
        public bool? IsMapiPrivate {
            get {
                return GetAttributeValue<bool?>("ismapiprivate");
            }
            set {
                SetAttributeValue("ismapiprivate", value);
            }
        }
        
        /// <summary>
        /// <para>Information regarding whether the activity is a regular activity type or event type.</para>
        /// <para>Display Name: Is Regular Activity</para>
        /// </summary>
        [AttributeLogicalName("isregularactivity")]
        [DisplayName("Is Regular Activity")]
        public bool? IsRegularActivity {
            get {
                return GetAttributeValue<bool?>("isregularactivity");
            }
        }
        
        /// <summary>
        /// <para>Specifies whether the campaign response is created by a workflow rule.</para>
        /// <para>Display Name: Is Workflow Created</para>
        /// </summary>
        [AttributeLogicalName("isworkflowcreated")]
        [DisplayName("Is Workflow Created")]
        public bool? IsWorkflowCreated {
            get {
                return GetAttributeValue<bool?>("isworkflowcreated");
            }
            set {
                SetAttributeValue("isworkflowcreated", value);
            }
        }
        
        /// <summary>
        /// <para>Type the responder's last name if the campaign response was received from a new prospect or customer.</para>
        /// <para>Display Name: Last Name</para>
        /// </summary>
        [AttributeLogicalName("lastname")]
        [DisplayName("Last Name")]
        [MaxLength(50)]
        public string LastName {
            get {
                return GetAttributeValue<string>("lastname");
            }
            set {
                SetAttributeValue("lastname", value);
            }
        }
        
        /// <summary>
        /// <para>Contains the date and time stamp of the last on hold time.</para>
        /// <para>Display Name: Last On Hold Time</para>
        /// </summary>
        [AttributeLogicalName("lastonholdtime")]
        [DisplayName("Last On Hold Time")]
        public DateTime? LastOnHoldTime {
            get {
                return GetAttributeValue<DateTime?>("lastonholdtime");
            }
            set {
                SetAttributeValue("lastonholdtime", value);
            }
        }
        
        /// <summary>
        /// <para>Left the voice mail</para>
        /// <para>Display Name: Left Voice Mail</para>
        /// </summary>
        [AttributeLogicalName("leftvoicemail")]
        [DisplayName("Left Voice Mail")]
        public bool? LeftVoiceMail {
            get {
                return GetAttributeValue<bool?>("leftvoicemail");
            }
            set {
                SetAttributeValue("leftvoicemail", value);
            }
        }
        
        /// <summary>
        /// <para>lk_campaignresponse_modifiedby</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics CRM options.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>lk_campaignresponse_modifiedonbehalfby</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Shows how long, in minutes, that the record was on hold.</para>
        /// <para>Display Name: On Hold Time (Minutes)</para>
        /// </summary>
        [AttributeLogicalName("onholdtime")]
        [DisplayName("On Hold Time (Minutes)")]
        [Range(-2147483648, 2147483647)]
        public int? OnHoldTime {
            get {
                return GetAttributeValue<int?>("onholdtime");
            }
        }
        
        /// <summary>
        /// <para>List of optional attendees for the activity.</para>
        /// <para>Display Name: Optional Attendees</para>
        /// </summary>
        [AttributeLogicalName("optionalattendees")]
        [DisplayName("Optional Attendees")]
        public IEnumerable<ActivityParty> OptionalAttendees {
            get {
                return GetEntityCollection<ActivityParty>("optionalattendees");
            }
            set {
                SetEntityCollection("optionalattendees", value);
            }
        }
        
        /// <summary>
        /// <para>Person who organized the activity.</para>
        /// <para>Display Name: Organizer</para>
        /// </summary>
        [AttributeLogicalName("organizer")]
        [DisplayName("Organizer")]
        public IEnumerable<ActivityParty> Organizer {
            get {
                return GetEntityCollection<ActivityParty>("organizer");
            }
            set {
                SetEntityCollection("organizer", value);
            }
        }
        
        /// <summary>
        /// <para>recurringappointmentmaster_campaignresponse</para>
        /// <para>Display Name: Originating Activity</para>
        /// </summary>
        [AttributeLogicalName("originatingactivityid")]
        [DisplayName("Originating Activity")]
        public EntityReference OriginatingActivityId {
            get {
                return GetAttributeValue<EntityReference>("originatingactivityid");
            }
            set {
                SetAttributeValue("originatingactivityid", value);
            }
        }
        
        [AttributeLogicalName("overriddencreatedon")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the user or team who is assigned to manage the record. This field is updated every time the record is assigned to a different user.</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>business_unit_campaignresponse_activities</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>team_campaignresponse</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>user_campaignresponse</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Enter the vendor account or contact to capture any third-party used to obtain the campaign response.</para>
        /// <para>Display Name: Outsource Vendor</para>
        /// </summary>
        [AttributeLogicalName("partner")]
        [DisplayName("Outsource Vendor")]
        public IEnumerable<ActivityParty> Partner {
            get {
                return GetEntityCollection<ActivityParty>("partner");
            }
            set {
                SetEntityCollection("partner", value);
            }
        }
        
        /// <summary>
        /// <para>Outsource vendor with which activity is associated.</para>
        /// <para>Display Name: Outsource Vendors</para>
        /// </summary>
        [AttributeLogicalName("partners")]
        [DisplayName("Outsource Vendors")]
        public IEnumerable<ActivityParty> Partners {
            get {
                return GetEntityCollection<ActivityParty>("partners");
            }
            set {
                SetEntityCollection("partners", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Delay activity processing until</para>
        /// </summary>
        [AttributeLogicalName("postponeactivityprocessinguntil")]
        [DisplayName("Delay activity processing until")]
        public DateTime? PostponeActivityProcessingUntil {
            get {
                return GetAttributeValue<DateTime?>("postponeactivityprocessinguntil");
            }
        }
        
        /// <summary>
        /// <para>Type a short description about the objective or primary topic of the campaign response.</para>
        /// <para>Display Name: Subject</para>
        /// </summary>
        [AttributeLogicalName("subject")]
        [DisplayName("Subject")]
        [MaxLength(200)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("subject");
            }
            set {
                SetAttributeValue("subject", value);
            }
        }
        
        /// <summary>
        /// <para>Select the priority so that preferred customers or critical issues are handled quickly.</para>
        /// <para>Display Name: Priority</para>
        /// </summary>
        [AttributeLogicalName("prioritycode")]
        [DisplayName("Priority")]
        public CampaignResponse_PriorityCode? PriorityCode {
            get {
                return GetOptionSetValue<CampaignResponse_PriorityCode>("prioritycode");
            }
            set {
                SetOptionSetValue("prioritycode", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the process.</para>
        /// <para>Display Name: Process</para>
        /// </summary>
        [AttributeLogicalName("processid")]
        [DisplayName("Process")]
        public Guid? ProcessId {
            get {
                return GetAttributeValue<Guid?>("processid");
            }
            set {
                SetAttributeValue("processid", value);
            }
        }
        
        /// <summary>
        /// <para>Type a promotional code to track sales related to the campaign response or to allow the responder to redeem a discount offer.</para>
        /// <para>Display Name: Promotion Code</para>
        /// </summary>
        [AttributeLogicalName("promotioncodename")]
        [DisplayName("Promotion Code")]
        [MaxLength(250)]
        public string PromotionCodeName {
            get {
                return GetAttributeValue<string>("promotioncodename");
            }
            set {
                SetAttributeValue("promotioncodename", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the date when the campaign response was received.</para>
        /// <para>Display Name: Received On</para>
        /// </summary>
        [AttributeLogicalName("receivedon")]
        [DisplayName("Received On")]
        public DateTime? ReceivedOn {
            get {
                return GetAttributeValue<DateTime?>("receivedon");
            }
            set {
                SetAttributeValue("receivedon", value);
            }
        }
        
        /// <summary>
        /// <para>Campaign_CampaignResponses</para>
        /// <para>Display Name: Parent Campaign</para>
        /// </summary>
        [AttributeLogicalName("regardingobjectid")]
        [DisplayName("Parent Campaign")]
        public EntityReference RegardingObjectId {
            get {
                return GetAttributeValue<EntityReference>("regardingobjectid");
            }
            set {
                SetAttributeValue("regardingobjectid", value);
            }
        }
        
        /// <summary>
        /// <para>List of required attendees for the activity.</para>
        /// <para>Display Name: Required Attendees</para>
        /// </summary>
        [AttributeLogicalName("requiredattendees")]
        [DisplayName("Required Attendees")]
        public IEnumerable<ActivityParty> RequiredAttendees {
            get {
                return GetEntityCollection<ActivityParty>("requiredattendees");
            }
            set {
                SetEntityCollection("requiredattendees", value);
            }
        }
        
        /// <summary>
        /// <para>Users or facility/equipment that are required for the activity.</para>
        /// <para>Display Name: Resources</para>
        /// </summary>
        [AttributeLogicalName("resources")]
        [DisplayName("Resources")]
        public IEnumerable<ActivityParty> Resources {
            get {
                return GetEntityCollection<ActivityParty>("resources");
            }
            set {
                SetEntityCollection("resources", value);
            }
        }
        
        /// <summary>
        /// <para>Select the type of response from the prospect or customer to indicate their interest in the campaign.</para>
        /// <para>Display Name: Response Code</para>
        /// </summary>
        [AttributeLogicalName("responsecode")]
        [DisplayName("Response Code")]
        public CampaignResponse_ResponseCode? ResponseCode {
            get {
                return GetOptionSetValue<CampaignResponse_ResponseCode>("responsecode");
            }
            set {
                SetOptionSetValue("responsecode", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the service level agreement (SLA) that you want to apply to the case record.</para>
        /// <para>Display Name: SLA</para>
        /// </summary>
        [AttributeLogicalName("slaid")]
        [DisplayName("SLA")]
        public EntityReference SLAId {
            get {
                return GetAttributeValue<EntityReference>("slaid");
            }
            set {
                SetAttributeValue("slaid", value);
            }
        }
        
        /// <summary>
        /// <para>Last SLA that was applied to this case. This field is for internal use only.</para>
        /// <para>Display Name: Last SLA applied</para>
        /// </summary>
        [AttributeLogicalName("slainvokedid")]
        [DisplayName("Last SLA applied")]
        public EntityReference SLAInvokedId {
            get {
                return GetAttributeValue<EntityReference>("slainvokedid");
            }
        }
        
        /// <summary>
        /// <para>Scheduled duration of the campaign response in minutes.</para>
        /// <para>Display Name: Scheduled Duration</para>
        /// </summary>
        [AttributeLogicalName("scheduleddurationminutes")]
        [DisplayName("Scheduled Duration")]
        [Range(0, 2147483647)]
        public int? ScheduledDurationMinutes {
            get {
                return GetAttributeValue<int?>("scheduleddurationminutes");
            }
        }
        
        /// <summary>
        /// <para>Enter the expected due date and time for the activity to be completed to provide details about the timing of the campaign response.</para>
        /// <para>Display Name: Close By</para>
        /// </summary>
        [AttributeLogicalName("scheduledend")]
        [DisplayName("Close By")]
        public DateTime? ScheduledEnd {
            get {
                return GetAttributeValue<DateTime?>("scheduledend");
            }
            set {
                SetAttributeValue("scheduledend", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the expected start date and time for the activity to provide details about the timing of the campaign response.</para>
        /// <para>Display Name: Scheduled Start</para>
        /// </summary>
        [AttributeLogicalName("scheduledstart")]
        [DisplayName("Scheduled Start")]
        public DateTime? ScheduledStart {
            get {
                return GetAttributeValue<DateTime?>("scheduledstart");
            }
            set {
                SetAttributeValue("scheduledstart", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the mailbox associated with the sender of the email message.</para>
        /// <para>Display Name: Sender's Mailbox</para>
        /// </summary>
        [AttributeLogicalName("sendermailboxid")]
        [DisplayName("Sender\'s Mailbox")]
        public EntityReference SenderMailboxId {
            get {
                return GetAttributeValue<EntityReference>("sendermailboxid");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the activity was sent.</para>
        /// <para>Display Name: Date Sent</para>
        /// </summary>
        [AttributeLogicalName("senton")]
        [DisplayName("Date Sent")]
        public DateTime? SentOn {
            get {
                return GetAttributeValue<DateTime?>("senton");
            }
        }
        
        /// <summary>
        /// <para>Uniqueidentifier specifying the id of recurring series of an instance.</para>
        /// <para>Display Name: Series Id</para>
        /// </summary>
        [AttributeLogicalName("seriesid")]
        [DisplayName("Series Id")]
        public Guid? SeriesId {
            get {
                return GetAttributeValue<Guid?>("seriesid");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the associated service.</para>
        /// <para>Display Name: Service</para>
        /// </summary>
        [AttributeLogicalName("serviceid")]
        [DisplayName("Service")]
        public EntityReference ServiceId {
            get {
                return GetAttributeValue<EntityReference>("serviceid");
            }
            set {
                SetAttributeValue("serviceid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time by which the activities are sorted.</para>
        /// <para>Display Name: Sort Date</para>
        /// </summary>
        [AttributeLogicalName("sortdate")]
        [DisplayName("Sort Date")]
        public DateTime? SortDate {
            get {
                return GetAttributeValue<DateTime?>("sortdate");
            }
            set {
                SetAttributeValue("sortdate", value);
            }
        }
        
        /// <summary>
        /// <para>processstage_campaignresponses</para>
        /// <para>Display Name: Process Stage</para>
        /// </summary>
        [AttributeLogicalName("stageid")]
        [DisplayName("Process Stage")]
        public Guid? StageId {
            get {
                return GetAttributeValue<Guid?>("stageid");
            }
            set {
                SetAttributeValue("stageid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows whether the campaign response is open, closed, or canceled. Closed and canceled campaign responses are read-only and can't be edited.</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public CampaignResponseState? StateCode {
            get {
                return GetOptionSetValue<CampaignResponseState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the campaign response's status.</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public CampaignResponse_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<CampaignResponse_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>Type a subcategory to identify the campaign response type and relate the activity to a specific product, sales region, business group, or other function.</para>
        /// <para>Display Name: Sub-Category</para>
        /// </summary>
        [AttributeLogicalName("subcategory")]
        [DisplayName("Sub-Category")]
        [MaxLength(250)]
        public string Subcategory {
            get {
                return GetAttributeValue<string>("subcategory");
            }
            set {
                SetAttributeValue("subcategory", value);
            }
        }
        
        /// <summary>
        /// <para>Type a short description about the objective or primary topic of the campaign response.</para>
        /// <para>Display Name: Subject</para>
        /// </summary>
        [AttributeLogicalName("subject")]
        [DisplayName("Subject")]
        [MaxLength(200)]
        public string Subject {
            get {
                return GetAttributeValue<string>("subject");
            }
            set {
                SetAttributeValue("subject", value);
            }
        }
        
        /// <summary>
        /// <para>Type the responder's primary phone number.</para>
        /// <para>Display Name: Phone</para>
        /// </summary>
        [AttributeLogicalName("telephone")]
        [DisplayName("Phone")]
        [MaxLength(50)]
        public string Telephone {
            get {
                return GetAttributeValue<string>("telephone");
            }
            set {
                SetAttributeValue("telephone", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Person who is the receiver of the activity.</para>
        /// <para>Display Name: To</para>
        /// </summary>
        [AttributeLogicalName("to")]
        [DisplayName("To")]
        public IEnumerable<ActivityParty> To {
            get {
                return GetEntityCollection<ActivityParty>("to");
            }
            set {
                SetEntityCollection("to", value);
            }
        }
        
        /// <summary>
        /// <para>TransactionCurrency_CampaignResponse</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Traversed Path</para>
        /// </summary>
        [AttributeLogicalName("traversedpath")]
        [DisplayName("Traversed Path")]
        [MaxLength(1250)]
        public string TraversedPath {
            get {
                return GetAttributeValue<string>("traversedpath");
            }
            set {
                SetAttributeValue("traversedpath", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version number of the campaign response.</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Type the phonetic spelling of the company name, if specified in Japanese, to make sure the name is pronounced correctly in phone calls and other communications.</para>
        /// <para>Display Name: Yomi Company Name</para>
        /// </summary>
        [AttributeLogicalName("yomicompanyname")]
        [DisplayName("Yomi Company Name")]
        [MaxLength(100)]
        public string YomiCompanyName {
            get {
                return GetAttributeValue<string>("yomicompanyname");
            }
            set {
                SetAttributeValue("yomicompanyname", value);
            }
        }
        
        /// <summary>
        /// <para>Type the phonetic spelling of the campaign responder's first name, if specified in Japanese, to make sure the name is pronounced correctly in phone calls and other communications.</para>
        /// <para>Display Name: Yomi First Name</para>
        /// </summary>
        [AttributeLogicalName("yomifirstname")]
        [DisplayName("Yomi First Name")]
        [MaxLength(150)]
        public string YomiFirstName {
            get {
                return GetAttributeValue<string>("yomifirstname");
            }
            set {
                SetAttributeValue("yomifirstname", value);
            }
        }
        
        /// <summary>
        /// <para>Type the phonetic spelling of the campaign responder's last name, if specified in Japanese, to make sure the name is pronounced correctly in phone calls and other communications.</para>
        /// <para>Display Name: Yomi Last Name</para>
        /// </summary>
        [AttributeLogicalName("yomilastname")]
        [DisplayName("Yomi Last Name")]
        [MaxLength(150)]
        public string YomiLastName {
            get {
                return GetAttributeValue<string>("yomilastname");
            }
            set {
                SetAttributeValue("yomilastname", value);
            }
        }
        
        [AttributeLogicalName("originatingactivityid")]
        [RelationshipSchemaName("CampaignResponse_CampaignActivities")]
        public CampaignActivity CampaignResponse_CampaignActivities {
            get {
                return GetRelatedEntity<CampaignActivity>("CampaignResponse_CampaignActivities", null);
            }
            set {
                SetRelatedEntity("CampaignResponse_CampaignActivities", null, value);
            }
        }
        
        [AttributeLogicalName("originatingactivityid")]
        [RelationshipSchemaName("CampaignResponse_IncidentResolutions")]
        public IncidentResolution CampaignResponse_IncidentResolutions {
            get {
                return GetRelatedEntity<IncidentResolution>("CampaignResponse_IncidentResolutions", null);
            }
            set {
                SetRelatedEntity("CampaignResponse_IncidentResolutions", null, value);
            }
        }
        
        [RelationshipSchemaName("CampaignResponse_Lead")]
        public IEnumerable<Lead> CampaignResponse_Lead {
            get {
                return GetRelatedEntities<Lead>("CampaignResponse_Lead", null);
            }
            set {
                SetRelatedEntities("CampaignResponse_Lead", null, value);
            }
        }
        
        [AttributeLogicalName("originatingactivityid")]
        [RelationshipSchemaName("CampaignResponse_OpportunityCloses")]
        public OpportunityClose CampaignResponse_OpportunityCloses {
            get {
                return GetRelatedEntity<OpportunityClose>("CampaignResponse_OpportunityCloses", null);
            }
            set {
                SetRelatedEntity("CampaignResponse_OpportunityCloses", null, value);
            }
        }
        
        [RelationshipSchemaName("CampaignResponse_QueueItem")]
        public IEnumerable<QueueItem> CampaignResponse_QueueItem {
            get {
                return GetRelatedEntities<QueueItem>("CampaignResponse_QueueItem", null);
            }
            set {
                SetRelatedEntities("CampaignResponse_QueueItem", null, value);
            }
        }
        
        [AttributeLogicalName("originatingactivityid")]
        [RelationshipSchemaName("CampaignResponse_ServiceAppointments")]
        public ServiceAppointment CampaignResponse_ServiceAppointments {
            get {
                return GetRelatedEntity<ServiceAppointment>("CampaignResponse_ServiceAppointments", null);
            }
            set {
                SetRelatedEntity("CampaignResponse_ServiceAppointments", null, value);
            }
        }
        
        [RelationshipSchemaName("CampaignResponse_SyncErrors")]
        public IEnumerable<SyncError> CampaignResponse_SyncErrors {
            get {
                return GetRelatedEntities<SyncError>("CampaignResponse_SyncErrors", null);
            }
            set {
                SetRelatedEntities("CampaignResponse_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Campaign_CampaignResponses")]
        public Campaign Campaign_CampaignResponses {
            get {
                return GetRelatedEntity<Campaign>("Campaign_CampaignResponses", null);
            }
            set {
                SetRelatedEntity("Campaign_CampaignResponses", null, value);
            }
        }
        
        [AttributeLogicalName("transactioncurrencyid")]
        [RelationshipSchemaName("TransactionCurrency_CampaignResponse")]
        public TransactionCurrency TransactionCurrency_CampaignResponse {
            get {
                return GetRelatedEntity<TransactionCurrency>("TransactionCurrency_CampaignResponse", null);
            }
            set {
                SetRelatedEntity("TransactionCurrency_CampaignResponse", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("account_CampaignResponses")]
        public Account account_CampaignResponses {
            get {
                return GetRelatedEntity<Account>("account_CampaignResponses", null);
            }
            set {
                SetRelatedEntity("account_CampaignResponses", null, value);
            }
        }
        
        [AttributeLogicalName("originatingactivityid")]
        [RelationshipSchemaName("activity_campaignresponse")]
        public ActivityPointer activity_campaignresponse {
            get {
                return GetRelatedEntity<ActivityPointer>("activity_campaignresponse", null);
            }
            set {
                SetRelatedEntity("activity_campaignresponse", null, value);
            }
        }
        
        [AttributeLogicalName("activityid")]
        [RelationshipSchemaName("activity_pointer_campaignresponse")]
        public ActivityPointer activity_pointer_campaignresponse {
            get {
                return GetRelatedEntity<ActivityPointer>("activity_pointer_campaignresponse", null);
            }
            set {
                SetRelatedEntity("activity_pointer_campaignresponse", null, value);
            }
        }
        
        [AttributeLogicalName("originatingactivityid")]
        [RelationshipSchemaName("appointment_campaignresponse")]
        public Appointment appointment_campaignresponse {
            get {
                return GetRelatedEntity<Appointment>("appointment_campaignresponse", null);
            }
            set {
                SetRelatedEntity("appointment_campaignresponse", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("bookableresourcebooking_CampaignResponses")]
        public BookableResourceBooking bookableresourcebooking_CampaignResponses {
            get {
                return GetRelatedEntity<BookableResourceBooking>("bookableresourcebooking_CampaignResponses", null);
            }
            set {
                SetRelatedEntity("bookableresourcebooking_CampaignResponses", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("bookableresourcebookingheader_CampaignResponses")]
        public BookableResourceBookingHeader bookableresourcebookingheader_CampaignResponses {
            get {
                return GetRelatedEntity<BookableResourceBookingHeader>("bookableresourcebookingheader_CampaignResponses", null);
            }
            set {
                SetRelatedEntity("bookableresourcebookingheader_CampaignResponses", null, value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_campaignresponse_activities")]
        public BusinessUnit business_unit_campaignresponse_activities {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_campaignresponse_activities", null);
            }
            set {
                SetRelatedEntity("business_unit_campaignresponse_activities", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("campaignactivity_CampaignResponses")]
        public CampaignActivity campaignactivity_CampaignResponses {
            get {
                return GetRelatedEntity<CampaignActivity>("campaignactivity_CampaignResponses", null);
            }
            set {
                SetRelatedEntity("campaignactivity_CampaignResponses", null, value);
            }
        }
        
        [RelationshipSchemaName("campaignresponse_Teams")]
        public IEnumerable<Team> campaignresponse_Teams {
            get {
                return GetRelatedEntities<Team>("campaignresponse_Teams", null);
            }
            set {
                SetRelatedEntities("campaignresponse_Teams", null, value);
            }
        }
        
        [RelationshipSchemaName("campaignresponse_activity_parties")]
        public IEnumerable<ActivityParty> campaignresponse_activity_parties {
            get {
                return GetRelatedEntities<ActivityParty>("campaignresponse_activity_parties", null);
            }
            set {
                SetRelatedEntities("campaignresponse_activity_parties", null, value);
            }
        }
        
        [AttributeLogicalName("sendermailboxid")]
        [RelationshipSchemaName("campaignresponse_mailbox_sendermailboxid")]
        public Mailbox campaignresponse_mailbox_sendermailboxid {
            get {
                return GetRelatedEntity<Mailbox>("campaignresponse_mailbox_sendermailboxid", null);
            }
            set {
                SetRelatedEntity("campaignresponse_mailbox_sendermailboxid", null, value);
            }
        }
        
        [AttributeLogicalName("slaid")]
        [RelationshipSchemaName("campaignresponse_sla_slaid")]
        public SLA campaignresponse_sla_slaid {
            get {
                return GetRelatedEntity<SLA>("campaignresponse_sla_slaid", null);
            }
            set {
                SetRelatedEntity("campaignresponse_sla_slaid", null, value);
            }
        }
        
        [AttributeLogicalName("slainvokedid")]
        [RelationshipSchemaName("campaignresponse_sla_slainvokedid")]
        public SLA campaignresponse_sla_slainvokedid {
            get {
                return GetRelatedEntity<SLA>("campaignresponse_sla_slainvokedid", null);
            }
            set {
                SetRelatedEntity("campaignresponse_sla_slainvokedid", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("contact_CampaignResponses")]
        public Contact contact_CampaignResponses {
            get {
                return GetRelatedEntity<Contact>("contact_CampaignResponses", null);
            }
            set {
                SetRelatedEntity("contact_CampaignResponses", null, value);
            }
        }
        
        [AttributeLogicalName("originatingactivityid")]
        [RelationshipSchemaName("email_campaignresponse")]
        public Email email_campaignresponse {
            get {
                return GetRelatedEntity<Email>("email_campaignresponse", null);
            }
            set {
                SetRelatedEntity("email_campaignresponse", null, value);
            }
        }
        
        [AttributeLogicalName("originatingactivityid")]
        [RelationshipSchemaName("fax_campaignresponse")]
        public Fax fax_campaignresponse {
            get {
                return GetRelatedEntity<Fax>("fax_campaignresponse", null);
            }
            set {
                SetRelatedEntity("fax_campaignresponse", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("knowledgearticle_CampaignResponses")]
        public KnowledgeArticle knowledgearticle_CampaignResponses {
            get {
                return GetRelatedEntity<KnowledgeArticle>("knowledgearticle_CampaignResponses", null);
            }
            set {
                SetRelatedEntity("knowledgearticle_CampaignResponses", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("lead_CampaignResponses")]
        public Lead lead_CampaignResponses {
            get {
                return GetRelatedEntity<Lead>("lead_CampaignResponses", null);
            }
            set {
                SetRelatedEntity("lead_CampaignResponses", null, value);
            }
        }
        
        [AttributeLogicalName("originatingactivityid")]
        [RelationshipSchemaName("letter_campaignresponse")]
        public Letter letter_campaignresponse {
            get {
                return GetRelatedEntity<Letter>("letter_campaignresponse", null);
            }
            set {
                SetRelatedEntity("letter_campaignresponse", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_campaignresponse_createdby")]
        public SystemUser lk_campaignresponse_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_campaignresponse_createdby", null);
            }
            set {
                SetRelatedEntity("lk_campaignresponse_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_campaignresponse_createdonbehalfby")]
        public SystemUser lk_campaignresponse_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_campaignresponse_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_campaignresponse_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_campaignresponse_modifiedby")]
        public SystemUser lk_campaignresponse_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_campaignresponse_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_campaignresponse_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_campaignresponse_modifiedonbehalfby")]
        public SystemUser lk_campaignresponse_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_campaignresponse_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_campaignresponse_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("originatingactivityid")]
        [RelationshipSchemaName("phonecall_campaignresponse")]
        public PhoneCall phonecall_campaignresponse {
            get {
                return GetRelatedEntity<PhoneCall>("phonecall_campaignresponse", null);
            }
            set {
                SetRelatedEntity("phonecall_campaignresponse", null, value);
            }
        }
        
        [AttributeLogicalName("originatingactivityid")]
        [RelationshipSchemaName("recurringappointmentmaster_campaignresponse")]
        public RecurringAppointmentMaster recurringappointmentmaster_campaignresponse {
            get {
                return GetRelatedEntity<RecurringAppointmentMaster>("recurringappointmentmaster_campaignresponse", null);
            }
            set {
                SetRelatedEntity("recurringappointmentmaster_campaignresponse", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_campaignresponse")]
        public Team team_campaignresponse {
            get {
                return GetRelatedEntity<Team>("team_campaignresponse", null);
            }
            set {
                SetRelatedEntity("team_campaignresponse", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_campaignresponse")]
        public SystemUser user_campaignresponse {
            get {
                return GetRelatedEntity<SystemUser>("user_campaignresponse", null);
            }
            set {
                SetRelatedEntity("user_campaignresponse", null, value);
            }
        }
        
        public static CampaignResponse Retrieve(IOrganizationService service, Guid id, params Expression<Func<CampaignResponse,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Skills and Characteristics for front line worker</para>
    /// <para>Display Name: Characteristic</para>
    /// </summary>
    [EntityLogicalName("characteristic")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class Characteristic : ExtendedEntity<CharacteristicState, Characteristic_StatusCode> {
        
        public const string EntityLogicalName = "characteristic";
        
        public const int EntityTypeCode = 1141;
        
        public Characteristic() : 
                base(EntityLogicalName) {
        }
        
        public Characteristic(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("name");
            }
        }
        
        [AttributeLogicalName("characteristicid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("characteristicid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the characteristic.</para>
        /// <para>Display Name: Characteristic</para>
        /// </summary>
        [AttributeLogicalName("characteristicid")]
        [DisplayName("Characteristic")]
        public Guid? CharacteristicId {
            get {
                return GetAttributeValue<Guid?>("characteristicid");
            }
            set {
                SetId("characteristicid", value);
            }
        }
        
        /// <summary>
        /// <para>Select the type of characteristic.</para>
        /// <para>Display Name: Characteristic Type</para>
        /// </summary>
        [AttributeLogicalName("characteristictype")]
        [DisplayName("Characteristic Type")]
        public bookableresourcecharacteristictype? CharacteristicType {
            get {
                return GetOptionSetValue<bookableresourcecharacteristictype>("characteristictype");
            }
            set {
                SetOptionSetValue("characteristictype", value);
            }
        }
        
        /// <summary>
        /// <para>lk_characteristic_createdby</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>lk_characteristic_createdonbehalfby</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Type a detailed description of the characteristic.</para>
        /// <para>Display Name: Description</para>
        /// </summary>
        [AttributeLogicalName("description")]
        [DisplayName("Description")]
        [MaxLength(100)]
        public string Description {
            get {
                return GetAttributeValue<string>("description");
            }
            set {
                SetAttributeValue("description", value);
            }
        }
        
        /// <summary>
        /// <para>Exchange rate for the currency associated with the characteristic with respect to the base currency.</para>
        /// <para>Display Name: ExchangeRate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("ExchangeRate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>lk_characteristic_modifiedby</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>lk_characteristic_modifiedonbehalfby</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Type a name for the characteristic.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string Name {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>owner_characteristic</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>business_unit_characteristic</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>team_characteristic</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the user that owns the record.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Type a name for the characteristic.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the Characteristic</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public CharacteristicState? StateCode {
            get {
                return GetOptionSetValue<CharacteristicState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the Characteristic</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public Characteristic_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<Characteristic_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>TransactionCurrency_characteristic</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        [RelationshipSchemaName("Characteristic_SyncErrors")]
        public IEnumerable<SyncError> Characteristic_SyncErrors {
            get {
                return GetRelatedEntities<SyncError>("Characteristic_SyncErrors", null);
            }
            set {
                SetRelatedEntities("Characteristic_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("transactioncurrencyid")]
        [RelationshipSchemaName("TransactionCurrency_characteristic")]
        public TransactionCurrency TransactionCurrency_characteristic {
            get {
                return GetRelatedEntity<TransactionCurrency>("TransactionCurrency_characteristic", null);
            }
            set {
                SetRelatedEntity("TransactionCurrency_characteristic", null, value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_characteristic")]
        public BusinessUnit business_unit_characteristic {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_characteristic", null);
            }
            set {
                SetRelatedEntity("business_unit_characteristic", null, value);
            }
        }
        
        [RelationshipSchemaName("characteristic_Teams")]
        public IEnumerable<Team> characteristic_Teams {
            get {
                return GetRelatedEntities<Team>("characteristic_Teams", null);
            }
            set {
                SetRelatedEntities("characteristic_Teams", null, value);
            }
        }
        
        [RelationshipSchemaName("characteristic_bookableresourcecharacteristic_Characteristic")]
        public IEnumerable<BookableResourceCharacteristic> characteristic_bookableresourcecharacteristic_Characteristic {
            get {
                return GetRelatedEntities<BookableResourceCharacteristic>("characteristic_bookableresourcecharacteristic_Characteristic", null);
            }
            set {
                SetRelatedEntities("characteristic_bookableresourcecharacteristic_Characteristic", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_characteristic_createdby")]
        public SystemUser lk_characteristic_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_characteristic_createdby", null);
            }
            set {
                SetRelatedEntity("lk_characteristic_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_characteristic_createdonbehalfby")]
        public SystemUser lk_characteristic_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_characteristic_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_characteristic_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_characteristic_modifiedby")]
        public SystemUser lk_characteristic_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_characteristic_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_characteristic_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_characteristic_modifiedonbehalfby")]
        public SystemUser lk_characteristic_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_characteristic_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_characteristic_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_characteristic")]
        public Team team_characteristic {
            get {
                return GetRelatedEntity<Team>("team_characteristic", null);
            }
            set {
                SetRelatedEntity("team_characteristic", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_characteristic")]
        public SystemUser user_characteristic {
            get {
                return GetRelatedEntity<SystemUser>("user_characteristic", null);
            }
            set {
                SetRelatedEntity("user_characteristic", null, value);
            }
        }
        
        public static Characteristic Retrieve(IOrganizationService service, Guid id, params Expression<Func<Characteristic,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Relationship between two entities.</para>
    /// <para>Display Name: Connection</para>
    /// </summary>
    [EntityLogicalName("connection")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class Connection : ExtendedEntity<ConnectionState, Connection_StatusCode> {
        
        public const string EntityLogicalName = "connection";
        
        public const int EntityTypeCode = 3234;
        
        public Connection() : 
                base(EntityLogicalName) {
        }
        
        public Connection(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("name");
            }
        }
        
        [AttributeLogicalName("connectionid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("connectionid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the connection.</para>
        /// <para>Display Name: Connection</para>
        /// </summary>
        [AttributeLogicalName("connectionid")]
        [DisplayName("Connection")]
        public Guid? ConnectionId {
            get {
                return GetAttributeValue<Guid?>("connectionid");
            }
            set {
                SetId("connectionid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record on behalf of another user.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Type additional information to describe the connection, such as the length or quality of the relationship.</para>
        /// <para>Display Name: Description</para>
        /// </summary>
        [AttributeLogicalName("description")]
        [DisplayName("Description")]
        public string Description {
            get {
                return GetAttributeValue<string>("description");
            }
            set {
                SetAttributeValue("description", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the end date of the connection.</para>
        /// <para>Display Name: Ending</para>
        /// </summary>
        [AttributeLogicalName("effectiveend")]
        [DisplayName("Ending")]
        public DateTime? EffectiveEnd {
            get {
                return GetAttributeValue<DateTime?>("effectiveend");
            }
            set {
                SetAttributeValue("effectiveend", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the start date of the connection.</para>
        /// <para>Display Name: Starting</para>
        /// </summary>
        [AttributeLogicalName("effectivestart")]
        [DisplayName("Starting")]
        public DateTime? EffectiveStart {
            get {
                return GetAttributeValue<DateTime?>("effectivestart");
            }
            set {
                SetAttributeValue("effectivestart", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Entity Image Id</para>
        /// </summary>
        [AttributeLogicalName("entityimageid")]
        [DisplayName("Entity Image Id")]
        public Guid? EntityImageId {
            get {
                return GetAttributeValue<Guid?>("entityimageid");
            }
        }
        
        /// <summary>
        /// <para>Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("Exchange Rate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the data import or data migration that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates that this is the master record.</para>
        /// <para>Display Name: Is Master</para>
        /// </summary>
        [AttributeLogicalName("ismaster")]
        [DisplayName("Is Master")]
        public bool? IsMaster {
            get {
                return GetAttributeValue<bool?>("ismaster");
            }
        }
        
        /// <summary>
        /// <para>Shows who last updated the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Shows who last updated the record on behalf of another user.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Name of the connection.</para>
        /// <para>Display Name: Connection Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Connection Name")]
        [MaxLength(500)]
        public string Name {
            get {
                return GetAttributeValue<string>("name");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the user or team who is assigned to manage the record. This field is updated every time the record is assigned to a different user.</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the business unit that the record owner belongs to.</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the team who owns the connection.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who owns the connection.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Name of the connection.</para>
        /// <para>Display Name: Connection Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Connection Name")]
        [MaxLength(500)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("name");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the source record.</para>
        /// <para>Display Name: Connected From</para>
        /// </summary>
        [AttributeLogicalName("record1id")]
        [DisplayName("Connected From")]
        public EntityReference Record1Id {
            get {
                return GetAttributeValue<EntityReference>("record1id");
            }
            set {
                SetAttributeValue("record1id", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the record type of the source record.</para>
        /// <para>Display Name: Type (From)</para>
        /// </summary>
        [AttributeLogicalName("record1objecttypecode")]
        [DisplayName("Type (From)")]
        public Connection_Record1ObjectTypeCode? Record1ObjectTypeCode {
            get {
                return GetOptionSetValue<Connection_Record1ObjectTypeCode>("record1objecttypecode");
            }
        }
        
        /// <summary>
        /// <para>Choose the primary party's role or relationship with the second party.</para>
        /// <para>Display Name: Role (From)</para>
        /// </summary>
        [AttributeLogicalName("record1roleid")]
        [DisplayName("Role (From)")]
        public EntityReference Record1RoleId {
            get {
                return GetAttributeValue<EntityReference>("record1roleid");
            }
            set {
                SetAttributeValue("record1roleid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the target record.</para>
        /// <para>Display Name: Connected To</para>
        /// </summary>
        [AttributeLogicalName("record2id")]
        [DisplayName("Connected To")]
        public EntityReference Record2Id {
            get {
                return GetAttributeValue<EntityReference>("record2id");
            }
            set {
                SetAttributeValue("record2id", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the record type of the target record.</para>
        /// <para>Display Name: Type (To)</para>
        /// </summary>
        [AttributeLogicalName("record2objecttypecode")]
        [DisplayName("Type (To)")]
        public Connection_Record2ObjectTypeCode? Record2ObjectTypeCode {
            get {
                return GetOptionSetValue<Connection_Record2ObjectTypeCode>("record2objecttypecode");
            }
        }
        
        /// <summary>
        /// <para>Choose the secondary party's role or relationship with the primary party.</para>
        /// <para>Display Name: Role (To)</para>
        /// </summary>
        [AttributeLogicalName("record2roleid")]
        [DisplayName("Role (To)")]
        public EntityReference Record2RoleId {
            get {
                return GetAttributeValue<EntityReference>("record2roleid");
            }
            set {
                SetAttributeValue("record2roleid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the reciprocal connection record.</para>
        /// <para>Display Name: Reciprocal Connection</para>
        /// </summary>
        [AttributeLogicalName("relatedconnectionid")]
        [DisplayName("Reciprocal Connection")]
        public EntityReference RelatedConnectionId {
            get {
                return GetAttributeValue<EntityReference>("relatedconnectionid");
            }
        }
        
        /// <summary>
        /// <para>Shows whether the connection is active or inactive. Inactive connections are read-only and can't be edited unless they are reactivated.</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public ConnectionState? StateCode {
            get {
                return GetOptionSetValue<ConnectionState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the connection.</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public Connection_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<Connection_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the local currency for the record to make sure budgets are reported in the correct currency.</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>Version number of the connection.</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        [RelationshipSchemaName("Connection_SyncErrors")]
        public IEnumerable<SyncError> Connection_SyncErrors {
            get {
                return GetRelatedEntities<SyncError>("Connection_SyncErrors", null);
            }
            set {
                SetRelatedEntities("Connection_SyncErrors", null, value);
            }
        }
        
        [RelationshipSchemaName("connection_related_connection", EntityRole.Referenced)]
        public IEnumerable<Connection> Referencedconnection_related_connection {
            get {
                return GetRelatedEntities<Connection>("connection_related_connection", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("connection_related_connection", EntityRole.Referenced, value);
            }
        }
        
        [AttributeLogicalName("relatedconnectionid")]
        [RelationshipSchemaName("connection_related_connection", EntityRole.Referencing)]
        public Connection Referencingconnection_related_connection {
            get {
                return GetRelatedEntity<Connection>("connection_related_connection", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("connection_related_connection", EntityRole.Referencing, value);
            }
        }
        
        [AttributeLogicalName("transactioncurrencyid")]
        [RelationshipSchemaName("TransactionCurrency_Connection")]
        public TransactionCurrency TransactionCurrency_Connection {
            get {
                return GetRelatedEntity<TransactionCurrency>("TransactionCurrency_Connection", null);
            }
            set {
                SetRelatedEntity("TransactionCurrency_Connection", null, value);
            }
        }
        
        [AttributeLogicalName("record1id")]
        [RelationshipSchemaName("account_connections1")]
        public Account account_connections1 {
            get {
                return GetRelatedEntity<Account>("account_connections1", null);
            }
            set {
                SetRelatedEntity("account_connections1", null, value);
            }
        }
        
        [AttributeLogicalName("record2id")]
        [RelationshipSchemaName("account_connections2")]
        public Account account_connections2 {
            get {
                return GetRelatedEntity<Account>("account_connections2", null);
            }
            set {
                SetRelatedEntity("account_connections2", null, value);
            }
        }
        
        [AttributeLogicalName("record1id")]
        [RelationshipSchemaName("activitypointer_connections1")]
        public ActivityPointer activitypointer_connections1 {
            get {
                return GetRelatedEntity<ActivityPointer>("activitypointer_connections1", null);
            }
            set {
                SetRelatedEntity("activitypointer_connections1", null, value);
            }
        }
        
        [AttributeLogicalName("record2id")]
        [RelationshipSchemaName("activitypointer_connections2")]
        public ActivityPointer activitypointer_connections2 {
            get {
                return GetRelatedEntity<ActivityPointer>("activitypointer_connections2", null);
            }
            set {
                SetRelatedEntity("activitypointer_connections2", null, value);
            }
        }
        
        [AttributeLogicalName("record1id")]
        [RelationshipSchemaName("appointment_connections1")]
        public Appointment appointment_connections1 {
            get {
                return GetRelatedEntity<Appointment>("appointment_connections1", null);
            }
            set {
                SetRelatedEntity("appointment_connections1", null, value);
            }
        }
        
        [AttributeLogicalName("record2id")]
        [RelationshipSchemaName("appointment_connections2")]
        public Appointment appointment_connections2 {
            get {
                return GetRelatedEntity<Appointment>("appointment_connections2", null);
            }
            set {
                SetRelatedEntity("appointment_connections2", null, value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_connections")]
        public BusinessUnit business_unit_connections {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_connections", null);
            }
            set {
                SetRelatedEntity("business_unit_connections", null, value);
            }
        }
        
        [AttributeLogicalName("record1id")]
        [RelationshipSchemaName("campaign_connections1")]
        public Campaign campaign_connections1 {
            get {
                return GetRelatedEntity<Campaign>("campaign_connections1", null);
            }
            set {
                SetRelatedEntity("campaign_connections1", null, value);
            }
        }
        
        [AttributeLogicalName("record2id")]
        [RelationshipSchemaName("campaign_connections2")]
        public Campaign campaign_connections2 {
            get {
                return GetRelatedEntity<Campaign>("campaign_connections2", null);
            }
            set {
                SetRelatedEntity("campaign_connections2", null, value);
            }
        }
        
        [AttributeLogicalName("record1id")]
        [RelationshipSchemaName("campaignactivity_connections1")]
        public CampaignActivity campaignactivity_connections1 {
            get {
                return GetRelatedEntity<CampaignActivity>("campaignactivity_connections1", null);
            }
            set {
                SetRelatedEntity("campaignactivity_connections1", null, value);
            }
        }
        
        [AttributeLogicalName("record2id")]
        [RelationshipSchemaName("campaignactivity_connections2")]
        public CampaignActivity campaignactivity_connections2 {
            get {
                return GetRelatedEntity<CampaignActivity>("campaignactivity_connections2", null);
            }
            set {
                SetRelatedEntity("campaignactivity_connections2", null, value);
            }
        }
        
        [AttributeLogicalName("record1id")]
        [RelationshipSchemaName("contact_connections1")]
        public Contact contact_connections1 {
            get {
                return GetRelatedEntity<Contact>("contact_connections1", null);
            }
            set {
                SetRelatedEntity("contact_connections1", null, value);
            }
        }
        
        [AttributeLogicalName("record2id")]
        [RelationshipSchemaName("contact_connections2")]
        public Contact contact_connections2 {
            get {
                return GetRelatedEntity<Contact>("contact_connections2", null);
            }
            set {
                SetRelatedEntity("contact_connections2", null, value);
            }
        }
        
        [AttributeLogicalName("record1id")]
        [RelationshipSchemaName("contract_connections1")]
        public Contract contract_connections1 {
            get {
                return GetRelatedEntity<Contract>("contract_connections1", null);
            }
            set {
                SetRelatedEntity("contract_connections1", null, value);
            }
        }
        
        [AttributeLogicalName("record2id")]
        [RelationshipSchemaName("contract_connections2")]
        public Contract contract_connections2 {
            get {
                return GetRelatedEntity<Contract>("contract_connections2", null);
            }
            set {
                SetRelatedEntity("contract_connections2", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("createdby_connection")]
        public SystemUser createdby_connection {
            get {
                return GetRelatedEntity<SystemUser>("createdby_connection", null);
            }
            set {
                SetRelatedEntity("createdby_connection", null, value);
            }
        }
        
        [AttributeLogicalName("record1id")]
        [RelationshipSchemaName("dg_bus_connections1")]
        public dg_bus dg_bus_connections1 {
            get {
                return GetRelatedEntity<dg_bus>("dg_bus_connections1", null);
            }
            set {
                SetRelatedEntity("dg_bus_connections1", null, value);
            }
        }
        
        [AttributeLogicalName("record2id")]
        [RelationshipSchemaName("dg_bus_connections2")]
        public dg_bus dg_bus_connections2 {
            get {
                return GetRelatedEntity<dg_bus>("dg_bus_connections2", null);
            }
            set {
                SetRelatedEntity("dg_bus_connections2", null, value);
            }
        }
        
        [AttributeLogicalName("record1id")]
        [RelationshipSchemaName("email_connections1")]
        public Email email_connections1 {
            get {
                return GetRelatedEntity<Email>("email_connections1", null);
            }
            set {
                SetRelatedEntity("email_connections1", null, value);
            }
        }
        
        [AttributeLogicalName("record2id")]
        [RelationshipSchemaName("email_connections2")]
        public Email email_connections2 {
            get {
                return GetRelatedEntity<Email>("email_connections2", null);
            }
            set {
                SetRelatedEntity("email_connections2", null, value);
            }
        }
        
        [AttributeLogicalName("record1id")]
        [RelationshipSchemaName("entitlement_connections1")]
        public Entitlement entitlement_connections1 {
            get {
                return GetRelatedEntity<Entitlement>("entitlement_connections1", null);
            }
            set {
                SetRelatedEntity("entitlement_connections1", null, value);
            }
        }
        
        [AttributeLogicalName("record2id")]
        [RelationshipSchemaName("entitlement_connections2")]
        public Entitlement entitlement_connections2 {
            get {
                return GetRelatedEntity<Entitlement>("entitlement_connections2", null);
            }
            set {
                SetRelatedEntity("entitlement_connections2", null, value);
            }
        }
        
        [AttributeLogicalName("record1id")]
        [RelationshipSchemaName("fax_connections1")]
        public Fax fax_connections1 {
            get {
                return GetRelatedEntity<Fax>("fax_connections1", null);
            }
            set {
                SetRelatedEntity("fax_connections1", null, value);
            }
        }
        
        [AttributeLogicalName("record2id")]
        [RelationshipSchemaName("fax_connections2")]
        public Fax fax_connections2 {
            get {
                return GetRelatedEntity<Fax>("fax_connections2", null);
            }
            set {
                SetRelatedEntity("fax_connections2", null, value);
            }
        }
        
        [AttributeLogicalName("record1id")]
        [RelationshipSchemaName("goal_connections1")]
        public Goal goal_connections1 {
            get {
                return GetRelatedEntity<Goal>("goal_connections1", null);
            }
            set {
                SetRelatedEntity("goal_connections1", null, value);
            }
        }
        
        [AttributeLogicalName("record2id")]
        [RelationshipSchemaName("goal_connections2")]
        public Goal goal_connections2 {
            get {
                return GetRelatedEntity<Goal>("goal_connections2", null);
            }
            set {
                SetRelatedEntity("goal_connections2", null, value);
            }
        }
        
        [AttributeLogicalName("record1id")]
        [RelationshipSchemaName("incident_connections1")]
        public Incident incident_connections1 {
            get {
                return GetRelatedEntity<Incident>("incident_connections1", null);
            }
            set {
                SetRelatedEntity("incident_connections1", null, value);
            }
        }
        
        [AttributeLogicalName("record2id")]
        [RelationshipSchemaName("incident_connections2")]
        public Incident incident_connections2 {
            get {
                return GetRelatedEntity<Incident>("incident_connections2", null);
            }
            set {
                SetRelatedEntity("incident_connections2", null, value);
            }
        }
        
        [AttributeLogicalName("record1id")]
        [RelationshipSchemaName("invoice_connections1")]
        public Invoice invoice_connections1 {
            get {
                return GetRelatedEntity<Invoice>("invoice_connections1", null);
            }
            set {
                SetRelatedEntity("invoice_connections1", null, value);
            }
        }
        
        [AttributeLogicalName("record2id")]
        [RelationshipSchemaName("invoice_connections2")]
        public Invoice invoice_connections2 {
            get {
                return GetRelatedEntity<Invoice>("invoice_connections2", null);
            }
            set {
                SetRelatedEntity("invoice_connections2", null, value);
            }
        }
        
        [AttributeLogicalName("record1id")]
        [RelationshipSchemaName("knowledgearticle_connections1")]
        public KnowledgeArticle knowledgearticle_connections1 {
            get {
                return GetRelatedEntity<KnowledgeArticle>("knowledgearticle_connections1", null);
            }
            set {
                SetRelatedEntity("knowledgearticle_connections1", null, value);
            }
        }
        
        [AttributeLogicalName("record2id")]
        [RelationshipSchemaName("knowledgearticle_connections2")]
        public KnowledgeArticle knowledgearticle_connections2 {
            get {
                return GetRelatedEntity<KnowledgeArticle>("knowledgearticle_connections2", null);
            }
            set {
                SetRelatedEntity("knowledgearticle_connections2", null, value);
            }
        }
        
        [AttributeLogicalName("record1id")]
        [RelationshipSchemaName("lead_connections1")]
        public Lead lead_connections1 {
            get {
                return GetRelatedEntity<Lead>("lead_connections1", null);
            }
            set {
                SetRelatedEntity("lead_connections1", null, value);
            }
        }
        
        [AttributeLogicalName("record2id")]
        [RelationshipSchemaName("lead_connections2")]
        public Lead lead_connections2 {
            get {
                return GetRelatedEntity<Lead>("lead_connections2", null);
            }
            set {
                SetRelatedEntity("lead_connections2", null, value);
            }
        }
        
        [AttributeLogicalName("record1id")]
        [RelationshipSchemaName("letter_connections1")]
        public Letter letter_connections1 {
            get {
                return GetRelatedEntity<Letter>("letter_connections1", null);
            }
            set {
                SetRelatedEntity("letter_connections1", null, value);
            }
        }
        
        [AttributeLogicalName("record2id")]
        [RelationshipSchemaName("letter_connections2")]
        public Letter letter_connections2 {
            get {
                return GetRelatedEntity<Letter>("letter_connections2", null);
            }
            set {
                SetRelatedEntity("letter_connections2", null, value);
            }
        }
        
        [AttributeLogicalName("record1id")]
        [RelationshipSchemaName("list_connections1")]
        public List list_connections1 {
            get {
                return GetRelatedEntity<List>("list_connections1", null);
            }
            set {
                SetRelatedEntity("list_connections1", null, value);
            }
        }
        
        [AttributeLogicalName("record2id")]
        [RelationshipSchemaName("list_connections2")]
        public List list_connections2 {
            get {
                return GetRelatedEntity<List>("list_connections2", null);
            }
            set {
                SetRelatedEntity("list_connections2", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_connectionbase_createdonbehalfby")]
        public SystemUser lk_connectionbase_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_connectionbase_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_connectionbase_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_connectionbase_modifiedonbehalfby")]
        public SystemUser lk_connectionbase_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_connectionbase_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_connectionbase_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("modifiedby_connection")]
        public SystemUser modifiedby_connection {
            get {
                return GetRelatedEntity<SystemUser>("modifiedby_connection", null);
            }
            set {
                SetRelatedEntity("modifiedby_connection", null, value);
            }
        }
        
        [AttributeLogicalName("record1id")]
        [RelationshipSchemaName("msdyn_agreement_connections1")]
        public msdyn_agreement msdyn_agreement_connections1 {
            get {
                return GetRelatedEntity<msdyn_agreement>("msdyn_agreement_connections1", null);
            }
            set {
                SetRelatedEntity("msdyn_agreement_connections1", null, value);
            }
        }
        
        [AttributeLogicalName("record2id")]
        [RelationshipSchemaName("msdyn_agreement_connections2")]
        public msdyn_agreement msdyn_agreement_connections2 {
            get {
                return GetRelatedEntity<msdyn_agreement>("msdyn_agreement_connections2", null);
            }
            set {
                SetRelatedEntity("msdyn_agreement_connections2", null, value);
            }
        }
        
        [AttributeLogicalName("record1id")]
        [RelationshipSchemaName("msdyn_postalbum_connections1")]
        public msdyn_PostAlbum msdyn_postalbum_connections1 {
            get {
                return GetRelatedEntity<msdyn_PostAlbum>("msdyn_postalbum_connections1", null);
            }
            set {
                SetRelatedEntity("msdyn_postalbum_connections1", null, value);
            }
        }
        
        [AttributeLogicalName("record2id")]
        [RelationshipSchemaName("msdyn_postalbum_connections2")]
        public msdyn_PostAlbum msdyn_postalbum_connections2 {
            get {
                return GetRelatedEntity<msdyn_PostAlbum>("msdyn_postalbum_connections2", null);
            }
            set {
                SetRelatedEntity("msdyn_postalbum_connections2", null, value);
            }
        }
        
        [AttributeLogicalName("record1id")]
        [RelationshipSchemaName("opportunity_connections1")]
        public Opportunity opportunity_connections1 {
            get {
                return GetRelatedEntity<Opportunity>("opportunity_connections1", null);
            }
            set {
                SetRelatedEntity("opportunity_connections1", null, value);
            }
        }
        
        [AttributeLogicalName("record2id")]
        [RelationshipSchemaName("opportunity_connections2")]
        public Opportunity opportunity_connections2 {
            get {
                return GetRelatedEntity<Opportunity>("opportunity_connections2", null);
            }
            set {
                SetRelatedEntity("opportunity_connections2", null, value);
            }
        }
        
        [AttributeLogicalName("record1id")]
        [RelationshipSchemaName("phonecall_connections1")]
        public PhoneCall phonecall_connections1 {
            get {
                return GetRelatedEntity<PhoneCall>("phonecall_connections1", null);
            }
            set {
                SetRelatedEntity("phonecall_connections1", null, value);
            }
        }
        
        [AttributeLogicalName("record2id")]
        [RelationshipSchemaName("phonecall_connections2")]
        public PhoneCall phonecall_connections2 {
            get {
                return GetRelatedEntity<PhoneCall>("phonecall_connections2", null);
            }
            set {
                SetRelatedEntity("phonecall_connections2", null, value);
            }
        }
        
        [AttributeLogicalName("record1id")]
        [RelationshipSchemaName("quote_connections1")]
        public Quote quote_connections1 {
            get {
                return GetRelatedEntity<Quote>("quote_connections1", null);
            }
            set {
                SetRelatedEntity("quote_connections1", null, value);
            }
        }
        
        [AttributeLogicalName("record2id")]
        [RelationshipSchemaName("quote_connections2")]
        public Quote quote_connections2 {
            get {
                return GetRelatedEntity<Quote>("quote_connections2", null);
            }
            set {
                SetRelatedEntity("quote_connections2", null, value);
            }
        }
        
        [AttributeLogicalName("record1id")]
        [RelationshipSchemaName("recurringappointmentmaster_connections1")]
        public RecurringAppointmentMaster recurringappointmentmaster_connections1 {
            get {
                return GetRelatedEntity<RecurringAppointmentMaster>("recurringappointmentmaster_connections1", null);
            }
            set {
                SetRelatedEntity("recurringappointmentmaster_connections1", null, value);
            }
        }
        
        [AttributeLogicalName("record2id")]
        [RelationshipSchemaName("recurringappointmentmaster_connections2")]
        public RecurringAppointmentMaster recurringappointmentmaster_connections2 {
            get {
                return GetRelatedEntity<RecurringAppointmentMaster>("recurringappointmentmaster_connections2", null);
            }
            set {
                SetRelatedEntity("recurringappointmentmaster_connections2", null, value);
            }
        }
        
        [AttributeLogicalName("record1id")]
        [RelationshipSchemaName("salesorder_connections1")]
        public SalesOrder salesorder_connections1 {
            get {
                return GetRelatedEntity<SalesOrder>("salesorder_connections1", null);
            }
            set {
                SetRelatedEntity("salesorder_connections1", null, value);
            }
        }
        
        [AttributeLogicalName("record2id")]
        [RelationshipSchemaName("salesorder_connections2")]
        public SalesOrder salesorder_connections2 {
            get {
                return GetRelatedEntity<SalesOrder>("salesorder_connections2", null);
            }
            set {
                SetRelatedEntity("salesorder_connections2", null, value);
            }
        }
        
        [AttributeLogicalName("record1id")]
        [RelationshipSchemaName("serviceappointment_connections1")]
        public ServiceAppointment serviceappointment_connections1 {
            get {
                return GetRelatedEntity<ServiceAppointment>("serviceappointment_connections1", null);
            }
            set {
                SetRelatedEntity("serviceappointment_connections1", null, value);
            }
        }
        
        [AttributeLogicalName("record2id")]
        [RelationshipSchemaName("serviceappointment_connections2")]
        public ServiceAppointment serviceappointment_connections2 {
            get {
                return GetRelatedEntity<ServiceAppointment>("serviceappointment_connections2", null);
            }
            set {
                SetRelatedEntity("serviceappointment_connections2", null, value);
            }
        }
        
        [AttributeLogicalName("record1id")]
        [RelationshipSchemaName("socialactivity_connections1")]
        public SocialActivity socialactivity_connections1 {
            get {
                return GetRelatedEntity<SocialActivity>("socialactivity_connections1", null);
            }
            set {
                SetRelatedEntity("socialactivity_connections1", null, value);
            }
        }
        
        [AttributeLogicalName("record2id")]
        [RelationshipSchemaName("socialactivity_connections2")]
        public SocialActivity socialactivity_connections2 {
            get {
                return GetRelatedEntity<SocialActivity>("socialactivity_connections2", null);
            }
            set {
                SetRelatedEntity("socialactivity_connections2", null, value);
            }
        }
        
        [AttributeLogicalName("record1id")]
        [RelationshipSchemaName("systemuser_connections1")]
        public SystemUser systemuser_connections1 {
            get {
                return GetRelatedEntity<SystemUser>("systemuser_connections1", null);
            }
            set {
                SetRelatedEntity("systemuser_connections1", null, value);
            }
        }
        
        [AttributeLogicalName("record2id")]
        [RelationshipSchemaName("systemuser_connections2")]
        public SystemUser systemuser_connections2 {
            get {
                return GetRelatedEntity<SystemUser>("systemuser_connections2", null);
            }
            set {
                SetRelatedEntity("systemuser_connections2", null, value);
            }
        }
        
        [AttributeLogicalName("record1id")]
        [RelationshipSchemaName("task_connections1")]
        public Task task_connections1 {
            get {
                return GetRelatedEntity<Task>("task_connections1", null);
            }
            set {
                SetRelatedEntity("task_connections1", null, value);
            }
        }
        
        [AttributeLogicalName("record2id")]
        [RelationshipSchemaName("task_connections2")]
        public Task task_connections2 {
            get {
                return GetRelatedEntity<Task>("task_connections2", null);
            }
            set {
                SetRelatedEntity("task_connections2", null, value);
            }
        }
        
        [AttributeLogicalName("record1id")]
        [RelationshipSchemaName("team_connections1")]
        public Team team_connections1 {
            get {
                return GetRelatedEntity<Team>("team_connections1", null);
            }
            set {
                SetRelatedEntity("team_connections1", null, value);
            }
        }
        
        [AttributeLogicalName("record2id")]
        [RelationshipSchemaName("team_connections2")]
        public Team team_connections2 {
            get {
                return GetRelatedEntity<Team>("team_connections2", null);
            }
            set {
                SetRelatedEntity("team_connections2", null, value);
            }
        }
        
        public static Connection Retrieve(IOrganizationService service, Guid id, params Expression<Func<Connection,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Person with whom a business unit has a relationship, such as customer, supplier, and colleague.</para>
    /// <para>Display Name: Contact</para>
    /// </summary>
    [EntityLogicalName("contact")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class Contact : ExtendedEntity<ContactState, Contact_StatusCode> {
        
        public const string EntityLogicalName = "contact";
        
        public const int EntityTypeCode = 2;
        
        public Contact() : 
                base(EntityLogicalName) {
        }
        
        public Contact(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("fullname");
            }
        }
        
        [AttributeLogicalName("contactid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("contactid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the contact.</para>
        /// <para>Display Name: Contact</para>
        /// </summary>
        [AttributeLogicalName("contactid")]
        [DisplayName("Contact")]
        public Guid? ContactId {
            get {
                return GetAttributeValue<Guid?>("contactid");
            }
            set {
                SetId("contactid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the account with which the contact is associated.</para>
        /// <para>Display Name: Account</para>
        /// </summary>
        [AttributeLogicalName("accountid")]
        [DisplayName("Account")]
        public EntityReference AccountId {
            get {
                return GetAttributeValue<EntityReference>("accountid");
            }
        }
        
        /// <summary>
        /// <para>Select the contact's role within the company or sales process, such as decision maker, employee, or influencer.</para>
        /// <para>Display Name: Role</para>
        /// </summary>
        [AttributeLogicalName("accountrolecode")]
        [DisplayName("Role")]
        public Contact_AccountRoleCode? AccountRoleCode {
            get {
                return GetOptionSetValue<Contact_AccountRoleCode>("accountrolecode");
            }
            set {
                SetOptionSetValue("accountrolecode", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for address 1.</para>
        /// <para>Display Name: Address 1: ID</para>
        /// </summary>
        [AttributeLogicalName("address1_addressid")]
        [DisplayName("Address 1: ID")]
        public Guid? Address1_AddressId {
            get {
                return GetAttributeValue<Guid?>("address1_addressid");
            }
            set {
                SetAttributeValue("address1_addressid", value);
            }
        }
        
        /// <summary>
        /// <para>Select the primary address type.</para>
        /// <para>Display Name: Address 1: Address Type</para>
        /// </summary>
        [AttributeLogicalName("address1_addresstypecode")]
        [DisplayName("Address 1: Address Type")]
        public Contact_Address1_AddressTypeCode? Address1_AddressTypeCode {
            get {
                return GetOptionSetValue<Contact_Address1_AddressTypeCode>("address1_addresstypecode");
            }
            set {
                SetOptionSetValue("address1_addresstypecode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the city for the primary address.</para>
        /// <para>Display Name: Address 1: City</para>
        /// </summary>
        [AttributeLogicalName("address1_city")]
        [DisplayName("Address 1: City")]
        [MaxLength(80)]
        public string Address1_City {
            get {
                return GetAttributeValue<string>("address1_city");
            }
            set {
                SetAttributeValue("address1_city", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the complete primary address.</para>
        /// <para>Display Name: Address 1</para>
        /// </summary>
        [AttributeLogicalName("address1_composite")]
        [DisplayName("Address 1")]
        public string Address1_Composite {
            get {
                return GetAttributeValue<string>("address1_composite");
            }
        }
        
        /// <summary>
        /// <para>Type the country or region for the primary address.</para>
        /// <para>Display Name: Address 1: Country/Region</para>
        /// </summary>
        [AttributeLogicalName("address1_country")]
        [DisplayName("Address 1: Country/Region")]
        [MaxLength(80)]
        public string Address1_Country {
            get {
                return GetAttributeValue<string>("address1_country");
            }
            set {
                SetAttributeValue("address1_country", value);
            }
        }
        
        /// <summary>
        /// <para>Type the county for the primary address.</para>
        /// <para>Display Name: Address 1: County</para>
        /// </summary>
        [AttributeLogicalName("address1_county")]
        [DisplayName("Address 1: County")]
        [MaxLength(50)]
        public string Address1_County {
            get {
                return GetAttributeValue<string>("address1_county");
            }
            set {
                SetAttributeValue("address1_county", value);
            }
        }
        
        /// <summary>
        /// <para>Type the fax number associated with the primary address.</para>
        /// <para>Display Name: Address 1: Fax</para>
        /// </summary>
        [AttributeLogicalName("address1_fax")]
        [DisplayName("Address 1: Fax")]
        [MaxLength(50)]
        public string Address1_Fax {
            get {
                return GetAttributeValue<string>("address1_fax");
            }
            set {
                SetAttributeValue("address1_fax", value);
            }
        }
        
        /// <summary>
        /// <para>Select the freight terms for the primary address to make sure shipping orders are processed correctly.</para>
        /// <para>Display Name: Address 1: Freight Terms</para>
        /// </summary>
        [AttributeLogicalName("address1_freighttermscode")]
        [DisplayName("Address 1: Freight Terms")]
        public Contact_Address1_FreightTermsCode? Address1_FreightTermsCode {
            get {
                return GetOptionSetValue<Contact_Address1_FreightTermsCode>("address1_freighttermscode");
            }
            set {
                SetOptionSetValue("address1_freighttermscode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the latitude value for the primary address for use in mapping and other applications.</para>
        /// <para>Display Name: Address 1: Latitude</para>
        /// </summary>
        [AttributeLogicalName("address1_latitude")]
        [DisplayName("Address 1: Latitude")]
        public double? Address1_Latitude {
            get {
                return GetAttributeValue<double?>("address1_latitude");
            }
            set {
                SetAttributeValue("address1_latitude", value);
            }
        }
        
        /// <summary>
        /// <para>Type the first line of the primary address.</para>
        /// <para>Display Name: Address 1: Street 1</para>
        /// </summary>
        [AttributeLogicalName("address1_line1")]
        [DisplayName("Address 1: Street 1")]
        [MaxLength(250)]
        public string Address1_Line1 {
            get {
                return GetAttributeValue<string>("address1_line1");
            }
            set {
                SetAttributeValue("address1_line1", value);
            }
        }
        
        /// <summary>
        /// <para>Type the second line of the primary address.</para>
        /// <para>Display Name: Address 1: Street 2</para>
        /// </summary>
        [AttributeLogicalName("address1_line2")]
        [DisplayName("Address 1: Street 2")]
        [MaxLength(250)]
        public string Address1_Line2 {
            get {
                return GetAttributeValue<string>("address1_line2");
            }
            set {
                SetAttributeValue("address1_line2", value);
            }
        }
        
        /// <summary>
        /// <para>Type the third line of the primary address.</para>
        /// <para>Display Name: Address 1: Street 3</para>
        /// </summary>
        [AttributeLogicalName("address1_line3")]
        [DisplayName("Address 1: Street 3")]
        [MaxLength(250)]
        public string Address1_Line3 {
            get {
                return GetAttributeValue<string>("address1_line3");
            }
            set {
                SetAttributeValue("address1_line3", value);
            }
        }
        
        /// <summary>
        /// <para>Type the longitude value for the primary address for use in mapping and other applications.</para>
        /// <para>Display Name: Address 1: Longitude</para>
        /// </summary>
        [AttributeLogicalName("address1_longitude")]
        [DisplayName("Address 1: Longitude")]
        public double? Address1_Longitude {
            get {
                return GetAttributeValue<double?>("address1_longitude");
            }
            set {
                SetAttributeValue("address1_longitude", value);
            }
        }
        
        /// <summary>
        /// <para>Type a descriptive name for the primary address, such as Corporate Headquarters.</para>
        /// <para>Display Name: Address 1: Name</para>
        /// </summary>
        [AttributeLogicalName("address1_name")]
        [DisplayName("Address 1: Name")]
        [MaxLength(200)]
        public string Address1_Name {
            get {
                return GetAttributeValue<string>("address1_name");
            }
            set {
                SetAttributeValue("address1_name", value);
            }
        }
        
        /// <summary>
        /// <para>Type the post office box number of the primary address.</para>
        /// <para>Display Name: Address 1: Post Office Box</para>
        /// </summary>
        [AttributeLogicalName("address1_postofficebox")]
        [DisplayName("Address 1: Post Office Box")]
        [MaxLength(20)]
        public string Address1_PostOfficeBox {
            get {
                return GetAttributeValue<string>("address1_postofficebox");
            }
            set {
                SetAttributeValue("address1_postofficebox", value);
            }
        }
        
        /// <summary>
        /// <para>Type the ZIP Code or postal code for the primary address.</para>
        /// <para>Display Name: Address 1: ZIP/Postal Code</para>
        /// </summary>
        [AttributeLogicalName("address1_postalcode")]
        [DisplayName("Address 1: ZIP/Postal Code")]
        [MaxLength(20)]
        public string Address1_PostalCode {
            get {
                return GetAttributeValue<string>("address1_postalcode");
            }
            set {
                SetAttributeValue("address1_postalcode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the name of the main contact at the account's primary address.</para>
        /// <para>Display Name: Address 1: Primary Contact Name</para>
        /// </summary>
        [AttributeLogicalName("address1_primarycontactname")]
        [DisplayName("Address 1: Primary Contact Name")]
        [MaxLength(100)]
        public string Address1_PrimaryContactName {
            get {
                return GetAttributeValue<string>("address1_primarycontactname");
            }
            set {
                SetAttributeValue("address1_primarycontactname", value);
            }
        }
        
        /// <summary>
        /// <para>Select a shipping method for deliveries sent to this address.</para>
        /// <para>Display Name: Address 1: Shipping Method</para>
        /// </summary>
        [AttributeLogicalName("address1_shippingmethodcode")]
        [DisplayName("Address 1: Shipping Method")]
        public Contact_Address1_ShippingMethodCode? Address1_ShippingMethodCode {
            get {
                return GetOptionSetValue<Contact_Address1_ShippingMethodCode>("address1_shippingmethodcode");
            }
            set {
                SetOptionSetValue("address1_shippingmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the state or province of the primary address.</para>
        /// <para>Display Name: Address 1: State/Province</para>
        /// </summary>
        [AttributeLogicalName("address1_stateorprovince")]
        [DisplayName("Address 1: State/Province")]
        [MaxLength(50)]
        public string Address1_StateOrProvince {
            get {
                return GetAttributeValue<string>("address1_stateorprovince");
            }
            set {
                SetAttributeValue("address1_stateorprovince", value);
            }
        }
        
        /// <summary>
        /// <para>Type the main phone number associated with the primary address.</para>
        /// <para>Display Name: Address 1: Phone</para>
        /// </summary>
        [AttributeLogicalName("address1_telephone1")]
        [DisplayName("Address 1: Phone")]
        [MaxLength(50)]
        public string Address1_Telephone1 {
            get {
                return GetAttributeValue<string>("address1_telephone1");
            }
            set {
                SetAttributeValue("address1_telephone1", value);
            }
        }
        
        /// <summary>
        /// <para>Type a second phone number associated with the primary address.</para>
        /// <para>Display Name: Address 1: Telephone 2</para>
        /// </summary>
        [AttributeLogicalName("address1_telephone2")]
        [DisplayName("Address 1: Telephone 2")]
        [MaxLength(50)]
        public string Address1_Telephone2 {
            get {
                return GetAttributeValue<string>("address1_telephone2");
            }
            set {
                SetAttributeValue("address1_telephone2", value);
            }
        }
        
        /// <summary>
        /// <para>Type a third phone number associated with the primary address.</para>
        /// <para>Display Name: Address 1: Telephone 3</para>
        /// </summary>
        [AttributeLogicalName("address1_telephone3")]
        [DisplayName("Address 1: Telephone 3")]
        [MaxLength(50)]
        public string Address1_Telephone3 {
            get {
                return GetAttributeValue<string>("address1_telephone3");
            }
            set {
                SetAttributeValue("address1_telephone3", value);
            }
        }
        
        /// <summary>
        /// <para>Type the UPS zone of the primary address to make sure shipping charges are calculated correctly and deliveries are made promptly, if shipped by UPS.</para>
        /// <para>Display Name: Address 1: UPS Zone</para>
        /// </summary>
        [AttributeLogicalName("address1_upszone")]
        [DisplayName("Address 1: UPS Zone")]
        [MaxLength(4)]
        public string Address1_UPSZone {
            get {
                return GetAttributeValue<string>("address1_upszone");
            }
            set {
                SetAttributeValue("address1_upszone", value);
            }
        }
        
        /// <summary>
        /// <para>Select the time zone, or UTC offset, for this address so that other people can reference it when they contact someone at this address.</para>
        /// <para>Display Name: Address 1: UTC Offset</para>
        /// </summary>
        [AttributeLogicalName("address1_utcoffset")]
        [DisplayName("Address 1: UTC Offset")]
        [Range(-1500, 1500)]
        public int? Address1_UTCOffset {
            get {
                return GetAttributeValue<int?>("address1_utcoffset");
            }
            set {
                SetAttributeValue("address1_utcoffset", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for address 2.</para>
        /// <para>Display Name: Address 2: ID</para>
        /// </summary>
        [AttributeLogicalName("address2_addressid")]
        [DisplayName("Address 2: ID")]
        public Guid? Address2_AddressId {
            get {
                return GetAttributeValue<Guid?>("address2_addressid");
            }
            set {
                SetAttributeValue("address2_addressid", value);
            }
        }
        
        /// <summary>
        /// <para>Select the secondary address type.</para>
        /// <para>Display Name: Address 2: Address Type</para>
        /// </summary>
        [AttributeLogicalName("address2_addresstypecode")]
        [DisplayName("Address 2: Address Type")]
        public Contact_Address2_AddressTypeCode? Address2_AddressTypeCode {
            get {
                return GetOptionSetValue<Contact_Address2_AddressTypeCode>("address2_addresstypecode");
            }
            set {
                SetOptionSetValue("address2_addresstypecode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the city for the secondary address.</para>
        /// <para>Display Name: Address 2: City</para>
        /// </summary>
        [AttributeLogicalName("address2_city")]
        [DisplayName("Address 2: City")]
        [MaxLength(80)]
        public string Address2_City {
            get {
                return GetAttributeValue<string>("address2_city");
            }
            set {
                SetAttributeValue("address2_city", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the complete secondary address.</para>
        /// <para>Display Name: Address 2</para>
        /// </summary>
        [AttributeLogicalName("address2_composite")]
        [DisplayName("Address 2")]
        public string Address2_Composite {
            get {
                return GetAttributeValue<string>("address2_composite");
            }
        }
        
        /// <summary>
        /// <para>Type the country or region for the secondary address.</para>
        /// <para>Display Name: Address 2: Country/Region</para>
        /// </summary>
        [AttributeLogicalName("address2_country")]
        [DisplayName("Address 2: Country/Region")]
        [MaxLength(80)]
        public string Address2_Country {
            get {
                return GetAttributeValue<string>("address2_country");
            }
            set {
                SetAttributeValue("address2_country", value);
            }
        }
        
        /// <summary>
        /// <para>Type the county for the secondary address.</para>
        /// <para>Display Name: Address 2: County</para>
        /// </summary>
        [AttributeLogicalName("address2_county")]
        [DisplayName("Address 2: County")]
        [MaxLength(50)]
        public string Address2_County {
            get {
                return GetAttributeValue<string>("address2_county");
            }
            set {
                SetAttributeValue("address2_county", value);
            }
        }
        
        /// <summary>
        /// <para>Type the fax number associated with the secondary address.</para>
        /// <para>Display Name: Address 2: Fax</para>
        /// </summary>
        [AttributeLogicalName("address2_fax")]
        [DisplayName("Address 2: Fax")]
        [MaxLength(50)]
        public string Address2_Fax {
            get {
                return GetAttributeValue<string>("address2_fax");
            }
            set {
                SetAttributeValue("address2_fax", value);
            }
        }
        
        /// <summary>
        /// <para>Select the freight terms for the secondary address to make sure shipping orders are processed correctly.</para>
        /// <para>Display Name: Address 2: Freight Terms</para>
        /// </summary>
        [AttributeLogicalName("address2_freighttermscode")]
        [DisplayName("Address 2: Freight Terms")]
        public Contact_Address2_FreightTermsCode? Address2_FreightTermsCode {
            get {
                return GetOptionSetValue<Contact_Address2_FreightTermsCode>("address2_freighttermscode");
            }
            set {
                SetOptionSetValue("address2_freighttermscode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the latitude value for the secondary address for use in mapping and other applications.</para>
        /// <para>Display Name: Address 2: Latitude</para>
        /// </summary>
        [AttributeLogicalName("address2_latitude")]
        [DisplayName("Address 2: Latitude")]
        public double? Address2_Latitude {
            get {
                return GetAttributeValue<double?>("address2_latitude");
            }
            set {
                SetAttributeValue("address2_latitude", value);
            }
        }
        
        /// <summary>
        /// <para>Type the first line of the secondary address.</para>
        /// <para>Display Name: Address 2: Street 1</para>
        /// </summary>
        [AttributeLogicalName("address2_line1")]
        [DisplayName("Address 2: Street 1")]
        [MaxLength(250)]
        public string Address2_Line1 {
            get {
                return GetAttributeValue<string>("address2_line1");
            }
            set {
                SetAttributeValue("address2_line1", value);
            }
        }
        
        /// <summary>
        /// <para>Type the second line of the secondary address.</para>
        /// <para>Display Name: Address 2: Street 2</para>
        /// </summary>
        [AttributeLogicalName("address2_line2")]
        [DisplayName("Address 2: Street 2")]
        [MaxLength(250)]
        public string Address2_Line2 {
            get {
                return GetAttributeValue<string>("address2_line2");
            }
            set {
                SetAttributeValue("address2_line2", value);
            }
        }
        
        /// <summary>
        /// <para>Type the third line of the secondary address.</para>
        /// <para>Display Name: Address 2: Street 3</para>
        /// </summary>
        [AttributeLogicalName("address2_line3")]
        [DisplayName("Address 2: Street 3")]
        [MaxLength(250)]
        public string Address2_Line3 {
            get {
                return GetAttributeValue<string>("address2_line3");
            }
            set {
                SetAttributeValue("address2_line3", value);
            }
        }
        
        /// <summary>
        /// <para>Type the longitude value for the secondary address for use in mapping and other applications.</para>
        /// <para>Display Name: Address 2: Longitude</para>
        /// </summary>
        [AttributeLogicalName("address2_longitude")]
        [DisplayName("Address 2: Longitude")]
        public double? Address2_Longitude {
            get {
                return GetAttributeValue<double?>("address2_longitude");
            }
            set {
                SetAttributeValue("address2_longitude", value);
            }
        }
        
        /// <summary>
        /// <para>Type a descriptive name for the secondary address, such as Corporate Headquarters.</para>
        /// <para>Display Name: Address 2: Name</para>
        /// </summary>
        [AttributeLogicalName("address2_name")]
        [DisplayName("Address 2: Name")]
        [MaxLength(100)]
        public string Address2_Name {
            get {
                return GetAttributeValue<string>("address2_name");
            }
            set {
                SetAttributeValue("address2_name", value);
            }
        }
        
        /// <summary>
        /// <para>Type the post office box number of the secondary address.</para>
        /// <para>Display Name: Address 2: Post Office Box</para>
        /// </summary>
        [AttributeLogicalName("address2_postofficebox")]
        [DisplayName("Address 2: Post Office Box")]
        [MaxLength(20)]
        public string Address2_PostOfficeBox {
            get {
                return GetAttributeValue<string>("address2_postofficebox");
            }
            set {
                SetAttributeValue("address2_postofficebox", value);
            }
        }
        
        /// <summary>
        /// <para>Type the ZIP Code or postal code for the secondary address.</para>
        /// <para>Display Name: Address 2: ZIP/Postal Code</para>
        /// </summary>
        [AttributeLogicalName("address2_postalcode")]
        [DisplayName("Address 2: ZIP/Postal Code")]
        [MaxLength(20)]
        public string Address2_PostalCode {
            get {
                return GetAttributeValue<string>("address2_postalcode");
            }
            set {
                SetAttributeValue("address2_postalcode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the name of the main contact at the account's secondary address.</para>
        /// <para>Display Name: Address 2: Primary Contact Name</para>
        /// </summary>
        [AttributeLogicalName("address2_primarycontactname")]
        [DisplayName("Address 2: Primary Contact Name")]
        [MaxLength(100)]
        public string Address2_PrimaryContactName {
            get {
                return GetAttributeValue<string>("address2_primarycontactname");
            }
            set {
                SetAttributeValue("address2_primarycontactname", value);
            }
        }
        
        /// <summary>
        /// <para>Select a shipping method for deliveries sent to this address.</para>
        /// <para>Display Name: Address 2: Shipping Method</para>
        /// </summary>
        [AttributeLogicalName("address2_shippingmethodcode")]
        [DisplayName("Address 2: Shipping Method")]
        public Contact_Address2_ShippingMethodCode? Address2_ShippingMethodCode {
            get {
                return GetOptionSetValue<Contact_Address2_ShippingMethodCode>("address2_shippingmethodcode");
            }
            set {
                SetOptionSetValue("address2_shippingmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the state or province of the secondary address.</para>
        /// <para>Display Name: Address 2: State/Province</para>
        /// </summary>
        [AttributeLogicalName("address2_stateorprovince")]
        [DisplayName("Address 2: State/Province")]
        [MaxLength(50)]
        public string Address2_StateOrProvince {
            get {
                return GetAttributeValue<string>("address2_stateorprovince");
            }
            set {
                SetAttributeValue("address2_stateorprovince", value);
            }
        }
        
        /// <summary>
        /// <para>Type the main phone number associated with the secondary address.</para>
        /// <para>Display Name: Address 2: Telephone 1</para>
        /// </summary>
        [AttributeLogicalName("address2_telephone1")]
        [DisplayName("Address 2: Telephone 1")]
        [MaxLength(50)]
        public string Address2_Telephone1 {
            get {
                return GetAttributeValue<string>("address2_telephone1");
            }
            set {
                SetAttributeValue("address2_telephone1", value);
            }
        }
        
        /// <summary>
        /// <para>Type a second phone number associated with the secondary address.</para>
        /// <para>Display Name: Address 2: Telephone 2</para>
        /// </summary>
        [AttributeLogicalName("address2_telephone2")]
        [DisplayName("Address 2: Telephone 2")]
        [MaxLength(50)]
        public string Address2_Telephone2 {
            get {
                return GetAttributeValue<string>("address2_telephone2");
            }
            set {
                SetAttributeValue("address2_telephone2", value);
            }
        }
        
        /// <summary>
        /// <para>Type a third phone number associated with the secondary address.</para>
        /// <para>Display Name: Address 2: Telephone 3</para>
        /// </summary>
        [AttributeLogicalName("address2_telephone3")]
        [DisplayName("Address 2: Telephone 3")]
        [MaxLength(50)]
        public string Address2_Telephone3 {
            get {
                return GetAttributeValue<string>("address2_telephone3");
            }
            set {
                SetAttributeValue("address2_telephone3", value);
            }
        }
        
        /// <summary>
        /// <para>Type the UPS zone of the secondary address to make sure shipping charges are calculated correctly and deliveries are made promptly, if shipped by UPS.</para>
        /// <para>Display Name: Address 2: UPS Zone</para>
        /// </summary>
        [AttributeLogicalName("address2_upszone")]
        [DisplayName("Address 2: UPS Zone")]
        [MaxLength(4)]
        public string Address2_UPSZone {
            get {
                return GetAttributeValue<string>("address2_upszone");
            }
            set {
                SetAttributeValue("address2_upszone", value);
            }
        }
        
        /// <summary>
        /// <para>Select the time zone, or UTC offset, for this address so that other people can reference it when they contact someone at this address.</para>
        /// <para>Display Name: Address 2: UTC Offset</para>
        /// </summary>
        [AttributeLogicalName("address2_utcoffset")]
        [DisplayName("Address 2: UTC Offset")]
        [Range(-1500, 1500)]
        public int? Address2_UTCOffset {
            get {
                return GetAttributeValue<int?>("address2_utcoffset");
            }
            set {
                SetAttributeValue("address2_utcoffset", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for address 3.</para>
        /// <para>Display Name: Address 3: ID</para>
        /// </summary>
        [AttributeLogicalName("address3_addressid")]
        [DisplayName("Address 3: ID")]
        public Guid? Address3_AddressId {
            get {
                return GetAttributeValue<Guid?>("address3_addressid");
            }
            set {
                SetAttributeValue("address3_addressid", value);
            }
        }
        
        /// <summary>
        /// <para>Select the third address type.</para>
        /// <para>Display Name: Address 3: Address Type</para>
        /// </summary>
        [AttributeLogicalName("address3_addresstypecode")]
        [DisplayName("Address 3: Address Type")]
        public Contact_Address3_AddressTypeCode? Address3_AddressTypeCode {
            get {
                return GetOptionSetValue<Contact_Address3_AddressTypeCode>("address3_addresstypecode");
            }
            set {
                SetOptionSetValue("address3_addresstypecode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the city for the 3rd address.</para>
        /// <para>Display Name: Address 3: City</para>
        /// </summary>
        [AttributeLogicalName("address3_city")]
        [DisplayName("Address 3: City")]
        [MaxLength(80)]
        public string Address3_City {
            get {
                return GetAttributeValue<string>("address3_city");
            }
            set {
                SetAttributeValue("address3_city", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the complete third address.</para>
        /// <para>Display Name: Address 3</para>
        /// </summary>
        [AttributeLogicalName("address3_composite")]
        [DisplayName("Address 3")]
        public string Address3_Composite {
            get {
                return GetAttributeValue<string>("address3_composite");
            }
        }
        
        /// <summary>
        /// <para>the country or region for the 3rd address.</para>
        /// <para>Display Name: Address3: Country/Region</para>
        /// </summary>
        [AttributeLogicalName("address3_country")]
        [DisplayName("Address3: Country/Region")]
        [MaxLength(80)]
        public string Address3_Country {
            get {
                return GetAttributeValue<string>("address3_country");
            }
            set {
                SetAttributeValue("address3_country", value);
            }
        }
        
        /// <summary>
        /// <para>Type the county for the third address.</para>
        /// <para>Display Name: Address 3: County</para>
        /// </summary>
        [AttributeLogicalName("address3_county")]
        [DisplayName("Address 3: County")]
        [MaxLength(50)]
        public string Address3_County {
            get {
                return GetAttributeValue<string>("address3_county");
            }
            set {
                SetAttributeValue("address3_county", value);
            }
        }
        
        /// <summary>
        /// <para>Type the fax number associated with the third address.</para>
        /// <para>Display Name: Address 3: Fax</para>
        /// </summary>
        [AttributeLogicalName("address3_fax")]
        [DisplayName("Address 3: Fax")]
        [MaxLength(50)]
        public string Address3_Fax {
            get {
                return GetAttributeValue<string>("address3_fax");
            }
            set {
                SetAttributeValue("address3_fax", value);
            }
        }
        
        /// <summary>
        /// <para>Select the freight terms for the third address to make sure shipping orders are processed correctly.</para>
        /// <para>Display Name: Address 3: Freight Terms</para>
        /// </summary>
        [AttributeLogicalName("address3_freighttermscode")]
        [DisplayName("Address 3: Freight Terms")]
        public Contact_Address3_FreightTermsCode? Address3_FreightTermsCode {
            get {
                return GetOptionSetValue<Contact_Address3_FreightTermsCode>("address3_freighttermscode");
            }
            set {
                SetOptionSetValue("address3_freighttermscode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the latitude value for the third address for use in mapping and other applications.</para>
        /// <para>Display Name: Address 3: Latitude</para>
        /// </summary>
        [AttributeLogicalName("address3_latitude")]
        [DisplayName("Address 3: Latitude")]
        public double? Address3_Latitude {
            get {
                return GetAttributeValue<double?>("address3_latitude");
            }
            set {
                SetAttributeValue("address3_latitude", value);
            }
        }
        
        /// <summary>
        /// <para>the first line of the 3rd address.</para>
        /// <para>Display Name: Address3: Street 1</para>
        /// </summary>
        [AttributeLogicalName("address3_line1")]
        [DisplayName("Address3: Street 1")]
        [MaxLength(250)]
        public string Address3_Line1 {
            get {
                return GetAttributeValue<string>("address3_line1");
            }
            set {
                SetAttributeValue("address3_line1", value);
            }
        }
        
        /// <summary>
        /// <para>the second line of the 3rd address.</para>
        /// <para>Display Name: Address3: Street 2</para>
        /// </summary>
        [AttributeLogicalName("address3_line2")]
        [DisplayName("Address3: Street 2")]
        [MaxLength(250)]
        public string Address3_Line2 {
            get {
                return GetAttributeValue<string>("address3_line2");
            }
            set {
                SetAttributeValue("address3_line2", value);
            }
        }
        
        /// <summary>
        /// <para>the third line of the 3rd address.</para>
        /// <para>Display Name: Address3: Street 3</para>
        /// </summary>
        [AttributeLogicalName("address3_line3")]
        [DisplayName("Address3: Street 3")]
        [MaxLength(250)]
        public string Address3_Line3 {
            get {
                return GetAttributeValue<string>("address3_line3");
            }
            set {
                SetAttributeValue("address3_line3", value);
            }
        }
        
        /// <summary>
        /// <para>Type the longitude value for the third address for use in mapping and other applications.</para>
        /// <para>Display Name: Address 3: Longitude</para>
        /// </summary>
        [AttributeLogicalName("address3_longitude")]
        [DisplayName("Address 3: Longitude")]
        public double? Address3_Longitude {
            get {
                return GetAttributeValue<double?>("address3_longitude");
            }
            set {
                SetAttributeValue("address3_longitude", value);
            }
        }
        
        /// <summary>
        /// <para>Type a descriptive name for the third address, such as Corporate Headquarters.</para>
        /// <para>Display Name: Address 3: Name</para>
        /// </summary>
        [AttributeLogicalName("address3_name")]
        [DisplayName("Address 3: Name")]
        [MaxLength(200)]
        public string Address3_Name {
            get {
                return GetAttributeValue<string>("address3_name");
            }
            set {
                SetAttributeValue("address3_name", value);
            }
        }
        
        /// <summary>
        /// <para>the post office box number of the 3rd address.</para>
        /// <para>Display Name: Address 3: Post Office Box</para>
        /// </summary>
        [AttributeLogicalName("address3_postofficebox")]
        [DisplayName("Address 3: Post Office Box")]
        [MaxLength(20)]
        public string Address3_PostOfficeBox {
            get {
                return GetAttributeValue<string>("address3_postofficebox");
            }
            set {
                SetAttributeValue("address3_postofficebox", value);
            }
        }
        
        /// <summary>
        /// <para>the ZIP Code or postal code for the 3rd address.</para>
        /// <para>Display Name: Address3: ZIP/Postal Code</para>
        /// </summary>
        [AttributeLogicalName("address3_postalcode")]
        [DisplayName("Address3: ZIP/Postal Code")]
        [MaxLength(20)]
        public string Address3_PostalCode {
            get {
                return GetAttributeValue<string>("address3_postalcode");
            }
            set {
                SetAttributeValue("address3_postalcode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the name of the main contact at the account's third address.</para>
        /// <para>Display Name: Address 3: Primary Contact Name</para>
        /// </summary>
        [AttributeLogicalName("address3_primarycontactname")]
        [DisplayName("Address 3: Primary Contact Name")]
        [MaxLength(100)]
        public string Address3_PrimaryContactName {
            get {
                return GetAttributeValue<string>("address3_primarycontactname");
            }
            set {
                SetAttributeValue("address3_primarycontactname", value);
            }
        }
        
        /// <summary>
        /// <para>Select a shipping method for deliveries sent to this address.</para>
        /// <para>Display Name: Address 3: Shipping Method</para>
        /// </summary>
        [AttributeLogicalName("address3_shippingmethodcode")]
        [DisplayName("Address 3: Shipping Method")]
        public Contact_Address3_ShippingMethodCode? Address3_ShippingMethodCode {
            get {
                return GetOptionSetValue<Contact_Address3_ShippingMethodCode>("address3_shippingmethodcode");
            }
            set {
                SetOptionSetValue("address3_shippingmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>the state or province of the third address.</para>
        /// <para>Display Name: Address3: State/Province</para>
        /// </summary>
        [AttributeLogicalName("address3_stateorprovince")]
        [DisplayName("Address3: State/Province")]
        [MaxLength(50)]
        public string Address3_StateOrProvince {
            get {
                return GetAttributeValue<string>("address3_stateorprovince");
            }
            set {
                SetAttributeValue("address3_stateorprovince", value);
            }
        }
        
        /// <summary>
        /// <para>Type the main phone number associated with the third address.</para>
        /// <para>Display Name: Address 3: Telephone1</para>
        /// </summary>
        [AttributeLogicalName("address3_telephone1")]
        [DisplayName("Address 3: Telephone1")]
        [MaxLength(50)]
        public string Address3_Telephone1 {
            get {
                return GetAttributeValue<string>("address3_telephone1");
            }
            set {
                SetAttributeValue("address3_telephone1", value);
            }
        }
        
        /// <summary>
        /// <para>Type a second phone number associated with the third address.</para>
        /// <para>Display Name: Address 3: Telephone2</para>
        /// </summary>
        [AttributeLogicalName("address3_telephone2")]
        [DisplayName("Address 3: Telephone2")]
        [MaxLength(50)]
        public string Address3_Telephone2 {
            get {
                return GetAttributeValue<string>("address3_telephone2");
            }
            set {
                SetAttributeValue("address3_telephone2", value);
            }
        }
        
        /// <summary>
        /// <para>Type a third phone number associated with the primary address.</para>
        /// <para>Display Name: Address 3: Telephone3</para>
        /// </summary>
        [AttributeLogicalName("address3_telephone3")]
        [DisplayName("Address 3: Telephone3")]
        [MaxLength(50)]
        public string Address3_Telephone3 {
            get {
                return GetAttributeValue<string>("address3_telephone3");
            }
            set {
                SetAttributeValue("address3_telephone3", value);
            }
        }
        
        /// <summary>
        /// <para>Type the UPS zone of the third address to make sure shipping charges are calculated correctly and deliveries are made promptly, if shipped by UPS.</para>
        /// <para>Display Name: Address 3: UPS Zone</para>
        /// </summary>
        [AttributeLogicalName("address3_upszone")]
        [DisplayName("Address 3: UPS Zone")]
        [MaxLength(4)]
        public string Address3_UPSZone {
            get {
                return GetAttributeValue<string>("address3_upszone");
            }
            set {
                SetAttributeValue("address3_upszone", value);
            }
        }
        
        /// <summary>
        /// <para>Select the time zone, or UTC offset, for this address so that other people can reference it when they contact someone at this address.</para>
        /// <para>Display Name: Address 3: UTC Offset</para>
        /// </summary>
        [AttributeLogicalName("address3_utcoffset")]
        [DisplayName("Address 3: UTC Offset")]
        [Range(-1500, 1500)]
        public int? Address3_UTCOffset {
            get {
                return GetAttributeValue<int?>("address3_utcoffset");
            }
            set {
                SetAttributeValue("address3_utcoffset", value);
            }
        }
        
        /// <summary>
        /// <para>For system use only.</para>
        /// <para>Display Name: Aging 30</para>
        /// </summary>
        [AttributeLogicalName("aging30")]
        [DisplayName("Aging 30")]
        public decimal? Aging30 {
            get {
                return GetMoneyValue("aging30");
            }
        }
        
        /// <summary>
        /// <para>Shows the Aging 30 field converted to the system's default base currency. The calculations use the exchange rate specified in the Currencies area.</para>
        /// <para>Display Name: Aging 30 (Base)</para>
        /// </summary>
        [AttributeLogicalName("aging30_base")]
        [DisplayName("Aging 30 (Base)")]
        public decimal? Aging30_Base {
            get {
                return GetMoneyValue("aging30_base");
            }
        }
        
        /// <summary>
        /// <para>For system use only.</para>
        /// <para>Display Name: Aging 60</para>
        /// </summary>
        [AttributeLogicalName("aging60")]
        [DisplayName("Aging 60")]
        public decimal? Aging60 {
            get {
                return GetMoneyValue("aging60");
            }
        }
        
        /// <summary>
        /// <para>Shows the Aging 60 field converted to the system's default base currency. The calculations use the exchange rate specified in the Currencies area.</para>
        /// <para>Display Name: Aging 60 (Base)</para>
        /// </summary>
        [AttributeLogicalName("aging60_base")]
        [DisplayName("Aging 60 (Base)")]
        public decimal? Aging60_Base {
            get {
                return GetMoneyValue("aging60_base");
            }
        }
        
        /// <summary>
        /// <para>For system use only.</para>
        /// <para>Display Name: Aging 90</para>
        /// </summary>
        [AttributeLogicalName("aging90")]
        [DisplayName("Aging 90")]
        public decimal? Aging90 {
            get {
                return GetMoneyValue("aging90");
            }
        }
        
        /// <summary>
        /// <para>Shows the Aging 90 field converted to the system's default base currency. The calculations use the exchange rate specified in the Currencies area.</para>
        /// <para>Display Name: Aging 90 (Base)</para>
        /// </summary>
        [AttributeLogicalName("aging90_base")]
        [DisplayName("Aging 90 (Base)")]
        public decimal? Aging90_Base {
            get {
                return GetMoneyValue("aging90_base");
            }
        }
        
        /// <summary>
        /// <para>Enter the date of the contact's wedding or service anniversary for use in customer gift programs or other communications.</para>
        /// <para>Display Name: Anniversary</para>
        /// </summary>
        [AttributeLogicalName("anniversary")]
        [DisplayName("Anniversary")]
        public DateTime? Anniversary {
            get {
                return GetAttributeValue<DateTime?>("anniversary");
            }
            set {
                SetAttributeValue("anniversary", value);
            }
        }
        
        /// <summary>
        /// <para>Type the contact's annual income for use in profiling and financial analysis.</para>
        /// <para>Display Name: Annual Income</para>
        /// </summary>
        [AttributeLogicalName("annualincome")]
        [DisplayName("Annual Income")]
        public decimal? AnnualIncome {
            get {
                return GetMoneyValue("annualincome");
            }
            set {
                SetMoneyValue("annualincome", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the Annual Income field converted to the system's default base currency. The calculations use the exchange rate specified in the Currencies area.</para>
        /// <para>Display Name: Annual Income (Base)</para>
        /// </summary>
        [AttributeLogicalName("annualincome_base")]
        [DisplayName("Annual Income (Base)")]
        public decimal? AnnualIncome_Base {
            get {
                return GetMoneyValue("annualincome_base");
            }
        }
        
        /// <summary>
        /// <para>Type the name of the contact's assistant.</para>
        /// <para>Display Name: Assistant</para>
        /// </summary>
        [AttributeLogicalName("assistantname")]
        [DisplayName("Assistant")]
        [MaxLength(100)]
        public string AssistantName {
            get {
                return GetAttributeValue<string>("assistantname");
            }
            set {
                SetAttributeValue("assistantname", value);
            }
        }
        
        /// <summary>
        /// <para>Type the phone number for the contact's assistant.</para>
        /// <para>Display Name: Assistant Phone</para>
        /// </summary>
        [AttributeLogicalName("assistantphone")]
        [DisplayName("Assistant Phone")]
        [MaxLength(50)]
        public string AssistantPhone {
            get {
                return GetAttributeValue<string>("assistantphone");
            }
            set {
                SetAttributeValue("assistantphone", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the contact's birthday for use in customer gift programs or other communications.</para>
        /// <para>Display Name: Birthday</para>
        /// </summary>
        [AttributeLogicalName("birthdate")]
        [DisplayName("Birthday")]
        public DateTime? BirthDate {
            get {
                return GetAttributeValue<DateTime?>("birthdate");
            }
            set {
                SetAttributeValue("birthdate", value);
            }
        }
        
        /// <summary>
        /// <para>Type a second business phone number for this contact.</para>
        /// <para>Display Name: Business Phone 2</para>
        /// </summary>
        [AttributeLogicalName("business2")]
        [DisplayName("Business Phone 2")]
        [MaxLength(50)]
        public string Business2 {
            get {
                return GetAttributeValue<string>("business2");
            }
            set {
                SetAttributeValue("business2", value);
            }
        }
        
        /// <summary>
        /// <para>Stores Image of the Business Card</para>
        /// <para>Display Name: Business Card</para>
        /// </summary>
        [AttributeLogicalName("businesscard")]
        [DisplayName("Business Card")]
        public string BusinessCard {
            get {
                return GetAttributeValue<string>("businesscard");
            }
            set {
                SetAttributeValue("businesscard", value);
            }
        }
        
        /// <summary>
        /// <para>Stores Business Card Control Properties.</para>
        /// <para>Display Name: BusinessCardAttributes</para>
        /// </summary>
        [AttributeLogicalName("businesscardattributes")]
        [DisplayName("BusinessCardAttributes")]
        [MaxLength(4000)]
        public string BusinessCardAttributes {
            get {
                return GetAttributeValue<string>("businesscardattributes");
            }
            set {
                SetAttributeValue("businesscardattributes", value);
            }
        }
        
        /// <summary>
        /// <para>Type a callback phone number for this contact.</para>
        /// <para>Display Name: Callback Number</para>
        /// </summary>
        [AttributeLogicalName("callback")]
        [DisplayName("Callback Number")]
        [MaxLength(50)]
        public string Callback {
            get {
                return GetAttributeValue<string>("callback");
            }
            set {
                SetAttributeValue("callback", value);
            }
        }
        
        /// <summary>
        /// <para>Type the names of the contact's children for reference in communications and client programs.</para>
        /// <para>Display Name: Children's Names</para>
        /// </summary>
        [AttributeLogicalName("childrensnames")]
        [DisplayName("Children\'s Names")]
        [MaxLength(255)]
        public string ChildrensNames {
            get {
                return GetAttributeValue<string>("childrensnames");
            }
            set {
                SetAttributeValue("childrensnames", value);
            }
        }
        
        /// <summary>
        /// <para>Type the company phone of the contact.</para>
        /// <para>Display Name: Company Phone</para>
        /// </summary>
        [AttributeLogicalName("company")]
        [DisplayName("Company Phone")]
        [MaxLength(50)]
        public string Company {
            get {
                return GetAttributeValue<string>("company");
            }
            set {
                SetAttributeValue("company", value);
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Shows the external party who created the record.</para>
        /// <para>Display Name: Created By (External Party)</para>
        /// </summary>
        [AttributeLogicalName("createdbyexternalparty")]
        [DisplayName("Created By (External Party)")]
        public EntityReference CreatedByExternalParty {
            get {
                return GetAttributeValue<EntityReference>("createdbyexternalparty");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record on behalf of another user.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Type the credit limit of the contact for reference when you address invoice and accounting issues with the customer.</para>
        /// <para>Display Name: Credit Limit</para>
        /// </summary>
        [AttributeLogicalName("creditlimit")]
        [DisplayName("Credit Limit")]
        public decimal? CreditLimit {
            get {
                return GetMoneyValue("creditlimit");
            }
            set {
                SetMoneyValue("creditlimit", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the Credit Limit field converted to the system's default base currency for reporting purposes. The calculations use the exchange rate specified in the Currencies area.</para>
        /// <para>Display Name: Credit Limit (Base)</para>
        /// </summary>
        [AttributeLogicalName("creditlimit_base")]
        [DisplayName("Credit Limit (Base)")]
        public decimal? CreditLimit_Base {
            get {
                return GetMoneyValue("creditlimit_base");
            }
        }
        
        /// <summary>
        /// <para>Select whether the contact is on a credit hold, for reference when addressing invoice and accounting issues.</para>
        /// <para>Display Name: Credit Hold</para>
        /// </summary>
        [AttributeLogicalName("creditonhold")]
        [DisplayName("Credit Hold")]
        public bool? CreditOnHold {
            get {
                return GetAttributeValue<bool?>("creditonhold");
            }
            set {
                SetAttributeValue("creditonhold", value);
            }
        }
        
        /// <summary>
        /// <para>Select the size of the contact's company for segmentation and reporting purposes.</para>
        /// <para>Display Name: Customer Size</para>
        /// </summary>
        [AttributeLogicalName("customersizecode")]
        [DisplayName("Customer Size")]
        public Contact_CustomerSizeCode? CustomerSizeCode {
            get {
                return GetOptionSetValue<Contact_CustomerSizeCode>("customersizecode");
            }
            set {
                SetOptionSetValue("customersizecode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the category that best describes the relationship between the contact and your organization.</para>
        /// <para>Display Name: Relationship Type</para>
        /// </summary>
        [AttributeLogicalName("customertypecode")]
        [DisplayName("Relationship Type")]
        public Contact_CustomerTypeCode? CustomerTypeCode {
            get {
                return GetOptionSetValue<Contact_CustomerTypeCode>("customertypecode");
            }
            set {
                SetOptionSetValue("customertypecode", value);
            }
        }
        
        /// <summary>
        /// <para>price_level_contacts</para>
        /// <para>Display Name: Price List</para>
        /// </summary>
        [AttributeLogicalName("defaultpricelevelid")]
        [DisplayName("Price List")]
        public EntityReference DefaultPriceLevelId {
            get {
                return GetAttributeValue<EntityReference>("defaultpricelevelid");
            }
            set {
                SetAttributeValue("defaultpricelevelid", value);
            }
        }
        
        /// <summary>
        /// <para>Type the department or business unit where the contact works in the parent company or business.</para>
        /// <para>Display Name: Department</para>
        /// </summary>
        [AttributeLogicalName("department")]
        [DisplayName("Department")]
        [MaxLength(100)]
        public string Department {
            get {
                return GetAttributeValue<string>("department");
            }
            set {
                SetAttributeValue("department", value);
            }
        }
        
        /// <summary>
        /// <para>Type additional information to describe the contact, such as an excerpt from the company's website.</para>
        /// <para>Display Name: Description</para>
        /// </summary>
        [AttributeLogicalName("description")]
        [DisplayName("Description")]
        public string Description {
            get {
                return GetAttributeValue<string>("description");
            }
            set {
                SetAttributeValue("description", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the contact accepts bulk email sent through marketing campaigns or quick campaigns. If Do Not Allow is selected, the contact can be added to marketing lists, but will be excluded from the email.</para>
        /// <para>Display Name: Do not allow Bulk Emails</para>
        /// </summary>
        [AttributeLogicalName("donotbulkemail")]
        [DisplayName("Do not allow Bulk Emails")]
        public bool? DoNotBulkEMail {
            get {
                return GetAttributeValue<bool?>("donotbulkemail");
            }
            set {
                SetAttributeValue("donotbulkemail", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the contact accepts bulk postal mail sent through marketing campaigns or quick campaigns. If Do Not Allow is selected, the contact can be added to marketing lists, but will be excluded from the letters.</para>
        /// <para>Display Name: Do not allow Bulk Mails</para>
        /// </summary>
        [AttributeLogicalName("donotbulkpostalmail")]
        [DisplayName("Do not allow Bulk Mails")]
        public bool? DoNotBulkPostalMail {
            get {
                return GetAttributeValue<bool?>("donotbulkpostalmail");
            }
            set {
                SetAttributeValue("donotbulkpostalmail", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the contact allows direct email sent from Microsoft Dynamics 365. If Do Not Allow is selected, Microsoft Dynamics 365 will not send the email.</para>
        /// <para>Display Name: Do not allow Emails</para>
        /// </summary>
        [AttributeLogicalName("donotemail")]
        [DisplayName("Do not allow Emails")]
        public bool? DoNotEMail {
            get {
                return GetAttributeValue<bool?>("donotemail");
            }
            set {
                SetAttributeValue("donotemail", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the contact allows faxes. If Do Not Allow is selected, the contact will be excluded from any fax activities distributed in marketing campaigns.</para>
        /// <para>Display Name: Do not allow Faxes</para>
        /// </summary>
        [AttributeLogicalName("donotfax")]
        [DisplayName("Do not allow Faxes")]
        public bool? DoNotFax {
            get {
                return GetAttributeValue<bool?>("donotfax");
            }
            set {
                SetAttributeValue("donotfax", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the contact accepts phone calls. If Do Not Allow is selected, the contact will be excluded from any phone call activities distributed in marketing campaigns.</para>
        /// <para>Display Name: Do not allow Phone Calls</para>
        /// </summary>
        [AttributeLogicalName("donotphone")]
        [DisplayName("Do not allow Phone Calls")]
        public bool? DoNotPhone {
            get {
                return GetAttributeValue<bool?>("donotphone");
            }
            set {
                SetAttributeValue("donotphone", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the contact allows direct mail. If Do Not Allow is selected, the contact will be excluded from letter activities distributed in marketing campaigns.</para>
        /// <para>Display Name: Do not allow Mails</para>
        /// </summary>
        [AttributeLogicalName("donotpostalmail")]
        [DisplayName("Do not allow Mails")]
        public bool? DoNotPostalMail {
            get {
                return GetAttributeValue<bool?>("donotpostalmail");
            }
            set {
                SetAttributeValue("donotpostalmail", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the contact accepts marketing materials, such as brochures or catalogs. Contacts that opt out can be excluded from marketing initiatives.</para>
        /// <para>Display Name: Send Marketing Materials</para>
        /// </summary>
        [AttributeLogicalName("donotsendmm")]
        [DisplayName("Send Marketing Materials")]
        public bool? DoNotSendMM {
            get {
                return GetAttributeValue<bool?>("donotsendmm");
            }
            set {
                SetAttributeValue("donotsendmm", value);
            }
        }
        
        /// <summary>
        /// <para>Type the primary email address for the contact.</para>
        /// <para>Display Name: Email</para>
        /// </summary>
        [AttributeLogicalName("emailaddress1")]
        [DisplayName("Email")]
        [MaxLength(100)]
        public string EMailAddress1 {
            get {
                return GetAttributeValue<string>("emailaddress1");
            }
            set {
                SetAttributeValue("emailaddress1", value);
            }
        }
        
        /// <summary>
        /// <para>Type the secondary email address for the contact.</para>
        /// <para>Display Name: Email Address 2</para>
        /// </summary>
        [AttributeLogicalName("emailaddress2")]
        [DisplayName("Email Address 2")]
        [MaxLength(100)]
        public string EMailAddress2 {
            get {
                return GetAttributeValue<string>("emailaddress2");
            }
            set {
                SetAttributeValue("emailaddress2", value);
            }
        }
        
        /// <summary>
        /// <para>Type an alternate email address for the contact.</para>
        /// <para>Display Name: Email Address 3</para>
        /// </summary>
        [AttributeLogicalName("emailaddress3")]
        [DisplayName("Email Address 3")]
        [MaxLength(100)]
        public string EMailAddress3 {
            get {
                return GetAttributeValue<string>("emailaddress3");
            }
            set {
                SetAttributeValue("emailaddress3", value);
            }
        }
        
        /// <summary>
        /// <para>Select the contact's highest level of education for use in segmentation and analysis.</para>
        /// <para>Display Name: Education</para>
        /// </summary>
        [AttributeLogicalName("educationcode")]
        [DisplayName("Education")]
        public Contact_EducationCode? EducationCode {
            get {
                return GetOptionSetValue<Contact_EducationCode>("educationcode");
            }
            set {
                SetOptionSetValue("educationcode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the employee ID or number for the contact for reference in orders, service cases, or other communications with the contact's organization.</para>
        /// <para>Display Name: Employee</para>
        /// </summary>
        [AttributeLogicalName("employeeid")]
        [DisplayName("Employee")]
        [MaxLength(50)]
        public string EmployeeId {
            get {
                return GetAttributeValue<string>("employeeid");
            }
            set {
                SetAttributeValue("employeeid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Entity Image Id</para>
        /// </summary>
        [AttributeLogicalName("entityimageid")]
        [DisplayName("Entity Image Id")]
        public Guid? EntityImageId {
            get {
                return GetAttributeValue<Guid?>("entityimageid");
            }
        }
        
        /// <summary>
        /// <para>Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("Exchange Rate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Identifier for an external user.</para>
        /// <para>Display Name: External User Identifier</para>
        /// </summary>
        [AttributeLogicalName("externaluseridentifier")]
        [DisplayName("External User Identifier")]
        [MaxLength(50)]
        public string ExternalUserIdentifier {
            get {
                return GetAttributeValue<string>("externaluseridentifier");
            }
            set {
                SetAttributeValue("externaluseridentifier", value);
            }
        }
        
        /// <summary>
        /// <para>Select the marital status of the contact for reference in follow-up phone calls and other communications.</para>
        /// <para>Display Name: Marital Status</para>
        /// </summary>
        [AttributeLogicalName("familystatuscode")]
        [DisplayName("Marital Status")]
        public Contact_FamilyStatusCode? FamilyStatusCode {
            get {
                return GetOptionSetValue<Contact_FamilyStatusCode>("familystatuscode");
            }
            set {
                SetOptionSetValue("familystatuscode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the fax number for the contact.</para>
        /// <para>Display Name: Fax</para>
        /// </summary>
        [AttributeLogicalName("fax")]
        [DisplayName("Fax")]
        [MaxLength(50)]
        public string Fax {
            get {
                return GetAttributeValue<string>("fax");
            }
            set {
                SetAttributeValue("fax", value);
            }
        }
        
        /// <summary>
        /// <para>Type the contact's first name to make sure the contact is addressed correctly in sales calls, email, and marketing campaigns.</para>
        /// <para>Display Name: First Name</para>
        /// </summary>
        [AttributeLogicalName("firstname")]
        [DisplayName("First Name")]
        [MaxLength(50)]
        public string FirstName {
            get {
                return GetAttributeValue<string>("firstname");
            }
            set {
                SetAttributeValue("firstname", value);
            }
        }
        
        /// <summary>
        /// <para>Information about whether to allow following email activity like opens, attachment views and link clicks for emails sent to the contact.</para>
        /// <para>Display Name: Follow Email Activity</para>
        /// </summary>
        [AttributeLogicalName("followemail")]
        [DisplayName("Follow Email Activity")]
        public bool? FollowEmail {
            get {
                return GetAttributeValue<bool?>("followemail");
            }
            set {
                SetAttributeValue("followemail", value);
            }
        }
        
        /// <summary>
        /// <para>Type the URL for the contact's FTP site to enable users to access data and share documents.</para>
        /// <para>Display Name: FTP Site</para>
        /// </summary>
        [AttributeLogicalName("ftpsiteurl")]
        [DisplayName("FTP Site")]
        [MaxLength(200)]
        public string FtpSiteUrl {
            get {
                return GetAttributeValue<string>("ftpsiteurl");
            }
            set {
                SetAttributeValue("ftpsiteurl", value);
            }
        }
        
        /// <summary>
        /// <para>Combines and shows the contact's first and last names so that the full name can be displayed in views and reports.</para>
        /// <para>Display Name: Full Name</para>
        /// </summary>
        [AttributeLogicalName("fullname")]
        [DisplayName("Full Name")]
        [MaxLength(160)]
        public string FullName {
            get {
                return GetAttributeValue<string>("fullname");
            }
        }
        
        /// <summary>
        /// <para>Select the contact's gender to make sure the contact is addressed correctly in sales calls, email, and marketing campaigns.</para>
        /// <para>Display Name: Gender</para>
        /// </summary>
        [AttributeLogicalName("gendercode")]
        [DisplayName("Gender")]
        public Contact_GenderCode? GenderCode {
            get {
                return GetOptionSetValue<Contact_GenderCode>("gendercode");
            }
            set {
                SetOptionSetValue("gendercode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the passport number or other government ID for the contact for use in documents or reports.</para>
        /// <para>Display Name: Government</para>
        /// </summary>
        [AttributeLogicalName("governmentid")]
        [DisplayName("Government")]
        [MaxLength(50)]
        public string GovernmentId {
            get {
                return GetAttributeValue<string>("governmentid");
            }
            set {
                SetAttributeValue("governmentid", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the contact has any children for reference in follow-up phone calls and other communications.</para>
        /// <para>Display Name: Has Children</para>
        /// </summary>
        [AttributeLogicalName("haschildrencode")]
        [DisplayName("Has Children")]
        public Contact_HasChildrenCode? HasChildrenCode {
            get {
                return GetOptionSetValue<Contact_HasChildrenCode>("haschildrencode");
            }
            set {
                SetOptionSetValue("haschildrencode", value);
            }
        }
        
        /// <summary>
        /// <para>Type a second home phone number for this contact.</para>
        /// <para>Display Name: Home Phone 2</para>
        /// </summary>
        [AttributeLogicalName("home2")]
        [DisplayName("Home Phone 2")]
        [MaxLength(50)]
        public string Home2 {
            get {
                return GetAttributeValue<string>("home2");
            }
            set {
                SetAttributeValue("home2", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the data import or data migration that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the contact exists in a separate accounting or other system, such as Microsoft Dynamics GP or another ERP database, for use in integration processes.</para>
        /// <para>Display Name: Back Office Customer</para>
        /// </summary>
        [AttributeLogicalName("isbackofficecustomer")]
        [DisplayName("Back Office Customer")]
        public bool? IsBackofficeCustomer {
            get {
                return GetAttributeValue<bool?>("isbackofficecustomer");
            }
            set {
                SetAttributeValue("isbackofficecustomer", value);
            }
        }
        
        /// <summary>
        /// <para>Type the job title of the contact to make sure the contact is addressed correctly in sales calls, email, and marketing campaigns.</para>
        /// <para>Display Name: Job Title</para>
        /// </summary>
        [AttributeLogicalName("jobtitle")]
        [DisplayName("Job Title")]
        [MaxLength(100)]
        public string JobTitle {
            get {
                return GetAttributeValue<string>("jobtitle");
            }
            set {
                SetAttributeValue("jobtitle", value);
            }
        }
        
        /// <summary>
        /// <para>Type the contact's last name to make sure the contact is addressed correctly in sales calls, email, and marketing campaigns.</para>
        /// <para>Display Name: Last Name</para>
        /// </summary>
        [AttributeLogicalName("lastname")]
        [DisplayName("Last Name")]
        [MaxLength(50)]
        public string LastName {
            get {
                return GetAttributeValue<string>("lastname");
            }
            set {
                SetAttributeValue("lastname", value);
            }
        }
        
        /// <summary>
        /// <para>Contains the date and time stamp of the last on hold time.</para>
        /// <para>Display Name: Last On Hold Time</para>
        /// </summary>
        [AttributeLogicalName("lastonholdtime")]
        [DisplayName("Last On Hold Time")]
        public DateTime? LastOnHoldTime {
            get {
                return GetAttributeValue<DateTime?>("lastonholdtime");
            }
            set {
                SetAttributeValue("lastonholdtime", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the date when the contact was last included in a marketing campaign or quick campaign.</para>
        /// <para>Display Name: Last Date Included in Campaign</para>
        /// </summary>
        [AttributeLogicalName("lastusedincampaign")]
        [DisplayName("Last Date Included in Campaign")]
        public DateTime? LastUsedInCampaign {
            get {
                return GetAttributeValue<DateTime?>("lastusedincampaign");
            }
            set {
                SetAttributeValue("lastusedincampaign", value);
            }
        }
        
        /// <summary>
        /// <para>Select the primary marketing source that directed the contact to your organization.</para>
        /// <para>Display Name: Lead Source</para>
        /// </summary>
        [AttributeLogicalName("leadsourcecode")]
        [DisplayName("Lead Source")]
        public Contact_LeadSourceCode? LeadSourceCode {
            get {
                return GetOptionSetValue<Contact_LeadSourceCode>("leadsourcecode");
            }
            set {
                SetOptionSetValue("leadsourcecode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the name of the contact's manager for use in escalating issues or other follow-up communications with the contact.</para>
        /// <para>Display Name: Manager</para>
        /// </summary>
        [AttributeLogicalName("managername")]
        [DisplayName("Manager")]
        [MaxLength(100)]
        public string ManagerName {
            get {
                return GetAttributeValue<string>("managername");
            }
            set {
                SetAttributeValue("managername", value);
            }
        }
        
        /// <summary>
        /// <para>Type the phone number for the contact's manager.</para>
        /// <para>Display Name: Manager Phone</para>
        /// </summary>
        [AttributeLogicalName("managerphone")]
        [DisplayName("Manager Phone")]
        [MaxLength(50)]
        public string ManagerPhone {
            get {
                return GetAttributeValue<string>("managerphone");
            }
            set {
                SetAttributeValue("managerphone", value);
            }
        }
        
        /// <summary>
        /// <para>Whether is only for marketing</para>
        /// <para>Display Name: Marketing Only</para>
        /// </summary>
        [AttributeLogicalName("marketingonly")]
        [DisplayName("Marketing Only")]
        public bool? MarketingOnly {
            get {
                return GetAttributeValue<bool?>("marketingonly");
            }
            set {
                SetAttributeValue("marketingonly", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the master contact for merge.</para>
        /// <para>Display Name: Master ID</para>
        /// </summary>
        [AttributeLogicalName("masterid")]
        [DisplayName("Master ID")]
        public EntityReference MasterId {
            get {
                return GetAttributeValue<EntityReference>("masterid");
            }
        }
        
        /// <summary>
        /// <para>Shows whether the account has been merged with a master contact.</para>
        /// <para>Display Name: Merged</para>
        /// </summary>
        [AttributeLogicalName("merged")]
        [DisplayName("Merged")]
        public bool? Merged {
            get {
                return GetAttributeValue<bool?>("merged");
            }
        }
        
        /// <summary>
        /// <para>Type the contact's middle name or initial to make sure the contact is addressed correctly.</para>
        /// <para>Display Name: Middle Name</para>
        /// </summary>
        [AttributeLogicalName("middlename")]
        [DisplayName("Middle Name")]
        [MaxLength(50)]
        public string MiddleName {
            get {
                return GetAttributeValue<string>("middlename");
            }
            set {
                SetAttributeValue("middlename", value);
            }
        }
        
        /// <summary>
        /// <para>Type the mobile phone number for the contact.</para>
        /// <para>Display Name: Mobile Phone</para>
        /// </summary>
        [AttributeLogicalName("mobilephone")]
        [DisplayName("Mobile Phone")]
        [MaxLength(50)]
        public string MobilePhone {
            get {
                return GetAttributeValue<string>("mobilephone");
            }
            set {
                SetAttributeValue("mobilephone", value);
            }
        }
        
        /// <summary>
        /// <para>Shows who last updated the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Shows the external party who modified the record.</para>
        /// <para>Display Name: Modified By (External Party)</para>
        /// </summary>
        [AttributeLogicalName("modifiedbyexternalparty")]
        [DisplayName("Modified By (External Party)")]
        public EntityReference ModifiedByExternalParty {
            get {
                return GetAttributeValue<EntityReference>("modifiedbyexternalparty");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Shows who last updated the record on behalf of another user.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Type the contact's nickname.</para>
        /// <para>Display Name: Nickname</para>
        /// </summary>
        [AttributeLogicalName("nickname")]
        [DisplayName("Nickname")]
        [MaxLength(100)]
        public string NickName {
            get {
                return GetAttributeValue<string>("nickname");
            }
            set {
                SetAttributeValue("nickname", value);
            }
        }
        
        /// <summary>
        /// <para>Type the number of children the contact has for reference in follow-up phone calls and other communications.</para>
        /// <para>Display Name: No. of Children</para>
        /// </summary>
        [AttributeLogicalName("numberofchildren")]
        [DisplayName("No. of Children")]
        [Range(0, 1000000000)]
        public int? NumberOfChildren {
            get {
                return GetAttributeValue<int?>("numberofchildren");
            }
            set {
                SetAttributeValue("numberofchildren", value);
            }
        }
        
        /// <summary>
        /// <para>Shows how long, in minutes, that the record was on hold.</para>
        /// <para>Display Name: On Hold Time (Minutes)</para>
        /// </summary>
        [AttributeLogicalName("onholdtime")]
        [DisplayName("On Hold Time (Minutes)")]
        [Range(-2147483648, 2147483647)]
        public int? OnHoldTime {
            get {
                return GetAttributeValue<int?>("onholdtime");
            }
        }
        
        /// <summary>
        /// <para>contact_originating_lead</para>
        /// <para>Display Name: Originating Lead</para>
        /// </summary>
        [AttributeLogicalName("originatingleadid")]
        [DisplayName("Originating Lead")]
        public EntityReference OriginatingLeadId {
            get {
                return GetAttributeValue<EntityReference>("originatingleadid");
            }
            set {
                SetAttributeValue("originatingleadid", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the user or team who is assigned to manage the record. This field is updated every time the record is assigned to a different user.</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the business unit that owns the contact.</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the team who owns the contact.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who owns the contact.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Type the pager number for the contact.</para>
        /// <para>Display Name: Pager</para>
        /// </summary>
        [AttributeLogicalName("pager")]
        [DisplayName("Pager")]
        [MaxLength(50)]
        public string Pager {
            get {
                return GetAttributeValue<string>("pager");
            }
            set {
                SetAttributeValue("pager", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the parent contact.</para>
        /// <para>Display Name: Parent Contact</para>
        /// </summary>
        [AttributeLogicalName("parentcontactid")]
        [DisplayName("Parent Contact")]
        public EntityReference ParentContactId {
            get {
                return GetAttributeValue<EntityReference>("parentcontactid");
            }
        }
        
        /// <summary>
        /// <para>Select the parent account or parent contact for the contact to provide a quick link to additional details, such as financial information, activities, and opportunities.</para>
        /// <para>Display Name: Company Name</para>
        /// </summary>
        [AttributeLogicalName("parentcustomerid")]
        [DisplayName("Company Name")]
        public EntityReference ParentCustomerId {
            get {
                return GetAttributeValue<EntityReference>("parentcustomerid");
            }
            set {
                SetAttributeValue("parentcustomerid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows whether the contact participates in workflow rules.</para>
        /// <para>Display Name: Participates in Workflow</para>
        /// </summary>
        [AttributeLogicalName("participatesinworkflow")]
        [DisplayName("Participates in Workflow")]
        public bool? ParticipatesInWorkflow {
            get {
                return GetAttributeValue<bool?>("participatesinworkflow");
            }
            set {
                SetAttributeValue("participatesinworkflow", value);
            }
        }
        
        /// <summary>
        /// <para>Select the payment terms to indicate when the customer needs to pay the total amount.</para>
        /// <para>Display Name: Payment Terms</para>
        /// </summary>
        [AttributeLogicalName("paymenttermscode")]
        [DisplayName("Payment Terms")]
        public Contact_PaymentTermsCode? PaymentTermsCode {
            get {
                return GetOptionSetValue<Contact_PaymentTermsCode>("paymenttermscode");
            }
            set {
                SetOptionSetValue("paymenttermscode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the preferred day of the week for service appointments.</para>
        /// <para>Display Name: Preferred Day</para>
        /// </summary>
        [AttributeLogicalName("preferredappointmentdaycode")]
        [DisplayName("Preferred Day")]
        public Contact_PreferredAppointmentDayCode? PreferredAppointmentDayCode {
            get {
                return GetOptionSetValue<Contact_PreferredAppointmentDayCode>("preferredappointmentdaycode");
            }
            set {
                SetOptionSetValue("preferredappointmentdaycode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the preferred time of day for service appointments.</para>
        /// <para>Display Name: Preferred Time</para>
        /// </summary>
        [AttributeLogicalName("preferredappointmenttimecode")]
        [DisplayName("Preferred Time")]
        public Contact_PreferredAppointmentTimeCode? PreferredAppointmentTimeCode {
            get {
                return GetOptionSetValue<Contact_PreferredAppointmentTimeCode>("preferredappointmenttimecode");
            }
            set {
                SetOptionSetValue("preferredappointmenttimecode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the preferred method of contact.</para>
        /// <para>Display Name: Preferred Method of Contact</para>
        /// </summary>
        [AttributeLogicalName("preferredcontactmethodcode")]
        [DisplayName("Preferred Method of Contact")]
        public Contact_PreferredContactMethodCode? PreferredContactMethodCode {
            get {
                return GetOptionSetValue<Contact_PreferredContactMethodCode>("preferredcontactmethodcode");
            }
            set {
                SetOptionSetValue("preferredcontactmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>equipment_contacts</para>
        /// <para>Display Name: Preferred Facility/Equipment</para>
        /// </summary>
        [AttributeLogicalName("preferredequipmentid")]
        [DisplayName("Preferred Facility/Equipment")]
        public EntityReference PreferredEquipmentId {
            get {
                return GetAttributeValue<EntityReference>("preferredequipmentid");
            }
            set {
                SetAttributeValue("preferredequipmentid", value);
            }
        }
        
        /// <summary>
        /// <para>service_contacts</para>
        /// <para>Display Name: Preferred Service</para>
        /// </summary>
        [AttributeLogicalName("preferredserviceid")]
        [DisplayName("Preferred Service")]
        public EntityReference PreferredServiceId {
            get {
                return GetAttributeValue<EntityReference>("preferredserviceid");
            }
            set {
                SetAttributeValue("preferredserviceid", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the regular or preferred customer service representative for reference when scheduling service activities for the contact.</para>
        /// <para>Display Name: Preferred User</para>
        /// </summary>
        [AttributeLogicalName("preferredsystemuserid")]
        [DisplayName("Preferred User")]
        public EntityReference PreferredSystemUserId {
            get {
                return GetAttributeValue<EntityReference>("preferredsystemuserid");
            }
            set {
                SetAttributeValue("preferredsystemuserid", value);
            }
        }
        
        /// <summary>
        /// <para>Combines and shows the contact's first and last names so that the full name can be displayed in views and reports.</para>
        /// <para>Display Name: Full Name</para>
        /// </summary>
        [AttributeLogicalName("fullname")]
        [DisplayName("Full Name")]
        [MaxLength(160)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("fullname");
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the process.</para>
        /// <para>Display Name: Process</para>
        /// </summary>
        [AttributeLogicalName("processid")]
        [DisplayName("Process")]
        public Guid? ProcessId {
            get {
                return GetAttributeValue<Guid?>("processid");
            }
            set {
                SetAttributeValue("processid", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the service level agreement (SLA) that you want to apply to the Contact record.</para>
        /// <para>Display Name: SLA</para>
        /// </summary>
        [AttributeLogicalName("slaid")]
        [DisplayName("SLA")]
        public EntityReference SLAId {
            get {
                return GetAttributeValue<EntityReference>("slaid");
            }
            set {
                SetAttributeValue("slaid", value);
            }
        }
        
        /// <summary>
        /// <para>Last SLA that was applied to this case. This field is for internal use only.</para>
        /// <para>Display Name: Last SLA applied</para>
        /// </summary>
        [AttributeLogicalName("slainvokedid")]
        [DisplayName("Last SLA applied")]
        public EntityReference SLAInvokedId {
            get {
                return GetAttributeValue<EntityReference>("slainvokedid");
            }
        }
        
        /// <summary>
        /// <para>Type the salutation of the contact to make sure the contact is addressed correctly in sales calls, email messages, and marketing campaigns.</para>
        /// <para>Display Name: Salutation</para>
        /// </summary>
        [AttributeLogicalName("salutation")]
        [DisplayName("Salutation")]
        [MaxLength(100)]
        public string Salutation {
            get {
                return GetAttributeValue<string>("salutation");
            }
            set {
                SetAttributeValue("salutation", value);
            }
        }
        
        /// <summary>
        /// <para>Select a shipping method for deliveries sent to this address.</para>
        /// <para>Display Name: Shipping Method</para>
        /// </summary>
        [AttributeLogicalName("shippingmethodcode")]
        [DisplayName("Shipping Method")]
        public Contact_ShippingMethodCode? ShippingMethodCode {
            get {
                return GetOptionSetValue<Contact_ShippingMethodCode>("shippingmethodcode");
            }
            set {
                SetOptionSetValue("shippingmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the name of the contact's spouse or partner for reference during calls, events, or other communications with the contact.</para>
        /// <para>Display Name: Spouse/Partner Name</para>
        /// </summary>
        [AttributeLogicalName("spousesname")]
        [DisplayName("Spouse/Partner Name")]
        [MaxLength(100)]
        public string SpousesName {
            get {
                return GetAttributeValue<string>("spousesname");
            }
            set {
                SetAttributeValue("spousesname", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the stage.</para>
        /// <para>Display Name: (Deprecated) Process Stage</para>
        /// </summary>
        [AttributeLogicalName("stageid")]
        [DisplayName("(Deprecated) Process Stage")]
        public Guid? StageId {
            get {
                return GetAttributeValue<Guid?>("stageid");
            }
            set {
                SetAttributeValue("stageid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows whether the contact is active or inactive. Inactive contacts are read-only and can't be edited unless they are reactivated.</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public ContactState? StateCode {
            get {
                return GetOptionSetValue<ContactState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the contact's status.</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public Contact_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<Contact_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Subscription</para>
        /// </summary>
        [AttributeLogicalName("subscriptionid")]
        [DisplayName("Subscription")]
        public Guid? SubscriptionId {
            get {
                return GetAttributeValue<Guid?>("subscriptionid");
            }
            set {
                SetAttributeValue("subscriptionid", value);
            }
        }
        
        /// <summary>
        /// <para>Type the suffix used in the contact's name, such as Jr. or Sr. to make sure the contact is addressed correctly in sales calls, email, and marketing campaigns.</para>
        /// <para>Display Name: Suffix</para>
        /// </summary>
        [AttributeLogicalName("suffix")]
        [DisplayName("Suffix")]
        [MaxLength(10)]
        public string Suffix {
            get {
                return GetAttributeValue<string>("suffix");
            }
            set {
                SetAttributeValue("suffix", value);
            }
        }
        
        /// <summary>
        /// <para>Number of users or conversations followed the record</para>
        /// <para>Display Name: TeamsFollowed</para>
        /// </summary>
        [AttributeLogicalName("teamsfollowed")]
        [DisplayName("TeamsFollowed")]
        [Range(-2147483648, 2147483647)]
        public int? TeamsFollowed {
            get {
                return GetAttributeValue<int?>("teamsfollowed");
            }
            set {
                SetAttributeValue("teamsfollowed", value);
            }
        }
        
        /// <summary>
        /// <para>Type the main phone number for this contact.</para>
        /// <para>Display Name: Business Phone</para>
        /// </summary>
        [AttributeLogicalName("telephone1")]
        [DisplayName("Business Phone")]
        [MaxLength(50)]
        public string Telephone1 {
            get {
                return GetAttributeValue<string>("telephone1");
            }
            set {
                SetAttributeValue("telephone1", value);
            }
        }
        
        /// <summary>
        /// <para>Type a second phone number for this contact.</para>
        /// <para>Display Name: Home Phone</para>
        /// </summary>
        [AttributeLogicalName("telephone2")]
        [DisplayName("Home Phone")]
        [MaxLength(50)]
        public string Telephone2 {
            get {
                return GetAttributeValue<string>("telephone2");
            }
            set {
                SetAttributeValue("telephone2", value);
            }
        }
        
        /// <summary>
        /// <para>Type a third phone number for this contact.</para>
        /// <para>Display Name: Telephone 3</para>
        /// </summary>
        [AttributeLogicalName("telephone3")]
        [DisplayName("Telephone 3")]
        [MaxLength(50)]
        public string Telephone3 {
            get {
                return GetAttributeValue<string>("telephone3");
            }
            set {
                SetAttributeValue("telephone3", value);
            }
        }
        
        /// <summary>
        /// <para>Select a region or territory for the contact for use in segmentation and analysis.</para>
        /// <para>Display Name: Territory</para>
        /// </summary>
        [AttributeLogicalName("territorycode")]
        [DisplayName("Territory")]
        public Contact_TerritoryCode? TerritoryCode {
            get {
                return GetOptionSetValue<Contact_TerritoryCode>("territorycode");
            }
            set {
                SetOptionSetValue("territorycode", value);
            }
        }
        
        /// <summary>
        /// <para>Total time spent for emails (read and write) and meetings by me in relation to the contact record.</para>
        /// <para>Display Name: Time Spent by me</para>
        /// </summary>
        [AttributeLogicalName("timespentbymeonemailandmeetings")]
        [DisplayName("Time Spent by me")]
        [MaxLength(1250)]
        public string TimeSpentByMeOnEmailAndMeetings {
            get {
                return GetAttributeValue<string>("timespentbymeonemailandmeetings");
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the local currency for the record to make sure budgets are reported in the correct currency.</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: (Deprecated) Traversed Path</para>
        /// </summary>
        [AttributeLogicalName("traversedpath")]
        [DisplayName("(Deprecated) Traversed Path")]
        [MaxLength(1250)]
        public string TraversedPath {
            get {
                return GetAttributeValue<string>("traversedpath");
            }
            set {
                SetAttributeValue("traversedpath", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version number of the contact.</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Type the contact's professional or personal website or blog URL.</para>
        /// <para>Display Name: Website</para>
        /// </summary>
        [AttributeLogicalName("websiteurl")]
        [DisplayName("Website")]
        [MaxLength(200)]
        public string WebSiteUrl {
            get {
                return GetAttributeValue<string>("websiteurl");
            }
            set {
                SetAttributeValue("websiteurl", value);
            }
        }
        
        /// <summary>
        /// <para>Type the phonetic spelling of the contact's first name, if the name is specified in Japanese, to make sure the name is pronounced correctly in phone calls with the contact.</para>
        /// <para>Display Name: Yomi First Name</para>
        /// </summary>
        [AttributeLogicalName("yomifirstname")]
        [DisplayName("Yomi First Name")]
        [MaxLength(150)]
        public string YomiFirstName {
            get {
                return GetAttributeValue<string>("yomifirstname");
            }
            set {
                SetAttributeValue("yomifirstname", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the combined Yomi first and last names of the contact so that the full phonetic name can be displayed in views and reports.</para>
        /// <para>Display Name: Yomi Full Name</para>
        /// </summary>
        [AttributeLogicalName("yomifullname")]
        [DisplayName("Yomi Full Name")]
        [MaxLength(450)]
        public string YomiFullName {
            get {
                return GetAttributeValue<string>("yomifullname");
            }
        }
        
        /// <summary>
        /// <para>Type the phonetic spelling of the contact's last name, if the name is specified in Japanese, to make sure the name is pronounced correctly in phone calls with the contact.</para>
        /// <para>Display Name: Yomi Last Name</para>
        /// </summary>
        [AttributeLogicalName("yomilastname")]
        [DisplayName("Yomi Last Name")]
        [MaxLength(150)]
        public string YomiLastName {
            get {
                return GetAttributeValue<string>("yomilastname");
            }
            set {
                SetAttributeValue("yomilastname", value);
            }
        }
        
        /// <summary>
        /// <para>Type the phonetic spelling of the contact's middle name, if the name is specified in Japanese, to make sure the name is pronounced correctly in phone calls with the contact.</para>
        /// <para>Display Name: Yomi Middle Name</para>
        /// </summary>
        [AttributeLogicalName("yomimiddlename")]
        [DisplayName("Yomi Middle Name")]
        [MaxLength(150)]
        public string YomiMiddleName {
            get {
                return GetAttributeValue<string>("yomimiddlename");
            }
            set {
                SetAttributeValue("yomimiddlename", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Anonymiseret</para>
        /// </summary>
        [AttributeLogicalName("dg_anonymized")]
        [DisplayName("Anonymiseret")]
        public DateTime? dg_Anonymized {
            get {
                return GetAttributeValue<DateTime?>("dg_anonymized");
            }
            set {
                SetAttributeValue("dg_anonymized", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Test Account</para>
        /// </summary>
        [AttributeLogicalName("dg_testaccount")]
        [DisplayName("Test Account")]
        public EntityReference dg_TestAccount {
            get {
                return GetAttributeValue<EntityReference>("dg_testaccount");
            }
            set {
                SetAttributeValue("dg_testaccount", value);
            }
        }
        
        /// <summary>
        /// <para>Maps to contact KPI records</para>
        /// <para>Display Name: KPI</para>
        /// </summary>
        [AttributeLogicalName("msdyn_contactkpiid")]
        [DisplayName("KPI")]
        public EntityReference msdyn_contactkpiid {
            get {
                return GetAttributeValue<EntityReference>("msdyn_contactkpiid");
            }
            set {
                SetAttributeValue("msdyn_contactkpiid", value);
            }
        }
        
        /// <summary>
        /// <para>Describes whether contact is opted out or not</para>
        /// <para>Display Name: GDPR Optout</para>
        /// </summary>
        [AttributeLogicalName("msdyn_gdproptout")]
        [DisplayName("GDPR Optout")]
        public bool? msdyn_gdproptout {
            get {
                return GetAttributeValue<bool?>("msdyn_gdproptout");
            }
            set {
                SetAttributeValue("msdyn_gdproptout", value);
            }
        }
        
        /// <summary>
        /// <para>Whether or not the contact belongs to the associated account</para>
        /// <para>Display Name: Not at Company Flag</para>
        /// </summary>
        [AttributeLogicalName("msdyn_orgchangestatus")]
        [DisplayName("Not at Company Flag")]
        public Contact_msdyn_orgchangestatus? msdyn_orgchangestatus {
            get {
                return GetOptionSetValue<Contact_msdyn_orgchangestatus>("msdyn_orgchangestatus");
            }
            set {
                SetOptionSetValue("msdyn_orgchangestatus", value);
            }
        }
        
        [RelationshipSchemaName("CampaignActivity_Contacts")]
        public IEnumerable<CampaignActivity> CampaignActivity_Contacts {
            get {
                return GetRelatedEntities<CampaignActivity>("CampaignActivity_Contacts", null);
            }
            set {
                SetRelatedEntities("CampaignActivity_Contacts", null, value);
            }
        }
        
        [RelationshipSchemaName("Contact_ActivityPointers")]
        public IEnumerable<ActivityPointer> Contact_ActivityPointers {
            get {
                return GetRelatedEntities<ActivityPointer>("Contact_ActivityPointers", null);
            }
            set {
                SetRelatedEntities("Contact_ActivityPointers", null, value);
            }
        }
        
        [RelationshipSchemaName("Contact_Appointments")]
        public IEnumerable<Appointment> Contact_Appointments {
            get {
                return GetRelatedEntities<Appointment>("Contact_Appointments", null);
            }
            set {
                SetRelatedEntities("Contact_Appointments", null, value);
            }
        }
        
        [RelationshipSchemaName("Contact_CustomerAddress")]
        public IEnumerable<CustomerAddress> Contact_CustomerAddress {
            get {
                return GetRelatedEntities<CustomerAddress>("Contact_CustomerAddress", null);
            }
            set {
                SetRelatedEntities("Contact_CustomerAddress", null, value);
            }
        }
        
        [RelationshipSchemaName("Contact_Email_EmailSender")]
        public IEnumerable<Email> Contact_Email_EmailSender {
            get {
                return GetRelatedEntities<Email>("Contact_Email_EmailSender", null);
            }
            set {
                SetRelatedEntities("Contact_Email_EmailSender", null, value);
            }
        }
        
        [RelationshipSchemaName("Contact_Emails")]
        public IEnumerable<Email> Contact_Emails {
            get {
                return GetRelatedEntities<Email>("Contact_Emails", null);
            }
            set {
                SetRelatedEntities("Contact_Emails", null, value);
            }
        }
        
        [RelationshipSchemaName("Contact_Faxes")]
        public IEnumerable<Fax> Contact_Faxes {
            get {
                return GetRelatedEntities<Fax>("Contact_Faxes", null);
            }
            set {
                SetRelatedEntities("Contact_Faxes", null, value);
            }
        }
        
        [RelationshipSchemaName("Contact_Letters")]
        public IEnumerable<Letter> Contact_Letters {
            get {
                return GetRelatedEntities<Letter>("Contact_Letters", null);
            }
            set {
                SetRelatedEntities("Contact_Letters", null, value);
            }
        }
        
        [RelationshipSchemaName("Contact_Phonecalls")]
        public IEnumerable<PhoneCall> Contact_Phonecalls {
            get {
                return GetRelatedEntities<PhoneCall>("Contact_Phonecalls", null);
            }
            set {
                SetRelatedEntities("Contact_Phonecalls", null, value);
            }
        }
        
        [RelationshipSchemaName("Contact_RecurringAppointmentMasters")]
        public IEnumerable<RecurringAppointmentMaster> Contact_RecurringAppointmentMasters {
            get {
                return GetRelatedEntities<RecurringAppointmentMaster>("Contact_RecurringAppointmentMasters", null);
            }
            set {
                SetRelatedEntities("Contact_RecurringAppointmentMasters", null, value);
            }
        }
        
        [RelationshipSchemaName("Contact_ServiceAppointments")]
        public IEnumerable<ServiceAppointment> Contact_ServiceAppointments {
            get {
                return GetRelatedEntities<ServiceAppointment>("Contact_ServiceAppointments", null);
            }
            set {
                SetRelatedEntities("Contact_ServiceAppointments", null, value);
            }
        }
        
        [RelationshipSchemaName("Contact_SocialActivities")]
        public IEnumerable<SocialActivity> Contact_SocialActivities {
            get {
                return GetRelatedEntities<SocialActivity>("Contact_SocialActivities", null);
            }
            set {
                SetRelatedEntities("Contact_SocialActivities", null, value);
            }
        }
        
        [RelationshipSchemaName("Contact_SyncErrors")]
        public IEnumerable<SyncError> Contact_SyncErrors {
            get {
                return GetRelatedEntities<SyncError>("Contact_SyncErrors", null);
            }
            set {
                SetRelatedEntities("Contact_SyncErrors", null, value);
            }
        }
        
        [RelationshipSchemaName("Contact_Tasks")]
        public IEnumerable<Task> Contact_Tasks {
            get {
                return GetRelatedEntities<Task>("Contact_Tasks", null);
            }
            set {
                SetRelatedEntities("Contact_Tasks", null, value);
            }
        }
        
        [RelationshipSchemaName("CreatedContact_BulkOperationLogs")]
        public IEnumerable<BulkOperationLog> CreatedContact_BulkOperationLogs {
            get {
                return GetRelatedEntities<BulkOperationLog>("CreatedContact_BulkOperationLogs", null);
            }
            set {
                SetRelatedEntities("CreatedContact_BulkOperationLogs", null, value);
            }
        }
        
        [RelationshipSchemaName("contact_customer_contacts", EntityRole.Referenced)]
        public IEnumerable<Contact> Referencedcontact_customer_contacts {
            get {
                return GetRelatedEntities<Contact>("contact_customer_contacts", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("contact_customer_contacts", EntityRole.Referenced, value);
            }
        }
        
        [RelationshipSchemaName("contact_master_contact", EntityRole.Referenced)]
        public IEnumerable<Contact> Referencedcontact_master_contact {
            get {
                return GetRelatedEntities<Contact>("contact_master_contact", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("contact_master_contact", EntityRole.Referenced, value);
            }
        }
        
        [AttributeLogicalName("parentcustomerid")]
        [RelationshipSchemaName("contact_customer_contacts", EntityRole.Referencing)]
        public Contact Referencingcontact_customer_contacts {
            get {
                return GetRelatedEntity<Contact>("contact_customer_contacts", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("contact_customer_contacts", EntityRole.Referencing, value);
            }
        }
        
        [AttributeLogicalName("masterid")]
        [RelationshipSchemaName("contact_master_contact", EntityRole.Referencing)]
        public Contact Referencingcontact_master_contact {
            get {
                return GetRelatedEntity<Contact>("contact_master_contact", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("contact_master_contact", EntityRole.Referencing, value);
            }
        }
        
        [RelationshipSchemaName("SourceContact_BulkOperationLogs")]
        public IEnumerable<BulkOperationLog> SourceContact_BulkOperationLogs {
            get {
                return GetRelatedEntities<BulkOperationLog>("SourceContact_BulkOperationLogs", null);
            }
            set {
                SetRelatedEntities("SourceContact_BulkOperationLogs", null, value);
            }
        }
        
        [RelationshipSchemaName("account_primary_contact")]
        public IEnumerable<Account> account_primary_contact {
            get {
                return GetRelatedEntities<Account>("account_primary_contact", null);
            }
            set {
                SetRelatedEntities("account_primary_contact", null, value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_contacts")]
        public BusinessUnit business_unit_contacts {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_contacts", null);
            }
            set {
                SetRelatedEntity("business_unit_contacts", null, value);
            }
        }
        
        [RelationshipSchemaName("contact_CampaignResponses")]
        public IEnumerable<CampaignResponse> contact_CampaignResponses {
            get {
                return GetRelatedEntities<CampaignResponse>("contact_CampaignResponses", null);
            }
            set {
                SetRelatedEntities("contact_CampaignResponses", null, value);
            }
        }
        
        [RelationshipSchemaName("contact_SharePointDocumentLocations")]
        public IEnumerable<SharePointDocumentLocation> contact_SharePointDocumentLocations {
            get {
                return GetRelatedEntities<SharePointDocumentLocation>("contact_SharePointDocumentLocations", null);
            }
            set {
                SetRelatedEntities("contact_SharePointDocumentLocations", null, value);
            }
        }
        
        [RelationshipSchemaName("contact_activity_parties")]
        public IEnumerable<ActivityParty> contact_activity_parties {
            get {
                return GetRelatedEntities<ActivityParty>("contact_activity_parties", null);
            }
            set {
                SetRelatedEntities("contact_activity_parties", null, value);
            }
        }
        
        [RelationshipSchemaName("contact_as_primary_contact")]
        public IEnumerable<Incident> contact_as_primary_contact {
            get {
                return GetRelatedEntities<Incident>("contact_as_primary_contact", null);
            }
            set {
                SetRelatedEntities("contact_as_primary_contact", null, value);
            }
        }
        
        [RelationshipSchemaName("contact_as_responsible_contact")]
        public IEnumerable<Incident> contact_as_responsible_contact {
            get {
                return GetRelatedEntities<Incident>("contact_as_responsible_contact", null);
            }
            set {
                SetRelatedEntities("contact_as_responsible_contact", null, value);
            }
        }
        
        [RelationshipSchemaName("contact_bookableresource_ContactId")]
        public IEnumerable<BookableResource> contact_bookableresource_ContactId {
            get {
                return GetRelatedEntities<BookableResource>("contact_bookableresource_ContactId", null);
            }
            set {
                SetRelatedEntities("contact_bookableresource_ContactId", null, value);
            }
        }
        
        [RelationshipSchemaName("contact_connections1")]
        public IEnumerable<Connection> contact_connections1 {
            get {
                return GetRelatedEntities<Connection>("contact_connections1", null);
            }
            set {
                SetRelatedEntities("contact_connections1", null, value);
            }
        }
        
        [RelationshipSchemaName("contact_connections2")]
        public IEnumerable<Connection> contact_connections2 {
            get {
                return GetRelatedEntities<Connection>("contact_connections2", null);
            }
            set {
                SetRelatedEntities("contact_connections2", null, value);
            }
        }
        
        [AttributeLogicalName("parentcustomerid")]
        [RelationshipSchemaName("contact_customer_accounts")]
        public Account contact_customer_accounts {
            get {
                return GetRelatedEntity<Account>("contact_customer_accounts", null);
            }
            set {
                SetRelatedEntity("contact_customer_accounts", null, value);
            }
        }
        
        [RelationshipSchemaName("contact_entitlement_ContactId")]
        public IEnumerable<Entitlement> contact_entitlement_ContactId {
            get {
                return GetRelatedEntities<Entitlement>("contact_entitlement_ContactId", null);
            }
            set {
                SetRelatedEntities("contact_entitlement_ContactId", null, value);
            }
        }
        
        [RelationshipSchemaName("contact_entitlement_Customer")]
        public IEnumerable<Entitlement> contact_entitlement_Customer {
            get {
                return GetRelatedEntities<Entitlement>("contact_entitlement_Customer", null);
            }
            set {
                SetRelatedEntities("contact_entitlement_Customer", null, value);
            }
        }
        
        [AttributeLogicalName("originatingleadid")]
        [RelationshipSchemaName("contact_originating_lead")]
        public Lead contact_originating_lead {
            get {
                return GetRelatedEntity<Lead>("contact_originating_lead", null);
            }
            set {
                SetRelatedEntity("contact_originating_lead", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("contact_owning_user")]
        public SystemUser contact_owning_user {
            get {
                return GetRelatedEntity<SystemUser>("contact_owning_user", null);
            }
            set {
                SetRelatedEntity("contact_owning_user", null, value);
            }
        }
        
        [RelationshipSchemaName("contactinvoices_association")]
        public IEnumerable<Invoice> contactinvoices_association {
            get {
                return GetRelatedEntities<Invoice>("contactinvoices_association", null);
            }
            set {
                SetRelatedEntities("contactinvoices_association", null, value);
            }
        }
        
        [RelationshipSchemaName("contactleads_association")]
        public IEnumerable<Lead> contactleads_association {
            get {
                return GetRelatedEntities<Lead>("contactleads_association", null);
            }
            set {
                SetRelatedEntities("contactleads_association", null, value);
            }
        }
        
        [RelationshipSchemaName("contactorders_association")]
        public IEnumerable<SalesOrder> contactorders_association {
            get {
                return GetRelatedEntities<SalesOrder>("contactorders_association", null);
            }
            set {
                SetRelatedEntities("contactorders_association", null, value);
            }
        }
        
        [RelationshipSchemaName("contactquotes_association")]
        public IEnumerable<Quote> contactquotes_association {
            get {
                return GetRelatedEntities<Quote>("contactquotes_association", null);
            }
            set {
                SetRelatedEntities("contactquotes_association", null, value);
            }
        }
        
        [RelationshipSchemaName("contract_billingcustomer_contacts")]
        public IEnumerable<Contract> contract_billingcustomer_contacts {
            get {
                return GetRelatedEntities<Contract>("contract_billingcustomer_contacts", null);
            }
            set {
                SetRelatedEntities("contract_billingcustomer_contacts", null, value);
            }
        }
        
        [RelationshipSchemaName("contract_customer_contacts")]
        public IEnumerable<Contract> contract_customer_contacts {
            get {
                return GetRelatedEntities<Contract>("contract_customer_contacts", null);
            }
            set {
                SetRelatedEntities("contract_customer_contacts", null, value);
            }
        }
        
        [RelationshipSchemaName("dg_account_contact")]
        public IEnumerable<Account> dg_account_contact {
            get {
                return GetRelatedEntities<Account>("dg_account_contact", null);
            }
            set {
                SetRelatedEntities("dg_account_contact", null, value);
            }
        }
        
        [AttributeLogicalName("dg_testaccount")]
        [RelationshipSchemaName("dg_account_contact_TestAccount")]
        public Account dg_account_contact_TestAccount {
            get {
                return GetRelatedEntity<Account>("dg_account_contact_TestAccount", null);
            }
            set {
                SetRelatedEntity("dg_account_contact_TestAccount", null, value);
            }
        }
        
        [RelationshipSchemaName("dg_child_PrimaryContact_Contact")]
        public IEnumerable<dg_child> dg_child_PrimaryContact_Contact {
            get {
                return GetRelatedEntities<dg_child>("dg_child_PrimaryContact_Contact", null);
            }
            set {
                SetRelatedEntities("dg_child_PrimaryContact_Contact", null, value);
            }
        }
        
        [RelationshipSchemaName("dg_contact_dg_country")]
        public IEnumerable<dg_country> dg_contact_dg_country {
            get {
                return GetRelatedEntities<dg_country>("dg_contact_dg_country", null);
            }
            set {
                SetRelatedEntities("dg_contact_dg_country", null, value);
            }
        }
        
        [RelationshipSchemaName("entitlementcontacts_association")]
        public IEnumerable<Entitlement> entitlementcontacts_association {
            get {
                return GetRelatedEntities<Entitlement>("entitlementcontacts_association", null);
            }
            set {
                SetRelatedEntities("entitlementcontacts_association", null, value);
            }
        }
        
        [RelationshipSchemaName("incident_customer_contacts")]
        public IEnumerable<Incident> incident_customer_contacts {
            get {
                return GetRelatedEntities<Incident>("incident_customer_contacts", null);
            }
            set {
                SetRelatedEntities("incident_customer_contacts", null, value);
            }
        }
        
        [RelationshipSchemaName("invoice_customer_contacts")]
        public IEnumerable<Invoice> invoice_customer_contacts {
            get {
                return GetRelatedEntities<Invoice>("invoice_customer_contacts", null);
            }
            set {
                SetRelatedEntities("invoice_customer_contacts", null, value);
            }
        }
        
        [RelationshipSchemaName("lead_customer_contacts")]
        public IEnumerable<Lead> lead_customer_contacts {
            get {
                return GetRelatedEntities<Lead>("lead_customer_contacts", null);
            }
            set {
                SetRelatedEntities("lead_customer_contacts", null, value);
            }
        }
        
        [RelationshipSchemaName("lead_parent_contact")]
        public IEnumerable<Lead> lead_parent_contact {
            get {
                return GetRelatedEntities<Lead>("lead_parent_contact", null);
            }
            set {
                SetRelatedEntities("lead_parent_contact", null, value);
            }
        }
        
        [RelationshipSchemaName("listcontact_association")]
        public IEnumerable<List> listcontact_association {
            get {
                return GetRelatedEntities<List>("listcontact_association", null);
            }
            set {
                SetRelatedEntities("listcontact_association", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_contact_createdonbehalfby")]
        public SystemUser lk_contact_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_contact_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_contact_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_contact_modifiedonbehalfby")]
        public SystemUser lk_contact_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_contact_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_contact_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_contactbase_createdby")]
        public SystemUser lk_contactbase_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_contactbase_createdby", null);
            }
            set {
                SetRelatedEntity("lk_contactbase_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_contactbase_modifiedby")]
        public SystemUser lk_contactbase_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_contactbase_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_contactbase_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("slaid")]
        [RelationshipSchemaName("manualsla_contact")]
        public SLA manualsla_contact {
            get {
                return GetRelatedEntity<SLA>("manualsla_contact", null);
            }
            set {
                SetRelatedEntity("manualsla_contact", null, value);
            }
        }
        
        [RelationshipSchemaName("opportunity_customer_contacts")]
        public IEnumerable<Opportunity> opportunity_customer_contacts {
            get {
                return GetRelatedEntities<Opportunity>("opportunity_customer_contacts", null);
            }
            set {
                SetRelatedEntities("opportunity_customer_contacts", null, value);
            }
        }
        
        [RelationshipSchemaName("opportunity_parent_contact")]
        public IEnumerable<Opportunity> opportunity_parent_contact {
            get {
                return GetRelatedEntities<Opportunity>("opportunity_parent_contact", null);
            }
            set {
                SetRelatedEntities("opportunity_parent_contact", null, value);
            }
        }
        
        [RelationshipSchemaName("order_customer_contacts")]
        public IEnumerable<SalesOrder> order_customer_contacts {
            get {
                return GetRelatedEntities<SalesOrder>("order_customer_contacts", null);
            }
            set {
                SetRelatedEntities("order_customer_contacts", null, value);
            }
        }
        
        [RelationshipSchemaName("quote_customer_contacts")]
        public IEnumerable<Quote> quote_customer_contacts {
            get {
                return GetRelatedEntities<Quote>("quote_customer_contacts", null);
            }
            set {
                SetRelatedEntities("quote_customer_contacts", null, value);
            }
        }
        
        [RelationshipSchemaName("servicecontractcontacts_association")]
        public IEnumerable<Contract> servicecontractcontacts_association {
            get {
                return GetRelatedEntities<Contract>("servicecontractcontacts_association", null);
            }
            set {
                SetRelatedEntities("servicecontractcontacts_association", null, value);
            }
        }
        
        [AttributeLogicalName("slainvokedid")]
        [RelationshipSchemaName("sla_contact")]
        public SLA sla_contact {
            get {
                return GetRelatedEntity<SLA>("sla_contact", null);
            }
            set {
                SetRelatedEntity("sla_contact", null, value);
            }
        }
        
        [RelationshipSchemaName("socialactivity_postauthor_contacts")]
        public IEnumerable<SocialActivity> socialactivity_postauthor_contacts {
            get {
                return GetRelatedEntities<SocialActivity>("socialactivity_postauthor_contacts", null);
            }
            set {
                SetRelatedEntities("socialactivity_postauthor_contacts", null, value);
            }
        }
        
        [RelationshipSchemaName("socialactivity_postauthoraccount_contacts")]
        public IEnumerable<SocialActivity> socialactivity_postauthoraccount_contacts {
            get {
                return GetRelatedEntities<SocialActivity>("socialactivity_postauthoraccount_contacts", null);
            }
            set {
                SetRelatedEntities("socialactivity_postauthoraccount_contacts", null, value);
            }
        }
        
        [AttributeLogicalName("preferredsystemuserid")]
        [RelationshipSchemaName("system_user_contacts")]
        public SystemUser system_user_contacts {
            get {
                return GetRelatedEntity<SystemUser>("system_user_contacts", null);
            }
            set {
                SetRelatedEntity("system_user_contacts", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_contacts")]
        public Team team_contacts {
            get {
                return GetRelatedEntity<Team>("team_contacts", null);
            }
            set {
                SetRelatedEntity("team_contacts", null, value);
            }
        }
        
        [AttributeLogicalName("transactioncurrencyid")]
        [RelationshipSchemaName("transactioncurrency_contact")]
        public TransactionCurrency transactioncurrency_contact {
            get {
                return GetRelatedEntity<TransactionCurrency>("transactioncurrency_contact", null);
            }
            set {
                SetRelatedEntity("transactioncurrency_contact", null, value);
            }
        }
        
        public static Contact Retrieve(IOrganizationService service, Guid id, params Expression<Func<Contact,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Display Name: ContactInvoices</para>
    /// </summary>
    [EntityLogicalName("contactinvoices")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class ContactInvoices : ExtendedEntity<EmptyEnum, EmptyEnum> {
        
        public const string EntityLogicalName = "contactinvoices";
        
        public const string RelationshipSchemaName = "ContactInvoices";
        
        public const int EntityTypeCode = 17;
        
        public ContactInvoices() : 
                base(EntityLogicalName) {
        }
        
        public ContactInvoices(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("name");
            }
        }
        
        [AttributeLogicalName("contactinvoiceid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("contactinvoiceid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the invoices for the contact.</para>
        /// </summary>
        [AttributeLogicalName("contactinvoiceid")]
        public Guid? ContactInvoiceId {
            get {
                return GetAttributeValue<Guid?>("contactinvoiceid");
            }
            set {
                SetId("contactinvoiceid", value);
            }
        }
        
        [AttributeLogicalName("contactid")]
        public Guid? ContactId {
            get {
                return GetAttributeValue<Guid?>("contactid");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        [AttributeLogicalName("invoiceid")]
        public Guid? InvoiceId {
            get {
                return GetAttributeValue<Guid?>("invoiceid");
            }
        }
        
        /// <summary>
        /// <para>name</para>
        /// <para>Display Name: name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("name")]
        [MaxLength(100)]
        public string Name {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>name</para>
        /// <para>Display Name: name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("name")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        [RelationshipSchemaName("contactinvoices_Teams")]
        public IEnumerable<Team> contactinvoices_Teams {
            get {
                return GetRelatedEntities<Team>("contactinvoices_Teams", null);
            }
            set {
                SetRelatedEntities("contactinvoices_Teams", null, value);
            }
        }
        
        public static ContactInvoices Retrieve(IOrganizationService service, Guid id, params Expression<Func<ContactInvoices,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Display Name: ContactLeads</para>
    /// </summary>
    [EntityLogicalName("contactleads")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class ContactLeads : ExtendedEntity<EmptyEnum, EmptyEnum> {
        
        public const string EntityLogicalName = "contactleads";
        
        public const string RelationshipSchemaName = "ContactLeads";
        
        public const int EntityTypeCode = 22;
        
        public ContactLeads() : 
                base(EntityLogicalName) {
        }
        
        public ContactLeads(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("name");
            }
        }
        
        [AttributeLogicalName("contactleadid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("contactleadid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the leads for the contact.</para>
        /// </summary>
        [AttributeLogicalName("contactleadid")]
        public Guid? ContactLeadId {
            get {
                return GetAttributeValue<Guid?>("contactleadid");
            }
            set {
                SetId("contactleadid", value);
            }
        }
        
        [AttributeLogicalName("contactid")]
        public Guid? ContactId {
            get {
                return GetAttributeValue<Guid?>("contactid");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        [AttributeLogicalName("leadid")]
        public Guid? LeadId {
            get {
                return GetAttributeValue<Guid?>("leadid");
            }
        }
        
        /// <summary>
        /// <para>name</para>
        /// <para>Display Name: name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("name")]
        [MaxLength(100)]
        public string Name {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>name</para>
        /// <para>Display Name: name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("name")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        [RelationshipSchemaName("contactleads_Teams")]
        public IEnumerable<Team> contactleads_Teams {
            get {
                return GetRelatedEntities<Team>("contactleads_Teams", null);
            }
            set {
                SetRelatedEntities("contactleads_Teams", null, value);
            }
        }
        
        public static ContactLeads Retrieve(IOrganizationService service, Guid id, params Expression<Func<ContactLeads,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Display Name: ContactOrders</para>
    /// </summary>
    [EntityLogicalName("contactorders")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class ContactOrders : ExtendedEntity<EmptyEnum, EmptyEnum> {
        
        public const string EntityLogicalName = "contactorders";
        
        public const string RelationshipSchemaName = "ContactOrders";
        
        public const int EntityTypeCode = 19;
        
        public ContactOrders() : 
                base(EntityLogicalName) {
        }
        
        public ContactOrders(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("name");
            }
        }
        
        [AttributeLogicalName("contactorderid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("contactorderid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the orders for the contact.</para>
        /// </summary>
        [AttributeLogicalName("contactorderid")]
        public Guid? ContactOrderId {
            get {
                return GetAttributeValue<Guid?>("contactorderid");
            }
            set {
                SetId("contactorderid", value);
            }
        }
        
        [AttributeLogicalName("contactid")]
        public Guid? ContactId {
            get {
                return GetAttributeValue<Guid?>("contactid");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>name</para>
        /// <para>Display Name: name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("name")]
        [MaxLength(100)]
        public string Name {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>name</para>
        /// <para>Display Name: name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("name")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        [AttributeLogicalName("salesorderid")]
        public Guid? SalesOrderId {
            get {
                return GetAttributeValue<Guid?>("salesorderid");
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        [RelationshipSchemaName("contactorders_Teams")]
        public IEnumerable<Team> contactorders_Teams {
            get {
                return GetRelatedEntities<Team>("contactorders_Teams", null);
            }
            set {
                SetRelatedEntities("contactorders_Teams", null, value);
            }
        }
        
        public static ContactOrders Retrieve(IOrganizationService service, Guid id, params Expression<Func<ContactOrders,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Display Name: ContactQuotes</para>
    /// </summary>
    [EntityLogicalName("contactquotes")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class ContactQuotes : ExtendedEntity<EmptyEnum, EmptyEnum> {
        
        public const string EntityLogicalName = "contactquotes";
        
        public const string RelationshipSchemaName = "ContactQuotes";
        
        public const int EntityTypeCode = 18;
        
        public ContactQuotes() : 
                base(EntityLogicalName) {
        }
        
        public ContactQuotes(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("name");
            }
        }
        
        [AttributeLogicalName("contactquoteid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("contactquoteid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the quotes for the contact.</para>
        /// </summary>
        [AttributeLogicalName("contactquoteid")]
        public Guid? ContactQuoteId {
            get {
                return GetAttributeValue<Guid?>("contactquoteid");
            }
            set {
                SetId("contactquoteid", value);
            }
        }
        
        [AttributeLogicalName("contactid")]
        public Guid? ContactId {
            get {
                return GetAttributeValue<Guid?>("contactid");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>name</para>
        /// <para>Display Name: name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("name")]
        [MaxLength(100)]
        public string Name {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>name</para>
        /// <para>Display Name: name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("name")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        [AttributeLogicalName("quoteid")]
        public Guid? QuoteId {
            get {
                return GetAttributeValue<Guid?>("quoteid");
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        [RelationshipSchemaName("contactquotes_Teams")]
        public IEnumerable<Team> contactquotes_Teams {
            get {
                return GetRelatedEntities<Team>("contactquotes_Teams", null);
            }
            set {
                SetRelatedEntities("contactquotes_Teams", null, value);
            }
        }
        
        public static ContactQuotes Retrieve(IOrganizationService service, Guid id, params Expression<Func<ContactQuotes,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Agreement to provide customer service during a specified amount of time or number of cases.</para>
    /// <para>Display Name: Contract</para>
    /// </summary>
    [EntityLogicalName("contract")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class Contract : ExtendedEntity<ContractState, Contract_StatusCode> {
        
        public const string EntityLogicalName = "contract";
        
        public const int EntityTypeCode = 1010;
        
        public Contract() : 
                base(EntityLogicalName) {
        }
        
        public Contract(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("title");
            }
        }
        
        [AttributeLogicalName("contractid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("contractid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the contract.</para>
        /// <para>Display Name: Contract</para>
        /// </summary>
        [AttributeLogicalName("contractid")]
        [DisplayName("Contract")]
        public Guid? ContractId {
            get {
                return GetAttributeValue<Guid?>("contractid");
            }
            set {
                SetId("contractid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the account with which the contract is associated.</para>
        /// <para>Display Name: Account</para>
        /// </summary>
        [AttributeLogicalName("accountid")]
        [DisplayName("Account")]
        public EntityReference AccountId {
            get {
                return GetAttributeValue<EntityReference>("accountid");
            }
        }
        
        /// <summary>
        /// <para>Enter the date when the contract becomes active.</para>
        /// <para>Display Name: Contract Start Date</para>
        /// </summary>
        [AttributeLogicalName("activeon")]
        [DisplayName("Contract Start Date")]
        public DateTime? ActiveOn {
            get {
                return GetAttributeValue<DateTime?>("activeon");
            }
            set {
                SetAttributeValue("activeon", value);
            }
        }
        
        /// <summary>
        /// <para>Type of allotment that the contract supports.</para>
        /// <para>Display Name: Allotment Type</para>
        /// </summary>
        [AttributeLogicalName("allotmenttypecode")]
        [DisplayName("Allotment Type")]
        public Contract_AllotmentTypeCode? AllotmentTypeCode {
            get {
                return GetOptionSetValue<Contract_AllotmentTypeCode>("allotmenttypecode");
            }
            set {
                SetOptionSetValue("allotmenttypecode", value);
            }
        }
        
        /// <summary>
        /// <para>customer_address_contracts_as_billing_address</para>
        /// <para>Display Name: Bill To Address</para>
        /// </summary>
        [AttributeLogicalName("billtoaddress")]
        [DisplayName("Bill To Address")]
        public EntityReference BillToAddress {
            get {
                return GetAttributeValue<EntityReference>("billtoaddress");
            }
            set {
                SetAttributeValue("billtoaddress", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the account to which the contract is to be billed.</para>
        /// <para>Display Name: Billing Account</para>
        /// </summary>
        [AttributeLogicalName("billingaccountid")]
        [DisplayName("Billing Account")]
        public EntityReference BillingAccountId {
            get {
                return GetAttributeValue<EntityReference>("billingaccountid");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the contact to whom the contract is to be billed.</para>
        /// <para>Display Name: Billing Contact</para>
        /// </summary>
        [AttributeLogicalName("billingcontactid")]
        [DisplayName("Billing Contact")]
        public EntityReference BillingContactId {
            get {
                return GetAttributeValue<EntityReference>("billingcontactid");
            }
        }
        
        /// <summary>
        /// <para>contract_billingcustomer_contacts</para>
        /// <para>Display Name: Bill To Customer</para>
        /// </summary>
        [AttributeLogicalName("billingcustomerid")]
        [DisplayName("Bill To Customer")]
        public EntityReference BillingCustomerId {
            get {
                return GetAttributeValue<EntityReference>("billingcustomerid");
            }
            set {
                SetAttributeValue("billingcustomerid", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the end date for the contract's billing period to indicate the period for which the customer must pay for a service.</para>
        /// <para>Display Name: Billing End Date</para>
        /// </summary>
        [AttributeLogicalName("billingendon")]
        [DisplayName("Billing End Date")]
        public DateTime? BillingEndOn {
            get {
                return GetAttributeValue<DateTime?>("billingendon");
            }
            set {
                SetAttributeValue("billingendon", value);
            }
        }
        
        /// <summary>
        /// <para>Select the billing schedule of the contract to indicate how often the customer should be invoiced.</para>
        /// <para>Display Name: Billing Frequency</para>
        /// </summary>
        [AttributeLogicalName("billingfrequencycode")]
        [DisplayName("Billing Frequency")]
        public Contract_BillingFrequencyCode? BillingFrequencyCode {
            get {
                return GetOptionSetValue<Contract_BillingFrequencyCode>("billingfrequencycode");
            }
            set {
                SetOptionSetValue("billingfrequencycode", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the start date for the contract's billing period to indicate the period for which the customer must pay for a service. This defaults to the same date that is selected in the Contract Start Date field.</para>
        /// <para>Display Name: Billing Start Date</para>
        /// </summary>
        [AttributeLogicalName("billingstarton")]
        [DisplayName("Billing Start Date")]
        public DateTime? BillingStartOn {
            get {
                return GetAttributeValue<DateTime?>("billingstarton");
            }
            set {
                SetAttributeValue("billingstarton", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the contract was canceled.</para>
        /// <para>Display Name: Cancellation Date</para>
        /// </summary>
        [AttributeLogicalName("cancelon")]
        [DisplayName("Cancellation Date")]
        public DateTime? CancelOn {
            get {
                return GetAttributeValue<DateTime?>("cancelon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the contact specified for the contract.</para>
        /// <para>Display Name: Contact</para>
        /// </summary>
        [AttributeLogicalName("contactid")]
        [DisplayName("Contact")]
        public EntityReference ContactId {
            get {
                return GetAttributeValue<EntityReference>("contactid");
            }
        }
        
        /// <summary>
        /// <para>Type additional information about the contract, such as the products or services provided to the customer.</para>
        /// <para>Display Name: Description</para>
        /// </summary>
        [AttributeLogicalName("contractlanguage")]
        [DisplayName("Description")]
        public string ContractLanguage {
            get {
                return GetAttributeValue<string>("contractlanguage");
            }
            set {
                SetAttributeValue("contractlanguage", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the number for the contract for customer reference and searching capabilities. You cannot modify this number.</para>
        /// <para>Display Name: Contract ID</para>
        /// </summary>
        [AttributeLogicalName("contractnumber")]
        [DisplayName("Contract ID")]
        [MaxLength(100)]
        public string ContractNumber {
            get {
                return GetAttributeValue<string>("contractnumber");
            }
            set {
                SetAttributeValue("contractnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Select the level of service that should be provided for the contract based on your company's definition of bronze, silver, or gold.</para>
        /// <para>Display Name: Service Level</para>
        /// </summary>
        [AttributeLogicalName("contractservicelevelcode")]
        [DisplayName("Service Level")]
        public Contract_ContractServiceLevelCode? ContractServiceLevelCode {
            get {
                return GetOptionSetValue<Contract_ContractServiceLevelCode>("contractservicelevelcode");
            }
            set {
                SetOptionSetValue("contractservicelevelcode", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the abbreviation of the contract template selected when the contract is created.</para>
        /// <para>Display Name: Template Abbreviation</para>
        /// </summary>
        [AttributeLogicalName("contracttemplateabbreviation")]
        [DisplayName("Template Abbreviation")]
        [MaxLength(20)]
        public string ContractTemplateAbbreviation {
            get {
                return GetAttributeValue<string>("contracttemplateabbreviation");
            }
        }
        
        /// <summary>
        /// <para>contract_template_contracts</para>
        /// <para>Display Name: Contract Template</para>
        /// </summary>
        [AttributeLogicalName("contracttemplateid")]
        [DisplayName("Contract Template")]
        public EntityReference ContractTemplateId {
            get {
                return GetAttributeValue<EntityReference>("contracttemplateid");
            }
            set {
                SetAttributeValue("contracttemplateid", value);
            }
        }
        
        /// <summary>
        /// <para>lk_contractbase_createdby</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics CRM options.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>lk_contract_createdonbehalfby</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>contract_customer_contacts</para>
        /// <para>Display Name: Customer</para>
        /// </summary>
        [AttributeLogicalName("customerid")]
        [DisplayName("Customer")]
        public EntityReference CustomerId {
            get {
                return GetAttributeValue<EntityReference>("customerid");
            }
            set {
                SetAttributeValue("customerid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows for the duration of the contract, in days, based on the contract start and end dates.</para>
        /// <para>Display Name: Duration</para>
        /// </summary>
        [AttributeLogicalName("duration")]
        [DisplayName("Duration")]
        [Range(0, 2147483647)]
        public int? Duration {
            get {
                return GetAttributeValue<int?>("duration");
            }
        }
        
        /// <summary>
        /// <para>Days of the week and times during which customer service support is available for the duration of the contract.</para>
        /// <para>Display Name: Support Calendar</para>
        /// </summary>
        [AttributeLogicalName("effectivitycalendar")]
        [DisplayName("Support Calendar")]
        [MaxLength(168)]
        public string EffectivityCalendar {
            get {
                return GetAttributeValue<string>("effectivitycalendar");
            }
            set {
                SetAttributeValue("effectivitycalendar", value);
            }
        }
        
        /// <summary>
        /// <para>The primary email address for the entity.</para>
        /// <para>Display Name: Email Address</para>
        /// </summary>
        [AttributeLogicalName("emailaddress")]
        [DisplayName("Email Address")]
        [MaxLength(100)]
        public string EmailAddress {
            get {
                return GetAttributeValue<string>("emailaddress");
            }
            set {
                SetAttributeValue("emailaddress", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Entity Image Id</para>
        /// </summary>
        [AttributeLogicalName("entityimageid")]
        [DisplayName("Entity Image Id")]
        public Guid? EntityImageId {
            get {
                return GetAttributeValue<Guid?>("entityimageid");
            }
        }
        
        /// <summary>
        /// <para>Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("Exchange Rate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Enter the date when the contract expires.</para>
        /// <para>Display Name: Contract End Date</para>
        /// </summary>
        [AttributeLogicalName("expireson")]
        [DisplayName("Contract End Date")]
        public DateTime? ExpiresOn {
            get {
                return GetAttributeValue<DateTime?>("expireson");
            }
            set {
                SetAttributeValue("expireson", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the data import or data migration that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>lk_contractbase_modifiedby</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics CRM options.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>lk_contract_modifiedonbehalfby</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Shows the total charge to the customer for the service contract, calculated as the sum of values in the Net field for each existing contract line related to the contract.</para>
        /// <para>Display Name: Net Price</para>
        /// </summary>
        [AttributeLogicalName("netprice")]
        [DisplayName("Net Price")]
        public decimal? NetPrice {
            get {
                return GetMoneyValue("netprice");
            }
        }
        
        /// <summary>
        /// <para>Shows the Net Price field converted to the system's default base currency for reporting purposes. The calculations use the exchange rate specified in the Currencies area.</para>
        /// <para>Display Name: Net Price (Base)</para>
        /// </summary>
        [AttributeLogicalName("netprice_base")]
        [DisplayName("Net Price (Base)")]
        public decimal? NetPrice_Base {
            get {
                return GetMoneyValue("netprice_base");
            }
        }
        
        /// <summary>
        /// <para>contract_originating_contract</para>
        /// <para>Display Name: Originating Contract</para>
        /// </summary>
        [AttributeLogicalName("originatingcontract")]
        [DisplayName("Originating Contract")]
        public EntityReference OriginatingContract {
            get {
                return GetAttributeValue<EntityReference>("originatingcontract");
            }
            set {
                SetAttributeValue("originatingcontract", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>owner_contracts</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>business_unit_service_contracts</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>team_service_contracts</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>system_user_service_contracts</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Type a title or name for the contract that indicates the purpose of the contract.</para>
        /// <para>Display Name: Contract Name</para>
        /// </summary>
        [AttributeLogicalName("title")]
        [DisplayName("Contract Name")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("title");
            }
            set {
                SetAttributeValue("title", value);
            }
        }
        
        /// <summary>
        /// <para>customer_address_contracts_as_service_address</para>
        /// <para>Display Name: Contract Address</para>
        /// </summary>
        [AttributeLogicalName("serviceaddress")]
        [DisplayName("Contract Address")]
        public EntityReference ServiceAddress {
            get {
                return GetAttributeValue<EntityReference>("serviceaddress");
            }
            set {
                SetAttributeValue("serviceaddress", value);
            }
        }
        
        /// <summary>
        /// <para>Shows whether the contract is in draft, invoiced, active, on hold, canceled, or expired. You can edit only the contracts that are in draft status.</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public ContractState? StateCode {
            get {
                return GetOptionSetValue<ContractState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the contract's status.</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public Contract_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<Contract_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Type a title or name for the contract that indicates the purpose of the contract.</para>
        /// <para>Display Name: Contract Name</para>
        /// </summary>
        [AttributeLogicalName("title")]
        [DisplayName("Contract Name")]
        [MaxLength(100)]
        public string Title {
            get {
                return GetAttributeValue<string>("title");
            }
            set {
                SetAttributeValue("title", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the total discount applied to the contract's service charges, calculated as the sum of values in the Discount fields for each existing contract line related to the contract.</para>
        /// <para>Display Name: Total Discount</para>
        /// </summary>
        [AttributeLogicalName("totaldiscount")]
        [DisplayName("Total Discount")]
        public decimal? TotalDiscount {
            get {
                return GetMoneyValue("totaldiscount");
            }
        }
        
        /// <summary>
        /// <para>Shows the Total Discount field converted to the system's default base currency for reporting purposes. The calculations use the exchange rate specified in the Currencies area.</para>
        /// <para>Display Name: Total Discount (Base)</para>
        /// </summary>
        [AttributeLogicalName("totaldiscount_base")]
        [DisplayName("Total Discount (Base)")]
        public decimal? TotalDiscount_Base {
            get {
                return GetMoneyValue("totaldiscount_base");
            }
        }
        
        /// <summary>
        /// <para>Shows the total service charge for the contract, before any discounts are credited. This is calculated as the sum of values in the Total Price field for each existing contract line related to the contract.</para>
        /// <para>Display Name: Total Price</para>
        /// </summary>
        [AttributeLogicalName("totalprice")]
        [DisplayName("Total Price")]
        public decimal? TotalPrice {
            get {
                return GetMoneyValue("totalprice");
            }
        }
        
        /// <summary>
        /// <para>Shows the Total Price field converted to the system's default base currency for reporting purposes. The calculations use the exchange rate specified in the Currencies area.</para>
        /// <para>Display Name: Total Price (Base)</para>
        /// </summary>
        [AttributeLogicalName("totalprice_base")]
        [DisplayName("Total Price (Base)")]
        public decimal? TotalPrice_Base {
            get {
                return GetMoneyValue("totalprice_base");
            }
        }
        
        /// <summary>
        /// <para>transactioncurrency_contract</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the discounts entered on contract lines for this contract should be entered as a percentage or a fixed dollar value.</para>
        /// <para>Display Name: Discount</para>
        /// </summary>
        [AttributeLogicalName("usediscountaspercentage")]
        [DisplayName("Discount")]
        public bool? UseDiscountAsPercentage {
            get {
                return GetAttributeValue<bool?>("usediscountaspercentage");
            }
            set {
                SetAttributeValue("usediscountaspercentage", value);
            }
        }
        
        /// <summary>
        /// <para>Version number of the contract.</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        [RelationshipSchemaName("Contract_ActivityPointers")]
        public IEnumerable<ActivityPointer> Contract_ActivityPointers {
            get {
                return GetRelatedEntities<ActivityPointer>("Contract_ActivityPointers", null);
            }
            set {
                SetRelatedEntities("Contract_ActivityPointers", null, value);
            }
        }
        
        [RelationshipSchemaName("Contract_Appointments")]
        public IEnumerable<Appointment> Contract_Appointments {
            get {
                return GetRelatedEntities<Appointment>("Contract_Appointments", null);
            }
            set {
                SetRelatedEntities("Contract_Appointments", null, value);
            }
        }
        
        [RelationshipSchemaName("Contract_Emails")]
        public IEnumerable<Email> Contract_Emails {
            get {
                return GetRelatedEntities<Email>("Contract_Emails", null);
            }
            set {
                SetRelatedEntities("Contract_Emails", null, value);
            }
        }
        
        [RelationshipSchemaName("Contract_Faxes")]
        public IEnumerable<Fax> Contract_Faxes {
            get {
                return GetRelatedEntities<Fax>("Contract_Faxes", null);
            }
            set {
                SetRelatedEntities("Contract_Faxes", null, value);
            }
        }
        
        [RelationshipSchemaName("Contract_Letters")]
        public IEnumerable<Letter> Contract_Letters {
            get {
                return GetRelatedEntities<Letter>("Contract_Letters", null);
            }
            set {
                SetRelatedEntities("Contract_Letters", null, value);
            }
        }
        
        [RelationshipSchemaName("Contract_Phonecalls")]
        public IEnumerable<PhoneCall> Contract_Phonecalls {
            get {
                return GetRelatedEntities<PhoneCall>("Contract_Phonecalls", null);
            }
            set {
                SetRelatedEntities("Contract_Phonecalls", null, value);
            }
        }
        
        [RelationshipSchemaName("Contract_RecurringAppointmentMasters")]
        public IEnumerable<RecurringAppointmentMaster> Contract_RecurringAppointmentMasters {
            get {
                return GetRelatedEntities<RecurringAppointmentMaster>("Contract_RecurringAppointmentMasters", null);
            }
            set {
                SetRelatedEntities("Contract_RecurringAppointmentMasters", null, value);
            }
        }
        
        [RelationshipSchemaName("Contract_ServiceAppointments")]
        public IEnumerable<ServiceAppointment> Contract_ServiceAppointments {
            get {
                return GetRelatedEntities<ServiceAppointment>("Contract_ServiceAppointments", null);
            }
            set {
                SetRelatedEntities("Contract_ServiceAppointments", null, value);
            }
        }
        
        [RelationshipSchemaName("Contract_SocialActivities")]
        public IEnumerable<SocialActivity> Contract_SocialActivities {
            get {
                return GetRelatedEntities<SocialActivity>("Contract_SocialActivities", null);
            }
            set {
                SetRelatedEntities("Contract_SocialActivities", null, value);
            }
        }
        
        [RelationshipSchemaName("Contract_SyncErrors")]
        public IEnumerable<SyncError> Contract_SyncErrors {
            get {
                return GetRelatedEntities<SyncError>("Contract_SyncErrors", null);
            }
            set {
                SetRelatedEntities("Contract_SyncErrors", null, value);
            }
        }
        
        [RelationshipSchemaName("Contract_Tasks")]
        public IEnumerable<Task> Contract_Tasks {
            get {
                return GetRelatedEntities<Task>("Contract_Tasks", null);
            }
            set {
                SetRelatedEntities("Contract_Tasks", null, value);
            }
        }
        
        [RelationshipSchemaName("contract_originating_contract", EntityRole.Referenced)]
        public IEnumerable<Contract> Referencedcontract_originating_contract {
            get {
                return GetRelatedEntities<Contract>("contract_originating_contract", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("contract_originating_contract", EntityRole.Referenced, value);
            }
        }
        
        [AttributeLogicalName("originatingcontract")]
        [RelationshipSchemaName("contract_originating_contract", EntityRole.Referencing)]
        public Contract Referencingcontract_originating_contract {
            get {
                return GetRelatedEntity<Contract>("contract_originating_contract", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("contract_originating_contract", EntityRole.Referencing, value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_service_contracts")]
        public BusinessUnit business_unit_service_contracts {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_service_contracts", null);
            }
            set {
                SetRelatedEntity("business_unit_service_contracts", null, value);
            }
        }
        
        [RelationshipSchemaName("contract_Teams")]
        public IEnumerable<Team> contract_Teams {
            get {
                return GetRelatedEntities<Team>("contract_Teams", null);
            }
            set {
                SetRelatedEntities("contract_Teams", null, value);
            }
        }
        
        [RelationshipSchemaName("contract_activity_parties")]
        public IEnumerable<ActivityParty> contract_activity_parties {
            get {
                return GetRelatedEntities<ActivityParty>("contract_activity_parties", null);
            }
            set {
                SetRelatedEntities("contract_activity_parties", null, value);
            }
        }
        
        [AttributeLogicalName("billingcustomerid")]
        [RelationshipSchemaName("contract_billingcustomer_accounts")]
        public Account contract_billingcustomer_accounts {
            get {
                return GetRelatedEntity<Account>("contract_billingcustomer_accounts", null);
            }
            set {
                SetRelatedEntity("contract_billingcustomer_accounts", null, value);
            }
        }
        
        [AttributeLogicalName("billingcustomerid")]
        [RelationshipSchemaName("contract_billingcustomer_contacts")]
        public Contact contract_billingcustomer_contacts {
            get {
                return GetRelatedEntity<Contact>("contract_billingcustomer_contacts", null);
            }
            set {
                SetRelatedEntity("contract_billingcustomer_contacts", null, value);
            }
        }
        
        [RelationshipSchemaName("contract_cases")]
        public IEnumerable<Incident> contract_cases {
            get {
                return GetRelatedEntities<Incident>("contract_cases", null);
            }
            set {
                SetRelatedEntities("contract_cases", null, value);
            }
        }
        
        [RelationshipSchemaName("contract_connections1")]
        public IEnumerable<Connection> contract_connections1 {
            get {
                return GetRelatedEntities<Connection>("contract_connections1", null);
            }
            set {
                SetRelatedEntities("contract_connections1", null, value);
            }
        }
        
        [RelationshipSchemaName("contract_connections2")]
        public IEnumerable<Connection> contract_connections2 {
            get {
                return GetRelatedEntities<Connection>("contract_connections2", null);
            }
            set {
                SetRelatedEntities("contract_connections2", null, value);
            }
        }
        
        [AttributeLogicalName("customerid")]
        [RelationshipSchemaName("contract_customer_accounts")]
        public Account contract_customer_accounts {
            get {
                return GetRelatedEntity<Account>("contract_customer_accounts", null);
            }
            set {
                SetRelatedEntity("contract_customer_accounts", null, value);
            }
        }
        
        [AttributeLogicalName("customerid")]
        [RelationshipSchemaName("contract_customer_contacts")]
        public Contact contract_customer_contacts {
            get {
                return GetRelatedEntity<Contact>("contract_customer_contacts", null);
            }
            set {
                SetRelatedEntity("contract_customer_contacts", null, value);
            }
        }
        
        [AttributeLogicalName("billtoaddress")]
        [RelationshipSchemaName("customer_address_contracts_as_billing_address")]
        public CustomerAddress customer_address_contracts_as_billing_address {
            get {
                return GetRelatedEntity<CustomerAddress>("customer_address_contracts_as_billing_address", null);
            }
            set {
                SetRelatedEntity("customer_address_contracts_as_billing_address", null, value);
            }
        }
        
        [AttributeLogicalName("serviceaddress")]
        [RelationshipSchemaName("customer_address_contracts_as_service_address")]
        public CustomerAddress customer_address_contracts_as_service_address {
            get {
                return GetRelatedEntity<CustomerAddress>("customer_address_contracts_as_service_address", null);
            }
            set {
                SetRelatedEntity("customer_address_contracts_as_service_address", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_contract_createdonbehalfby")]
        public SystemUser lk_contract_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_contract_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_contract_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_contract_modifiedonbehalfby")]
        public SystemUser lk_contract_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_contract_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_contract_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_contractbase_createdby")]
        public SystemUser lk_contractbase_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_contractbase_createdby", null);
            }
            set {
                SetRelatedEntity("lk_contractbase_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_contractbase_modifiedby")]
        public SystemUser lk_contractbase_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_contractbase_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_contractbase_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("servicecontractcontacts_association")]
        public IEnumerable<Contact> servicecontractcontacts_association {
            get {
                return GetRelatedEntities<Contact>("servicecontractcontacts_association", null);
            }
            set {
                SetRelatedEntities("servicecontractcontacts_association", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("system_user_service_contracts")]
        public SystemUser system_user_service_contracts {
            get {
                return GetRelatedEntity<SystemUser>("system_user_service_contracts", null);
            }
            set {
                SetRelatedEntity("system_user_service_contracts", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_service_contracts")]
        public Team team_service_contracts {
            get {
                return GetRelatedEntity<Team>("team_service_contracts", null);
            }
            set {
                SetRelatedEntity("team_service_contracts", null, value);
            }
        }
        
        [AttributeLogicalName("transactioncurrencyid")]
        [RelationshipSchemaName("transactioncurrency_contract")]
        public TransactionCurrency transactioncurrency_contract {
            get {
                return GetRelatedEntity<TransactionCurrency>("transactioncurrency_contract", null);
            }
            set {
                SetRelatedEntity("transactioncurrency_contract", null, value);
            }
        }
        
        public static Contract Retrieve(IOrganizationService service, Guid id, params Expression<Func<Contract,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Address and shipping information. Used to store additional addresses for an account or contact.</para>
    /// <para>Display Name: Address</para>
    /// </summary>
    [EntityLogicalName("customeraddress")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class CustomerAddress : ExtendedEntity<EmptyEnum, EmptyEnum> {
        
        public const string EntityLogicalName = "customeraddress";
        
        public const int EntityTypeCode = 1071;
        
        public CustomerAddress() : 
                base(EntityLogicalName) {
        }
        
        public CustomerAddress(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("name");
            }
        }
        
        [AttributeLogicalName("customeraddressid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("customeraddressid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the customer address.</para>
        /// <para>Display Name: Address</para>
        /// </summary>
        [AttributeLogicalName("customeraddressid")]
        [DisplayName("Address")]
        public Guid? CustomerAddressId {
            get {
                return GetAttributeValue<Guid?>("customeraddressid");
            }
            set {
                SetId("customeraddressid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the number of the address, to indicate whether the address is the primary, secondary, or other address for the customer.</para>
        /// <para>Display Name: Address Number</para>
        /// </summary>
        [AttributeLogicalName("addressnumber")]
        [DisplayName("Address Number")]
        [Range(0, 1000000000)]
        public int? AddressNumber {
            get {
                return GetAttributeValue<int?>("addressnumber");
            }
            set {
                SetAttributeValue("addressnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Select the address type, such as primary or billing.</para>
        /// <para>Display Name: Address Type</para>
        /// </summary>
        [AttributeLogicalName("addresstypecode")]
        [DisplayName("Address Type")]
        public CustomerAddress_AddressTypeCode? AddressTypeCode {
            get {
                return GetOptionSetValue<CustomerAddress_AddressTypeCode>("addresstypecode");
            }
            set {
                SetOptionSetValue("addresstypecode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the city for the customer's address to help identify the location.</para>
        /// <para>Display Name: City</para>
        /// </summary>
        [AttributeLogicalName("city")]
        [DisplayName("City")]
        [MaxLength(80)]
        public string City {
            get {
                return GetAttributeValue<string>("city");
            }
            set {
                SetAttributeValue("city", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the complete address.</para>
        /// <para>Display Name: Address</para>
        /// </summary>
        [AttributeLogicalName("composite")]
        [DisplayName("Address")]
        public string Composite {
            get {
                return GetAttributeValue<string>("composite");
            }
        }
        
        /// <summary>
        /// <para>Type the country or region for the customer's address.</para>
        /// <para>Display Name: Country/Region</para>
        /// </summary>
        [AttributeLogicalName("country")]
        [DisplayName("Country/Region")]
        [MaxLength(80)]
        public string Country {
            get {
                return GetAttributeValue<string>("country");
            }
            set {
                SetAttributeValue("country", value);
            }
        }
        
        /// <summary>
        /// <para>Type the county for the customer's address.</para>
        /// <para>Display Name: County</para>
        /// </summary>
        [AttributeLogicalName("county")]
        [DisplayName("County")]
        [MaxLength(50)]
        public string County {
            get {
                return GetAttributeValue<string>("county");
            }
            set {
                SetAttributeValue("county", value);
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record on behalf of another user.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("Exchange Rate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Type the fax number associated with the customer's address.</para>
        /// <para>Display Name: Fax</para>
        /// </summary>
        [AttributeLogicalName("fax")]
        [DisplayName("Fax")]
        [MaxLength(50)]
        public string Fax {
            get {
                return GetAttributeValue<string>("fax");
            }
            set {
                SetAttributeValue("fax", value);
            }
        }
        
        /// <summary>
        /// <para>Select the freight terms to make sure shipping charges are processed correctly.</para>
        /// <para>Display Name: Freight Terms</para>
        /// </summary>
        [AttributeLogicalName("freighttermscode")]
        [DisplayName("Freight Terms")]
        public CustomerAddress_FreightTermsCode? FreightTermsCode {
            get {
                return GetOptionSetValue<CustomerAddress_FreightTermsCode>("freighttermscode");
            }
            set {
                SetOptionSetValue("freighttermscode", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the data import or data migration that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Type the latitude value for the customer's address, for use in mapping and other applications.</para>
        /// <para>Display Name: Latitude</para>
        /// </summary>
        [AttributeLogicalName("latitude")]
        [DisplayName("Latitude")]
        public double? Latitude {
            get {
                return GetAttributeValue<double?>("latitude");
            }
            set {
                SetAttributeValue("latitude", value);
            }
        }
        
        /// <summary>
        /// <para>Type the first line of the customer's address to help identify the location.</para>
        /// <para>Display Name: Street 1</para>
        /// </summary>
        [AttributeLogicalName("line1")]
        [DisplayName("Street 1")]
        [MaxLength(250)]
        public string Line1 {
            get {
                return GetAttributeValue<string>("line1");
            }
            set {
                SetAttributeValue("line1", value);
            }
        }
        
        /// <summary>
        /// <para>Type the second line of the customer's address.</para>
        /// <para>Display Name: Street 2</para>
        /// </summary>
        [AttributeLogicalName("line2")]
        [DisplayName("Street 2")]
        [MaxLength(250)]
        public string Line2 {
            get {
                return GetAttributeValue<string>("line2");
            }
            set {
                SetAttributeValue("line2", value);
            }
        }
        
        /// <summary>
        /// <para>Type the third line of the customer's address.</para>
        /// <para>Display Name: Street 3</para>
        /// </summary>
        [AttributeLogicalName("line3")]
        [DisplayName("Street 3")]
        [MaxLength(250)]
        public string Line3 {
            get {
                return GetAttributeValue<string>("line3");
            }
            set {
                SetAttributeValue("line3", value);
            }
        }
        
        /// <summary>
        /// <para>Type the longitude value for the customer's address, for use in mapping and other applications.</para>
        /// <para>Display Name: Longitude</para>
        /// </summary>
        [AttributeLogicalName("longitude")]
        [DisplayName("Longitude")]
        public double? Longitude {
            get {
                return GetAttributeValue<double?>("longitude");
            }
            set {
                SetAttributeValue("longitude", value);
            }
        }
        
        /// <summary>
        /// <para>Shows who last updated the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Shows who last updated the record on behalf of another user.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Type a descriptive name for the customer's address, such as Corporate Headquarters.</para>
        /// <para>Display Name: Address Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Address Name")]
        [MaxLength(200)]
        public string Name {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the type code of the customer record to indicate whether the address belongs to a customer account or contact.</para>
        /// <para>Display Name: Object Type </para>
        /// </summary>
        [AttributeLogicalName("objecttypecode")]
        [DisplayName("Object Type ")]
        public string ObjectTypeCode {
            get {
                return GetAttributeValue<string>("objecttypecode");
            }
            set {
                SetAttributeValue("objecttypecode", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the user or team who is assigned to manage the record. This field is updated every time the record is assigned to a different user.</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
        }
        
        /// <summary>
        /// <para>Shows the business unit that the record owner belongs to.</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who owns the customer address.</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owner")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Choose the customer's address.</para>
        /// <para>Display Name: Parent</para>
        /// </summary>
        [AttributeLogicalName("parentid")]
        [DisplayName("Parent")]
        public EntityReference ParentId {
            get {
                return GetAttributeValue<EntityReference>("parentid");
            }
            set {
                SetAttributeValue("parentid", value);
            }
        }
        
        /// <summary>
        /// <para>Type the post office box number of the customer's address.</para>
        /// <para>Display Name: Post Office Box</para>
        /// </summary>
        [AttributeLogicalName("postofficebox")]
        [DisplayName("Post Office Box")]
        [MaxLength(20)]
        public string PostOfficeBox {
            get {
                return GetAttributeValue<string>("postofficebox");
            }
            set {
                SetAttributeValue("postofficebox", value);
            }
        }
        
        /// <summary>
        /// <para>Type the ZIP Code or postal code for the address.</para>
        /// <para>Display Name: ZIP/Postal Code</para>
        /// </summary>
        [AttributeLogicalName("postalcode")]
        [DisplayName("ZIP/Postal Code")]
        [MaxLength(20)]
        public string PostalCode {
            get {
                return GetAttributeValue<string>("postalcode");
            }
            set {
                SetAttributeValue("postalcode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the name of the primary contact person for the customer's address.</para>
        /// <para>Display Name: Address Contact</para>
        /// </summary>
        [AttributeLogicalName("primarycontactname")]
        [DisplayName("Address Contact")]
        [MaxLength(150)]
        public string PrimaryContactName {
            get {
                return GetAttributeValue<string>("primarycontactname");
            }
            set {
                SetAttributeValue("primarycontactname", value);
            }
        }
        
        /// <summary>
        /// <para>Type a descriptive name for the customer's address, such as Corporate Headquarters.</para>
        /// <para>Display Name: Address Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Address Name")]
        [MaxLength(200)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Select a shipping method for deliveries sent to this address.</para>
        /// <para>Display Name: Shipping Method</para>
        /// </summary>
        [AttributeLogicalName("shippingmethodcode")]
        [DisplayName("Shipping Method")]
        public CustomerAddress_ShippingMethodCode? ShippingMethodCode {
            get {
                return GetOptionSetValue<CustomerAddress_ShippingMethodCode>("shippingmethodcode");
            }
            set {
                SetOptionSetValue("shippingmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the state or province of the customer's address.</para>
        /// <para>Display Name: State/Province</para>
        /// </summary>
        [AttributeLogicalName("stateorprovince")]
        [DisplayName("State/Province")]
        [MaxLength(50)]
        public string StateOrProvince {
            get {
                return GetAttributeValue<string>("stateorprovince");
            }
            set {
                SetAttributeValue("stateorprovince", value);
            }
        }
        
        /// <summary>
        /// <para>Type the primary phone number for the customer's address.</para>
        /// <para>Display Name: Main Phone</para>
        /// </summary>
        [AttributeLogicalName("telephone1")]
        [DisplayName("Main Phone")]
        [MaxLength(50)]
        public string Telephone1 {
            get {
                return GetAttributeValue<string>("telephone1");
            }
            set {
                SetAttributeValue("telephone1", value);
            }
        }
        
        /// <summary>
        /// <para>Type a second phone number for the customer's address.</para>
        /// <para>Display Name: Phone 2</para>
        /// </summary>
        [AttributeLogicalName("telephone2")]
        [DisplayName("Phone 2")]
        [MaxLength(50)]
        public string Telephone2 {
            get {
                return GetAttributeValue<string>("telephone2");
            }
            set {
                SetAttributeValue("telephone2", value);
            }
        }
        
        /// <summary>
        /// <para>Type a third phone number for the customer's address.</para>
        /// <para>Display Name: Telephone 3</para>
        /// </summary>
        [AttributeLogicalName("telephone3")]
        [DisplayName("Telephone 3")]
        [MaxLength(50)]
        public string Telephone3 {
            get {
                return GetAttributeValue<string>("telephone3");
            }
            set {
                SetAttributeValue("telephone3", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the local currency for the record to make sure budgets are reported in the correct currency.</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>Type the UPS zone of the customer's address to make sure shipping charges are calculated correctly and deliveries are made promptly, if shipped by UPS.</para>
        /// <para>Display Name: UPS Zone</para>
        /// </summary>
        [AttributeLogicalName("upszone")]
        [DisplayName("UPS Zone")]
        [MaxLength(4)]
        public string UPSZone {
            get {
                return GetAttributeValue<string>("upszone");
            }
            set {
                SetAttributeValue("upszone", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the time zone for the address.</para>
        /// <para>Display Name: UTC Offset</para>
        /// </summary>
        [AttributeLogicalName("utcoffset")]
        [DisplayName("UTC Offset")]
        [Range(-1500, 1500)]
        public int? UTCOffset {
            get {
                return GetAttributeValue<int?>("utcoffset");
            }
            set {
                SetAttributeValue("utcoffset", value);
            }
        }
        
        /// <summary>
        /// <para>Version number of the customer address.</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        [AttributeLogicalName("parentid")]
        [RelationshipSchemaName("Account_CustomerAddress")]
        public Account Account_CustomerAddress {
            get {
                return GetRelatedEntity<Account>("Account_CustomerAddress", null);
            }
            set {
                SetRelatedEntity("Account_CustomerAddress", null, value);
            }
        }
        
        [AttributeLogicalName("parentid")]
        [RelationshipSchemaName("Contact_CustomerAddress")]
        public Contact Contact_CustomerAddress {
            get {
                return GetRelatedEntity<Contact>("Contact_CustomerAddress", null);
            }
            set {
                SetRelatedEntity("Contact_CustomerAddress", null, value);
            }
        }
        
        [RelationshipSchemaName("CustomerAddress_SyncErrors")]
        public IEnumerable<SyncError> CustomerAddress_SyncErrors {
            get {
                return GetRelatedEntities<SyncError>("CustomerAddress_SyncErrors", null);
            }
            set {
                SetRelatedEntities("CustomerAddress_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("transactioncurrencyid")]
        [RelationshipSchemaName("TransactionCurrency_CustomerAddress")]
        public TransactionCurrency TransactionCurrency_CustomerAddress {
            get {
                return GetRelatedEntity<TransactionCurrency>("TransactionCurrency_CustomerAddress", null);
            }
            set {
                SetRelatedEntity("TransactionCurrency_CustomerAddress", null, value);
            }
        }
        
        [RelationshipSchemaName("customer_address_contracts_as_billing_address")]
        public IEnumerable<Contract> customer_address_contracts_as_billing_address {
            get {
                return GetRelatedEntities<Contract>("customer_address_contracts_as_billing_address", null);
            }
            set {
                SetRelatedEntities("customer_address_contracts_as_billing_address", null, value);
            }
        }
        
        [RelationshipSchemaName("customer_address_contracts_as_service_address")]
        public IEnumerable<Contract> customer_address_contracts_as_service_address {
            get {
                return GetRelatedEntities<Contract>("customer_address_contracts_as_service_address", null);
            }
            set {
                SetRelatedEntities("customer_address_contracts_as_service_address", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_customeraddress_createdonbehalfby")]
        public SystemUser lk_customeraddress_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_customeraddress_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_customeraddress_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_customeraddress_modifiedonbehalfby")]
        public SystemUser lk_customeraddress_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_customeraddress_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_customeraddress_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_customeraddressbase_createdby")]
        public SystemUser lk_customeraddressbase_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_customeraddressbase_createdby", null);
            }
            set {
                SetRelatedEntity("lk_customeraddressbase_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_customeraddressbase_modifiedby")]
        public SystemUser lk_customeraddressbase_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_customeraddressbase_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_customeraddressbase_modifiedby", null, value);
            }
        }
        
        public static CustomerAddress Retrieve(IOrganizationService service, Guid id, params Expression<Func<CustomerAddress,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Activity that is delivered using email protocols.</para>
    /// <para>Display Name: Email</para>
    /// </summary>
    [EntityLogicalName("email")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class Email : ExtendedEntity<EmailState, Email_StatusCode> {
        
        public const string EntityLogicalName = "email";
        
        public const int EntityTypeCode = 4202;
        
        public Email() : 
                base(EntityLogicalName) {
        }
        
        public Email(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("subject");
            }
        }
        
        [AttributeLogicalName("activityid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("activityid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the email activity.</para>
        /// <para>Display Name: Email Message</para>
        /// </summary>
        [AttributeLogicalName("activityid")]
        [DisplayName("Email Message")]
        public Guid? ActivityId {
            get {
                return GetAttributeValue<Guid?>("activityid");
            }
            set {
                SetId("activityid", value);
            }
        }
        
        /// <summary>
        /// <para>The Entity that Accepted the Email</para>
        /// <para>Display Name: Accepting Entity</para>
        /// </summary>
        [AttributeLogicalName("acceptingentityid")]
        [DisplayName("Accepting Entity")]
        public EntityReference AcceptingEntityId {
            get {
                return GetAttributeValue<EntityReference>("acceptingentityid");
            }
            set {
                SetAttributeValue("acceptingentityid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Additional Parameters</para>
        /// </summary>
        [AttributeLogicalName("activityadditionalparams")]
        [DisplayName("Additional Parameters")]
        public string ActivityAdditionalParams {
            get {
                return GetAttributeValue<string>("activityadditionalparams");
            }
            set {
                SetAttributeValue("activityadditionalparams", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the type of activity.</para>
        /// <para>Display Name: Activity Type</para>
        /// </summary>
        [AttributeLogicalName("activitytypecode")]
        [DisplayName("Activity Type")]
        public string ActivityTypeCode {
            get {
                return GetAttributeValue<string>("activitytypecode");
            }
        }
        
        /// <summary>
        /// <para>Type the number of minutes spent creating and sending the email. The duration is used in reporting.</para>
        /// <para>Display Name: Duration</para>
        /// </summary>
        [AttributeLogicalName("actualdurationminutes")]
        [DisplayName("Duration")]
        [Range(0, 2147483647)]
        public int? ActualDurationMinutes {
            get {
                return GetAttributeValue<int?>("actualdurationminutes");
            }
            set {
                SetAttributeValue("actualdurationminutes", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the actual end date and time of the email. By default, it displays the date and time when the activity was completed or canceled, but can be edited to capture the actual time to create and send the email.</para>
        /// <para>Display Name: Actual End</para>
        /// </summary>
        [AttributeLogicalName("actualend")]
        [DisplayName("Actual End")]
        public DateTime? ActualEnd {
            get {
                return GetAttributeValue<DateTime?>("actualend");
            }
            set {
                SetAttributeValue("actualend", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the actual start date and time for the email. By default, it displays the date and time when the activity was created, but can be edited to capture the actual time to create and send the email.</para>
        /// <para>Display Name: Actual Start</para>
        /// </summary>
        [AttributeLogicalName("actualstart")]
        [DisplayName("Actual Start")]
        public DateTime? ActualStart {
            get {
                return GetAttributeValue<DateTime?>("actualstart");
            }
            set {
                SetAttributeValue("actualstart", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the umber of attachments of the email message.</para>
        /// <para>Display Name: Attachment Count</para>
        /// </summary>
        [AttributeLogicalName("attachmentcount")]
        [DisplayName("Attachment Count")]
        [Range(0, 2147483647)]
        public int? AttachmentCount {
            get {
                return GetAttributeValue<int?>("attachmentcount");
            }
        }
        
        /// <summary>
        /// <para>Shows the number of times an email attachment has been viewed.</para>
        /// <para>Display Name: Attachment Open Count</para>
        /// </summary>
        [AttributeLogicalName("attachmentopencount")]
        [DisplayName("Attachment Open Count")]
        [Range(0, 2147483647)]
        public int? AttachmentOpenCount {
            get {
                return GetAttributeValue<int?>("attachmentopencount");
            }
            set {
                SetAttributeValue("attachmentopencount", value);
            }
        }
        
        /// <summary>
        /// <para>Hash of base of conversation index.</para>
        /// <para>Display Name: Conversation Index (Hash)</para>
        /// </summary>
        [AttributeLogicalName("baseconversationindexhash")]
        [DisplayName("Conversation Index (Hash)")]
        [Range(-2147483648, 2147483647)]
        public int? BaseConversationIndexHash {
            get {
                return GetAttributeValue<int?>("baseconversationindexhash");
            }
            set {
                SetAttributeValue("baseconversationindexhash", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the recipients that are included on the email distribution, but are not displayed to other recipients.</para>
        /// <para>Display Name: Bcc</para>
        /// </summary>
        [AttributeLogicalName("bcc")]
        [DisplayName("Bcc")]
        public IEnumerable<ActivityParty> Bcc {
            get {
                return GetEntityCollection<ActivityParty>("bcc");
            }
            set {
                SetEntityCollection("bcc", value);
            }
        }
        
        /// <summary>
        /// <para>Type a category to identify the email type, such as lead outreach, customer follow-up, or service alert, to tie the email to a business group or function.</para>
        /// <para>Display Name: Category</para>
        /// </summary>
        [AttributeLogicalName("category")]
        [DisplayName("Category")]
        [MaxLength(250)]
        public string Category {
            get {
                return GetAttributeValue<string>("category");
            }
            set {
                SetAttributeValue("category", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the recipients that should be copied on the email.</para>
        /// <para>Display Name: Cc</para>
        /// </summary>
        [AttributeLogicalName("cc")]
        [DisplayName("Cc")]
        public IEnumerable<ActivityParty> Cc {
            get {
                return GetEntityCollection<ActivityParty>("cc");
            }
            set {
                SetEntityCollection("cc", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates if the body is compressed.</para>
        /// <para>Display Name: Compression</para>
        /// </summary>
        [AttributeLogicalName("compressed")]
        [DisplayName("Compression")]
        public bool? Compressed {
            get {
                return GetAttributeValue<bool?>("compressed");
            }
        }
        
        /// <summary>
        /// <para>Identifier for all the email responses for this conversation.</para>
        /// <para>Display Name: Conversation Index</para>
        /// </summary>
        [AttributeLogicalName("conversationindex")]
        [DisplayName("Conversation Index")]
        [MaxLength(2048)]
        public string ConversationIndex {
            get {
                return GetAttributeValue<string>("conversationindex");
            }
        }
        
        /// <summary>
        /// <para>Conversation Tracking Id.</para>
        /// <para>Display Name: Conversation Tracking Id</para>
        /// </summary>
        [AttributeLogicalName("conversationtrackingid")]
        [DisplayName("Conversation Tracking Id")]
        public Guid? ConversationTrackingId {
            get {
                return GetAttributeValue<Guid?>("conversationtrackingid");
            }
            set {
                SetAttributeValue("conversationtrackingid", value);
            }
        }
        
        /// <summary>
        /// <para>Correlated Activity Id</para>
        /// <para>Display Name: Correlated Activity Id</para>
        /// </summary>
        [AttributeLogicalName("correlatedactivityid")]
        [DisplayName("Correlated Activity Id")]
        public EntityReference CorrelatedActivityId {
            get {
                return GetAttributeValue<EntityReference>("correlatedactivityid");
            }
            set {
                SetAttributeValue("correlatedactivityid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows how an email is matched to an existing email in Microsoft Dynamics 365. For system use only.</para>
        /// <para>Display Name: Correlation Method</para>
        /// </summary>
        [AttributeLogicalName("correlationmethod")]
        [DisplayName("Correlation Method")]
        public Email_CorrelationMethod? CorrelationMethod {
            get {
                return GetOptionSetValue<Email_CorrelationMethod>("correlationmethod");
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record on behalf of another user.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Enter the expected date and time when email will be sent.</para>
        /// <para>Display Name: Send Later</para>
        /// </summary>
        [AttributeLogicalName("delayedemailsendtime")]
        [DisplayName("Send Later")]
        public DateTime? DelayedEmailSendTime {
            get {
                return GetAttributeValue<DateTime?>("delayedemailsendtime");
            }
            set {
                SetAttributeValue("delayedemailsendtime", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the count of the number of attempts made to send the email. The count is used as an indicator of email routing issues.</para>
        /// <para>Display Name: No. of Delivery Attempts</para>
        /// </summary>
        [AttributeLogicalName("deliveryattempts")]
        [DisplayName("No. of Delivery Attempts")]
        [Range(0, 1000000000)]
        public int? DeliveryAttempts {
            get {
                return GetAttributeValue<int?>("deliveryattempts");
            }
            set {
                SetAttributeValue("deliveryattempts", value);
            }
        }
        
        /// <summary>
        /// <para>Select the priority of delivery of the email to the email server.</para>
        /// <para>Display Name: Delivery Priority</para>
        /// </summary>
        [AttributeLogicalName("deliveryprioritycode")]
        [DisplayName("Delivery Priority")]
        public activitypointer_deliveryprioritycode? DeliveryPriorityCode {
            get {
                return GetOptionSetValue<activitypointer_deliveryprioritycode>("deliveryprioritycode");
            }
            set {
                SetOptionSetValue("deliveryprioritycode", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the sender should receive confirmation that the email was delivered.</para>
        /// <para>Display Name: Delivery Receipt Requested</para>
        /// </summary>
        [AttributeLogicalName("deliveryreceiptrequested")]
        [DisplayName("Delivery Receipt Requested")]
        public bool? DeliveryReceiptRequested {
            get {
                return GetAttributeValue<bool?>("deliveryreceiptrequested");
            }
            set {
                SetAttributeValue("deliveryreceiptrequested", value);
            }
        }
        
        /// <summary>
        /// <para>Type the greeting and message text of the email.</para>
        /// <para>Display Name: Description</para>
        /// </summary>
        [AttributeLogicalName("description")]
        [DisplayName("Description")]
        public string Description {
            get {
                return GetAttributeValue<string>("description");
            }
            set {
                SetAttributeValue("description", value);
            }
        }
        
        /// <summary>
        /// <para>Select the direction of the email as incoming or outbound.</para>
        /// <para>Display Name: Direction</para>
        /// </summary>
        [AttributeLogicalName("directioncode")]
        [DisplayName("Direction")]
        public bool? DirectionCode {
            get {
                return GetAttributeValue<bool?>("directioncode");
            }
            set {
                SetAttributeValue("directioncode", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when an email reminder expires.</para>
        /// <para>Display Name: Email Reminder Expiry Time</para>
        /// </summary>
        [AttributeLogicalName("emailreminderexpirytime")]
        [DisplayName("Email Reminder Expiry Time")]
        public DateTime? EmailReminderExpiryTime {
            get {
                return GetAttributeValue<DateTime?>("emailreminderexpirytime");
            }
            set {
                SetAttributeValue("emailreminderexpirytime", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the status of the email reminder.</para>
        /// <para>Display Name: Email Reminder Status</para>
        /// </summary>
        [AttributeLogicalName("emailreminderstatus")]
        [DisplayName("Email Reminder Status")]
        public Email_EmailReminderStatus? EmailReminderStatus {
            get {
                return GetOptionSetValue<Email_EmailReminderStatus>("emailreminderstatus");
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Email Reminder Text</para>
        /// </summary>
        [AttributeLogicalName("emailremindertext")]
        [DisplayName("Email Reminder Text")]
        [MaxLength(1250)]
        public string EmailReminderText {
            get {
                return GetAttributeValue<string>("emailremindertext");
            }
            set {
                SetAttributeValue("emailremindertext", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the type of the email reminder.</para>
        /// <para>Display Name: Email Reminder Type</para>
        /// </summary>
        [AttributeLogicalName("emailremindertype")]
        [DisplayName("Email Reminder Type")]
        public Email_EmailReminderType? EmailReminderType {
            get {
                return GetOptionSetValue<Email_EmailReminderType>("emailremindertype");
            }
            set {
                SetOptionSetValue("emailremindertype", value);
            }
        }
        
        /// <summary>
        /// <para>Equipment_Email_EmailSender</para>
        /// <para>Display Name: Sender</para>
        /// </summary>
        [AttributeLogicalName("emailsender")]
        [DisplayName("Sender")]
        public EntityReference EmailSender {
            get {
                return GetAttributeValue<EntityReference>("emailsender");
            }
        }
        
        /// <summary>
        /// <para>Email Tracking Id.</para>
        /// <para>Display Name: Email Tracking Id</para>
        /// </summary>
        [AttributeLogicalName("emailtrackingid")]
        [DisplayName("Email Tracking Id")]
        public Guid? EmailTrackingId {
            get {
                return GetAttributeValue<Guid?>("emailtrackingid");
            }
            set {
                SetAttributeValue("emailtrackingid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("Exchange Rate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Select whether the email allows following recipient activities sent from Microsoft Dynamics 365.This is user preference state which can be overridden by system evaluated state.</para>
        /// <para>Display Name: Following</para>
        /// </summary>
        [AttributeLogicalName("followemailuserpreference")]
        [DisplayName("Following")]
        public bool? FollowEmailUserPreference {
            get {
                return GetAttributeValue<bool?>("followemailuserpreference");
            }
            set {
                SetAttributeValue("followemailuserpreference", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the sender of the email.</para>
        /// <para>Display Name: From</para>
        /// </summary>
        [AttributeLogicalName("from")]
        [DisplayName("From")]
        public IEnumerable<ActivityParty> From {
            get {
                return GetEntityCollection<ActivityParty>("from");
            }
            set {
                SetEntityCollection("from", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the data import or data migration that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Type the ID of the email message that this email activity is a response to.</para>
        /// <para>Display Name: In Reply To Message</para>
        /// </summary>
        [AttributeLogicalName("inreplyto")]
        [DisplayName("In Reply To Message")]
        [MaxLength(320)]
        public string InReplyTo {
            get {
                return GetAttributeValue<string>("inreplyto");
            }
        }
        
        /// <summary>
        /// <para>Information regarding whether the email activity was billed as part of resolving a case.</para>
        /// <para>Display Name: Is Billed</para>
        /// </summary>
        [AttributeLogicalName("isbilled")]
        [DisplayName("Is Billed")]
        public bool? IsBilled {
            get {
                return GetAttributeValue<bool?>("isbilled");
            }
            set {
                SetAttributeValue("isbilled", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only. Shows whether this email is followed. This is evaluated state which overrides user selection of follow email.</para>
        /// <para>Display Name: Followed</para>
        /// </summary>
        [AttributeLogicalName("isemailfollowed")]
        [DisplayName("Followed")]
        public bool? IsEmailFollowed {
            get {
                return GetAttributeValue<bool?>("isemailfollowed");
            }
        }
        
        /// <summary>
        /// <para>For internal use only. Shows whether this email Reminder is Set.</para>
        /// <para>Display Name: Reminder Set</para>
        /// </summary>
        [AttributeLogicalName("isemailreminderset")]
        [DisplayName("Reminder Set")]
        public bool? IsEmailReminderSet {
            get {
                return GetAttributeValue<bool?>("isemailreminderset");
            }
        }
        
        /// <summary>
        /// <para>Information regarding whether the activity is a regular activity type or event type.</para>
        /// <para>Display Name: Is Regular Activity</para>
        /// </summary>
        [AttributeLogicalName("isregularactivity")]
        [DisplayName("Is Regular Activity")]
        public bool? IsRegularActivity {
            get {
                return GetAttributeValue<bool?>("isregularactivity");
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: IsUnsafe</para>
        /// </summary>
        [AttributeLogicalName("isunsafe")]
        [DisplayName("IsUnsafe")]
        [Range(0, 2147483647)]
        public int? IsUnsafe {
            get {
                return GetAttributeValue<int?>("isunsafe");
            }
        }
        
        /// <summary>
        /// <para>Indication if the email was created by a workflow rule.</para>
        /// <para>Display Name: Is Workflow Created</para>
        /// </summary>
        [AttributeLogicalName("isworkflowcreated")]
        [DisplayName("Is Workflow Created")]
        public bool? IsWorkflowCreated {
            get {
                return GetAttributeValue<bool?>("isworkflowcreated");
            }
            set {
                SetAttributeValue("isworkflowcreated", value);
            }
        }
        
        /// <summary>
        /// <para>Contains the date and time stamp of the last on hold time.</para>
        /// <para>Display Name: Last On Hold Time</para>
        /// </summary>
        [AttributeLogicalName("lastonholdtime")]
        [DisplayName("Last On Hold Time")]
        public DateTime? LastOnHoldTime {
            get {
                return GetAttributeValue<DateTime?>("lastonholdtime");
            }
            set {
                SetAttributeValue("lastonholdtime", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the latest date and time when email was opened.</para>
        /// <para>Display Name: Last Opened Time</para>
        /// </summary>
        [AttributeLogicalName("lastopenedtime")]
        [DisplayName("Last Opened Time")]
        public DateTime? LastOpenedTime {
            get {
                return GetAttributeValue<DateTime?>("lastopenedtime");
            }
            set {
                SetAttributeValue("lastopenedtime", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the number of times a link in an email has been clicked.</para>
        /// <para>Display Name: Links Clicked Count</para>
        /// </summary>
        [AttributeLogicalName("linksclickedcount")]
        [DisplayName("Links Clicked Count")]
        [Range(0, 2147483647)]
        public int? LinksClickedCount {
            get {
                return GetAttributeValue<int?>("linksclickedcount");
            }
            set {
                SetAttributeValue("linksclickedcount", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the email message. Used only for email that is received.</para>
        /// <para>Display Name: Message ID</para>
        /// </summary>
        [AttributeLogicalName("messageid")]
        [DisplayName("Message ID")]
        [MaxLength(320)]
        public string MessageId {
            get {
                return GetAttributeValue<string>("messageid");
            }
            set {
                SetAttributeValue("messageid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Message ID Dup Check</para>
        /// </summary>
        [AttributeLogicalName("messageiddupcheck")]
        [DisplayName("Message ID Dup Check")]
        public Guid? MessageIdDupCheck {
            get {
                return GetAttributeValue<Guid?>("messageiddupcheck");
            }
            set {
                SetAttributeValue("messageiddupcheck", value);
            }
        }
        
        /// <summary>
        /// <para>MIME type of the email message data.</para>
        /// <para>Display Name: Mime Type</para>
        /// </summary>
        [AttributeLogicalName("mimetype")]
        [DisplayName("Mime Type")]
        [MaxLength(256)]
        public string MimeType {
            get {
                return GetAttributeValue<string>("mimetype");
            }
            set {
                SetAttributeValue("mimetype", value);
            }
        }
        
        /// <summary>
        /// <para>Shows who last updated the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Shows who last updated the record on behalf of another user.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Select the notification code to identify issues with the email recipients or attachments, such as blocked attachments.</para>
        /// <para>Display Name: Notifications</para>
        /// </summary>
        [AttributeLogicalName("notifications")]
        [DisplayName("Notifications")]
        public Email_Notifications? Notifications {
            get {
                return GetOptionSetValue<Email_Notifications>("notifications");
            }
            set {
                SetOptionSetValue("notifications", value);
            }
        }
        
        /// <summary>
        /// <para>Shows how long, in minutes, that the record was on hold.</para>
        /// <para>Display Name: On Hold Time (Minutes)</para>
        /// </summary>
        [AttributeLogicalName("onholdtime")]
        [DisplayName("On Hold Time (Minutes)")]
        [Range(-2147483648, 2147483647)]
        public int? OnHoldTime {
            get {
                return GetAttributeValue<int?>("onholdtime");
            }
        }
        
        /// <summary>
        /// <para>Shows the number of times an email has been opened.</para>
        /// <para>Display Name: Open Count</para>
        /// </summary>
        [AttributeLogicalName("opencount")]
        [DisplayName("Open Count")]
        [Range(0, 2147483647)]
        public int? OpenCount {
            get {
                return GetAttributeValue<int?>("opencount");
            }
            set {
                SetAttributeValue("opencount", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the user or team who is assigned to manage the record. This field is updated every time the record is assigned to a different user.</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the business unit that owns the email activity.</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the team who owns the email activity.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who owns the email activity.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Select the activity that the email is associated with.</para>
        /// <para>Display Name: Parent Activity Id</para>
        /// </summary>
        [AttributeLogicalName("parentactivityid")]
        [DisplayName("Parent Activity Id")]
        public EntityReference ParentActivityId {
            get {
                return GetAttributeValue<EntityReference>("parentactivityid");
            }
            set {
                SetAttributeValue("parentactivityid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Delay email processing until</para>
        /// </summary>
        [AttributeLogicalName("postponeemailprocessinguntil")]
        [DisplayName("Delay email processing until")]
        public DateTime? PostponeEmailProcessingUntil {
            get {
                return GetAttributeValue<DateTime?>("postponeemailprocessinguntil");
            }
        }
        
        /// <summary>
        /// <para>Type a short description about the objective or primary topic of the email.</para>
        /// <para>Display Name: Subject</para>
        /// </summary>
        [AttributeLogicalName("subject")]
        [DisplayName("Subject")]
        [MaxLength(800)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("subject");
            }
            set {
                SetAttributeValue("subject", value);
            }
        }
        
        /// <summary>
        /// <para>Select the priority so that preferred customers or critical issues are handled quickly.</para>
        /// <para>Display Name: Priority</para>
        /// </summary>
        [AttributeLogicalName("prioritycode")]
        [DisplayName("Priority")]
        public Email_PriorityCode? PriorityCode {
            get {
                return GetOptionSetValue<Email_PriorityCode>("prioritycode");
            }
            set {
                SetOptionSetValue("prioritycode", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the process.</para>
        /// <para>Display Name: Process</para>
        /// </summary>
        [AttributeLogicalName("processid")]
        [DisplayName("Process")]
        public Guid? ProcessId {
            get {
                return GetAttributeValue<Guid?>("processid");
            }
            set {
                SetAttributeValue("processid", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates that a read receipt is requested.</para>
        /// <para>Display Name: Read Receipt Requested</para>
        /// </summary>
        [AttributeLogicalName("readreceiptrequested")]
        [DisplayName("Read Receipt Requested")]
        public bool? ReadReceiptRequested {
            get {
                return GetAttributeValue<bool?>("readreceiptrequested");
            }
            set {
                SetAttributeValue("readreceiptrequested", value);
            }
        }
        
        /// <summary>
        /// <para>The Mailbox that Received the Email.</para>
        /// <para>Display Name: Receiving Mailbox</para>
        /// </summary>
        [AttributeLogicalName("receivingmailboxid")]
        [DisplayName("Receiving Mailbox")]
        public EntityReference ReceivingMailboxId {
            get {
                return GetAttributeValue<EntityReference>("receivingmailboxid");
            }
            set {
                SetAttributeValue("receivingmailboxid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the object with which the e-mail is associated.</para>
        /// <para>Display Name: Regarding</para>
        /// </summary>
        [AttributeLogicalName("regardingobjectid")]
        [DisplayName("Regarding")]
        public EntityReference RegardingObjectId {
            get {
                return GetAttributeValue<EntityReference>("regardingobjectid");
            }
            set {
                SetAttributeValue("regardingobjectid", value);
            }
        }
        
        /// <summary>
        /// <para>Reminder Action Card Id.</para>
        /// <para>Display Name: Reminder Action Card Id.</para>
        /// </summary>
        [AttributeLogicalName("reminderactioncardid")]
        [DisplayName("Reminder Action Card Id.")]
        public Guid? ReminderActionCardId {
            get {
                return GetAttributeValue<Guid?>("reminderactioncardid");
            }
            set {
                SetAttributeValue("reminderactioncardid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the number of replies received for an email.</para>
        /// <para>Display Name: Reply Count</para>
        /// </summary>
        [AttributeLogicalName("replycount")]
        [DisplayName("Reply Count")]
        [Range(0, 2147483647)]
        public int? ReplyCount {
            get {
                return GetAttributeValue<int?>("replycount");
            }
        }
        
        /// <summary>
        /// <para>For internal use only</para>
        /// <para>Display Name: Reserved for internal use</para>
        /// </summary>
        [AttributeLogicalName("reservedforinternaluse")]
        [DisplayName("Reserved for internal use")]
        public string ReservedForInternalUse {
            get {
                return GetAttributeValue<string>("reservedforinternaluse");
            }
            set {
                SetAttributeValue("reservedforinternaluse", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the service level agreement (SLA) that you want to apply to the email record.</para>
        /// <para>Display Name: SLA</para>
        /// </summary>
        [AttributeLogicalName("slaid")]
        [DisplayName("SLA")]
        public EntityReference SLAId {
            get {
                return GetAttributeValue<EntityReference>("slaid");
            }
            set {
                SetAttributeValue("slaid", value);
            }
        }
        
        /// <summary>
        /// <para>Last SLA that was applied to this email. This field is for internal use only.</para>
        /// <para>Display Name: Last SLA applied</para>
        /// </summary>
        [AttributeLogicalName("slainvokedid")]
        [DisplayName("Last SLA applied")]
        public EntityReference SLAInvokedId {
            get {
                return GetAttributeValue<EntityReference>("slainvokedid");
            }
        }
        
        /// <summary>
        /// <para>Scheduled duration of the email activity, specified in minutes.</para>
        /// <para>Display Name: Scheduled Duration</para>
        /// </summary>
        [AttributeLogicalName("scheduleddurationminutes")]
        [DisplayName("Scheduled Duration")]
        [Range(0, 2147483647)]
        public int? ScheduledDurationMinutes {
            get {
                return GetAttributeValue<int?>("scheduleddurationminutes");
            }
        }
        
        /// <summary>
        /// <para>Enter the expected due date and time for the activity to be completed to provide details about when the email will be sent.</para>
        /// <para>Display Name: Due Date</para>
        /// </summary>
        [AttributeLogicalName("scheduledend")]
        [DisplayName("Due Date")]
        public DateTime? ScheduledEnd {
            get {
                return GetAttributeValue<DateTime?>("scheduledend");
            }
            set {
                SetAttributeValue("scheduledend", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the expected start date and time for the activity to provide details about the tentative time when the email activity must be initiated.</para>
        /// <para>Display Name: Start Date</para>
        /// </summary>
        [AttributeLogicalName("scheduledstart")]
        [DisplayName("Start Date")]
        public DateTime? ScheduledStart {
            get {
                return GetAttributeValue<DateTime?>("scheduledstart");
            }
            set {
                SetAttributeValue("scheduledstart", value);
            }
        }
        
        /// <summary>
        /// <para>Sender of the email.</para>
        /// <para>Display Name: From</para>
        /// </summary>
        [AttributeLogicalName("sender")]
        [DisplayName("From")]
        [MaxLength(250)]
        public string Sender {
            get {
                return GetAttributeValue<string>("sender");
            }
            set {
                SetAttributeValue("sender", value);
            }
        }
        
        /// <summary>
        /// <para>Select the mailbox associated with the sender of the email message.</para>
        /// <para>Display Name: Sender's Mailbox</para>
        /// </summary>
        [AttributeLogicalName("sendermailboxid")]
        [DisplayName("Sender\'s Mailbox")]
        public EntityReference SenderMailboxId {
            get {
                return GetAttributeValue<EntityReference>("sendermailboxid");
            }
        }
        
        /// <summary>
        /// <para>Shows the parent account of the sender of the email.</para>
        /// <para>Display Name: Senders Account</para>
        /// </summary>
        [AttributeLogicalName("sendersaccount")]
        [DisplayName("Senders Account")]
        public EntityReference SendersAccount {
            get {
                return GetAttributeValue<EntityReference>("sendersaccount");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time that the email was sent.</para>
        /// <para>Display Name: Date Sent</para>
        /// </summary>
        [AttributeLogicalName("senton")]
        [DisplayName("Date Sent")]
        public DateTime? SentOn {
            get {
                return GetAttributeValue<DateTime?>("senton");
            }
        }
        
        /// <summary>
        /// <para>service_emails</para>
        /// <para>Display Name: Service</para>
        /// </summary>
        [AttributeLogicalName("serviceid")]
        [DisplayName("Service")]
        public EntityReference ServiceId {
            get {
                return GetAttributeValue<EntityReference>("serviceid");
            }
            set {
                SetAttributeValue("serviceid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time by which the activities are sorted.</para>
        /// <para>Display Name: Sort Date</para>
        /// </summary>
        [AttributeLogicalName("sortdate")]
        [DisplayName("Sort Date")]
        public DateTime? SortDate {
            get {
                return GetAttributeValue<DateTime?>("sortdate");
            }
            set {
                SetAttributeValue("sortdate", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the stage.</para>
        /// <para>Display Name: (Deprecated) Process Stage</para>
        /// </summary>
        [AttributeLogicalName("stageid")]
        [DisplayName("(Deprecated) Process Stage")]
        public Guid? StageId {
            get {
                return GetAttributeValue<Guid?>("stageid");
            }
            set {
                SetAttributeValue("stageid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows whether the email is open, completed, or canceled. Completed and canceled email is read-only and can't be edited.</para>
        /// <para>Display Name: Activity Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Activity Status")]
        public EmailState? StateCode {
            get {
                return GetOptionSetValue<EmailState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the email's status.</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public Email_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<Email_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>Type a subcategory to identify the email type and relate the activity to a specific product, sales region, business group, or other function.</para>
        /// <para>Display Name: Sub-Category</para>
        /// </summary>
        [AttributeLogicalName("subcategory")]
        [DisplayName("Sub-Category")]
        [MaxLength(250)]
        public string Subcategory {
            get {
                return GetAttributeValue<string>("subcategory");
            }
            set {
                SetAttributeValue("subcategory", value);
            }
        }
        
        /// <summary>
        /// <para>Type a short description about the objective or primary topic of the email.</para>
        /// <para>Display Name: Subject</para>
        /// </summary>
        [AttributeLogicalName("subject")]
        [DisplayName("Subject")]
        [MaxLength(800)]
        public string Subject {
            get {
                return GetAttributeValue<string>("subject");
            }
            set {
                SetAttributeValue("subject", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the Microsoft Office Outlook account for the user who submitted the email to Microsoft Dynamics 365.</para>
        /// <para>Display Name: Submitted By</para>
        /// </summary>
        [AttributeLogicalName("submittedby")]
        [DisplayName("Submitted By")]
        [MaxLength(250)]
        public string SubmittedBy {
            get {
                return GetAttributeValue<string>("submittedby");
            }
            set {
                SetAttributeValue("submittedby", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only. ID for template used in email.</para>
        /// <para>Display Name: ID for template used.</para>
        /// </summary>
        [AttributeLogicalName("templateid")]
        [DisplayName("ID for template used.")]
        public EntityReference TemplateId {
            get {
                return GetAttributeValue<EntityReference>("templateid");
            }
            set {
                SetAttributeValue("templateid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the account, contact, lead, queue, or user recipients for the email.</para>
        /// <para>Display Name: To</para>
        /// </summary>
        [AttributeLogicalName("to")]
        [DisplayName("To")]
        public IEnumerable<ActivityParty> To {
            get {
                return GetEntityCollection<ActivityParty>("to");
            }
            set {
                SetEntityCollection("to", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the email addresses corresponding to the recipients.</para>
        /// <para>Display Name: To Recipients</para>
        /// </summary>
        [AttributeLogicalName("torecipients")]
        [DisplayName("To Recipients")]
        [MaxLength(500)]
        public string ToRecipients {
            get {
                return GetAttributeValue<string>("torecipients");
            }
            set {
                SetAttributeValue("torecipients", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the tracking token assigned to the email to make sure responses are automatically tracked in Microsoft Dynamics 365.</para>
        /// <para>Display Name: Tracking Token</para>
        /// </summary>
        [AttributeLogicalName("trackingtoken")]
        [DisplayName("Tracking Token")]
        [MaxLength(50)]
        public string TrackingToken {
            get {
                return GetAttributeValue<string>("trackingtoken");
            }
            set {
                SetAttributeValue("trackingtoken", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the local currency for the record to make sure budgets are reported in the correct currency.</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: (Deprecated) Traversed Path</para>
        /// </summary>
        [AttributeLogicalName("traversedpath")]
        [DisplayName("(Deprecated) Traversed Path")]
        [MaxLength(1250)]
        public string TraversedPath {
            get {
                return GetAttributeValue<string>("traversedpath");
            }
            set {
                SetAttributeValue("traversedpath", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version number of the email message.</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Individual email will be sent to each recipient.</para>
        /// <para>Display Name: Recipient List</para>
        /// </summary>
        [AttributeLogicalName("msdyn_recipientlist")]
        [DisplayName("Recipient List")]
        [MaxLength(8000)]
        public string msdyn_RecipientList {
            get {
                return GetAttributeValue<string>("msdyn_recipientlist");
            }
            set {
                SetAttributeValue("msdyn_recipientlist", value);
            }
        }
        
        [AttributeLogicalName("emailsender")]
        [RelationshipSchemaName("Account_Email_EmailSender")]
        public Account Account_Email_EmailSender {
            get {
                return GetRelatedEntity<Account>("Account_Email_EmailSender", null);
            }
            set {
                SetRelatedEntity("Account_Email_EmailSender", null, value);
            }
        }
        
        [AttributeLogicalName("sendersaccount")]
        [RelationshipSchemaName("Account_Email_SendersAccount")]
        public Account Account_Email_SendersAccount {
            get {
                return GetRelatedEntity<Account>("Account_Email_SendersAccount", null);
            }
            set {
                SetRelatedEntity("Account_Email_SendersAccount", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Account_Emails")]
        public Account Account_Emails {
            get {
                return GetRelatedEntity<Account>("Account_Emails", null);
            }
            set {
                SetRelatedEntity("Account_Emails", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("CampaignActivity_Emails")]
        public CampaignActivity CampaignActivity_Emails {
            get {
                return GetRelatedEntity<CampaignActivity>("CampaignActivity_Emails", null);
            }
            set {
                SetRelatedEntity("CampaignActivity_Emails", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Campaign_Emails")]
        public Campaign Campaign_Emails {
            get {
                return GetRelatedEntity<Campaign>("Campaign_Emails", null);
            }
            set {
                SetRelatedEntity("Campaign_Emails", null, value);
            }
        }
        
        [AttributeLogicalName("emailsender")]
        [RelationshipSchemaName("Contact_Email_EmailSender")]
        public Contact Contact_Email_EmailSender {
            get {
                return GetRelatedEntity<Contact>("Contact_Email_EmailSender", null);
            }
            set {
                SetRelatedEntity("Contact_Email_EmailSender", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Contact_Emails")]
        public Contact Contact_Emails {
            get {
                return GetRelatedEntity<Contact>("Contact_Emails", null);
            }
            set {
                SetRelatedEntity("Contact_Emails", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Contract_Emails")]
        public Contract Contract_Emails {
            get {
                return GetRelatedEntity<Contract>("Contract_Emails", null);
            }
            set {
                SetRelatedEntity("Contract_Emails", null, value);
            }
        }
        
        [RelationshipSchemaName("Email_QueueItem")]
        public IEnumerable<QueueItem> Email_QueueItem {
            get {
                return GetRelatedEntities<QueueItem>("Email_QueueItem", null);
            }
            set {
                SetRelatedEntities("Email_QueueItem", null, value);
            }
        }
        
        [RelationshipSchemaName("Email_SyncErrors")]
        public IEnumerable<SyncError> Email_SyncErrors {
            get {
                return GetRelatedEntities<SyncError>("Email_SyncErrors", null);
            }
            set {
                SetRelatedEntities("Email_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Incident_Emails")]
        public Incident Incident_Emails {
            get {
                return GetRelatedEntity<Incident>("Incident_Emails", null);
            }
            set {
                SetRelatedEntity("Incident_Emails", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Invoice_Emails")]
        public Invoice Invoice_Emails {
            get {
                return GetRelatedEntity<Invoice>("Invoice_Emails", null);
            }
            set {
                SetRelatedEntity("Invoice_Emails", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("KnowledgeArticle_Emails")]
        public KnowledgeArticle KnowledgeArticle_Emails {
            get {
                return GetRelatedEntity<KnowledgeArticle>("KnowledgeArticle_Emails", null);
            }
            set {
                SetRelatedEntity("KnowledgeArticle_Emails", null, value);
            }
        }
        
        [AttributeLogicalName("emailsender")]
        [RelationshipSchemaName("Lead_Email_EmailSender")]
        public Lead Lead_Email_EmailSender {
            get {
                return GetRelatedEntity<Lead>("Lead_Email_EmailSender", null);
            }
            set {
                SetRelatedEntity("Lead_Email_EmailSender", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Lead_Emails")]
        public Lead Lead_Emails {
            get {
                return GetRelatedEntity<Lead>("Lead_Emails", null);
            }
            set {
                SetRelatedEntity("Lead_Emails", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Opportunity_Emails")]
        public Opportunity Opportunity_Emails {
            get {
                return GetRelatedEntity<Opportunity>("Opportunity_Emails", null);
            }
            set {
                SetRelatedEntity("Opportunity_Emails", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Quote_Emails")]
        public Quote Quote_Emails {
            get {
                return GetRelatedEntity<Quote>("Quote_Emails", null);
            }
            set {
                SetRelatedEntity("Quote_Emails", null, value);
            }
        }
        
        [RelationshipSchemaName("email_email_CorrelatedActivityId", EntityRole.Referenced)]
        public IEnumerable<Email> Referencedemail_email_CorrelatedActivityId {
            get {
                return GetRelatedEntities<Email>("email_email_CorrelatedActivityId", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("email_email_CorrelatedActivityId", EntityRole.Referenced, value);
            }
        }
        
        [RelationshipSchemaName("email_email_parentactivityid", EntityRole.Referenced)]
        public IEnumerable<Email> Referencedemail_email_parentactivityid {
            get {
                return GetRelatedEntities<Email>("email_email_parentactivityid", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("email_email_parentactivityid", EntityRole.Referenced, value);
            }
        }
        
        [AttributeLogicalName("correlatedactivityid")]
        [RelationshipSchemaName("email_email_CorrelatedActivityId", EntityRole.Referencing)]
        public Email Referencingemail_email_CorrelatedActivityId {
            get {
                return GetRelatedEntity<Email>("email_email_CorrelatedActivityId", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("email_email_CorrelatedActivityId", EntityRole.Referencing, value);
            }
        }
        
        [AttributeLogicalName("parentactivityid")]
        [RelationshipSchemaName("email_email_parentactivityid", EntityRole.Referencing)]
        public Email Referencingemail_email_parentactivityid {
            get {
                return GetRelatedEntity<Email>("email_email_parentactivityid", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("email_email_parentactivityid", EntityRole.Referencing, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("SalesOrder_Emails")]
        public SalesOrder SalesOrder_Emails {
            get {
                return GetRelatedEntity<SalesOrder>("SalesOrder_Emails", null);
            }
            set {
                SetRelatedEntity("SalesOrder_Emails", null, value);
            }
        }
        
        [AttributeLogicalName("emailsender")]
        [RelationshipSchemaName("SystemUser_Email_EmailSender")]
        public SystemUser SystemUser_Email_EmailSender {
            get {
                return GetRelatedEntity<SystemUser>("SystemUser_Email_EmailSender", null);
            }
            set {
                SetRelatedEntity("SystemUser_Email_EmailSender", null, value);
            }
        }
        
        [AttributeLogicalName("transactioncurrencyid")]
        [RelationshipSchemaName("TransactionCurrency_Email")]
        public TransactionCurrency TransactionCurrency_Email {
            get {
                return GetRelatedEntity<TransactionCurrency>("TransactionCurrency_Email", null);
            }
            set {
                SetRelatedEntity("TransactionCurrency_Email", null, value);
            }
        }
        
        [AttributeLogicalName("activityid")]
        [RelationshipSchemaName("activity_pointer_email")]
        public ActivityPointer activity_pointer_email {
            get {
                return GetRelatedEntity<ActivityPointer>("activity_pointer_email", null);
            }
            set {
                SetRelatedEntity("activity_pointer_email", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("bookableresourcebooking_Emails")]
        public BookableResourceBooking bookableresourcebooking_Emails {
            get {
                return GetRelatedEntity<BookableResourceBooking>("bookableresourcebooking_Emails", null);
            }
            set {
                SetRelatedEntity("bookableresourcebooking_Emails", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("bookableresourcebookingheader_Emails")]
        public BookableResourceBookingHeader bookableresourcebookingheader_Emails {
            get {
                return GetRelatedEntity<BookableResourceBookingHeader>("bookableresourcebookingheader_Emails", null);
            }
            set {
                SetRelatedEntity("bookableresourcebookingheader_Emails", null, value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_email_activities")]
        public BusinessUnit business_unit_email_activities {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_email_activities", null);
            }
            set {
                SetRelatedEntity("business_unit_email_activities", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("dg_event_Emails")]
        public dg_event dg_event_Emails {
            get {
                return GetRelatedEntity<dg_event>("dg_event_Emails", null);
            }
            set {
                SetRelatedEntity("dg_event_Emails", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("dg_participant_Emails")]
        public dg_participant dg_participant_Emails {
            get {
                return GetRelatedEntity<dg_participant>("dg_participant_Emails", null);
            }
            set {
                SetRelatedEntity("dg_participant_Emails", null, value);
            }
        }
        
        [AttributeLogicalName("acceptingentityid")]
        [RelationshipSchemaName("email_acceptingentity_systemuser")]
        public SystemUser email_acceptingentity_systemuser {
            get {
                return GetRelatedEntity<SystemUser>("email_acceptingentity_systemuser", null);
            }
            set {
                SetRelatedEntity("email_acceptingentity_systemuser", null, value);
            }
        }
        
        [RelationshipSchemaName("email_activity_parties")]
        public IEnumerable<ActivityParty> email_activity_parties {
            get {
                return GetRelatedEntities<ActivityParty>("email_activity_parties", null);
            }
            set {
                SetRelatedEntities("email_activity_parties", null, value);
            }
        }
        
        [RelationshipSchemaName("email_campaignresponse")]
        public IEnumerable<CampaignResponse> email_campaignresponse {
            get {
                return GetRelatedEntities<CampaignResponse>("email_campaignresponse", null);
            }
            set {
                SetRelatedEntities("email_campaignresponse", null, value);
            }
        }
        
        [RelationshipSchemaName("email_connections1")]
        public IEnumerable<Connection> email_connections1 {
            get {
                return GetRelatedEntities<Connection>("email_connections1", null);
            }
            set {
                SetRelatedEntities("email_connections1", null, value);
            }
        }
        
        [RelationshipSchemaName("email_connections2")]
        public IEnumerable<Connection> email_connections2 {
            get {
                return GetRelatedEntities<Connection>("email_connections2", null);
            }
            set {
                SetRelatedEntities("email_connections2", null, value);
            }
        }
        
        [AttributeLogicalName("sendermailboxid")]
        [RelationshipSchemaName("email_sendermailboxid_mailbox")]
        public Mailbox email_sendermailboxid_mailbox {
            get {
                return GetRelatedEntity<Mailbox>("email_sendermailboxid_mailbox", null);
            }
            set {
                SetRelatedEntity("email_sendermailboxid_mailbox", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("entitlement_Emails")]
        public Entitlement entitlement_Emails {
            get {
                return GetRelatedEntity<Entitlement>("entitlement_Emails", null);
            }
            set {
                SetRelatedEntity("entitlement_Emails", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_email_createdby")]
        public SystemUser lk_email_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_email_createdby", null);
            }
            set {
                SetRelatedEntity("lk_email_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_email_createdonbehalfby")]
        public SystemUser lk_email_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_email_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_email_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_email_modifiedby")]
        public SystemUser lk_email_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_email_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_email_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_email_modifiedonbehalfby")]
        public SystemUser lk_email_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_email_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_email_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("receivingmailboxid")]
        [RelationshipSchemaName("mailbox_email_ReceivingMailboxId")]
        public Mailbox mailbox_email_ReceivingMailboxId {
            get {
                return GetRelatedEntity<Mailbox>("mailbox_email_ReceivingMailboxId", null);
            }
            set {
                SetRelatedEntity("mailbox_email_ReceivingMailboxId", null, value);
            }
        }
        
        [AttributeLogicalName("slaid")]
        [RelationshipSchemaName("manualsla_email")]
        public SLA manualsla_email {
            get {
                return GetRelatedEntity<SLA>("manualsla_email", null);
            }
            set {
                SetRelatedEntity("manualsla_email", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("msdyn_agreement_Emails")]
        public msdyn_agreement msdyn_agreement_Emails {
            get {
                return GetRelatedEntity<msdyn_agreement>("msdyn_agreement_Emails", null);
            }
            set {
                SetRelatedEntity("msdyn_agreement_Emails", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("msdyn_postalbum_Emails")]
        public msdyn_PostAlbum msdyn_postalbum_Emails {
            get {
                return GetRelatedEntity<msdyn_PostAlbum>("msdyn_postalbum_Emails", null);
            }
            set {
                SetRelatedEntity("msdyn_postalbum_Emails", null, value);
            }
        }
        
        [AttributeLogicalName("slainvokedid")]
        [RelationshipSchemaName("sla_email")]
        public SLA sla_email {
            get {
                return GetRelatedEntity<SLA>("sla_email", null);
            }
            set {
                SetRelatedEntity("sla_email", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_email")]
        public Team team_email {
            get {
                return GetRelatedEntity<Team>("team_email", null);
            }
            set {
                SetRelatedEntity("team_email", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_email")]
        public SystemUser user_email {
            get {
                return GetRelatedEntity<SystemUser>("user_email", null);
            }
            set {
                SetRelatedEntity("user_email", null, value);
            }
        }
        
        public static Email Retrieve(IOrganizationService service, Guid id, params Expression<Func<Email,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Holds the Email Server Profiles of an organization</para>
    /// <para>Display Name: Email Server Profile</para>
    /// </summary>
    [EntityLogicalName("emailserverprofile")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class EmailServerProfile : ExtendedEntity<EmailServerProfileState, EmailServerProfile_StatusCode> {
        
        public const string EntityLogicalName = "emailserverprofile";
        
        public const int EntityTypeCode = 9605;
        
        public EmailServerProfile() : 
                base(EntityLogicalName) {
        }
        
        public EmailServerProfile(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("name");
            }
        }
        
        [AttributeLogicalName("emailserverprofileid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("emailserverprofileid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the email server profile.</para>
        /// <para>Display Name: EmailServerProfile</para>
        /// </summary>
        [AttributeLogicalName("emailserverprofileid")]
        [DisplayName("EmailServerProfile")]
        public Guid? EmailServerProfileId {
            get {
                return GetAttributeValue<Guid?>("emailserverprofileid");
            }
            set {
                SetId("emailserverprofileid", value);
            }
        }
        
        /// <summary>
        /// <para>AAD ResourceId used for OAuth athentication scheme</para>
        /// <para>Display Name: AAD ResourceId</para>
        /// </summary>
        [AttributeLogicalName("aadresourceid")]
        [DisplayName("AAD ResourceId")]
        [MaxLength(1024)]
        public string AadResourceId {
            get {
                return GetAttributeValue<string>("aadresourceid");
            }
            set {
                SetAttributeValue("aadresourceid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record on behalf of another user.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        [AttributeLogicalName("credentialinfo")]
        [MaxLength(4000)]
        public string CredentialInfo {
            get {
                return GetAttributeValue<string>("credentialinfo");
            }
            set {
                SetAttributeValue("credentialinfo", value);
            }
        }
        
        [AttributeLogicalName("dataencryptionkey")]
        [MaxLength(3500)]
        public string DataEncryptionKey {
            get {
                return GetAttributeValue<string>("dataencryptionkey");
            }
            set {
                SetAttributeValue("dataencryptionkey", value);
            }
        }
        
        /// <summary>
        /// <para>Type the default location of the server.</para>
        /// <para>Display Name: Default Email Server Location</para>
        /// </summary>
        [AttributeLogicalName("defaultserverlocation")]
        [DisplayName("Default Email Server Location")]
        [MaxLength(2084)]
        public string DefaultServerLocation {
            get {
                return GetAttributeValue<string>("defaultserverlocation");
            }
            set {
                SetAttributeValue("defaultserverlocation", value);
            }
        }
        
        /// <summary>
        /// <para>Type additional information that describes the email server profile.</para>
        /// <para>Display Name: Description</para>
        /// </summary>
        [AttributeLogicalName("description")]
        [DisplayName("Description")]
        public string Description {
            get {
                return GetAttributeValue<string>("description");
            }
            set {
                SetAttributeValue("description", value);
            }
        }
        
        /// <summary>
        /// <para>Email Server Type Name</para>
        /// <para>Display Name: Email Server Type Name</para>
        /// </summary>
        [AttributeLogicalName("emailservertypename")]
        [DisplayName("Email Server Type Name")]
        [MaxLength(250)]
        public string EmailServerTypeName {
            get {
                return GetAttributeValue<string>("emailservertypename");
            }
        }
        
        /// <summary>
        /// <para>Indicates the code page to use when encoding email content.</para>
        /// <para>Display Name: Encoding Code Page</para>
        /// </summary>
        [AttributeLogicalName("encodingcodepage")]
        [DisplayName("Encoding Code Page")]
        [MaxLength(100)]
        public string EncodingCodePage {
            get {
                return GetAttributeValue<string>("encodingcodepage");
            }
            set {
                SetAttributeValue("encodingcodepage", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Entity Image Id</para>
        /// </summary>
        [AttributeLogicalName("entityimageid")]
        [DisplayName("Entity Image Id")]
        public Guid? EntityImageId {
            get {
                return GetAttributeValue<Guid?>("entityimageid");
            }
        }
        
        /// <summary>
        /// <para>Type the tenant ID of Exchange Online.</para>
        /// <para>Display Name: Exchange Online Tenant Id</para>
        /// </summary>
        [AttributeLogicalName("exchangeonlinetenantid")]
        [DisplayName("Exchange Online Tenant Id")]
        [MaxLength(36)]
        public string ExchangeOnlineTenantId {
            get {
                return GetAttributeValue<string>("exchangeonlinetenantid");
            }
            set {
                SetAttributeValue("exchangeonlinetenantid", value);
            }
        }
        
        /// <summary>
        /// <para>Select the version of Exchange that is on the email server.</para>
        /// <para>Display Name: Exchange Version</para>
        /// </summary>
        [AttributeLogicalName("exchangeversion")]
        [DisplayName("Exchange Version")]
        public EmailServerProfile_ExchangeVersion? ExchangeVersion {
            get {
                return GetOptionSetValue<EmailServerProfile_ExchangeVersion>("exchangeversion");
            }
            set {
                SetOptionSetValue("exchangeversion", value);
            }
        }
        
        /// <summary>
        /// <para>Select the incoming email authentication protocol that is used for connecting to the email server.</para>
        /// <para>Display Name: Incoming Authentication Protocol</para>
        /// </summary>
        [AttributeLogicalName("incomingauthenticationprotocol")]
        [DisplayName("Incoming Authentication Protocol")]
        public emailserverprofile_authenticationprotocol? IncomingAuthenticationProtocol {
            get {
                return GetOptionSetValue<emailserverprofile_authenticationprotocol>("incomingauthenticationprotocol");
            }
            set {
                SetOptionSetValue("incomingauthenticationprotocol", value);
            }
        }
        
        /// <summary>
        /// <para>Select how credentials will be retrieved for incoming email.</para>
        /// <para>Display Name: Incoming Email Credential Retrieval</para>
        /// </summary>
        [AttributeLogicalName("incomingcredentialretrieval")]
        [DisplayName("Incoming Email Credential Retrieval")]
        public EmailServerProfile_IncomingCredentialRetrieval? IncomingCredentialRetrieval {
            get {
                return GetOptionSetValue<EmailServerProfile_IncomingCredentialRetrieval>("incomingcredentialretrieval");
            }
            set {
                SetOptionSetValue("incomingcredentialretrieval", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates the incoming partner application.</para>
        /// <para>Display Name: Incoming Partner Application</para>
        /// </summary>
        [AttributeLogicalName("incomingpartnerapplication")]
        [DisplayName("Incoming Partner Application")]
        public EntityReference IncomingPartnerApplication {
            get {
                return GetAttributeValue<EntityReference>("incomingpartnerapplication");
            }
        }
        
        /// <summary>
        /// <para>Type the password for incoming email.</para>
        /// <para>Display Name: Incoming Email Password</para>
        /// </summary>
        [AttributeLogicalName("incomingpassword")]
        [DisplayName("Incoming Email Password")]
        [MaxLength(250)]
        public string IncomingPassword {
            get {
                return GetAttributeValue<string>("incomingpassword");
            }
            set {
                SetAttributeValue("incomingpassword", value);
            }
        }
        
        /// <summary>
        /// <para>Type the Exchange port number for incoming mail.</para>
        /// <para>Display Name: Incoming Email Port</para>
        /// </summary>
        [AttributeLogicalName("incomingportnumber")]
        [DisplayName("Incoming Email Port")]
        [Range(0, 65536)]
        public int? IncomingPortNumber {
            get {
                return GetAttributeValue<int?>("incomingportnumber");
            }
            set {
                SetAttributeValue("incomingportnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Type the location of the server for incoming email.</para>
        /// <para>Display Name: Incoming Email Server Location</para>
        /// </summary>
        [AttributeLogicalName("incomingserverlocation")]
        [DisplayName("Incoming Email Server Location")]
        [MaxLength(2084)]
        public string IncomingServerLocation {
            get {
                return GetAttributeValue<string>("incomingserverlocation");
            }
            set {
                SetAttributeValue("incomingserverlocation", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether to use impersonation to access the mailbox to process incoming emails.</para>
        /// <para>Display Name: Use Impersonation for Incoming Email</para>
        /// </summary>
        [AttributeLogicalName("incominguseimpersonation")]
        [DisplayName("Use Impersonation for Incoming Email")]
        public bool? IncomingUseImpersonation {
            get {
                return GetAttributeValue<bool?>("incominguseimpersonation");
            }
            set {
                SetAttributeValue("incominguseimpersonation", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether to use the Secure Sockets Layer (SSL) protocol for incoming email.</para>
        /// <para>Display Name: Use SSL for Incoming Email</para>
        /// </summary>
        [AttributeLogicalName("incomingusessl")]
        [DisplayName("Use SSL for Incoming Email")]
        public bool? IncomingUseSSL {
            get {
                return GetAttributeValue<bool?>("incomingusessl");
            }
            set {
                SetAttributeValue("incomingusessl", value);
            }
        }
        
        /// <summary>
        /// <para>Type the user name for incoming email.</para>
        /// <para>Display Name: Incoming Email User Name</para>
        /// </summary>
        [AttributeLogicalName("incomingusername")]
        [DisplayName("Incoming Email User Name")]
        [MaxLength(250)]
        public string IncomingUserName {
            get {
                return GetAttributeValue<string>("incomingusername");
            }
            set {
                SetAttributeValue("incomingusername", value);
            }
        }
        
        [AttributeLogicalName("isdataencryptionkeyset")]
        public bool? IsDataEncryptionKeySet {
            get {
                return GetAttributeValue<bool?>("isdataencryptionkeyset");
            }
        }
        
        [AttributeLogicalName("isincomingpasswordset")]
        public bool? IsIncomingPasswordSet {
            get {
                return GetAttributeValue<bool?>("isincomingpasswordset");
            }
        }
        
        [AttributeLogicalName("isoauthclientsecretset")]
        public bool? IsOauthClientSecretSet {
            get {
                return GetAttributeValue<bool?>("isoauthclientsecretset");
            }
        }
        
        [AttributeLogicalName("isoutgoingpasswordset")]
        public bool? IsOutgoingPasswordSet {
            get {
                return GetAttributeValue<bool?>("isoutgoingpasswordset");
            }
        }
        
        /// <summary>
        /// <para>Shows the last test authorization status of email server profile</para>
        /// <para>Display Name: Last Test Authorization Status</para>
        /// </summary>
        [AttributeLogicalName("lastauthorizationstatus")]
        [DisplayName("Last Test Authorization Status")]
        public EmailServerProfile_LastAuthorizationStatus? LastAuthorizationStatus {
            get {
                return GetOptionSetValue<EmailServerProfile_LastAuthorizationStatus>("lastauthorizationstatus");
            }
            set {
                SetOptionSetValue("lastauthorizationstatus", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the Dynamics 365 message obtained during the Last Test</para>
        /// <para>Display Name: Last Dynamics 365 Message</para>
        /// </summary>
        [AttributeLogicalName("lastcrmmessage")]
        [DisplayName("Last Dynamics 365 Message")]
        public string LastCrmMessage {
            get {
                return GetAttributeValue<string>("lastcrmmessage");
            }
            set {
                SetAttributeValue("lastcrmmessage", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the last test Execution status of email server profile</para>
        /// <para>Display Name: Last Test Execution Status</para>
        /// </summary>
        [AttributeLogicalName("lasttestexecutionstatus")]
        [DisplayName("Last Test Execution Status")]
        public EmailServerProfile_LastTestExecutionStatus? LastTestExecutionStatus {
            get {
                return GetOptionSetValue<EmailServerProfile_LastTestExecutionStatus>("lasttestexecutionstatus");
            }
            set {
                SetOptionSetValue("lasttestexecutionstatus", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the EWS Request created during the Last Test</para>
        /// <para>Display Name: Last Test Request</para>
        /// </summary>
        [AttributeLogicalName("lasttestrequest")]
        [DisplayName("Last Test Request")]
        public string LastTestRequest {
            get {
                return GetAttributeValue<string>("lasttestrequest");
            }
            set {
                SetAttributeValue("lasttestrequest", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the EWS Response obtained during the Last Test</para>
        /// <para>Display Name: Last Test Response</para>
        /// </summary>
        [AttributeLogicalName("lasttestresponse")]
        [DisplayName("Last Test Response")]
        public string LastTestResponse {
            get {
                return GetAttributeValue<string>("lasttestresponse");
            }
            set {
                SetAttributeValue("lasttestresponse", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the Last Test Start date and time</para>
        /// <para>Display Name: Last Test Time</para>
        /// </summary>
        [AttributeLogicalName("lastteststarttime")]
        [DisplayName("Last Test Time")]
        public DateTime? LastTestStartTime {
            get {
                return GetAttributeValue<DateTime?>("lastteststarttime");
            }
            set {
                SetAttributeValue("lastteststarttime", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the Time taken while running the last test</para>
        /// <para>Display Name: Last Test Time Taken</para>
        /// </summary>
        [AttributeLogicalName("lasttesttotalexecutiontime")]
        [DisplayName("Last Test Time Taken")]
        public long? LastTestTotalExecutionTime {
            get {
                return GetAttributeValue<long?>("lasttesttotalexecutiontime");
            }
            set {
                SetAttributeValue("lasttesttotalexecutiontime", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the last test Validation status of email server profile</para>
        /// <para>Display Name: Last Test Validation Status</para>
        /// </summary>
        [AttributeLogicalName("lasttestvalidationstatus")]
        [DisplayName("Last Test Validation Status")]
        public EmailServerProfile_LastTestValidationStatus? LastTestValidationStatus {
            get {
                return GetOptionSetValue<EmailServerProfile_LastTestValidationStatus>("lasttestvalidationstatus");
            }
            set {
                SetOptionSetValue("lasttestvalidationstatus", value);
            }
        }
        
        /// <summary>
        /// <para>Maximum number of concurrent connections allowed to the email server per authenticated user.</para>
        /// <para>Display Name: Maximum Concurrent Connections</para>
        /// </summary>
        [AttributeLogicalName("maxconcurrentconnections")]
        [DisplayName("Maximum Concurrent Connections")]
        [Range(1, 300)]
        public int? MaxConcurrentConnections {
            get {
                return GetAttributeValue<int?>("maxconcurrentconnections");
            }
            set {
                SetAttributeValue("maxconcurrentconnections", value);
            }
        }
        
        /// <summary>
        /// <para>Minimum polling interval, in minutes, for mailboxes that are associated with this email server profile.</para>
        /// <para>Display Name: Minimum Polling Interval In Minutes</para>
        /// </summary>
        [AttributeLogicalName("minpollingintervalinminutes")]
        [DisplayName("Minimum Polling Interval In Minutes")]
        [Range(0, 1440)]
        public int? MinPollingIntervalInMinutes {
            get {
                return GetAttributeValue<int?>("minpollingintervalinminutes");
            }
            set {
                SetAttributeValue("minpollingintervalinminutes", value);
            }
        }
        
        /// <summary>
        /// <para>Shows who last updated the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Shows who last updated the record on behalf of another user.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Indicates whether to move undelivered incoming emails to the Undeliverable folder in Microsoft Exchange.</para>
        /// <para>Display Name: Move Undelivered Emails to the Undeliverable Folder</para>
        /// </summary>
        [AttributeLogicalName("moveundeliveredemails")]
        [DisplayName("Move Undelivered Emails to the Undeliverable Folder")]
        public bool? MoveUndeliveredEmails {
            get {
                return GetAttributeValue<bool?>("moveundeliveredemails");
            }
            set {
                SetAttributeValue("moveundeliveredemails", value);
            }
        }
        
        /// <summary>
        /// <para>Type a meaningful name for the email server profile. This name is displayed when you need to select an email server profile.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string Name {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>ClientId used for OAuth athentication scheme</para>
        /// <para>Display Name: Oauth ClientId</para>
        /// </summary>
        [AttributeLogicalName("oauthclientid")]
        [DisplayName("Oauth ClientId")]
        [MaxLength(1024)]
        public string OauthClientId {
            get {
                return GetAttributeValue<string>("oauthclientid");
            }
            set {
                SetAttributeValue("oauthclientid", value);
            }
        }
        
        /// <summary>
        /// <para>Client secret used for the OAuth authentication scheme</para>
        /// <para>Display Name: OAuth Client Secret</para>
        /// </summary>
        [AttributeLogicalName("oauthclientsecret")]
        [DisplayName("OAuth Client Secret")]
        [MaxLength(1024)]
        public string OauthClientSecret {
            get {
                return GetAttributeValue<string>("oauthclientsecret");
            }
            set {
                SetAttributeValue("oauthclientsecret", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the organization associated with the record.</para>
        /// <para>Display Name: Organization Id</para>
        /// </summary>
        [AttributeLogicalName("organizationid")]
        [DisplayName("Organization Id")]
        public EntityReference OrganizationId {
            get {
                return GetAttributeValue<EntityReference>("organizationid");
            }
        }
        
        /// <summary>
        /// <para>Select the outgoing email authentication protocol that is used for connecting to the email server.</para>
        /// <para>Display Name: Outgoing Authentication Protocol</para>
        /// </summary>
        [AttributeLogicalName("outgoingauthenticationprotocol")]
        [DisplayName("Outgoing Authentication Protocol")]
        public emailserverprofile_authenticationprotocol? OutgoingAuthenticationProtocol {
            get {
                return GetOptionSetValue<emailserverprofile_authenticationprotocol>("outgoingauthenticationprotocol");
            }
            set {
                SetOptionSetValue("outgoingauthenticationprotocol", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the email connector will grant delegate access permissions to the accessing user when required while processing outgoing emails.</para>
        /// <para>Display Name: Auto Grant Delegate Access for Outgoing Email.</para>
        /// </summary>
        [AttributeLogicalName("outgoingautograntdelegateaccess")]
        [DisplayName("Auto Grant Delegate Access for Outgoing Email.")]
        public bool? OutgoingAutoGrantDelegateAccess {
            get {
                return GetAttributeValue<bool?>("outgoingautograntdelegateaccess");
            }
            set {
                SetAttributeValue("outgoingautograntdelegateaccess", value);
            }
        }
        
        /// <summary>
        /// <para>Select how credentials will be retrieved for outgoing email.</para>
        /// <para>Display Name: Outgoing Email Credential Retrieval</para>
        /// </summary>
        [AttributeLogicalName("outgoingcredentialretrieval")]
        [DisplayName("Outgoing Email Credential Retrieval")]
        public EmailServerProfile_OutgoingCredentialRetrieval? OutgoingCredentialRetrieval {
            get {
                return GetOptionSetValue<EmailServerProfile_OutgoingCredentialRetrieval>("outgoingcredentialretrieval");
            }
            set {
                SetOptionSetValue("outgoingcredentialretrieval", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates the outgoing partner application.</para>
        /// <para>Display Name: Outgoing Partner Application</para>
        /// </summary>
        [AttributeLogicalName("outgoingpartnerapplication")]
        [DisplayName("Outgoing Partner Application")]
        public EntityReference OutgoingPartnerApplication {
            get {
                return GetAttributeValue<EntityReference>("outgoingpartnerapplication");
            }
        }
        
        /// <summary>
        /// <para>Type the password for outgoing email.</para>
        /// <para>Display Name: Outgoing Email Password</para>
        /// </summary>
        [AttributeLogicalName("outgoingpassword")]
        [DisplayName("Outgoing Email Password")]
        [MaxLength(250)]
        public string OutgoingPassword {
            get {
                return GetAttributeValue<string>("outgoingpassword");
            }
            set {
                SetAttributeValue("outgoingpassword", value);
            }
        }
        
        /// <summary>
        /// <para>Type the Exchange port number for outgoing mail.</para>
        /// <para>Display Name: Outgoing Email Port</para>
        /// </summary>
        [AttributeLogicalName("outgoingportnumber")]
        [DisplayName("Outgoing Email Port")]
        [Range(0, 65536)]
        public int? OutgoingPortNumber {
            get {
                return GetAttributeValue<int?>("outgoingportnumber");
            }
            set {
                SetAttributeValue("outgoingportnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Type the location of the server for outgoing email.</para>
        /// <para>Display Name: Outgoing Email Server Location</para>
        /// </summary>
        [AttributeLogicalName("outgoingserverlocation")]
        [DisplayName("Outgoing Email Server Location")]
        [MaxLength(2084)]
        public string OutgoingServerLocation {
            get {
                return GetAttributeValue<string>("outgoingserverlocation");
            }
            set {
                SetAttributeValue("outgoingserverlocation", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether to use impersonation for accessing the mailbox to process outgoing emails.</para>
        /// <para>Display Name: Use Impersonation for Outgoing Email</para>
        /// </summary>
        [AttributeLogicalName("outgoinguseimpersonation")]
        [DisplayName("Use Impersonation for Outgoing Email")]
        public bool? OutgoingUseImpersonation {
            get {
                return GetAttributeValue<bool?>("outgoinguseimpersonation");
            }
            set {
                SetAttributeValue("outgoinguseimpersonation", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether to use the Secure Sockets Layer (SSL) protocol for outgoing email.</para>
        /// <para>Display Name: Use SSL for Outgoing Email</para>
        /// </summary>
        [AttributeLogicalName("outgoingusessl")]
        [DisplayName("Use SSL for Outgoing Email")]
        public bool? OutgoingUseSSL {
            get {
                return GetAttributeValue<bool?>("outgoingusessl");
            }
            set {
                SetAttributeValue("outgoingusessl", value);
            }
        }
        
        /// <summary>
        /// <para>Type the user name for outgoing email.</para>
        /// <para>Display Name: Outgoing Email User Name</para>
        /// </summary>
        [AttributeLogicalName("outgoingusername")]
        [DisplayName("Outgoing Email User Name")]
        [MaxLength(250)]
        public string OutgoingUsername {
            get {
                return GetAttributeValue<string>("outgoingusername");
            }
            set {
                SetAttributeValue("outgoingusername", value);
            }
        }
        
        /// <summary>
        /// <para>Email Server Profile Owner's email address</para>
        /// <para>Display Name: Email Server Profile Owner's email address</para>
        /// </summary>
        [AttributeLogicalName("owneremailaddress")]
        [DisplayName("Email Server Profile Owner\'s email address")]
        [MaxLength(100)]
        public string OwnerEmailAddress {
            get {
                return GetAttributeValue<string>("owneremailaddress");
            }
            set {
                SetAttributeValue("owneremailaddress", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the user or team who is assigned to manage the record. This field is updated every time the record is assigned to a different user.</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Select the business unit that owns the record.</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the team that owns the record.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the user that owns the record.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Type a meaningful name for the email server profile. This name is displayed when you need to select an email server profile.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time after which email messages that are received will be processed for mailboxes associated with the email server profile.</para>
        /// <para>Display Name: Process Emails Received After</para>
        /// </summary>
        [AttributeLogicalName("processemailsreceivedafter")]
        [DisplayName("Process Emails Received After")]
        public DateTime? ProcessEmailsReceivedAfter {
            get {
                return GetAttributeValue<DateTime?>("processemailsreceivedafter");
            }
            set {
                SetAttributeValue("processemailsreceivedafter", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether to send an email alert if more than 50% of the mailboxes in this email server profile failed to synchronize in an hour period.</para>
        /// <para>Display Name: Send an alert email to the owner of the email server profile reporting on major events</para>
        /// </summary>
        [AttributeLogicalName("sendemailalert")]
        [DisplayName("Send an alert email to the owner of the email server profile reporting on major e" +
            "vents")]
        public bool? SendEmailAlert {
            get {
                return GetAttributeValue<bool?>("sendemailalert");
            }
            set {
                SetAttributeValue("sendemailalert", value);
            }
        }
        
        /// <summary>
        /// <para>Select the profile's email server type.</para>
        /// <para>Display Name: Email Server Type</para>
        /// </summary>
        [AttributeLogicalName("servertype")]
        [DisplayName("Email Server Type")]
        public EmailServerProfile_ServerType? ServerType {
            get {
                return GetOptionSetValue<EmailServerProfile_ServerType>("servertype");
            }
            set {
                SetOptionSetValue("servertype", value);
            }
        }
        
        /// <summary>
        /// <para>Shows whether the email server profile is active or inactive.</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public EmailServerProfileState? StateCode {
            get {
                return GetOptionSetValue<EmailServerProfileState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the email server profile's status.</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public EmailServerProfile_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<EmailServerProfile_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether to timeout a single mailbox.</para>
        /// <para>Display Name: Timeout Mailbox Connection to Exchange</para>
        /// </summary>
        [AttributeLogicalName("timeoutmailboxconnection")]
        [DisplayName("Timeout Mailbox Connection to Exchange")]
        public bool? TimeoutMailboxConnection {
            get {
                return GetAttributeValue<bool?>("timeoutmailboxconnection");
            }
            set {
                SetAttributeValue("timeoutmailboxconnection", value);
            }
        }
        
        /// <summary>
        /// <para>Type the number of milliseconds to timeout a single mailbox. The upper limit is 100 seconds.</para>
        /// <para>Display Name: Timeout a Single Mailbox Connection After this Amount of Milliseconds</para>
        /// </summary>
        [AttributeLogicalName("timeoutmailboxconnectionafteramount")]
        [DisplayName("Timeout a Single Mailbox Connection After this Amount of Milliseconds")]
        [Range(0, 100000)]
        public int? TimeoutMailboxConnectionAfterAmount {
            get {
                return GetAttributeValue<int?>("timeoutmailboxconnectionafteramount");
            }
            set {
                SetAttributeValue("timeoutmailboxconnectionafteramount", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether to automatically discover the server location</para>
        /// <para>Display Name: Auto Discover Server Location</para>
        /// </summary>
        [AttributeLogicalName("useautodiscover")]
        [DisplayName("Auto Discover Server Location")]
        public bool? UseAutoDiscover {
            get {
                return GetAttributeValue<bool?>("useautodiscover");
            }
            set {
                SetAttributeValue("useautodiscover", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether to use the Exchange Online Tenant ID obtained from running Microsoft Azure PowerShell cmdlets (highly recommended). If you select No, you can edit this field manually</para>
        /// <para>Display Name: Use Default Tenant Id</para>
        /// </summary>
        [AttributeLogicalName("usedefaulttenantid")]
        [DisplayName("Use Default Tenant Id")]
        public bool? UseDefaultTenantId {
            get {
                return GetAttributeValue<bool?>("usedefaulttenantid");
            }
            set {
                SetAttributeValue("usedefaulttenantid", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether to use the same settings for incoming and outgoing connections.</para>
        /// <para>Display Name: Use Same Settings for Outgoing Connection</para>
        /// </summary>
        [AttributeLogicalName("usesamesettingsforoutgoingconnections")]
        [DisplayName("Use Same Settings for Outgoing Connection")]
        public bool? UseSameSettingsForOutgoingConnections {
            get {
                return GetAttributeValue<bool?>("usesamesettingsforoutgoingconnections");
            }
            set {
                SetAttributeValue("usesamesettingsforoutgoingconnections", value);
            }
        }
        
        /// <summary>
        /// <para>Version number of the email server profile.</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>The Azure Key Vault reference id</para>
        /// <para>Display Name: Key Vault Reference Id</para>
        /// </summary>
        [AttributeLogicalName("keyvaultreferenceid")]
        [DisplayName("Key Vault Reference Id")]
        public EntityReference keyvaultreferenceid {
            get {
                return GetAttributeValue<EntityReference>("keyvaultreferenceid");
            }
            set {
                SetAttributeValue("keyvaultreferenceid", value);
            }
        }
        
        /// <summary>
        /// <para>The managed identity id</para>
        /// <para>Display Name: Managed Identity Id</para>
        /// </summary>
        [AttributeLogicalName("managedidentityid")]
        [DisplayName("Managed Identity Id")]
        public EntityReference managedidentityid {
            get {
                return GetAttributeValue<EntityReference>("managedidentityid");
            }
            set {
                SetAttributeValue("managedidentityid", value);
            }
        }
        
        [RelationshipSchemaName("EmailServerProfile_Organization")]
        public IEnumerable<Organization> EmailServerProfile_Organization {
            get {
                return GetRelatedEntities<Organization>("EmailServerProfile_Organization", null);
            }
            set {
                SetRelatedEntities("EmailServerProfile_Organization", null, value);
            }
        }
        
        [RelationshipSchemaName("EmailServerProfile_SyncErrors")]
        public IEnumerable<SyncError> EmailServerProfile_SyncErrors {
            get {
                return GetRelatedEntities<SyncError>("EmailServerProfile_SyncErrors", null);
            }
            set {
                SetRelatedEntities("EmailServerProfile_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_emailserverprofile")]
        public BusinessUnit business_unit_emailserverprofile {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_emailserverprofile", null);
            }
            set {
                SetRelatedEntity("business_unit_emailserverprofile", null, value);
            }
        }
        
        [RelationshipSchemaName("emailserverprofile_mailbox")]
        public IEnumerable<Mailbox> emailserverprofile_mailbox {
            get {
                return GetRelatedEntities<Mailbox>("emailserverprofile_mailbox", null);
            }
            set {
                SetRelatedEntities("emailserverprofile_mailbox", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_emailserverprofile_createdby")]
        public SystemUser lk_emailserverprofile_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_emailserverprofile_createdby", null);
            }
            set {
                SetRelatedEntity("lk_emailserverprofile_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_emailserverprofile_createdonbehalfby")]
        public SystemUser lk_emailserverprofile_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_emailserverprofile_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_emailserverprofile_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_emailserverprofile_modifiedby")]
        public SystemUser lk_emailserverprofile_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_emailserverprofile_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_emailserverprofile_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_emailserverprofile_modifiedonbehalfby")]
        public SystemUser lk_emailserverprofile_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_emailserverprofile_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_emailserverprofile_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("organizationid")]
        [RelationshipSchemaName("organization_emailserverprofile")]
        public Organization organization_emailserverprofile {
            get {
                return GetRelatedEntity<Organization>("organization_emailserverprofile", null);
            }
            set {
                SetRelatedEntity("organization_emailserverprofile", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_emailserverprofile")]
        public Team team_emailserverprofile {
            get {
                return GetRelatedEntity<Team>("team_emailserverprofile", null);
            }
            set {
                SetRelatedEntity("team_emailserverprofile", null, value);
            }
        }
        
        public static EmailServerProfile Retrieve(IOrganizationService service, Guid id, params Expression<Func<EmailServerProfile,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Defines the amount and type of support a customer should receive.</para>
    /// <para>Display Name: Entitlement</para>
    /// </summary>
    [EntityLogicalName("entitlement")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class Entitlement : ExtendedEntity<EntitlementState, Entitlement_StatusCode> {
        
        public const string EntityLogicalName = "entitlement";
        
        public const int EntityTypeCode = 9700;
        
        public Entitlement() : 
                base(EntityLogicalName) {
        }
        
        public Entitlement(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("name");
            }
        }
        
        [AttributeLogicalName("entitlementid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("entitlementid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for entity instances</para>
        /// <para>Display Name: Entitlement</para>
        /// </summary>
        [AttributeLogicalName("entitlementid")]
        [DisplayName("Entitlement")]
        public Guid? EntitlementId {
            get {
                return GetAttributeValue<Guid?>("entitlementid");
            }
            set {
                SetId("entitlementid", value);
            }
        }
        
        /// <summary>
        /// <para>account_entitlement_Account</para>
        /// <para>Display Name: Account</para>
        /// </summary>
        [AttributeLogicalName("accountid")]
        [DisplayName("Account")]
        public EntityReference AccountId {
            get {
                return GetAttributeValue<EntityReference>("accountid");
            }
        }
        
        /// <summary>
        /// <para>Select the type of entitlement terms.</para>
        /// <para>Display Name: Allocation Type</para>
        /// </summary>
        [AttributeLogicalName("allocationtypecode")]
        [DisplayName("Allocation Type")]
        public Entitlement_AllocationTypeCode? AllocationTypeCode {
            get {
                return GetOptionSetValue<Entitlement_AllocationTypeCode>("allocationtypecode");
            }
            set {
                SetOptionSetValue("allocationtypecode", value);
            }
        }
        
        /// <summary>
        /// <para>contact_entitlement_ContactId</para>
        /// <para>Display Name: Contact</para>
        /// </summary>
        [AttributeLogicalName("contactid")]
        [DisplayName("Contact")]
        public EntityReference ContactId {
            get {
                return GetAttributeValue<EntityReference>("contactid");
            }
        }
        
        /// <summary>
        /// <para>lk_entitlement_createdby</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the entitlement was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>lk_entitlement_createdonbehalfby</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>contact_entitlement_Customer</para>
        /// <para>Display Name: Customer</para>
        /// </summary>
        [AttributeLogicalName("customerid")]
        [DisplayName("Customer")]
        public EntityReference CustomerId {
            get {
                return GetAttributeValue<EntityReference>("customerid");
            }
            set {
                SetAttributeValue("customerid", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether to decrease the remaining terms when the case is created or when it is resolved.</para>
        /// <para>Display Name: Decrease Remaining On</para>
        /// </summary>
        [AttributeLogicalName("decreaseremainingon")]
        [DisplayName("Decrease Remaining On")]
        public Entitlement_DecreaseRemainingOn? DecreaseRemainingOn {
            get {
                return GetOptionSetValue<Entitlement_DecreaseRemainingOn>("decreaseremainingon");
            }
            set {
                SetOptionSetValue("decreaseremainingon", value);
            }
        }
        
        /// <summary>
        /// <para>Type additional information to describe the Entitlement</para>
        /// <para>Display Name: Description</para>
        /// </summary>
        [AttributeLogicalName("description")]
        [DisplayName("Description")]
        public string Description {
            get {
                return GetAttributeValue<string>("description");
            }
            set {
                SetAttributeValue("description", value);
            }
        }
        
        /// <summary>
        /// <para>The primary email address for the entity.</para>
        /// <para>Display Name: Email Address</para>
        /// </summary>
        [AttributeLogicalName("emailaddress")]
        [DisplayName("Email Address")]
        [MaxLength(100)]
        public string EmailAddress {
            get {
                return GetAttributeValue<string>("emailaddress");
            }
            set {
                SetAttributeValue("emailaddress", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the date when the entitlement ends.</para>
        /// <para>Display Name: End Date</para>
        /// </summary>
        [AttributeLogicalName("enddate")]
        [DisplayName("End Date")]
        public DateTime? EndDate {
            get {
                return GetAttributeValue<DateTime?>("enddate");
            }
            set {
                SetAttributeValue("enddate", value);
            }
        }
        
        /// <summary>
        /// <para>entitlementtemplateid_RelationShip</para>
        /// <para>Display Name: Entitlement Template</para>
        /// </summary>
        [AttributeLogicalName("entitlementtemplateid")]
        [DisplayName("Entitlement Template")]
        public EntityReference EntitlementTemplateId {
            get {
                return GetAttributeValue<EntityReference>("entitlementtemplateid");
            }
            set {
                SetAttributeValue("entitlementtemplateid", value);
            }
        }
        
        /// <summary>
        /// <para>Exchange rate for the currency associated with the contact with respect to the base currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("Exchange Rate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the data import or data migration that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Shows whether this entitlement is the default one for the specified customer.</para>
        /// <para>Display Name: Is Default</para>
        /// </summary>
        [AttributeLogicalName("isdefault")]
        [DisplayName("Is Default")]
        public bool? IsDefault {
            get {
                return GetAttributeValue<bool?>("isdefault");
            }
            set {
                SetAttributeValue("isdefault", value);
            }
        }
        
        /// <summary>
        /// <para>Select the access someone will have to the knowledge base on the portal.</para>
        /// <para>Display Name: KB Access Level</para>
        /// </summary>
        [AttributeLogicalName("kbaccesslevel")]
        [DisplayName("KB Access Level")]
        public Entitlement_KbAccessLevel? KbAccessLevel {
            get {
                return GetOptionSetValue<Entitlement_KbAccessLevel>("kbaccesslevel");
            }
            set {
                SetOptionSetValue("kbaccesslevel", value);
            }
        }
        
        /// <summary>
        /// <para>lk_entitlement_modifiedby</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>lk_entitlement_modifiedonbehalfby</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Type a meaningful name for the entitlement.</para>
        /// <para>Display Name: Entitlement Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Entitlement Name")]
        [MaxLength(100)]
        public string Name {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>owner_entitlement</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>business_unit_entitlement</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>team_entitlement</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>user_entitlement</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Type a meaningful name for the entitlement.</para>
        /// <para>Display Name: Entitlement Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Entitlement Name")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the Process.</para>
        /// <para>Display Name: Process</para>
        /// </summary>
        [AttributeLogicalName("processid")]
        [DisplayName("Process")]
        public Guid? ProcessId {
            get {
                return GetAttributeValue<Guid?>("processid");
            }
            set {
                SetAttributeValue("processid", value);
            }
        }
        
        /// <summary>
        /// <para>Type the total number of entitlement terms that are left.</para>
        /// <para>Display Name: Remaining Terms</para>
        /// </summary>
        [AttributeLogicalName("remainingterms")]
        [DisplayName("Remaining Terms")]
        public decimal? RemainingTerms {
            get {
                return GetAttributeValue<decimal?>("remainingterms");
            }
            set {
                SetAttributeValue("remainingterms", value);
            }
        }
        
        /// <summary>
        /// <para>Tells whether case creation is restricted based on entitlement terms.</para>
        /// <para>Display Name: Restrict based on entitlement terms</para>
        /// </summary>
        [AttributeLogicalName("restrictcasecreation")]
        [DisplayName("Restrict based on entitlement terms")]
        public bool? RestrictCaseCreation {
            get {
                return GetAttributeValue<bool?>("restrictcasecreation");
            }
            set {
                SetAttributeValue("restrictcasecreation", value);
            }
        }
        
        /// <summary>
        /// <para>sla_entitlement</para>
        /// <para>Display Name: SLA</para>
        /// </summary>
        [AttributeLogicalName("slaid")]
        [DisplayName("SLA")]
        public EntityReference SLAId {
            get {
                return GetAttributeValue<EntityReference>("slaid");
            }
            set {
                SetAttributeValue("slaid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the Stage.</para>
        /// <para>Display Name: Process Stage</para>
        /// </summary>
        [AttributeLogicalName("stageid")]
        [DisplayName("Process Stage")]
        public Guid? StageId {
            get {
                return GetAttributeValue<Guid?>("stageid");
            }
            set {
                SetAttributeValue("stageid", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the date when the entitlement starts.</para>
        /// <para>Display Name: Start Date</para>
        /// </summary>
        [AttributeLogicalName("startdate")]
        [DisplayName("Start Date")]
        public DateTime? StartDate {
            get {
                return GetAttributeValue<DateTime?>("startdate");
            }
            set {
                SetAttributeValue("startdate", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public EntitlementState? StateCode {
            get {
                return GetOptionSetValue<EntitlementState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the reason code that explains the status of the entitlement.</para>
        /// <para>Display Name: Status Code</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Code")]
        public Entitlement_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<Entitlement_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Type the total number of entitlement terms.</para>
        /// <para>Display Name: Total Terms</para>
        /// </summary>
        [AttributeLogicalName("totalterms")]
        [DisplayName("Total Terms")]
        public decimal? TotalTerms {
            get {
                return GetAttributeValue<decimal?>("totalterms");
            }
            set {
                SetAttributeValue("totalterms", value);
            }
        }
        
        /// <summary>
        /// <para>TransactionCurrency_Entitlement</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Traversed Path</para>
        /// </summary>
        [AttributeLogicalName("traversedpath")]
        [DisplayName("Traversed Path")]
        [MaxLength(1250)]
        public string TraversedPath {
            get {
                return GetAttributeValue<string>("traversedpath");
            }
            set {
                SetAttributeValue("traversedpath", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version number of the entitlement item.</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Entity type for which the entitlement applies</para>
        /// <para>Display Name: Entity Type</para>
        /// </summary>
        [AttributeLogicalName("entitytype")]
        [DisplayName("Entity Type")]
        public entitytype? entitytype {
            get {
                return GetOptionSetValue<entitytype>("entitytype");
            }
            set {
                SetOptionSetValue("entitytype", value);
            }
        }
        
        /// <summary>
        /// <para>The work order entities to which the entitlement is applicable.</para>
        /// <para>Display Name: Applies To</para>
        /// </summary>
        [AttributeLogicalName("msdyn_appliesto")]
        [DisplayName("Applies To")]
        public msdyn_entitlementappliesto? msdyn_AppliesTo {
            get {
                return GetOptionSetValue<msdyn_entitlementappliesto>("msdyn_appliesto");
            }
            set {
                SetOptionSetValue("msdyn_appliesto", value);
            }
        }
        
        /// <summary>
        /// <para>The priority level when considering which eligible entitlement to apply, where the lower the number the higher the priority.</para>
        /// <para>Display Name: Entitlement Prioritization</para>
        /// </summary>
        [AttributeLogicalName("msdyn_entitlementprioritization")]
        [DisplayName("Entitlement Prioritization")]
        [Range(-2147483648, 2147483647)]
        public int? msdyn_EntitlementPrioritization {
            get {
                return GetAttributeValue<int?>("msdyn_entitlementprioritization");
            }
            set {
                SetAttributeValue("msdyn_entitlementprioritization", value);
            }
        }
        
        /// <summary>
        /// <para>The percent discount the entitlement applies to the work order.</para>
        /// <para>Display Name: % Discount</para>
        /// </summary>
        [AttributeLogicalName("msdyn_percentdiscount")]
        [DisplayName("% Discount")]
        public double? msdyn_PercentDiscount {
            get {
                return GetAttributeValue<double?>("msdyn_percentdiscount");
            }
            set {
                SetAttributeValue("msdyn_percentdiscount", value);
            }
        }
        
        /// <summary>
        /// <para>The price list that the entitlement applies to the work order.</para>
        /// <para>Display Name: Price List To Apply</para>
        /// </summary>
        [AttributeLogicalName("msdyn_pricelisttoapply")]
        [DisplayName("Price List To Apply")]
        public EntityReference msdyn_PriceListToApply {
            get {
                return GetAttributeValue<EntityReference>("msdyn_pricelisttoapply");
            }
            set {
                SetAttributeValue("msdyn_pricelisttoapply", value);
            }
        }
        
        [RelationshipSchemaName("Entitlement_SyncErrors")]
        public IEnumerable<SyncError> Entitlement_SyncErrors {
            get {
                return GetRelatedEntities<SyncError>("Entitlement_SyncErrors", null);
            }
            set {
                SetRelatedEntities("Entitlement_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("transactioncurrencyid")]
        [RelationshipSchemaName("TransactionCurrency_Entitlement")]
        public TransactionCurrency TransactionCurrency_Entitlement {
            get {
                return GetRelatedEntity<TransactionCurrency>("TransactionCurrency_Entitlement", null);
            }
            set {
                SetRelatedEntity("TransactionCurrency_Entitlement", null, value);
            }
        }
        
        [AttributeLogicalName("accountid")]
        [RelationshipSchemaName("account_entitlement_Account")]
        public Account account_entitlement_Account {
            get {
                return GetRelatedEntity<Account>("account_entitlement_Account", null);
            }
            set {
                SetRelatedEntity("account_entitlement_Account", null, value);
            }
        }
        
        [AttributeLogicalName("customerid")]
        [RelationshipSchemaName("account_entitlement_Customer")]
        public Account account_entitlement_Customer {
            get {
                return GetRelatedEntity<Account>("account_entitlement_Customer", null);
            }
            set {
                SetRelatedEntity("account_entitlement_Customer", null, value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_entitlement")]
        public BusinessUnit business_unit_entitlement {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_entitlement", null);
            }
            set {
                SetRelatedEntity("business_unit_entitlement", null, value);
            }
        }
        
        [AttributeLogicalName("contactid")]
        [RelationshipSchemaName("contact_entitlement_ContactId")]
        public Contact contact_entitlement_ContactId {
            get {
                return GetRelatedEntity<Contact>("contact_entitlement_ContactId", null);
            }
            set {
                SetRelatedEntity("contact_entitlement_ContactId", null, value);
            }
        }
        
        [AttributeLogicalName("customerid")]
        [RelationshipSchemaName("contact_entitlement_Customer")]
        public Contact contact_entitlement_Customer {
            get {
                return GetRelatedEntity<Contact>("contact_entitlement_Customer", null);
            }
            set {
                SetRelatedEntity("contact_entitlement_Customer", null, value);
            }
        }
        
        [RelationshipSchemaName("entitlement_ActivityParties")]
        public IEnumerable<ActivityParty> entitlement_ActivityParties {
            get {
                return GetRelatedEntities<ActivityParty>("entitlement_ActivityParties", null);
            }
            set {
                SetRelatedEntities("entitlement_ActivityParties", null, value);
            }
        }
        
        [RelationshipSchemaName("entitlement_ActivityPointers")]
        public IEnumerable<ActivityPointer> entitlement_ActivityPointers {
            get {
                return GetRelatedEntities<ActivityPointer>("entitlement_ActivityPointers", null);
            }
            set {
                SetRelatedEntities("entitlement_ActivityPointers", null, value);
            }
        }
        
        [RelationshipSchemaName("entitlement_Appointments")]
        public IEnumerable<Appointment> entitlement_Appointments {
            get {
                return GetRelatedEntities<Appointment>("entitlement_Appointments", null);
            }
            set {
                SetRelatedEntities("entitlement_Appointments", null, value);
            }
        }
        
        [RelationshipSchemaName("entitlement_Emails")]
        public IEnumerable<Email> entitlement_Emails {
            get {
                return GetRelatedEntities<Email>("entitlement_Emails", null);
            }
            set {
                SetRelatedEntities("entitlement_Emails", null, value);
            }
        }
        
        [RelationshipSchemaName("entitlement_Faxes")]
        public IEnumerable<Fax> entitlement_Faxes {
            get {
                return GetRelatedEntities<Fax>("entitlement_Faxes", null);
            }
            set {
                SetRelatedEntities("entitlement_Faxes", null, value);
            }
        }
        
        [RelationshipSchemaName("entitlement_IncidentResolutions")]
        public IEnumerable<IncidentResolution> entitlement_IncidentResolutions {
            get {
                return GetRelatedEntities<IncidentResolution>("entitlement_IncidentResolutions", null);
            }
            set {
                SetRelatedEntities("entitlement_IncidentResolutions", null, value);
            }
        }
        
        [RelationshipSchemaName("entitlement_Letters")]
        public IEnumerable<Letter> entitlement_Letters {
            get {
                return GetRelatedEntities<Letter>("entitlement_Letters", null);
            }
            set {
                SetRelatedEntities("entitlement_Letters", null, value);
            }
        }
        
        [RelationshipSchemaName("entitlement_OpportunityCloses")]
        public IEnumerable<OpportunityClose> entitlement_OpportunityCloses {
            get {
                return GetRelatedEntities<OpportunityClose>("entitlement_OpportunityCloses", null);
            }
            set {
                SetRelatedEntities("entitlement_OpportunityCloses", null, value);
            }
        }
        
        [RelationshipSchemaName("entitlement_PhoneCalls")]
        public IEnumerable<PhoneCall> entitlement_PhoneCalls {
            get {
                return GetRelatedEntities<PhoneCall>("entitlement_PhoneCalls", null);
            }
            set {
                SetRelatedEntities("entitlement_PhoneCalls", null, value);
            }
        }
        
        [RelationshipSchemaName("entitlement_RecurringAppointmentMasters")]
        public IEnumerable<RecurringAppointmentMaster> entitlement_RecurringAppointmentMasters {
            get {
                return GetRelatedEntities<RecurringAppointmentMaster>("entitlement_RecurringAppointmentMasters", null);
            }
            set {
                SetRelatedEntities("entitlement_RecurringAppointmentMasters", null, value);
            }
        }
        
        [RelationshipSchemaName("entitlement_ServiceAppointments")]
        public IEnumerable<ServiceAppointment> entitlement_ServiceAppointments {
            get {
                return GetRelatedEntities<ServiceAppointment>("entitlement_ServiceAppointments", null);
            }
            set {
                SetRelatedEntities("entitlement_ServiceAppointments", null, value);
            }
        }
        
        [RelationshipSchemaName("entitlement_SocialActivities")]
        public IEnumerable<SocialActivity> entitlement_SocialActivities {
            get {
                return GetRelatedEntities<SocialActivity>("entitlement_SocialActivities", null);
            }
            set {
                SetRelatedEntities("entitlement_SocialActivities", null, value);
            }
        }
        
        [RelationshipSchemaName("entitlement_Tasks")]
        public IEnumerable<Task> entitlement_Tasks {
            get {
                return GetRelatedEntities<Task>("entitlement_Tasks", null);
            }
            set {
                SetRelatedEntities("entitlement_Tasks", null, value);
            }
        }
        
        [RelationshipSchemaName("entitlement_Teams")]
        public IEnumerable<Team> entitlement_Teams {
            get {
                return GetRelatedEntities<Team>("entitlement_Teams", null);
            }
            set {
                SetRelatedEntities("entitlement_Teams", null, value);
            }
        }
        
        [RelationshipSchemaName("entitlement_cases")]
        public IEnumerable<Incident> entitlement_cases {
            get {
                return GetRelatedEntities<Incident>("entitlement_cases", null);
            }
            set {
                SetRelatedEntities("entitlement_cases", null, value);
            }
        }
        
        [RelationshipSchemaName("entitlement_connections1")]
        public IEnumerable<Connection> entitlement_connections1 {
            get {
                return GetRelatedEntities<Connection>("entitlement_connections1", null);
            }
            set {
                SetRelatedEntities("entitlement_connections1", null, value);
            }
        }
        
        [RelationshipSchemaName("entitlement_connections2")]
        public IEnumerable<Connection> entitlement_connections2 {
            get {
                return GetRelatedEntities<Connection>("entitlement_connections2", null);
            }
            set {
                SetRelatedEntities("entitlement_connections2", null, value);
            }
        }
        
        [RelationshipSchemaName("entitlementcontacts_association")]
        public IEnumerable<Contact> entitlementcontacts_association {
            get {
                return GetRelatedEntities<Contact>("entitlementcontacts_association", null);
            }
            set {
                SetRelatedEntities("entitlementcontacts_association", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_entitlement_createdby")]
        public SystemUser lk_entitlement_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_entitlement_createdby", null);
            }
            set {
                SetRelatedEntity("lk_entitlement_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_entitlement_createdonbehalfby")]
        public SystemUser lk_entitlement_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_entitlement_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_entitlement_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_entitlement_modifiedby")]
        public SystemUser lk_entitlement_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_entitlement_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_entitlement_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_entitlement_modifiedonbehalfby")]
        public SystemUser lk_entitlement_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_entitlement_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_entitlement_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("slaid")]
        [RelationshipSchemaName("sla_entitlement")]
        public SLA sla_entitlement {
            get {
                return GetRelatedEntity<SLA>("sla_entitlement", null);
            }
            set {
                SetRelatedEntity("sla_entitlement", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_entitlement")]
        public Team team_entitlement {
            get {
                return GetRelatedEntity<Team>("team_entitlement", null);
            }
            set {
                SetRelatedEntity("team_entitlement", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_entitlement")]
        public SystemUser user_entitlement {
            get {
                return GetRelatedEntity<SystemUser>("user_entitlement", null);
            }
            set {
                SetRelatedEntity("user_entitlement", null, value);
            }
        }
        
        public static Entitlement Retrieve(IOrganizationService service, Guid id, params Expression<Func<Entitlement,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Entitlement Contact</para>
    /// </summary>
    [EntityLogicalName("entitlementcontacts")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class EntitlementContacts : ExtendedEntity<EmptyEnum, EmptyEnum> {
        
        public const string EntityLogicalName = "entitlementcontacts";
        
        public const string RelationshipSchemaName = "EntitlementContacts";
        
        public const int EntityTypeCode = 7272;
        
        public EntitlementContacts() : 
                base(EntityLogicalName) {
        }
        
        public EntitlementContacts(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("name");
            }
        }
        
        [AttributeLogicalName("entitlementcontactid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("entitlementcontactid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the contacts for the entitlements.</para>
        /// </summary>
        [AttributeLogicalName("entitlementcontactid")]
        public Guid? EntitlementContactId {
            get {
                return GetAttributeValue<Guid?>("entitlementcontactid");
            }
            set {
                SetId("entitlementcontactid", value);
            }
        }
        
        [AttributeLogicalName("contactid")]
        public Guid? ContactId {
            get {
                return GetAttributeValue<Guid?>("contactid");
            }
        }
        
        [AttributeLogicalName("entitlementid")]
        public Guid? EntitlementId {
            get {
                return GetAttributeValue<Guid?>("entitlementid");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>name</para>
        /// <para>Display Name: name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("name")]
        [MaxLength(100)]
        public string Name {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>name</para>
        /// <para>Display Name: name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("name")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        [RelationshipSchemaName("entitlementcontacts_Teams")]
        public IEnumerable<Team> entitlementcontacts_Teams {
            get {
                return GetRelatedEntities<Team>("entitlementcontacts_Teams", null);
            }
            set {
                SetRelatedEntities("entitlementcontacts_Teams", null, value);
            }
        }
        
        public static EntitlementContacts Retrieve(IOrganizationService service, Guid id, params Expression<Func<EntitlementContacts,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Activity that tracks call outcome and number of pages for a fax and optionally stores an electronic copy of the document.</para>
    /// <para>Display Name: Fax</para>
    /// </summary>
    [EntityLogicalName("fax")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class Fax : ExtendedEntity<FaxState, Fax_StatusCode> {
        
        public const string EntityLogicalName = "fax";
        
        public const int EntityTypeCode = 4204;
        
        public Fax() : 
                base(EntityLogicalName) {
        }
        
        public Fax(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("subject");
            }
        }
        
        [AttributeLogicalName("activityid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("activityid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the fax activity.</para>
        /// <para>Display Name: Fax</para>
        /// </summary>
        [AttributeLogicalName("activityid")]
        [DisplayName("Fax")]
        public Guid? ActivityId {
            get {
                return GetAttributeValue<Guid?>("activityid");
            }
            set {
                SetId("activityid", value);
            }
        }
        
        /// <summary>
        /// <para>Type of activity.</para>
        /// <para>Display Name: Activity Type</para>
        /// </summary>
        [AttributeLogicalName("activitytypecode")]
        [DisplayName("Activity Type")]
        public string ActivityTypeCode {
            get {
                return GetAttributeValue<string>("activitytypecode");
            }
        }
        
        /// <summary>
        /// <para>Type the number of minutes spent creating and sending the fax. The duration is used in reporting.</para>
        /// <para>Display Name: Duration</para>
        /// </summary>
        [AttributeLogicalName("actualdurationminutes")]
        [DisplayName("Duration")]
        [Range(0, 2147483647)]
        public int? ActualDurationMinutes {
            get {
                return GetAttributeValue<int?>("actualdurationminutes");
            }
            set {
                SetAttributeValue("actualdurationminutes", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the actual end date and time of the fax. By default, it displays the date and time when the activity was completed or canceled, but can be edited to capture the actual time to create and send the fax.</para>
        /// <para>Display Name: Actual End</para>
        /// </summary>
        [AttributeLogicalName("actualend")]
        [DisplayName("Actual End")]
        public DateTime? ActualEnd {
            get {
                return GetAttributeValue<DateTime?>("actualend");
            }
            set {
                SetAttributeValue("actualend", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the actual start date and time for the fax. By default, it displays the date and time when the activity was created, but can be edited to capture the actual time to create and send the fax.</para>
        /// <para>Display Name: Actual Start</para>
        /// </summary>
        [AttributeLogicalName("actualstart")]
        [DisplayName("Actual Start")]
        public DateTime? ActualStart {
            get {
                return GetAttributeValue<DateTime?>("actualstart");
            }
            set {
                SetAttributeValue("actualstart", value);
            }
        }
        
        /// <summary>
        /// <para>Type the billing code for the fax to make sure the fax is charged to the correct sender or customer account.</para>
        /// <para>Display Name: Billing Code</para>
        /// </summary>
        [AttributeLogicalName("billingcode")]
        [DisplayName("Billing Code")]
        [MaxLength(50)]
        public string BillingCode {
            get {
                return GetAttributeValue<string>("billingcode");
            }
            set {
                SetAttributeValue("billingcode", value);
            }
        }
        
        /// <summary>
        /// <para>Type a category to identify the fax type, such as sales offer or press release, to tie the fax to a business group or function.</para>
        /// <para>Display Name: Category</para>
        /// </summary>
        [AttributeLogicalName("category")]
        [DisplayName("Category")]
        [MaxLength(250)]
        public string Category {
            get {
                return GetAttributeValue<string>("category");
            }
            set {
                SetAttributeValue("category", value);
            }
        }
        
        /// <summary>
        /// <para>Type the name of the cover page to use when sending the fax.</para>
        /// <para>Display Name: Cover Page Name</para>
        /// </summary>
        [AttributeLogicalName("coverpagename")]
        [DisplayName("Cover Page Name")]
        [MaxLength(100)]
        public string CoverPageName {
            get {
                return GetAttributeValue<string>("coverpagename");
            }
            set {
                SetAttributeValue("coverpagename", value);
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record on behalf of another user.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Type additional information to describe the fax, such as the primary message or the products and services featured.</para>
        /// <para>Display Name: Description</para>
        /// </summary>
        [AttributeLogicalName("description")]
        [DisplayName("Description")]
        public string Description {
            get {
                return GetAttributeValue<string>("description");
            }
            set {
                SetAttributeValue("description", value);
            }
        }
        
        /// <summary>
        /// <para>Select the direction of the fax as incoming or outbound.</para>
        /// <para>Display Name: Direction</para>
        /// </summary>
        [AttributeLogicalName("directioncode")]
        [DisplayName("Direction")]
        public bool? DirectionCode {
            get {
                return GetAttributeValue<bool?>("directioncode");
            }
            set {
                SetAttributeValue("directioncode", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("Exchange Rate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Type the recipient's fax number.</para>
        /// <para>Display Name: Fax Number</para>
        /// </summary>
        [AttributeLogicalName("faxnumber")]
        [DisplayName("Fax Number")]
        [MaxLength(200)]
        public string FaxNumber {
            get {
                return GetAttributeValue<string>("faxnumber");
            }
            set {
                SetAttributeValue("faxnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the account, contact, lead, queue, or user who sent the fax.</para>
        /// <para>Display Name: From</para>
        /// </summary>
        [AttributeLogicalName("from")]
        [DisplayName("From")]
        public IEnumerable<ActivityParty> From {
            get {
                return GetEntityCollection<ActivityParty>("from");
            }
            set {
                SetEntityCollection("from", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the data import or data migration that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Information regarding whether the fax activity was billed as part of resolving a case.</para>
        /// <para>Display Name: Is Billed</para>
        /// </summary>
        [AttributeLogicalName("isbilled")]
        [DisplayName("Is Billed")]
        public bool? IsBilled {
            get {
                return GetAttributeValue<bool?>("isbilled");
            }
            set {
                SetAttributeValue("isbilled", value);
            }
        }
        
        /// <summary>
        /// <para>Information regarding whether the activity is a regular activity type or event type.</para>
        /// <para>Display Name: Is Regular Activity</para>
        /// </summary>
        [AttributeLogicalName("isregularactivity")]
        [DisplayName("Is Regular Activity")]
        public bool? IsRegularActivity {
            get {
                return GetAttributeValue<bool?>("isregularactivity");
            }
        }
        
        /// <summary>
        /// <para>Indication of whether the fax activity was created by a workflow rule.</para>
        /// <para>Display Name: Is Workflow Created</para>
        /// </summary>
        [AttributeLogicalName("isworkflowcreated")]
        [DisplayName("Is Workflow Created")]
        public bool? IsWorkflowCreated {
            get {
                return GetAttributeValue<bool?>("isworkflowcreated");
            }
            set {
                SetAttributeValue("isworkflowcreated", value);
            }
        }
        
        /// <summary>
        /// <para>Contains the date and time stamp of the last on hold time.</para>
        /// <para>Display Name: Last On Hold Time</para>
        /// </summary>
        [AttributeLogicalName("lastonholdtime")]
        [DisplayName("Last On Hold Time")]
        public DateTime? LastOnHoldTime {
            get {
                return GetAttributeValue<DateTime?>("lastonholdtime");
            }
            set {
                SetAttributeValue("lastonholdtime", value);
            }
        }
        
        /// <summary>
        /// <para>Shows who last updated the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Shows who last updated the record on behalf of another user.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Type the number of pages included in the fax.</para>
        /// <para>Display Name: Number of Pages</para>
        /// </summary>
        [AttributeLogicalName("numberofpages")]
        [DisplayName("Number of Pages")]
        [Range(0, 1000000000)]
        public int? NumberOfPages {
            get {
                return GetAttributeValue<int?>("numberofpages");
            }
            set {
                SetAttributeValue("numberofpages", value);
            }
        }
        
        /// <summary>
        /// <para>Shows how long, in minutes, that the record was on hold.</para>
        /// <para>Display Name: On Hold Time (Minutes)</para>
        /// </summary>
        [AttributeLogicalName("onholdtime")]
        [DisplayName("On Hold Time (Minutes)")]
        [Range(-2147483648, 2147483647)]
        public int? OnHoldTime {
            get {
                return GetAttributeValue<int?>("onholdtime");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the user or team who is assigned to manage the record. This field is updated every time the record is assigned to a different user.</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the business unit that owns the fax activity.</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the team that owns the fax activity.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user that owns the fax activity.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Type a short description about the objective or primary topic of the fax.</para>
        /// <para>Display Name: Subject</para>
        /// </summary>
        [AttributeLogicalName("subject")]
        [DisplayName("Subject")]
        [MaxLength(200)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("subject");
            }
            set {
                SetAttributeValue("subject", value);
            }
        }
        
        /// <summary>
        /// <para>Select the priority so that preferred customers or critical issues are handled quickly.</para>
        /// <para>Display Name: Priority</para>
        /// </summary>
        [AttributeLogicalName("prioritycode")]
        [DisplayName("Priority")]
        public Fax_PriorityCode? PriorityCode {
            get {
                return GetOptionSetValue<Fax_PriorityCode>("prioritycode");
            }
            set {
                SetOptionSetValue("prioritycode", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the process.</para>
        /// <para>Display Name: Process</para>
        /// </summary>
        [AttributeLogicalName("processid")]
        [DisplayName("Process")]
        public Guid? ProcessId {
            get {
                return GetAttributeValue<Guid?>("processid");
            }
            set {
                SetAttributeValue("processid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the object with which the fax activity is associated.</para>
        /// <para>Display Name: Regarding</para>
        /// </summary>
        [AttributeLogicalName("regardingobjectid")]
        [DisplayName("Regarding")]
        public EntityReference RegardingObjectId {
            get {
                return GetAttributeValue<EntityReference>("regardingobjectid");
            }
            set {
                SetAttributeValue("regardingobjectid", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the service level agreement (SLA) that you want to apply to the fax record.</para>
        /// <para>Display Name: SLA</para>
        /// </summary>
        [AttributeLogicalName("slaid")]
        [DisplayName("SLA")]
        public EntityReference SLAId {
            get {
                return GetAttributeValue<EntityReference>("slaid");
            }
            set {
                SetAttributeValue("slaid", value);
            }
        }
        
        /// <summary>
        /// <para>Last SLA that was applied to this fax. This field is for internal use only.</para>
        /// <para>Display Name: Last SLA applied</para>
        /// </summary>
        [AttributeLogicalName("slainvokedid")]
        [DisplayName("Last SLA applied")]
        public EntityReference SLAInvokedId {
            get {
                return GetAttributeValue<EntityReference>("slainvokedid");
            }
        }
        
        /// <summary>
        /// <para>Shows the expected duration of the fax activity, in minutes.</para>
        /// <para>Display Name: Scheduled Duration</para>
        /// </summary>
        [AttributeLogicalName("scheduleddurationminutes")]
        [DisplayName("Scheduled Duration")]
        [Range(0, 2147483647)]
        public int? ScheduledDurationMinutes {
            get {
                return GetAttributeValue<int?>("scheduleddurationminutes");
            }
        }
        
        /// <summary>
        /// <para>Enter the expected due date and time.</para>
        /// <para>Display Name: Due Date</para>
        /// </summary>
        [AttributeLogicalName("scheduledend")]
        [DisplayName("Due Date")]
        public DateTime? ScheduledEnd {
            get {
                return GetAttributeValue<DateTime?>("scheduledend");
            }
            set {
                SetAttributeValue("scheduledend", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the expected due date and time.</para>
        /// <para>Display Name: Start Date</para>
        /// </summary>
        [AttributeLogicalName("scheduledstart")]
        [DisplayName("Start Date")]
        public DateTime? ScheduledStart {
            get {
                return GetAttributeValue<DateTime?>("scheduledstart");
            }
            set {
                SetAttributeValue("scheduledstart", value);
            }
        }
        
        /// <summary>
        /// <para>service_faxes</para>
        /// <para>Display Name: Service</para>
        /// </summary>
        [AttributeLogicalName("serviceid")]
        [DisplayName("Service")]
        public EntityReference ServiceId {
            get {
                return GetAttributeValue<EntityReference>("serviceid");
            }
            set {
                SetAttributeValue("serviceid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time by which the activities are sorted.</para>
        /// <para>Display Name: Sort Date</para>
        /// </summary>
        [AttributeLogicalName("sortdate")]
        [DisplayName("Sort Date")]
        public DateTime? SortDate {
            get {
                return GetAttributeValue<DateTime?>("sortdate");
            }
            set {
                SetAttributeValue("sortdate", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the stage.</para>
        /// <para>Display Name: (Deprecated) Process Stage</para>
        /// </summary>
        [AttributeLogicalName("stageid")]
        [DisplayName("(Deprecated) Process Stage")]
        public Guid? StageId {
            get {
                return GetAttributeValue<Guid?>("stageid");
            }
            set {
                SetAttributeValue("stageid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows whether the fax activity is open, completed, or canceled. Completed and canceled fax activities are read-only and can't be edited.</para>
        /// <para>Display Name: Activity Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Activity Status")]
        public FaxState? StateCode {
            get {
                return GetOptionSetValue<FaxState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the fax's status.</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public Fax_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<Fax_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>Type a subcategory to identify the fax type to relate the activity to a specific product, sales region, business group, or other function.</para>
        /// <para>Display Name: Sub-Category</para>
        /// </summary>
        [AttributeLogicalName("subcategory")]
        [DisplayName("Sub-Category")]
        [MaxLength(250)]
        public string Subcategory {
            get {
                return GetAttributeValue<string>("subcategory");
            }
            set {
                SetAttributeValue("subcategory", value);
            }
        }
        
        /// <summary>
        /// <para>Type a short description about the objective or primary topic of the fax.</para>
        /// <para>Display Name: Subject</para>
        /// </summary>
        [AttributeLogicalName("subject")]
        [DisplayName("Subject")]
        [MaxLength(200)]
        public string Subject {
            get {
                return GetAttributeValue<string>("subject");
            }
            set {
                SetAttributeValue("subject", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Subscription</para>
        /// </summary>
        [AttributeLogicalName("subscriptionid")]
        [DisplayName("Subscription")]
        public Guid? SubscriptionId {
            get {
                return GetAttributeValue<Guid?>("subscriptionid");
            }
            set {
                SetAttributeValue("subscriptionid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the account, contact, lead, queue, or user recipients for the fax.</para>
        /// <para>Display Name: To</para>
        /// </summary>
        [AttributeLogicalName("to")]
        [DisplayName("To")]
        public IEnumerable<ActivityParty> To {
            get {
                return GetEntityCollection<ActivityParty>("to");
            }
            set {
                SetEntityCollection("to", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the local currency for the record to make sure budgets are reported in the correct currency.</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: (Deprecated) Traversed Path</para>
        /// </summary>
        [AttributeLogicalName("traversedpath")]
        [DisplayName("(Deprecated) Traversed Path")]
        [MaxLength(1250)]
        public string TraversedPath {
            get {
                return GetAttributeValue<string>("traversedpath");
            }
            set {
                SetAttributeValue("traversedpath", value);
            }
        }
        
        /// <summary>
        /// <para>Type the Transmitting Subscriber ID (TSID) associated with a send action. This is typically a combination of the recipient's fax or phone number and company name.</para>
        /// <para>Display Name: Transmit. Station Id</para>
        /// </summary>
        [AttributeLogicalName("tsid")]
        [DisplayName("Transmit. Station Id")]
        [MaxLength(20)]
        public string Tsid {
            get {
                return GetAttributeValue<string>("tsid");
            }
            set {
                SetAttributeValue("tsid", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version number of the fax.</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Account_Faxes")]
        public Account Account_Faxes {
            get {
                return GetRelatedEntity<Account>("Account_Faxes", null);
            }
            set {
                SetRelatedEntity("Account_Faxes", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("CampaignActivity_Faxes")]
        public CampaignActivity CampaignActivity_Faxes {
            get {
                return GetRelatedEntity<CampaignActivity>("CampaignActivity_Faxes", null);
            }
            set {
                SetRelatedEntity("CampaignActivity_Faxes", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Campaign_Faxes")]
        public Campaign Campaign_Faxes {
            get {
                return GetRelatedEntity<Campaign>("Campaign_Faxes", null);
            }
            set {
                SetRelatedEntity("Campaign_Faxes", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Contact_Faxes")]
        public Contact Contact_Faxes {
            get {
                return GetRelatedEntity<Contact>("Contact_Faxes", null);
            }
            set {
                SetRelatedEntity("Contact_Faxes", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Contract_Faxes")]
        public Contract Contract_Faxes {
            get {
                return GetRelatedEntity<Contract>("Contract_Faxes", null);
            }
            set {
                SetRelatedEntity("Contract_Faxes", null, value);
            }
        }
        
        [RelationshipSchemaName("Fax_QueueItem")]
        public IEnumerable<QueueItem> Fax_QueueItem {
            get {
                return GetRelatedEntities<QueueItem>("Fax_QueueItem", null);
            }
            set {
                SetRelatedEntities("Fax_QueueItem", null, value);
            }
        }
        
        [RelationshipSchemaName("Fax_SyncErrors")]
        public IEnumerable<SyncError> Fax_SyncErrors {
            get {
                return GetRelatedEntities<SyncError>("Fax_SyncErrors", null);
            }
            set {
                SetRelatedEntities("Fax_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Incident_Faxes")]
        public Incident Incident_Faxes {
            get {
                return GetRelatedEntity<Incident>("Incident_Faxes", null);
            }
            set {
                SetRelatedEntity("Incident_Faxes", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Invoice_Faxes")]
        public Invoice Invoice_Faxes {
            get {
                return GetRelatedEntity<Invoice>("Invoice_Faxes", null);
            }
            set {
                SetRelatedEntity("Invoice_Faxes", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("KnowledgeArticle_Faxes")]
        public KnowledgeArticle KnowledgeArticle_Faxes {
            get {
                return GetRelatedEntity<KnowledgeArticle>("KnowledgeArticle_Faxes", null);
            }
            set {
                SetRelatedEntity("KnowledgeArticle_Faxes", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Lead_Faxes")]
        public Lead Lead_Faxes {
            get {
                return GetRelatedEntity<Lead>("Lead_Faxes", null);
            }
            set {
                SetRelatedEntity("Lead_Faxes", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Opportunity_Faxes")]
        public Opportunity Opportunity_Faxes {
            get {
                return GetRelatedEntity<Opportunity>("Opportunity_Faxes", null);
            }
            set {
                SetRelatedEntity("Opportunity_Faxes", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Quote_Faxes")]
        public Quote Quote_Faxes {
            get {
                return GetRelatedEntity<Quote>("Quote_Faxes", null);
            }
            set {
                SetRelatedEntity("Quote_Faxes", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("SalesOrder_Faxes")]
        public SalesOrder SalesOrder_Faxes {
            get {
                return GetRelatedEntity<SalesOrder>("SalesOrder_Faxes", null);
            }
            set {
                SetRelatedEntity("SalesOrder_Faxes", null, value);
            }
        }
        
        [AttributeLogicalName("transactioncurrencyid")]
        [RelationshipSchemaName("TransactionCurrency_Fax")]
        public TransactionCurrency TransactionCurrency_Fax {
            get {
                return GetRelatedEntity<TransactionCurrency>("TransactionCurrency_Fax", null);
            }
            set {
                SetRelatedEntity("TransactionCurrency_Fax", null, value);
            }
        }
        
        [AttributeLogicalName("activityid")]
        [RelationshipSchemaName("activity_pointer_fax")]
        public ActivityPointer activity_pointer_fax {
            get {
                return GetRelatedEntity<ActivityPointer>("activity_pointer_fax", null);
            }
            set {
                SetRelatedEntity("activity_pointer_fax", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("bookableresourcebooking_Faxes")]
        public BookableResourceBooking bookableresourcebooking_Faxes {
            get {
                return GetRelatedEntity<BookableResourceBooking>("bookableresourcebooking_Faxes", null);
            }
            set {
                SetRelatedEntity("bookableresourcebooking_Faxes", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("bookableresourcebookingheader_Faxes")]
        public BookableResourceBookingHeader bookableresourcebookingheader_Faxes {
            get {
                return GetRelatedEntity<BookableResourceBookingHeader>("bookableresourcebookingheader_Faxes", null);
            }
            set {
                SetRelatedEntity("bookableresourcebookingheader_Faxes", null, value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_fax_activities")]
        public BusinessUnit business_unit_fax_activities {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_fax_activities", null);
            }
            set {
                SetRelatedEntity("business_unit_fax_activities", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("dg_event_Faxes")]
        public dg_event dg_event_Faxes {
            get {
                return GetRelatedEntity<dg_event>("dg_event_Faxes", null);
            }
            set {
                SetRelatedEntity("dg_event_Faxes", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("dg_participant_Faxes")]
        public dg_participant dg_participant_Faxes {
            get {
                return GetRelatedEntity<dg_participant>("dg_participant_Faxes", null);
            }
            set {
                SetRelatedEntity("dg_participant_Faxes", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("entitlement_Faxes")]
        public Entitlement entitlement_Faxes {
            get {
                return GetRelatedEntity<Entitlement>("entitlement_Faxes", null);
            }
            set {
                SetRelatedEntity("entitlement_Faxes", null, value);
            }
        }
        
        [RelationshipSchemaName("fax_activity_parties")]
        public IEnumerable<ActivityParty> fax_activity_parties {
            get {
                return GetRelatedEntities<ActivityParty>("fax_activity_parties", null);
            }
            set {
                SetRelatedEntities("fax_activity_parties", null, value);
            }
        }
        
        [RelationshipSchemaName("fax_campaignresponse")]
        public IEnumerable<CampaignResponse> fax_campaignresponse {
            get {
                return GetRelatedEntities<CampaignResponse>("fax_campaignresponse", null);
            }
            set {
                SetRelatedEntities("fax_campaignresponse", null, value);
            }
        }
        
        [RelationshipSchemaName("fax_connections1")]
        public IEnumerable<Connection> fax_connections1 {
            get {
                return GetRelatedEntities<Connection>("fax_connections1", null);
            }
            set {
                SetRelatedEntities("fax_connections1", null, value);
            }
        }
        
        [RelationshipSchemaName("fax_connections2")]
        public IEnumerable<Connection> fax_connections2 {
            get {
                return GetRelatedEntities<Connection>("fax_connections2", null);
            }
            set {
                SetRelatedEntities("fax_connections2", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_fax_createdby")]
        public SystemUser lk_fax_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_fax_createdby", null);
            }
            set {
                SetRelatedEntity("lk_fax_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_fax_createdonbehalfby")]
        public SystemUser lk_fax_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_fax_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_fax_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_fax_modifiedby")]
        public SystemUser lk_fax_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_fax_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_fax_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_fax_modifiedonbehalfby")]
        public SystemUser lk_fax_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_fax_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_fax_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("slaid")]
        [RelationshipSchemaName("manualsla_fax")]
        public SLA manualsla_fax {
            get {
                return GetRelatedEntity<SLA>("manualsla_fax", null);
            }
            set {
                SetRelatedEntity("manualsla_fax", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("msdyn_agreement_Faxes")]
        public msdyn_agreement msdyn_agreement_Faxes {
            get {
                return GetRelatedEntity<msdyn_agreement>("msdyn_agreement_Faxes", null);
            }
            set {
                SetRelatedEntity("msdyn_agreement_Faxes", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("msdyn_postalbum_Faxes")]
        public msdyn_PostAlbum msdyn_postalbum_Faxes {
            get {
                return GetRelatedEntity<msdyn_PostAlbum>("msdyn_postalbum_Faxes", null);
            }
            set {
                SetRelatedEntity("msdyn_postalbum_Faxes", null, value);
            }
        }
        
        [AttributeLogicalName("slainvokedid")]
        [RelationshipSchemaName("sla_fax")]
        public SLA sla_fax {
            get {
                return GetRelatedEntity<SLA>("sla_fax", null);
            }
            set {
                SetRelatedEntity("sla_fax", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_fax")]
        public Team team_fax {
            get {
                return GetRelatedEntity<Team>("team_fax", null);
            }
            set {
                SetRelatedEntity("team_fax", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_fax")]
        public SystemUser user_fax {
            get {
                return GetRelatedEntity<SystemUser>("user_fax", null);
            }
            set {
                SetRelatedEntity("user_fax", null, value);
            }
        }
        
        public static Fax Retrieve(IOrganizationService service, Guid id, params Expression<Func<Fax,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Target objective for a user or a team for a specified time period.</para>
    /// <para>Display Name: Goal</para>
    /// </summary>
    [EntityLogicalName("goal")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class Goal : ExtendedEntity<GoalState, Goal_StatusCode> {
        
        public const string EntityLogicalName = "goal";
        
        public const int EntityTypeCode = 9600;
        
        public Goal() : 
                base(EntityLogicalName) {
        }
        
        public Goal(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("title");
            }
        }
        
        [AttributeLogicalName("goalid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("goalid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the goal.</para>
        /// <para>Display Name: Goal</para>
        /// </summary>
        [AttributeLogicalName("goalid")]
        [DisplayName("Goal")]
        public Guid? GoalId {
            get {
                return GetAttributeValue<Guid?>("goalid");
            }
            set {
                SetId("goalid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the actual value (Decimal type) achieved towards the target as of the last rolled-up date. This field appears when the metric type of the goal is Amount and the amount data type is Decimal.</para>
        /// <para>Display Name: Actual (Decimal)</para>
        /// </summary>
        [AttributeLogicalName("actualdecimal")]
        [DisplayName("Actual (Decimal)")]
        public decimal? ActualDecimal {
            get {
                return GetAttributeValue<decimal?>("actualdecimal");
            }
            set {
                SetAttributeValue("actualdecimal", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the actual value (integer) achieved towards the target as of the last rolled-up date. This field appears when the metric type of the goal is Amount or Count and the amount data type is Integer.</para>
        /// <para>Display Name: Actual (Integer)</para>
        /// </summary>
        [AttributeLogicalName("actualinteger")]
        [DisplayName("Actual (Integer)")]
        [Range(-2147483648, 2147483647)]
        public int? ActualInteger {
            get {
                return GetAttributeValue<int?>("actualinteger");
            }
            set {
                SetAttributeValue("actualinteger", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the actual value (Money type) achieved towards the target as of the last rolled-up date. This field appears when the metric type of the goal is Amount and the amount data type is Money.</para>
        /// <para>Display Name: Actual (Money)</para>
        /// </summary>
        [AttributeLogicalName("actualmoney")]
        [DisplayName("Actual (Money)")]
        public decimal? ActualMoney {
            get {
                return GetMoneyValue("actualmoney");
            }
            set {
                SetMoneyValue("actualmoney", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the actual value (money type) in base currency to track goal results against the target.</para>
        /// <para>Display Name: Actual (Money) (Base)</para>
        /// </summary>
        [AttributeLogicalName("actualmoney_base")]
        [DisplayName("Actual (Money) (Base)")]
        public decimal? ActualMoney_Base {
            get {
                return GetMoneyValue("actualmoney_base");
            }
        }
        
        /// <summary>
        /// <para>Actual Value of the goal.</para>
        /// <para>Display Name: Actual</para>
        /// </summary>
        [AttributeLogicalName("actualstring")]
        [DisplayName("Actual")]
        [MaxLength(100)]
        public string ActualString {
            get {
                return GetAttributeValue<string>("actualstring");
            }
        }
        
        /// <summary>
        /// <para>Data type of the amount.</para>
        /// <para>Display Name: Amount Data Type</para>
        /// </summary>
        [AttributeLogicalName("amountdatatype")]
        [DisplayName("Amount Data Type")]
        public metric_goaltype? AmountDataType {
            get {
                return GetOptionSetValue<metric_goaltype>("amountdatatype");
            }
            set {
                SetOptionSetValue("amountdatatype", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the expected amount for actual value (decimal type) against the target goal.</para>
        /// <para>Display Name: Today's Target (Decimal)</para>
        /// </summary>
        [AttributeLogicalName("computedtargetasoftodaydecimal")]
        [DisplayName("Today\'s Target (Decimal)")]
        public decimal? ComputedTargetAsOfTodayDecimal {
            get {
                return GetAttributeValue<decimal?>("computedtargetasoftodaydecimal");
            }
        }
        
        /// <summary>
        /// <para>Shows the expected amount for actual value (integer type) against the target goal as of the current date.</para>
        /// <para>Display Name: Today's Target (Integer)</para>
        /// </summary>
        [AttributeLogicalName("computedtargetasoftodayinteger")]
        [DisplayName("Today\'s Target (Integer)")]
        [Range(0, 2147483647)]
        public int? ComputedTargetAsOfTodayInteger {
            get {
                return GetAttributeValue<int?>("computedtargetasoftodayinteger");
            }
        }
        
        /// <summary>
        /// <para>Shows the expected amount for actual value (money type) against the target goal as of the current date.</para>
        /// <para>Display Name: Today's Target (Money)</para>
        /// </summary>
        [AttributeLogicalName("computedtargetasoftodaymoney")]
        [DisplayName("Today\'s Target (Money)")]
        public decimal? ComputedTargetAsOfTodayMoney {
            get {
                return GetMoneyValue("computedtargetasoftodaymoney");
            }
        }
        
        /// <summary>
        /// <para>Shows the expected amount in base currency for actual value (money type) against the target goal as of the current date.</para>
        /// <para>Display Name: Today's Target (Money) (Base)</para>
        /// </summary>
        [AttributeLogicalName("computedtargetasoftodaymoney_base")]
        [DisplayName("Today\'s Target (Money) (Base)")]
        public decimal? ComputedTargetAsOfTodayMoney_Base {
            get {
                return GetMoneyValue("computedtargetasoftodaymoney_base");
            }
        }
        
        /// <summary>
        /// <para>Shows the expected value for percentage achieved against the target goal as of the current date.</para>
        /// <para>Display Name: Today's Target (Percentage Achieved)</para>
        /// </summary>
        [AttributeLogicalName("computedtargetasoftodaypercentageachieved")]
        [DisplayName("Today\'s Target (Percentage Achieved)")]
        public decimal? ComputedTargetAsOfTodayPercentageAchieved {
            get {
                return GetAttributeValue<decimal?>("computedtargetasoftodaypercentageachieved");
            }
        }
        
        /// <summary>
        /// <para>Select whether only the goal owner's records, or all records, should be rolled up for goal results.</para>
        /// <para>Display Name: Record Set for Rollup</para>
        /// </summary>
        [AttributeLogicalName("consideronlygoalownersrecords")]
        [DisplayName("Record Set for Rollup")]
        public bool? ConsiderOnlyGoalOwnersRecords {
            get {
                return GetAttributeValue<bool?>("consideronlygoalownersrecords");
            }
            set {
                SetAttributeValue("consideronlygoalownersrecords", value);
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record on behalf of another user.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Indicates a placeholder rollup field for a decimal value to track a third category of results other than actuals and in-progress results.</para>
        /// <para>Display Name: Custom Rollup Field (Decimal)</para>
        /// </summary>
        [AttributeLogicalName("customrollupfielddecimal")]
        [DisplayName("Custom Rollup Field (Decimal)")]
        public decimal? CustomRollupFieldDecimal {
            get {
                return GetAttributeValue<decimal?>("customrollupfielddecimal");
            }
            set {
                SetAttributeValue("customrollupfielddecimal", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates a placeholder rollup field for an integer value to track a third category of results other than actuals and in-progress results.</para>
        /// <para>Display Name: Custom Rollup Field (Integer)</para>
        /// </summary>
        [AttributeLogicalName("customrollupfieldinteger")]
        [DisplayName("Custom Rollup Field (Integer)")]
        [Range(-2147483648, 2147483647)]
        public int? CustomRollupFieldInteger {
            get {
                return GetAttributeValue<int?>("customrollupfieldinteger");
            }
            set {
                SetAttributeValue("customrollupfieldinteger", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates a placeholder rollup field for a money value to track a third category of results other than actuals and in-progress results.</para>
        /// <para>Display Name: Custom Rollup Field (Money)</para>
        /// </summary>
        [AttributeLogicalName("customrollupfieldmoney")]
        [DisplayName("Custom Rollup Field (Money)")]
        public decimal? CustomRollupFieldMoney {
            get {
                return GetMoneyValue("customrollupfieldmoney");
            }
            set {
                SetMoneyValue("customrollupfieldmoney", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates a placeholder rollup field for a money value in base currency to track a third category of results other than actuals and in-progress results.</para>
        /// <para>Display Name: Custom Rollup Field (Money) (Base)</para>
        /// </summary>
        [AttributeLogicalName("customrollupfieldmoney_base")]
        [DisplayName("Custom Rollup Field (Money) (Base)")]
        public decimal? CustomRollupFieldMoney_Base {
            get {
                return GetMoneyValue("customrollupfieldmoney_base");
            }
        }
        
        /// <summary>
        /// <para>Placeholder rollup field for the goal.</para>
        /// <para>Display Name: Custom Rollup Field</para>
        /// </summary>
        [AttributeLogicalName("customrollupfieldstring")]
        [DisplayName("Custom Rollup Field")]
        [MaxLength(100)]
        public string CustomRollupFieldString {
            get {
                return GetAttributeValue<string>("customrollupfieldstring");
            }
        }
        
        /// <summary>
        /// <para>Depth of the goal in the tree.</para>
        /// <para>Display Name: Depth</para>
        /// </summary>
        [AttributeLogicalName("depth")]
        [DisplayName("Depth")]
        [Range(0, 2147483647)]
        public int? Depth {
            get {
                return GetAttributeValue<int?>("depth");
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Entity Image Id</para>
        /// </summary>
        [AttributeLogicalName("entityimageid")]
        [DisplayName("Entity Image Id")]
        public Guid? EntityImageId {
            get {
                return GetAttributeValue<Guid?>("entityimageid");
            }
        }
        
        /// <summary>
        /// <para>Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("Exchange Rate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Select the fiscal period for the goal.</para>
        /// <para>Display Name: Fiscal Period</para>
        /// </summary>
        [AttributeLogicalName("fiscalperiod")]
        [DisplayName("Fiscal Period")]
        public goal_fiscalperiod? FiscalPeriod {
            get {
                return GetOptionSetValue<goal_fiscalperiod>("fiscalperiod");
            }
            set {
                SetOptionSetValue("fiscalperiod", value);
            }
        }
        
        /// <summary>
        /// <para>Select the fiscal year for the goal that's being tracked.</para>
        /// <para>Display Name: Fiscal Year</para>
        /// </summary>
        [AttributeLogicalName("fiscalyear")]
        [DisplayName("Fiscal Year")]
        public goal_fiscalyear? FiscalYear {
            get {
                return GetOptionSetValue<goal_fiscalyear>("fiscalyear");
            }
            set {
                SetOptionSetValue("fiscalyear", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the date when the goal ends.</para>
        /// <para>Display Name: To</para>
        /// </summary>
        [AttributeLogicalName("goalenddate")]
        [DisplayName("To")]
        public DateTime? GoalEndDate {
            get {
                return GetAttributeValue<DateTime?>("goalenddate");
            }
            set {
                SetAttributeValue("goalenddate", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the user or team responsible for meeting the goal.</para>
        /// <para>Display Name: Goal Owner</para>
        /// </summary>
        [AttributeLogicalName("goalownerid")]
        [DisplayName("Goal Owner")]
        public EntityReference GoalOwnerId {
            get {
                return GetAttributeValue<EntityReference>("goalownerid");
            }
            set {
                SetAttributeValue("goalownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the date and time when the period for tracking the goal begins.</para>
        /// <para>Display Name: From</para>
        /// </summary>
        [AttributeLogicalName("goalstartdate")]
        [DisplayName("From")]
        public DateTime? GoalStartDate {
            get {
                return GetAttributeValue<DateTime?>("goalstartdate");
            }
            set {
                SetAttributeValue("goalstartdate", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the goal that caused an error in the rollup of the goal hierarchy.</para>
        /// <para>Display Name: Goal With Error</para>
        /// </summary>
        [AttributeLogicalName("goalwitherrorid")]
        [DisplayName("Goal With Error")]
        public EntityReference GoalWithErrorId {
            get {
                return GetAttributeValue<EntityReference>("goalwitherrorid");
            }
            set {
                SetAttributeValue("goalwitherrorid", value);
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the in-progress value (decimal) against the target. This value could contribute to a goal, but is not counted yet as actual.</para>
        /// <para>Display Name: In-progress (Decimal)</para>
        /// </summary>
        [AttributeLogicalName("inprogressdecimal")]
        [DisplayName("In-progress (Decimal)")]
        public decimal? InProgressDecimal {
            get {
                return GetAttributeValue<decimal?>("inprogressdecimal");
            }
            set {
                SetAttributeValue("inprogressdecimal", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the in-progress value (integer) against the target. This value could contribute to a goal, but is not counted yet as actual.</para>
        /// <para>Display Name: In-progress (Integer)</para>
        /// </summary>
        [AttributeLogicalName("inprogressinteger")]
        [DisplayName("In-progress (Integer)")]
        [Range(-2147483648, 2147483647)]
        public int? InProgressInteger {
            get {
                return GetAttributeValue<int?>("inprogressinteger");
            }
            set {
                SetAttributeValue("inprogressinteger", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the in-progress value (money) against the target. This value could contribute to a goal, but is not counted yet as actual.</para>
        /// <para>Display Name: In-progress (Money)</para>
        /// </summary>
        [AttributeLogicalName("inprogressmoney")]
        [DisplayName("In-progress (Money)")]
        public decimal? InProgressMoney {
            get {
                return GetMoneyValue("inprogressmoney");
            }
            set {
                SetMoneyValue("inprogressmoney", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the in-progress value (money) in base currency to track goal results against the target.</para>
        /// <para>Display Name: In-progress (Money) (Base)</para>
        /// </summary>
        [AttributeLogicalName("inprogressmoney_base")]
        [DisplayName("In-progress (Money) (Base)")]
        public decimal? InProgressMoney_Base {
            get {
                return GetMoneyValue("inprogressmoney_base");
            }
        }
        
        /// <summary>
        /// <para>In-progress value of the goal.</para>
        /// <para>Display Name: In-Progress</para>
        /// </summary>
        [AttributeLogicalName("inprogressstring")]
        [DisplayName("In-Progress")]
        [MaxLength(100)]
        public string InProgressString {
            get {
                return GetAttributeValue<string>("inprogressstring");
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the metric type is Count or Amount.</para>
        /// <para>Display Name: Metric Type</para>
        /// </summary>
        [AttributeLogicalName("isamount")]
        [DisplayName("Metric Type")]
        public bool? IsAmount {
            get {
                return GetAttributeValue<bool?>("isamount");
            }
            set {
                SetAttributeValue("isamount", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the goal period is a fiscal period or custom period.</para>
        /// <para>Display Name: Goal Period Type</para>
        /// </summary>
        [AttributeLogicalName("isfiscalperiodgoal")]
        [DisplayName("Goal Period Type")]
        public bool? IsFiscalPeriodGoal {
            get {
                return GetAttributeValue<bool?>("isfiscalperiodgoal");
            }
            set {
                SetAttributeValue("isfiscalperiodgoal", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the system rollup fields are updated. If set to Yes, the next system rollup will not update the values of the rollup fields with the system calculated values.</para>
        /// <para>Display Name: Overridden</para>
        /// </summary>
        [AttributeLogicalName("isoverridden")]
        [DisplayName("Overridden")]
        public bool? IsOverridden {
            get {
                return GetAttributeValue<bool?>("isoverridden");
            }
            set {
                SetAttributeValue("isoverridden", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the values of system rollup fields can be updated.</para>
        /// <para>Display Name: Override</para>
        /// </summary>
        [AttributeLogicalName("isoverride")]
        [DisplayName("Override")]
        public bool? IsOverride {
            get {
                return GetAttributeValue<bool?>("isoverride");
            }
            set {
                SetAttributeValue("isoverride", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the goal was last rolled up. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
        /// <para>Display Name: Last Rolled Up Date</para>
        /// </summary>
        [AttributeLogicalName("lastrolledupdate")]
        [DisplayName("Last Rolled Up Date")]
        public DateTime? LastRolledupDate {
            get {
                return GetAttributeValue<DateTime?>("lastrolledupdate");
            }
            set {
                SetAttributeValue("lastrolledupdate", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the metric for the goal. This metric determines how the goal is tracked.</para>
        /// <para>Display Name: Goal Metric</para>
        /// </summary>
        [AttributeLogicalName("metricid")]
        [DisplayName("Goal Metric")]
        public EntityReference MetricId {
            get {
                return GetAttributeValue<EntityReference>("metricid");
            }
            set {
                SetAttributeValue("metricid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows who last updated the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Shows who last updated the record on behalf of another user.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the user or team who is assigned to manage the record. This field is updated every time the record is assigned to a different user.</para>
        /// <para>Display Name: Manager</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Manager")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the business unit that owns the record.</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the team who owns the goal.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the user who owns the record.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Choose a parent goal if the current goal is a child goal. This sets up a parent-child relationship for reporting and analytics.</para>
        /// <para>Display Name: Parent Goal</para>
        /// </summary>
        [AttributeLogicalName("parentgoalid")]
        [DisplayName("Parent Goal")]
        public EntityReference ParentGoalId {
            get {
                return GetAttributeValue<EntityReference>("parentgoalid");
            }
            set {
                SetAttributeValue("parentgoalid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the percentage achieved against the target goal.</para>
        /// <para>Display Name: Percentage Achieved</para>
        /// </summary>
        [AttributeLogicalName("percentage")]
        [DisplayName("Percentage Achieved")]
        public decimal? Percentage {
            get {
                return GetAttributeValue<decimal?>("percentage");
            }
            set {
                SetAttributeValue("percentage", value);
            }
        }
        
        /// <summary>
        /// <para>Type a title or name that describes the goal.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("title")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("title");
            }
            set {
                SetAttributeValue("title", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the query that will be used to calculate the actual data for the goal (decimal).</para>
        /// <para>Display Name: Rollup Query - Actual(Decimal)</para>
        /// </summary>
        [AttributeLogicalName("rollupqueryactualdecimalid")]
        [DisplayName("Rollup Query - Actual(Decimal)")]
        public EntityReference RollUpQueryActualDecimalId {
            get {
                return GetAttributeValue<EntityReference>("rollupqueryactualdecimalid");
            }
            set {
                SetAttributeValue("rollupqueryactualdecimalid", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the query that will be used to calculate the actual data for the goal (money).</para>
        /// <para>Display Name: Rollup Query - Actual(Money)</para>
        /// </summary>
        [AttributeLogicalName("rollupqueryactualmoneyid")]
        [DisplayName("Rollup Query - Actual(Money)")]
        public EntityReference RollUpQueryActualMoneyId {
            get {
                return GetAttributeValue<EntityReference>("rollupqueryactualmoneyid");
            }
            set {
                SetAttributeValue("rollupqueryactualmoneyid", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the query that will be used to calculate data for the custom rollup field (decimal).</para>
        /// <para>Display Name: Rollup Query - Custom Rollup Field (Decimal)</para>
        /// </summary>
        [AttributeLogicalName("rollupquerycustomdecimalid")]
        [DisplayName("Rollup Query - Custom Rollup Field (Decimal)")]
        public EntityReference RollUpQueryCustomDecimalId {
            get {
                return GetAttributeValue<EntityReference>("rollupquerycustomdecimalid");
            }
            set {
                SetAttributeValue("rollupquerycustomdecimalid", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the query that will be used to calculate data for the custom rollup field (integer).</para>
        /// <para>Display Name: Rollup Query - Custom Rollup Field (Integer)</para>
        /// </summary>
        [AttributeLogicalName("rollupquerycustomintegerid")]
        [DisplayName("Rollup Query - Custom Rollup Field (Integer)")]
        public EntityReference RollUpQueryCustomIntegerId {
            get {
                return GetAttributeValue<EntityReference>("rollupquerycustomintegerid");
            }
            set {
                SetAttributeValue("rollupquerycustomintegerid", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the query that will be used to calculate data for the custom rollup field (money).</para>
        /// <para>Display Name: Rollup Query - Custom Rollup Field (Money)</para>
        /// </summary>
        [AttributeLogicalName("rollupquerycustommoneyid")]
        [DisplayName("Rollup Query - Custom Rollup Field (Money)")]
        public EntityReference RollUpQueryCustomMoneyId {
            get {
                return GetAttributeValue<EntityReference>("rollupquerycustommoneyid");
            }
            set {
                SetAttributeValue("rollupquerycustommoneyid", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the query that will be used to calculate data for the in-progress rollup field (decimal).</para>
        /// <para>Display Name: Rollup Query - In-progress(Decimal)</para>
        /// </summary>
        [AttributeLogicalName("rollupqueryinprogressdecimalid")]
        [DisplayName("Rollup Query - In-progress(Decimal)")]
        public EntityReference RollUpQueryInprogressDecimalId {
            get {
                return GetAttributeValue<EntityReference>("rollupqueryinprogressdecimalid");
            }
            set {
                SetAttributeValue("rollupqueryinprogressdecimalid", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the query that will be used to calculate data for the in-progress rollup field (integer).</para>
        /// <para>Display Name: Rollup Query - In-progress(Integer)</para>
        /// </summary>
        [AttributeLogicalName("rollupqueryinprogressintegerid")]
        [DisplayName("Rollup Query - In-progress(Integer)")]
        public EntityReference RollUpQueryInprogressIntegerId {
            get {
                return GetAttributeValue<EntityReference>("rollupqueryinprogressintegerid");
            }
            set {
                SetAttributeValue("rollupqueryinprogressintegerid", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the query that will be used to calculate data for the in-progress rollup field (money).</para>
        /// <para>Display Name: Rollup Query - In-progress(Money)</para>
        /// </summary>
        [AttributeLogicalName("rollupqueryinprogressmoneyid")]
        [DisplayName("Rollup Query - In-progress(Money)")]
        public EntityReference RollUpQueryInprogressMoneyId {
            get {
                return GetAttributeValue<EntityReference>("rollupqueryinprogressmoneyid");
            }
            set {
                SetAttributeValue("rollupqueryinprogressmoneyid", value);
            }
        }
        
        /// <summary>
        /// <para>Error code associated with rollup.</para>
        /// <para>Display Name: Rollup Error Code</para>
        /// </summary>
        [AttributeLogicalName("rolluperrorcode")]
        [DisplayName("Rollup Error Code")]
        [Range(-2147483648, 2147483647)]
        public int? RollupErrorCode {
            get {
                return GetAttributeValue<int?>("rolluperrorcode");
            }
            set {
                SetAttributeValue("rolluperrorcode", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the data should be rolled up only from the child goals.</para>
        /// <para>Display Name: Roll Up Only from Child Goals</para>
        /// </summary>
        [AttributeLogicalName("rolluponlyfromchildgoals")]
        [DisplayName("Roll Up Only from Child Goals")]
        public bool? RollupOnlyFromChildGoals {
            get {
                return GetAttributeValue<bool?>("rolluponlyfromchildgoals");
            }
            set {
                SetAttributeValue("rolluponlyfromchildgoals", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the query that will be used to calculate the actual data for the goal (integer).</para>
        /// <para>Display Name: Rollup Query - Actual(Integer)</para>
        /// </summary>
        [AttributeLogicalName("rollupqueryactualintegerid")]
        [DisplayName("Rollup Query - Actual(Integer)")]
        public EntityReference RollupQueryActualIntegerId {
            get {
                return GetAttributeValue<EntityReference>("rollupqueryactualintegerid");
            }
            set {
                SetAttributeValue("rollupqueryactualintegerid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows whether the goal is open, completed, or canceled. Completed and canceled goals are read-only and can't be edited.</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public GoalState? StateCode {
            get {
                return GetOptionSetValue<GoalState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the goal's status.</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public Goal_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<Goal_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>Select a stretch target (decimal) of the goal to define a higher or difficult level of goal than the usual ones.</para>
        /// <para>Display Name: Stretch Target (Decimal)</para>
        /// </summary>
        [AttributeLogicalName("stretchtargetdecimal")]
        [DisplayName("Stretch Target (Decimal)")]
        public decimal? StretchTargetDecimal {
            get {
                return GetAttributeValue<decimal?>("stretchtargetdecimal");
            }
            set {
                SetAttributeValue("stretchtargetdecimal", value);
            }
        }
        
        /// <summary>
        /// <para>Select the stretch target (integer) of the goal to define a higher or difficult level of goal than the usual ones.</para>
        /// <para>Display Name: Stretch Target (Integer)</para>
        /// </summary>
        [AttributeLogicalName("stretchtargetinteger")]
        [DisplayName("Stretch Target (Integer)")]
        [Range(0, 2147483647)]
        public int? StretchTargetInteger {
            get {
                return GetAttributeValue<int?>("stretchtargetinteger");
            }
            set {
                SetAttributeValue("stretchtargetinteger", value);
            }
        }
        
        /// <summary>
        /// <para>Select stretch target (money) of the goal to define a higher or difficult level of goal than the usual ones.</para>
        /// <para>Display Name: Stretch Target (Money)</para>
        /// </summary>
        [AttributeLogicalName("stretchtargetmoney")]
        [DisplayName("Stretch Target (Money)")]
        public decimal? StretchTargetMoney {
            get {
                return GetMoneyValue("stretchtargetmoney");
            }
            set {
                SetMoneyValue("stretchtargetmoney", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the stretch target (money) in base currency to indicate a higher or difficult level of goal than the usual ones.</para>
        /// <para>Display Name: Stretch Target (Money) (Base)</para>
        /// </summary>
        [AttributeLogicalName("stretchtargetmoney_base")]
        [DisplayName("Stretch Target (Money) (Base)")]
        public decimal? StretchTargetMoney_Base {
            get {
                return GetMoneyValue("stretchtargetmoney_base");
            }
        }
        
        /// <summary>
        /// <para>Stretch target value for all data types.</para>
        /// <para>Display Name: Stretched Target</para>
        /// </summary>
        [AttributeLogicalName("stretchtargetstring")]
        [DisplayName("Stretched Target")]
        [MaxLength(100)]
        public string StretchTargetString {
            get {
                return GetAttributeValue<string>("stretchtargetstring");
            }
        }
        
        /// <summary>
        /// <para>Select a goal target of the decimal type to use for tracking data that include partial numbers, such as pounds sold of a product sold by weight.</para>
        /// <para>Display Name: Target (Decimal)</para>
        /// </summary>
        [AttributeLogicalName("targetdecimal")]
        [DisplayName("Target (Decimal)")]
        public decimal? TargetDecimal {
            get {
                return GetAttributeValue<decimal?>("targetdecimal");
            }
            set {
                SetAttributeValue("targetdecimal", value);
            }
        }
        
        /// <summary>
        /// <para>Select a goal target of the integer type to use for tracking anything countable in whole numbers, such as units sold.</para>
        /// <para>Display Name: Target (Integer)</para>
        /// </summary>
        [AttributeLogicalName("targetinteger")]
        [DisplayName("Target (Integer)")]
        [Range(0, 2147483647)]
        public int? TargetInteger {
            get {
                return GetAttributeValue<int?>("targetinteger");
            }
            set {
                SetAttributeValue("targetinteger", value);
            }
        }
        
        /// <summary>
        /// <para>Select a goal target (money) to track a monetary amount such as revenue from a product.</para>
        /// <para>Display Name: Target (Money)</para>
        /// </summary>
        [AttributeLogicalName("targetmoney")]
        [DisplayName("Target (Money)")]
        public decimal? TargetMoney {
            get {
                return GetMoneyValue("targetmoney");
            }
            set {
                SetMoneyValue("targetmoney", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the goal target of the money type in base currency.</para>
        /// <para>Display Name: Target (Money) (Base)</para>
        /// </summary>
        [AttributeLogicalName("targetmoney_base")]
        [DisplayName("Target (Money) (Base)")]
        public decimal? TargetMoney_Base {
            get {
                return GetMoneyValue("targetmoney_base");
            }
        }
        
        /// <summary>
        /// <para>Target value of the goal.</para>
        /// <para>Display Name: Target</para>
        /// </summary>
        [AttributeLogicalName("targetstring")]
        [DisplayName("Target")]
        [MaxLength(100)]
        public string TargetString {
            get {
                return GetAttributeValue<string>("targetstring");
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Type a title or name that describes the goal.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("title")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string Title {
            get {
                return GetAttributeValue<string>("title");
            }
            set {
                SetAttributeValue("title", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the local currency for the record to make sure budgets are reported in the correct currency.</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the goal tree.</para>
        /// <para>Display Name: Tree ID</para>
        /// </summary>
        [AttributeLogicalName("treeid")]
        [DisplayName("Tree ID")]
        public Guid? TreeId {
            get {
                return GetAttributeValue<Guid?>("treeid");
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version number of the goal.</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        [RelationshipSchemaName("Goal_SyncErrors")]
        public IEnumerable<SyncError> Goal_SyncErrors {
            get {
                return GetRelatedEntities<SyncError>("Goal_SyncErrors", null);
            }
            set {
                SetRelatedEntities("Goal_SyncErrors", null, value);
            }
        }
        
        [RelationshipSchemaName("Goal_RollupError_Goal", EntityRole.Referenced)]
        public IEnumerable<Goal> ReferencedGoal_RollupError_Goal {
            get {
                return GetRelatedEntities<Goal>("Goal_RollupError_Goal", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("Goal_RollupError_Goal", EntityRole.Referenced, value);
            }
        }
        
        [RelationshipSchemaName("goal_parent_goal", EntityRole.Referenced)]
        public IEnumerable<Goal> Referencedgoal_parent_goal {
            get {
                return GetRelatedEntities<Goal>("goal_parent_goal", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("goal_parent_goal", EntityRole.Referenced, value);
            }
        }
        
        [AttributeLogicalName("goalwitherrorid")]
        [RelationshipSchemaName("Goal_RollupError_Goal", EntityRole.Referencing)]
        public Goal ReferencingGoal_RollupError_Goal {
            get {
                return GetRelatedEntity<Goal>("Goal_RollupError_Goal", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("Goal_RollupError_Goal", EntityRole.Referencing, value);
            }
        }
        
        [AttributeLogicalName("parentgoalid")]
        [RelationshipSchemaName("goal_parent_goal", EntityRole.Referencing)]
        public Goal Referencinggoal_parent_goal {
            get {
                return GetRelatedEntity<Goal>("goal_parent_goal", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("goal_parent_goal", EntityRole.Referencing, value);
            }
        }
        
        [AttributeLogicalName("transactioncurrencyid")]
        [RelationshipSchemaName("TransactionCurrency_Goal")]
        public TransactionCurrency TransactionCurrency_Goal {
            get {
                return GetRelatedEntity<TransactionCurrency>("TransactionCurrency_Goal", null);
            }
            set {
                SetRelatedEntity("TransactionCurrency_Goal", null, value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_goal")]
        public BusinessUnit business_unit_goal {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_goal", null);
            }
            set {
                SetRelatedEntity("business_unit_goal", null, value);
            }
        }
        
        [RelationshipSchemaName("goal_connections1")]
        public IEnumerable<Connection> goal_connections1 {
            get {
                return GetRelatedEntities<Connection>("goal_connections1", null);
            }
            set {
                SetRelatedEntities("goal_connections1", null, value);
            }
        }
        
        [RelationshipSchemaName("goal_connections2")]
        public IEnumerable<Connection> goal_connections2 {
            get {
                return GetRelatedEntities<Connection>("goal_connections2", null);
            }
            set {
                SetRelatedEntities("goal_connections2", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_goal_createdby")]
        public SystemUser lk_goal_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_goal_createdby", null);
            }
            set {
                SetRelatedEntity("lk_goal_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_goal_createdonbehalfby")]
        public SystemUser lk_goal_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_goal_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_goal_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_goal_modifiedby")]
        public SystemUser lk_goal_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_goal_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_goal_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_goal_modifiedonbehalfby")]
        public SystemUser lk_goal_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_goal_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_goal_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_goal")]
        public Team team_goal {
            get {
                return GetRelatedEntity<Team>("team_goal", null);
            }
            set {
                SetRelatedEntity("team_goal", null, value);
            }
        }
        
        [AttributeLogicalName("goalownerid")]
        [RelationshipSchemaName("team_goal_goalowner")]
        public Team team_goal_goalowner {
            get {
                return GetRelatedEntity<Team>("team_goal_goalowner", null);
            }
            set {
                SetRelatedEntity("team_goal_goalowner", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_goal")]
        public SystemUser user_goal {
            get {
                return GetRelatedEntity<SystemUser>("user_goal", null);
            }
            set {
                SetRelatedEntity("user_goal", null, value);
            }
        }
        
        [AttributeLogicalName("goalownerid")]
        [RelationshipSchemaName("user_goal_goalowner")]
        public SystemUser user_goal_goalowner {
            get {
                return GetRelatedEntity<SystemUser>("user_goal_goalowner", null);
            }
            set {
                SetRelatedEntity("user_goal_goalowner", null, value);
            }
        }
        
        public static Goal Retrieve(IOrganizationService service, Guid id, params Expression<Func<Goal,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Service request case associated with a contract.</para>
    /// <para>Display Name: Case</para>
    /// </summary>
    [EntityLogicalName("incident")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class Incident : ExtendedEntity<IncidentState, Incident_StatusCode> {
        
        public const string EntityLogicalName = "incident";
        
        public const int EntityTypeCode = 112;
        
        public Incident() : 
                base(EntityLogicalName) {
        }
        
        public Incident(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("title");
            }
        }
        
        [AttributeLogicalName("incidentid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("incidentid", value);
            }
        }
        
        /// <summary>
        /// <para>lk_incident_ChildIncidentCount</para>
        /// <para>Display Name: Case</para>
        /// </summary>
        [AttributeLogicalName("incidentid")]
        [DisplayName("Case")]
        public Guid? IncidentId {
            get {
                return GetAttributeValue<Guid?>("incidentid");
            }
            set {
                SetId("incidentid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the account with which the case is associated.</para>
        /// <para>Display Name: Account</para>
        /// </summary>
        [AttributeLogicalName("accountid")]
        [DisplayName("Account")]
        public EntityReference AccountId {
            get {
                return GetAttributeValue<EntityReference>("accountid");
            }
        }
        
        /// <summary>
        /// <para>This attribute is used for Sample Service Business Processes.</para>
        /// <para>Display Name: Activities Complete</para>
        /// </summary>
        [AttributeLogicalName("activitiescomplete")]
        [DisplayName("Activities Complete")]
        public bool? ActivitiesComplete {
            get {
                return GetAttributeValue<bool?>("activitiescomplete");
            }
            set {
                SetAttributeValue("activitiescomplete", value);
            }
        }
        
        /// <summary>
        /// <para>Type the number of service units that were actually required to resolve the case.</para>
        /// <para>Display Name: Actual Service Units</para>
        /// </summary>
        [AttributeLogicalName("actualserviceunits")]
        [DisplayName("Actual Service Units")]
        [Range(0, 1000000000)]
        public int? ActualServiceUnits {
            get {
                return GetAttributeValue<int?>("actualserviceunits");
            }
            set {
                SetAttributeValue("actualserviceunits", value);
            }
        }
        
        /// <summary>
        /// <para>Type the number of service units that were billed to the customer for the case.</para>
        /// <para>Display Name: Billed Service Units</para>
        /// </summary>
        [AttributeLogicalName("billedserviceunits")]
        [DisplayName("Billed Service Units")]
        [Range(0, 1000000000)]
        public int? BilledServiceUnits {
            get {
                return GetAttributeValue<int?>("billedserviceunits");
            }
            set {
                SetAttributeValue("billedserviceunits", value);
            }
        }
        
        /// <summary>
        /// <para>Details whether the profile is blocked or not.</para>
        /// <para>Display Name: Blocked Profile</para>
        /// </summary>
        [AttributeLogicalName("blockedprofile")]
        [DisplayName("Blocked Profile")]
        public bool? BlockedProfile {
            get {
                return GetAttributeValue<bool?>("blockedprofile");
            }
            set {
                SetAttributeValue("blockedprofile", value);
            }
        }
        
        /// <summary>
        /// <para>Select how contact about the case was originated, such as email, phone, or web, for use in reporting and analysis.</para>
        /// <para>Display Name: Origin</para>
        /// </summary>
        [AttributeLogicalName("caseorigincode")]
        [DisplayName("Origin")]
        public incident_caseorigincode? CaseOriginCode {
            get {
                return GetOptionSetValue<incident_caseorigincode>("caseorigincode");
            }
            set {
                SetOptionSetValue("caseorigincode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the type of case to identify the incident for use in case routing and analysis.</para>
        /// <para>Display Name: Case Type</para>
        /// </summary>
        [AttributeLogicalName("casetypecode")]
        [DisplayName("Case Type")]
        public Incident_CaseTypeCode? CaseTypeCode {
            get {
                return GetOptionSetValue<Incident_CaseTypeCode>("casetypecode");
            }
            set {
                SetOptionSetValue("casetypecode", value);
            }
        }
        
        /// <summary>
        /// <para>This attribute is used for Sample Service Business Processes.</para>
        /// <para>Display Name: Check Email</para>
        /// </summary>
        [AttributeLogicalName("checkemail")]
        [DisplayName("Check Email")]
        public bool? CheckEmail {
            get {
                return GetAttributeValue<bool?>("checkemail");
            }
            set {
                SetAttributeValue("checkemail", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the contact associated with the case.</para>
        /// <para>Display Name: Contact</para>
        /// </summary>
        [AttributeLogicalName("contactid")]
        [DisplayName("Contact")]
        public EntityReference ContactId {
            get {
                return GetAttributeValue<EntityReference>("contactid");
            }
        }
        
        /// <summary>
        /// <para>contract_detail_cases</para>
        /// <para>Display Name: Contract Line</para>
        /// </summary>
        [AttributeLogicalName("contractdetailid")]
        [DisplayName("Contract Line")]
        public EntityReference ContractDetailId {
            get {
                return GetAttributeValue<EntityReference>("contractdetailid");
            }
            set {
                SetAttributeValue("contractdetailid", value);
            }
        }
        
        /// <summary>
        /// <para>contract_cases</para>
        /// <para>Display Name: Contract</para>
        /// </summary>
        [AttributeLogicalName("contractid")]
        [DisplayName("Contract")]
        public EntityReference ContractId {
            get {
                return GetAttributeValue<EntityReference>("contractid");
            }
            set {
                SetAttributeValue("contractid", value);
            }
        }
        
        /// <summary>
        /// <para>Select the service level for the case to make sure the case is handled correctly.</para>
        /// <para>Display Name: Service Level</para>
        /// </summary>
        [AttributeLogicalName("contractservicelevelcode")]
        [DisplayName("Service Level")]
        public Incident_ContractServiceLevelCode? ContractServiceLevelCode {
            get {
                return GetOptionSetValue<Incident_ContractServiceLevelCode>("contractservicelevelcode");
            }
            set {
                SetOptionSetValue("contractservicelevelcode", value);
            }
        }
        
        /// <summary>
        /// <para>lk_incidentbase_createdby</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>lk_externalparty_incident_createdby</para>
        /// <para>Display Name: Created By (External Party)</para>
        /// </summary>
        [AttributeLogicalName("createdbyexternalparty")]
        [DisplayName("Created By (External Party)")]
        public EntityReference CreatedByExternalParty {
            get {
                return GetAttributeValue<EntityReference>("createdbyexternalparty");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics CRM options.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>lk_incidentbase_createdonbehalfby</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Tells whether customer service representative has contacted the customer or not.</para>
        /// <para>Display Name: Customer Contacted</para>
        /// </summary>
        [AttributeLogicalName("customercontacted")]
        [DisplayName("Customer Contacted")]
        public bool? CustomerContacted {
            get {
                return GetAttributeValue<bool?>("customercontacted");
            }
            set {
                SetAttributeValue("customercontacted", value);
            }
        }
        
        /// <summary>
        /// <para>incident_customer_contacts</para>
        /// <para>Display Name: Customer</para>
        /// </summary>
        [AttributeLogicalName("customerid")]
        [DisplayName("Customer")]
        public EntityReference CustomerId {
            get {
                return GetAttributeValue<EntityReference>("customerid");
            }
            set {
                SetAttributeValue("customerid", value);
            }
        }
        
        /// <summary>
        /// <para>Select the customer's level of satisfaction with the handling and resolution of the case.</para>
        /// <para>Display Name: Satisfaction</para>
        /// </summary>
        [AttributeLogicalName("customersatisfactioncode")]
        [DisplayName("Satisfaction")]
        public Incident_CustomerSatisfactionCode? CustomerSatisfactionCode {
            get {
                return GetOptionSetValue<Incident_CustomerSatisfactionCode>("customersatisfactioncode");
            }
            set {
                SetOptionSetValue("customersatisfactioncode", value);
            }
        }
        
        /// <summary>
        /// <para>Shows whether terms of the associated entitlement should be decremented or not.</para>
        /// <para>Display Name: Decrement Entitlement Terms</para>
        /// </summary>
        [AttributeLogicalName("decremententitlementterm")]
        [DisplayName("Decrement Entitlement Terms")]
        public bool? DecrementEntitlementTerm {
            get {
                return GetAttributeValue<bool?>("decremententitlementterm");
            }
            set {
                SetAttributeValue("decremententitlementterm", value);
            }
        }
        
        /// <summary>
        /// <para>Type additional information to describe the case to assist the service team in reaching a resolution.</para>
        /// <para>Display Name: Description</para>
        /// </summary>
        [AttributeLogicalName("description")]
        [DisplayName("Description")]
        public string Description {
            get {
                return GetAttributeValue<string>("description");
            }
            set {
                SetAttributeValue("description", value);
            }
        }
        
        /// <summary>
        /// <para>The primary email address for the entity.</para>
        /// <para>Display Name: Email Address</para>
        /// </summary>
        [AttributeLogicalName("emailaddress")]
        [DisplayName("Email Address")]
        [MaxLength(100)]
        public string EmailAddress {
            get {
                return GetAttributeValue<string>("emailaddress");
            }
            set {
                SetAttributeValue("emailaddress", value);
            }
        }
        
        /// <summary>
        /// <para>entitlement_cases</para>
        /// <para>Display Name: Entitlement</para>
        /// </summary>
        [AttributeLogicalName("entitlementid")]
        [DisplayName("Entitlement")]
        public EntityReference EntitlementId {
            get {
                return GetAttributeValue<EntityReference>("entitlementid");
            }
            set {
                SetAttributeValue("entitlementid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Entity Image Id</para>
        /// </summary>
        [AttributeLogicalName("entityimageid")]
        [DisplayName("Entity Image Id")]
        public Guid? EntityImageId {
            get {
                return GetAttributeValue<Guid?>("entityimageid");
            }
        }
        
        /// <summary>
        /// <para>Indicates the date and time when the case was escalated.</para>
        /// <para>Display Name: Escalated On</para>
        /// </summary>
        [AttributeLogicalName("escalatedon")]
        [DisplayName("Escalated On")]
        public DateTime? EscalatedOn {
            get {
                return GetAttributeValue<DateTime?>("escalatedon");
            }
        }
        
        /// <summary>
        /// <para>Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("Exchange Rate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>incident_existingcase</para>
        /// <para>Display Name: Existing Case</para>
        /// </summary>
        [AttributeLogicalName("existingcase")]
        [DisplayName("Existing Case")]
        public EntityReference ExistingCase {
            get {
                return GetAttributeValue<EntityReference>("existingcase");
            }
            set {
                SetAttributeValue("existingcase", value);
            }
        }
        
        /// <summary>
        /// <para>slakpiinstance_incident_firstresponsebykpi</para>
        /// <para>Display Name: First Response By KPI</para>
        /// </summary>
        [AttributeLogicalName("firstresponsebykpiid")]
        [DisplayName("First Response By KPI")]
        public EntityReference FirstResponseByKPIId {
            get {
                return GetAttributeValue<EntityReference>("firstresponsebykpiid");
            }
            set {
                SetAttributeValue("firstresponsebykpiid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the status of the initial response time for the case according to the terms of the SLA.</para>
        /// <para>Display Name: First Response SLA Status</para>
        /// </summary>
        [AttributeLogicalName("firstresponseslastatus")]
        [DisplayName("First Response SLA Status")]
        public Incident_FirstResponseSLAStatus? FirstResponseSLAStatus {
            get {
                return GetOptionSetValue<Incident_FirstResponseSLAStatus>("firstresponseslastatus");
            }
            set {
                SetOptionSetValue("firstresponseslastatus", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates if the first response has been sent.</para>
        /// <para>Display Name: First Response Sent</para>
        /// </summary>
        [AttributeLogicalName("firstresponsesent")]
        [DisplayName("First Response Sent")]
        public bool? FirstResponseSent {
            get {
                return GetAttributeValue<bool?>("firstresponsesent");
            }
            set {
                SetAttributeValue("firstresponsesent", value);
            }
        }
        
        /// <summary>
        /// <para>This attribute is used for Sample Service Business Processes.</para>
        /// <para>Display Name: Follow up Task Created</para>
        /// </summary>
        [AttributeLogicalName("followuptaskcreated")]
        [DisplayName("Follow up Task Created")]
        public bool? FollowUpTaskCreated {
            get {
                return GetAttributeValue<bool?>("followuptaskcreated");
            }
            set {
                SetAttributeValue("followuptaskcreated", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the date by which a customer service representative has to follow up with the customer on this case.</para>
        /// <para>Display Name: Follow Up By</para>
        /// </summary>
        [AttributeLogicalName("followupby")]
        [DisplayName("Follow Up By")]
        public DateTime? FollowupBy {
            get {
                return GetAttributeValue<DateTime?>("followupby");
            }
            set {
                SetAttributeValue("followupby", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the data import or data migration that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Select the current stage of the service process for the case to assist service team members when they review or transfer a case.</para>
        /// <para>Display Name: Case Stage</para>
        /// </summary>
        [AttributeLogicalName("incidentstagecode")]
        [DisplayName("Case Stage")]
        public Incident_IncidentStageCode? IncidentStageCode {
            get {
                return GetOptionSetValue<Incident_IncidentStageCode>("incidentstagecode");
            }
            set {
                SetOptionSetValue("incidentstagecode", value);
            }
        }
        
        /// <summary>
        /// <para>Will contain the Influencer score coming from NetBreeze.</para>
        /// <para>Display Name: Influence Score</para>
        /// </summary>
        [AttributeLogicalName("influencescore")]
        [DisplayName("Influence Score")]
        public double? InfluenceScore {
            get {
                return GetAttributeValue<double?>("influencescore");
            }
            set {
                SetAttributeValue("influencescore", value);
            }
        }
        
        /// <summary>
        /// <para>For system use only.</para>
        /// <para>Display Name: Decrementing</para>
        /// </summary>
        [AttributeLogicalName("isdecrementing")]
        [DisplayName("Decrementing")]
        public bool? IsDecrementing {
            get {
                return GetAttributeValue<bool?>("isdecrementing");
            }
            set {
                SetAttributeValue("isdecrementing", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates if the case has been escalated.</para>
        /// <para>Display Name: Is Escalated</para>
        /// </summary>
        [AttributeLogicalName("isescalated")]
        [DisplayName("Is Escalated")]
        public bool? IsEscalated {
            get {
                return GetAttributeValue<bool?>("isescalated");
            }
            set {
                SetAttributeValue("isescalated", value);
            }
        }
        
        /// <summary>
        /// <para>kbarticle_incidents</para>
        /// <para>Display Name: Knowledge Base Article</para>
        /// </summary>
        [AttributeLogicalName("kbarticleid")]
        [DisplayName("Knowledge Base Article")]
        public EntityReference KbArticleId {
            get {
                return GetAttributeValue<EntityReference>("kbarticleid");
            }
            set {
                SetAttributeValue("kbarticleid", value);
            }
        }
        
        /// <summary>
        /// <para>Contains the date time stamp of the last on hold time.</para>
        /// <para>Display Name: Last On Hold Time</para>
        /// </summary>
        [AttributeLogicalName("lastonholdtime")]
        [DisplayName("Last On Hold Time")]
        public DateTime? LastOnHoldTime {
            get {
                return GetAttributeValue<DateTime?>("lastonholdtime");
            }
            set {
                SetAttributeValue("lastonholdtime", value);
            }
        }
        
        /// <summary>
        /// <para>incident_master_incident</para>
        /// <para>Display Name: Master Case</para>
        /// </summary>
        [AttributeLogicalName("masterid")]
        [DisplayName("Master Case")]
        public EntityReference MasterId {
            get {
                return GetAttributeValue<EntityReference>("masterid");
            }
            set {
                SetAttributeValue("masterid", value);
            }
        }
        
        /// <summary>
        /// <para>Tells whether the incident has been merged with another incident.</para>
        /// <para>Display Name: Internal Use Only</para>
        /// </summary>
        [AttributeLogicalName("merged")]
        [DisplayName("Internal Use Only")]
        public bool? Merged {
            get {
                return GetAttributeValue<bool?>("merged");
            }
        }
        
        /// <summary>
        /// <para>Shows whether the post originated as a public or private message.</para>
        /// <para>Display Name: Received As</para>
        /// </summary>
        [AttributeLogicalName("messagetypecode")]
        [DisplayName("Received As")]
        public socialactivity_postmessagetype? MessageTypeCode {
            get {
                return GetOptionSetValue<socialactivity_postmessagetype>("messagetypecode");
            }
            set {
                SetOptionSetValue("messagetypecode", value);
            }
        }
        
        /// <summary>
        /// <para>lk_incidentbase_modifiedby</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>lk_externalparty_incident_modifiedby</para>
        /// <para>Display Name: Modified By (External Party)</para>
        /// </summary>
        [AttributeLogicalName("modifiedbyexternalparty")]
        [DisplayName("Modified By (External Party)")]
        public EntityReference ModifiedByExternalParty {
            get {
                return GetAttributeValue<EntityReference>("modifiedbyexternalparty");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics CRM options.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>lk_incidentbase_modifiedonbehalfby</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Number of child incidents associated with the incident.</para>
        /// <para>Display Name: Child Cases</para>
        /// </summary>
        [AttributeLogicalName("numberofchildincidents")]
        [DisplayName("Child Cases")]
        [Range(0, 2147483647)]
        public int? NumberOfChildIncidents {
            get {
                return GetAttributeValue<int?>("numberofchildincidents");
            }
        }
        
        /// <summary>
        /// <para>Shows the duration in minutes for which the case was on hold.</para>
        /// <para>Display Name: On Hold Time (Minutes)</para>
        /// </summary>
        [AttributeLogicalName("onholdtime")]
        [DisplayName("On Hold Time (Minutes)")]
        [Range(-2147483648, 2147483647)]
        public int? OnHoldTime {
            get {
                return GetAttributeValue<int?>("onholdtime");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>owner_incidents</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>business_unit_incidents</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>team_incidents</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>system_user_incidents</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>incident_parent_incident</para>
        /// <para>Display Name: Parent Case</para>
        /// </summary>
        [AttributeLogicalName("parentcaseid")]
        [DisplayName("Parent Case")]
        public EntityReference ParentCaseId {
            get {
                return GetAttributeValue<EntityReference>("parentcaseid");
            }
            set {
                SetAttributeValue("parentcaseid", value);
            }
        }
        
        /// <summary>
        /// <para>contact_as_primary_contact</para>
        /// <para>Display Name: Contact</para>
        /// </summary>
        [AttributeLogicalName("primarycontactid")]
        [DisplayName("Contact")]
        public EntityReference PrimaryContactId {
            get {
                return GetAttributeValue<EntityReference>("primarycontactid");
            }
            set {
                SetAttributeValue("primarycontactid", value);
            }
        }
        
        /// <summary>
        /// <para>Type a subject or descriptive name, such as the request, issue, or company name, to identify the case in Microsoft Dynamics 365 views.</para>
        /// <para>Display Name: Case Title</para>
        /// </summary>
        [AttributeLogicalName("title")]
        [DisplayName("Case Title")]
        [MaxLength(200)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("title");
            }
            set {
                SetAttributeValue("title", value);
            }
        }
        
        /// <summary>
        /// <para>Select the priority so that preferred customers or critical issues are handled quickly.</para>
        /// <para>Display Name: Priority</para>
        /// </summary>
        [AttributeLogicalName("prioritycode")]
        [DisplayName("Priority")]
        public Incident_PriorityCode? PriorityCode {
            get {
                return GetOptionSetValue<Incident_PriorityCode>("prioritycode");
            }
            set {
                SetOptionSetValue("prioritycode", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the process.</para>
        /// <para>Display Name: Process</para>
        /// </summary>
        [AttributeLogicalName("processid")]
        [DisplayName("Process")]
        public Guid? ProcessId {
            get {
                return GetAttributeValue<Guid?>("processid");
            }
            set {
                SetAttributeValue("processid", value);
            }
        }
        
        /// <summary>
        /// <para>product_incidents</para>
        /// <para>Display Name: Product</para>
        /// </summary>
        [AttributeLogicalName("productid")]
        [DisplayName("Product")]
        public EntityReference ProductId {
            get {
                return GetAttributeValue<EntityReference>("productid");
            }
            set {
                SetAttributeValue("productid", value);
            }
        }
        
        /// <summary>
        /// <para>Type the serial number of the product that is associated with this case, so that the number of cases per product can be reported.</para>
        /// <para>Display Name: Serial Number</para>
        /// </summary>
        [AttributeLogicalName("productserialnumber")]
        [DisplayName("Serial Number")]
        [MaxLength(100)]
        public string ProductSerialNumber {
            get {
                return GetAttributeValue<string>("productserialnumber");
            }
            set {
                SetAttributeValue("productserialnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the date by when the case must be resolved.</para>
        /// <para>Display Name: Resolve By</para>
        /// </summary>
        [AttributeLogicalName("resolveby")]
        [DisplayName("Resolve By")]
        public DateTime? ResolveBy {
            get {
                return GetAttributeValue<DateTime?>("resolveby");
            }
            set {
                SetAttributeValue("resolveby", value);
            }
        }
        
        /// <summary>
        /// <para>slakpiinstance_incident_resolvebykpi</para>
        /// <para>Display Name: Resolve By KPI</para>
        /// </summary>
        [AttributeLogicalName("resolvebykpiid")]
        [DisplayName("Resolve By KPI")]
        public EntityReference ResolveByKPIId {
            get {
                return GetAttributeValue<EntityReference>("resolvebykpiid");
            }
            set {
                SetAttributeValue("resolvebykpiid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the status of the resolution time for the case according to the terms of the SLA.</para>
        /// <para>Display Name: Resolve By SLA Status</para>
        /// </summary>
        [AttributeLogicalName("resolvebyslastatus")]
        [DisplayName("Resolve By SLA Status")]
        public Incident_ResolveBySLAStatus? ResolveBySLAStatus {
            get {
                return GetOptionSetValue<Incident_ResolveBySLAStatus>("resolvebyslastatus");
            }
            set {
                SetOptionSetValue("resolvebyslastatus", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: First Response By</para>
        /// </summary>
        [AttributeLogicalName("responseby")]
        [DisplayName("First Response By")]
        public DateTime? ResponseBy {
            get {
                return GetAttributeValue<DateTime?>("responseby");
            }
            set {
                SetAttributeValue("responseby", value);
            }
        }
        
        /// <summary>
        /// <para>contact_as_responsible_contact</para>
        /// <para>Display Name: Responsible Contact</para>
        /// </summary>
        [AttributeLogicalName("responsiblecontactid")]
        [DisplayName("Responsible Contact")]
        public EntityReference ResponsibleContactId {
            get {
                return GetAttributeValue<EntityReference>("responsiblecontactid");
            }
            set {
                SetAttributeValue("responsiblecontactid", value);
            }
        }
        
        /// <summary>
        /// <para>Tells whether the incident has been routed to queue or not.</para>
        /// <para>Display Name: Route Case</para>
        /// </summary>
        [AttributeLogicalName("routecase")]
        [DisplayName("Route Case")]
        public bool? RouteCase {
            get {
                return GetAttributeValue<bool?>("routecase");
            }
            set {
                SetAttributeValue("routecase", value);
            }
        }
        
        /// <summary>
        /// <para>manualsla_cases</para>
        /// <para>Display Name: SLA</para>
        /// </summary>
        [AttributeLogicalName("slaid")]
        [DisplayName("SLA")]
        public EntityReference SLAId {
            get {
                return GetAttributeValue<EntityReference>("slaid");
            }
            set {
                SetAttributeValue("slaid", value);
            }
        }
        
        /// <summary>
        /// <para>Last SLA that was applied to this case. This field is for internal use only.</para>
        /// <para>Display Name: Last SLA applied</para>
        /// </summary>
        [AttributeLogicalName("slainvokedid")]
        [DisplayName("Last SLA applied")]
        public EntityReference SLAInvokedId {
            get {
                return GetAttributeValue<EntityReference>("slainvokedid");
            }
        }
        
        /// <summary>
        /// <para>Value derived after assessing words commonly associated with a negative, neutral, or positive sentiment that occurs in a social post. Sentiment information can also be reported as numeric values.</para>
        /// <para>Display Name: Sentiment Value</para>
        /// </summary>
        [AttributeLogicalName("sentimentvalue")]
        [DisplayName("Sentiment Value")]
        public double? SentimentValue {
            get {
                return GetAttributeValue<double?>("sentimentvalue");
            }
            set {
                SetAttributeValue("sentimentvalue", value);
            }
        }
        
        /// <summary>
        /// <para>Select the stage, in the case resolution process, that the case is in.</para>
        /// <para>Display Name: Service Stage</para>
        /// </summary>
        [AttributeLogicalName("servicestage")]
        [DisplayName("Service Stage")]
        public servicestage? ServiceStage {
            get {
                return GetOptionSetValue<servicestage>("servicestage");
            }
            set {
                SetOptionSetValue("servicestage", value);
            }
        }
        
        /// <summary>
        /// <para>Select the severity of this case to indicate the incident's impact on the customer's business.</para>
        /// <para>Display Name: Severity</para>
        /// </summary>
        [AttributeLogicalName("severitycode")]
        [DisplayName("Severity")]
        public Incident_SeverityCode? SeverityCode {
            get {
                return GetOptionSetValue<Incident_SeverityCode>("severitycode");
            }
            set {
                SetOptionSetValue("severitycode", value);
            }
        }
        
        /// <summary>
        /// <para>socialprofile_cases</para>
        /// <para>Display Name: Social Profile</para>
        /// </summary>
        [AttributeLogicalName("socialprofileid")]
        [DisplayName("Social Profile")]
        public EntityReference SocialProfileId {
            get {
                return GetAttributeValue<EntityReference>("socialprofileid");
            }
            set {
                SetAttributeValue("socialprofileid", value);
            }
        }
        
        /// <summary>
        /// <para>processstage_incident</para>
        /// <para>Display Name: Process Stage</para>
        /// </summary>
        [AttributeLogicalName("stageid")]
        [DisplayName("Process Stage")]
        public Guid? StageId {
            get {
                return GetAttributeValue<Guid?>("stageid");
            }
            set {
                SetAttributeValue("stageid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows whether the case is active, resolved, or canceled. Resolved and canceled cases are read-only and can't be edited unless they are reactivated.</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public IncidentState? StateCode {
            get {
                return GetOptionSetValue<IncidentState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the case's status.</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public Incident_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<Incident_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>subject_incidents</para>
        /// <para>Display Name: Subject</para>
        /// </summary>
        [AttributeLogicalName("subjectid")]
        [DisplayName("Subject")]
        public EntityReference SubjectId {
            get {
                return GetAttributeValue<EntityReference>("subjectid");
            }
            set {
                SetAttributeValue("subjectid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the case number for customer reference and searching capabilities. This cannot be modified.</para>
        /// <para>Display Name: Case Number</para>
        /// </summary>
        [AttributeLogicalName("ticketnumber")]
        [DisplayName("Case Number")]
        [MaxLength(100)]
        public string TicketNumber {
            get {
                return GetAttributeValue<string>("ticketnumber");
            }
            set {
                SetAttributeValue("ticketnumber", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Type a subject or descriptive name, such as the request, issue, or company name, to identify the case in Microsoft Dynamics 365 views.</para>
        /// <para>Display Name: Case Title</para>
        /// </summary>
        [AttributeLogicalName("title")]
        [DisplayName("Case Title")]
        [MaxLength(200)]
        public string Title {
            get {
                return GetAttributeValue<string>("title");
            }
            set {
                SetAttributeValue("title", value);
            }
        }
        
        /// <summary>
        /// <para>TransactionCurrency_Incident</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Traversed Path</para>
        /// </summary>
        [AttributeLogicalName("traversedpath")]
        [DisplayName("Traversed Path")]
        [MaxLength(1250)]
        public string TraversedPath {
            get {
                return GetAttributeValue<string>("traversedpath");
            }
            set {
                SetAttributeValue("traversedpath", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version number of the case.</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Case's functional location</para>
        /// <para>Display Name: Functional Location</para>
        /// </summary>
        [AttributeLogicalName("msdyn_functionallocation")]
        [DisplayName("Functional Location")]
        public EntityReference msdyn_FunctionalLocation {
            get {
                return GetAttributeValue<EntityReference>("msdyn_functionallocation");
            }
            set {
                SetAttributeValue("msdyn_functionallocation", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for Incident Type associated with Case.</para>
        /// <para>Display Name: Incident Type</para>
        /// </summary>
        [AttributeLogicalName("msdyn_incidenttype")]
        [DisplayName("Incident Type")]
        public EntityReference msdyn_IncidentType {
            get {
                return GetAttributeValue<EntityReference>("msdyn_incidenttype");
            }
            set {
                SetAttributeValue("msdyn_incidenttype", value);
            }
        }
        
        /// <summary>
        /// <para>The iot alert that initiated this case</para>
        /// <para>Display Name: IoT Alert</para>
        /// </summary>
        [AttributeLogicalName("msdyn_iotalert")]
        [DisplayName("IoT Alert")]
        public EntityReference msdyn_iotalert {
            get {
                return GetAttributeValue<EntityReference>("msdyn_iotalert");
            }
            set {
                SetAttributeValue("msdyn_iotalert", value);
            }
        }
        
        [RelationshipSchemaName("Incident_ActivityPointers")]
        public IEnumerable<ActivityPointer> Incident_ActivityPointers {
            get {
                return GetRelatedEntities<ActivityPointer>("Incident_ActivityPointers", null);
            }
            set {
                SetRelatedEntities("Incident_ActivityPointers", null, value);
            }
        }
        
        [RelationshipSchemaName("Incident_Appointments")]
        public IEnumerable<Appointment> Incident_Appointments {
            get {
                return GetRelatedEntities<Appointment>("Incident_Appointments", null);
            }
            set {
                SetRelatedEntities("Incident_Appointments", null, value);
            }
        }
        
        [RelationshipSchemaName("Incident_Emails")]
        public IEnumerable<Email> Incident_Emails {
            get {
                return GetRelatedEntities<Email>("Incident_Emails", null);
            }
            set {
                SetRelatedEntities("Incident_Emails", null, value);
            }
        }
        
        [RelationshipSchemaName("Incident_Faxes")]
        public IEnumerable<Fax> Incident_Faxes {
            get {
                return GetRelatedEntities<Fax>("Incident_Faxes", null);
            }
            set {
                SetRelatedEntities("Incident_Faxes", null, value);
            }
        }
        
        [RelationshipSchemaName("Incident_IncidentResolutions")]
        public IEnumerable<IncidentResolution> Incident_IncidentResolutions {
            get {
                return GetRelatedEntities<IncidentResolution>("Incident_IncidentResolutions", null);
            }
            set {
                SetRelatedEntities("Incident_IncidentResolutions", null, value);
            }
        }
        
        [RelationshipSchemaName("Incident_Letters")]
        public IEnumerable<Letter> Incident_Letters {
            get {
                return GetRelatedEntities<Letter>("Incident_Letters", null);
            }
            set {
                SetRelatedEntities("Incident_Letters", null, value);
            }
        }
        
        [RelationshipSchemaName("Incident_Phonecalls")]
        public IEnumerable<PhoneCall> Incident_Phonecalls {
            get {
                return GetRelatedEntities<PhoneCall>("Incident_Phonecalls", null);
            }
            set {
                SetRelatedEntities("Incident_Phonecalls", null, value);
            }
        }
        
        [RelationshipSchemaName("Incident_QueueItem")]
        public IEnumerable<QueueItem> Incident_QueueItem {
            get {
                return GetRelatedEntities<QueueItem>("Incident_QueueItem", null);
            }
            set {
                SetRelatedEntities("Incident_QueueItem", null, value);
            }
        }
        
        [RelationshipSchemaName("Incident_RecurringAppointmentMasters")]
        public IEnumerable<RecurringAppointmentMaster> Incident_RecurringAppointmentMasters {
            get {
                return GetRelatedEntities<RecurringAppointmentMaster>("Incident_RecurringAppointmentMasters", null);
            }
            set {
                SetRelatedEntities("Incident_RecurringAppointmentMasters", null, value);
            }
        }
        
        [RelationshipSchemaName("Incident_ServiceAppointments")]
        public IEnumerable<ServiceAppointment> Incident_ServiceAppointments {
            get {
                return GetRelatedEntities<ServiceAppointment>("Incident_ServiceAppointments", null);
            }
            set {
                SetRelatedEntities("Incident_ServiceAppointments", null, value);
            }
        }
        
        [RelationshipSchemaName("Incident_SocialActivities")]
        public IEnumerable<SocialActivity> Incident_SocialActivities {
            get {
                return GetRelatedEntities<SocialActivity>("Incident_SocialActivities", null);
            }
            set {
                SetRelatedEntities("Incident_SocialActivities", null, value);
            }
        }
        
        [RelationshipSchemaName("Incident_SyncErrors")]
        public IEnumerable<SyncError> Incident_SyncErrors {
            get {
                return GetRelatedEntities<SyncError>("Incident_SyncErrors", null);
            }
            set {
                SetRelatedEntities("Incident_SyncErrors", null, value);
            }
        }
        
        [RelationshipSchemaName("Incident_Tasks")]
        public IEnumerable<Task> Incident_Tasks {
            get {
                return GetRelatedEntities<Task>("Incident_Tasks", null);
            }
            set {
                SetRelatedEntities("Incident_Tasks", null, value);
            }
        }
        
        [RelationshipSchemaName("OriginatingCase_Lead")]
        public IEnumerable<Lead> OriginatingCase_Lead {
            get {
                return GetRelatedEntities<Lead>("OriginatingCase_Lead", null);
            }
            set {
                SetRelatedEntities("OriginatingCase_Lead", null, value);
            }
        }
        
        [RelationshipSchemaName("incident_existingcase", EntityRole.Referenced)]
        public IEnumerable<Incident> Referencedincident_existingcase {
            get {
                return GetRelatedEntities<Incident>("incident_existingcase", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("incident_existingcase", EntityRole.Referenced, value);
            }
        }
        
        [RelationshipSchemaName("incident_master_incident", EntityRole.Referenced)]
        public IEnumerable<Incident> Referencedincident_master_incident {
            get {
                return GetRelatedEntities<Incident>("incident_master_incident", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("incident_master_incident", EntityRole.Referenced, value);
            }
        }
        
        [RelationshipSchemaName("incident_parent_incident", EntityRole.Referenced)]
        public IEnumerable<Incident> Referencedincident_parent_incident {
            get {
                return GetRelatedEntities<Incident>("incident_parent_incident", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("incident_parent_incident", EntityRole.Referenced, value);
            }
        }
        
        [AttributeLogicalName("existingcase")]
        [RelationshipSchemaName("incident_existingcase", EntityRole.Referencing)]
        public Incident Referencingincident_existingcase {
            get {
                return GetRelatedEntity<Incident>("incident_existingcase", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("incident_existingcase", EntityRole.Referencing, value);
            }
        }
        
        [AttributeLogicalName("masterid")]
        [RelationshipSchemaName("incident_master_incident", EntityRole.Referencing)]
        public Incident Referencingincident_master_incident {
            get {
                return GetRelatedEntity<Incident>("incident_master_incident", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("incident_master_incident", EntityRole.Referencing, value);
            }
        }
        
        [AttributeLogicalName("parentcaseid")]
        [RelationshipSchemaName("incident_parent_incident", EntityRole.Referencing)]
        public Incident Referencingincident_parent_incident {
            get {
                return GetRelatedEntity<Incident>("incident_parent_incident", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("incident_parent_incident", EntityRole.Referencing, value);
            }
        }
        
        [AttributeLogicalName("transactioncurrencyid")]
        [RelationshipSchemaName("TransactionCurrency_Incident")]
        public TransactionCurrency TransactionCurrency_Incident {
            get {
                return GetRelatedEntity<TransactionCurrency>("TransactionCurrency_Incident", null);
            }
            set {
                SetRelatedEntity("TransactionCurrency_Incident", null, value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_incidents")]
        public BusinessUnit business_unit_incidents {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_incidents", null);
            }
            set {
                SetRelatedEntity("business_unit_incidents", null, value);
            }
        }
        
        [AttributeLogicalName("primarycontactid")]
        [RelationshipSchemaName("contact_as_primary_contact")]
        public Contact contact_as_primary_contact {
            get {
                return GetRelatedEntity<Contact>("contact_as_primary_contact", null);
            }
            set {
                SetRelatedEntity("contact_as_primary_contact", null, value);
            }
        }
        
        [AttributeLogicalName("responsiblecontactid")]
        [RelationshipSchemaName("contact_as_responsible_contact")]
        public Contact contact_as_responsible_contact {
            get {
                return GetRelatedEntity<Contact>("contact_as_responsible_contact", null);
            }
            set {
                SetRelatedEntity("contact_as_responsible_contact", null, value);
            }
        }
        
        [AttributeLogicalName("contractid")]
        [RelationshipSchemaName("contract_cases")]
        public Contract contract_cases {
            get {
                return GetRelatedEntity<Contract>("contract_cases", null);
            }
            set {
                SetRelatedEntity("contract_cases", null, value);
            }
        }
        
        [AttributeLogicalName("entitlementid")]
        [RelationshipSchemaName("entitlement_cases")]
        public Entitlement entitlement_cases {
            get {
                return GetRelatedEntity<Entitlement>("entitlement_cases", null);
            }
            set {
                SetRelatedEntity("entitlement_cases", null, value);
            }
        }
        
        [RelationshipSchemaName("incident_OpportunityCloses")]
        public IEnumerable<OpportunityClose> incident_OpportunityCloses {
            get {
                return GetRelatedEntities<OpportunityClose>("incident_OpportunityCloses", null);
            }
            set {
                SetRelatedEntities("incident_OpportunityCloses", null, value);
            }
        }
        
        [RelationshipSchemaName("incident_Teams")]
        public IEnumerable<Team> incident_Teams {
            get {
                return GetRelatedEntities<Team>("incident_Teams", null);
            }
            set {
                SetRelatedEntities("incident_Teams", null, value);
            }
        }
        
        [RelationshipSchemaName("incident_activity_parties")]
        public IEnumerable<ActivityParty> incident_activity_parties {
            get {
                return GetRelatedEntities<ActivityParty>("incident_activity_parties", null);
            }
            set {
                SetRelatedEntities("incident_activity_parties", null, value);
            }
        }
        
        [RelationshipSchemaName("incident_connections1")]
        public IEnumerable<Connection> incident_connections1 {
            get {
                return GetRelatedEntities<Connection>("incident_connections1", null);
            }
            set {
                SetRelatedEntities("incident_connections1", null, value);
            }
        }
        
        [RelationshipSchemaName("incident_connections2")]
        public IEnumerable<Connection> incident_connections2 {
            get {
                return GetRelatedEntities<Connection>("incident_connections2", null);
            }
            set {
                SetRelatedEntities("incident_connections2", null, value);
            }
        }
        
        [AttributeLogicalName("customerid")]
        [RelationshipSchemaName("incident_customer_accounts")]
        public Account incident_customer_accounts {
            get {
                return GetRelatedEntity<Account>("incident_customer_accounts", null);
            }
            set {
                SetRelatedEntity("incident_customer_accounts", null, value);
            }
        }
        
        [AttributeLogicalName("customerid")]
        [RelationshipSchemaName("incident_customer_contacts")]
        public Contact incident_customer_contacts {
            get {
                return GetRelatedEntity<Contact>("incident_customer_contacts", null);
            }
            set {
                SetRelatedEntity("incident_customer_contacts", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_incidentbase_createdby")]
        public SystemUser lk_incidentbase_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_incidentbase_createdby", null);
            }
            set {
                SetRelatedEntity("lk_incidentbase_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_incidentbase_createdonbehalfby")]
        public SystemUser lk_incidentbase_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_incidentbase_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_incidentbase_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_incidentbase_modifiedby")]
        public SystemUser lk_incidentbase_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_incidentbase_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_incidentbase_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_incidentbase_modifiedonbehalfby")]
        public SystemUser lk_incidentbase_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_incidentbase_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_incidentbase_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("slaid")]
        [RelationshipSchemaName("manualsla_cases")]
        public SLA manualsla_cases {
            get {
                return GetRelatedEntity<SLA>("manualsla_cases", null);
            }
            set {
                SetRelatedEntity("manualsla_cases", null, value);
            }
        }
        
        [AttributeLogicalName("slainvokedid")]
        [RelationshipSchemaName("sla_cases")]
        public SLA sla_cases {
            get {
                return GetRelatedEntity<SLA>("sla_cases", null);
            }
            set {
                SetRelatedEntity("sla_cases", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("system_user_incidents")]
        public SystemUser system_user_incidents {
            get {
                return GetRelatedEntity<SystemUser>("system_user_incidents", null);
            }
            set {
                SetRelatedEntity("system_user_incidents", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_incidents")]
        public Team team_incidents {
            get {
                return GetRelatedEntity<Team>("team_incidents", null);
            }
            set {
                SetRelatedEntity("team_incidents", null, value);
            }
        }
        
        public static Incident Retrieve(IOrganizationService service, Guid id, params Expression<Func<Incident,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Special type of activity that includes description of the resolution, billing status, and the duration of the case.</para>
    /// <para>Display Name: Case Resolution</para>
    /// </summary>
    [EntityLogicalName("incidentresolution")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class IncidentResolution : ExtendedEntity<IncidentResolutionState, IncidentResolution_StatusCode> {
        
        public const string EntityLogicalName = "incidentresolution";
        
        public const int EntityTypeCode = 4206;
        
        public IncidentResolution() : 
                base(EntityLogicalName) {
        }
        
        public IncidentResolution(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("subject");
            }
        }
        
        [AttributeLogicalName("activityid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("activityid", value);
            }
        }
        
        /// <summary>
        /// <para>activity_pointer_incident_resolution</para>
        /// <para>Display Name: Case Resolution</para>
        /// </summary>
        [AttributeLogicalName("activityid")]
        [DisplayName("Case Resolution")]
        public Guid? ActivityId {
            get {
                return GetAttributeValue<Guid?>("activityid");
            }
            set {
                SetId("activityid", value);
            }
        }
        
        /// <summary>
        /// <para>Additional information provided by the external application as JSON. For internal use only.</para>
        /// <para>Display Name: Activity Additional Parameters</para>
        /// </summary>
        [AttributeLogicalName("activityadditionalparams")]
        [DisplayName("Activity Additional Parameters")]
        public string ActivityAdditionalParams {
            get {
                return GetAttributeValue<string>("activityadditionalparams");
            }
            set {
                SetAttributeValue("activityadditionalparams", value);
            }
        }
        
        /// <summary>
        /// <para>Type of activity.</para>
        /// <para>Display Name: Activity Type</para>
        /// </summary>
        [AttributeLogicalName("activitytypecode")]
        [DisplayName("Activity Type")]
        public string ActivityTypeCode {
            get {
                return GetAttributeValue<string>("activitytypecode");
            }
        }
        
        /// <summary>
        /// <para>Actual duration of the case resolution activity in minutes.</para>
        /// <para>Display Name: Actual Duration</para>
        /// </summary>
        [AttributeLogicalName("actualdurationminutes")]
        [DisplayName("Actual Duration")]
        [Range(0, 2147483647)]
        public int? ActualDurationMinutes {
            get {
                return GetAttributeValue<int?>("actualdurationminutes");
            }
            set {
                SetAttributeValue("actualdurationminutes", value);
            }
        }
        
        /// <summary>
        /// <para>Actual end time of the case resolution activity.</para>
        /// <para>Display Name: Actual End</para>
        /// </summary>
        [AttributeLogicalName("actualend")]
        [DisplayName("Actual End")]
        public DateTime? ActualEnd {
            get {
                return GetAttributeValue<DateTime?>("actualend");
            }
            set {
                SetAttributeValue("actualend", value);
            }
        }
        
        /// <summary>
        /// <para>Actual start time of the case resolution activity.</para>
        /// <para>Display Name: Actual Start</para>
        /// </summary>
        [AttributeLogicalName("actualstart")]
        [DisplayName("Actual Start")]
        public DateTime? ActualStart {
            get {
                return GetAttributeValue<DateTime?>("actualstart");
            }
            set {
                SetAttributeValue("actualstart", value);
            }
        }
        
        /// <summary>
        /// <para>Blind Carbon-copy (bcc) recipients of the activity.</para>
        /// <para>Display Name: BCC</para>
        /// </summary>
        [AttributeLogicalName("bcc")]
        [DisplayName("BCC")]
        public IEnumerable<ActivityParty> Bcc {
            get {
                return GetEntityCollection<ActivityParty>("bcc");
            }
            set {
                SetEntityCollection("bcc", value);
            }
        }
        
        /// <summary>
        /// <para>Category for the case resolution activity.</para>
        /// <para>Display Name: Category</para>
        /// </summary>
        [AttributeLogicalName("category")]
        [DisplayName("Category")]
        [MaxLength(250)]
        public string Category {
            get {
                return GetAttributeValue<string>("category");
            }
            set {
                SetAttributeValue("category", value);
            }
        }
        
        /// <summary>
        /// <para>Carbon-copy (cc) recipients of the activity.</para>
        /// <para>Display Name: CC</para>
        /// </summary>
        [AttributeLogicalName("cc")]
        [DisplayName("CC")]
        public IEnumerable<ActivityParty> Cc {
            get {
                return GetEntityCollection<ActivityParty>("cc");
            }
            set {
                SetEntityCollection("cc", value);
            }
        }
        
        /// <summary>
        /// <para>Shows how contact about the social activity originated, such as from Twitter or Facebook. This field is read-only.</para>
        /// <para>Display Name: Social Channel</para>
        /// </summary>
        [AttributeLogicalName("community")]
        [DisplayName("Social Channel")]
        public socialprofile_community? Community {
            get {
                return GetOptionSetValue<socialprofile_community>("community");
            }
            set {
                SetOptionSetValue("community", value);
            }
        }
        
        /// <summary>
        /// <para>lk_incidentresolution_createdby</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Shows the external party who created the record.</para>
        /// <para>Display Name: Created By (External Party)</para>
        /// </summary>
        [AttributeLogicalName("createdbyexternalparty")]
        [DisplayName("Created By (External Party)")]
        public EntityReference CreatedByExternalParty {
            get {
                return GetAttributeValue<EntityReference>("createdbyexternalparty");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the case resolution activity was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>lk_incidentresolution_createdonbehalfby</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Customer with which the activity is associated.</para>
        /// <para>Display Name: Customers</para>
        /// </summary>
        [AttributeLogicalName("customers")]
        [DisplayName("Customers")]
        public IEnumerable<ActivityParty> Customers {
            get {
                return GetEntityCollection<ActivityParty>("customers");
            }
            set {
                SetEntityCollection("customers", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time when the delivery of the activity was last attempted.</para>
        /// <para>Display Name: Date Delivery Last Attempted</para>
        /// </summary>
        [AttributeLogicalName("deliverylastattemptedon")]
        [DisplayName("Date Delivery Last Attempted")]
        public DateTime? DeliveryLastAttemptedOn {
            get {
                return GetAttributeValue<DateTime?>("deliverylastattemptedon");
            }
        }
        
        /// <summary>
        /// <para>Priority of delivery of the activity to the email server.</para>
        /// <para>Display Name: Delivery Priority</para>
        /// </summary>
        [AttributeLogicalName("deliveryprioritycode")]
        [DisplayName("Delivery Priority")]
        public activitypointer_deliveryprioritycode? DeliveryPriorityCode {
            get {
                return GetOptionSetValue<activitypointer_deliveryprioritycode>("deliveryprioritycode");
            }
            set {
                SetOptionSetValue("deliveryprioritycode", value);
            }
        }
        
        /// <summary>
        /// <para>Type additional information that describes the case resolution.</para>
        /// <para>Display Name: Remarks</para>
        /// </summary>
        [AttributeLogicalName("description")]
        [DisplayName("Remarks")]
        public string Description {
            get {
                return GetAttributeValue<string>("description");
            }
            set {
                SetAttributeValue("description", value);
            }
        }
        
        /// <summary>
        /// <para>The message id of activity which is returned from Exchange Server.</para>
        /// <para>Display Name: Exchange Item ID</para>
        /// </summary>
        [AttributeLogicalName("exchangeitemid")]
        [DisplayName("Exchange Item ID")]
        [MaxLength(200)]
        public string ExchangeItemId {
            get {
                return GetAttributeValue<string>("exchangeitemid");
            }
            set {
                SetAttributeValue("exchangeitemid", value);
            }
        }
        
        /// <summary>
        /// <para>Exchange rate for the currency associated with the activitypointer with respect to the base currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("Exchange Rate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Shows the web link of Activity of type email.</para>
        /// <para>Display Name: Exchange WebLink</para>
        /// </summary>
        [AttributeLogicalName("exchangeweblink")]
        [DisplayName("Exchange WebLink")]
        [MaxLength(1250)]
        public string ExchangeWebLink {
            get {
                return GetAttributeValue<string>("exchangeweblink");
            }
            set {
                SetAttributeValue("exchangeweblink", value);
            }
        }
        
        /// <summary>
        /// <para>Person who the activity is from.</para>
        /// <para>Display Name: From</para>
        /// </summary>
        [AttributeLogicalName("from")]
        [DisplayName("From")]
        public IEnumerable<ActivityParty> From {
            get {
                return GetEntityCollection<ActivityParty>("from");
            }
            set {
                SetEntityCollection("from", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the data import or data migration that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Incident_IncidentResolutions</para>
        /// <para>Display Name: Case</para>
        /// </summary>
        [AttributeLogicalName("incidentid")]
        [DisplayName("Case")]
        public EntityReference IncidentId {
            get {
                return GetAttributeValue<EntityReference>("incidentid");
            }
            set {
                SetAttributeValue("incidentid", value);
            }
        }
        
        /// <summary>
        /// <para>Type of instance of a recurring series.</para>
        /// <para>Display Name: Recurring Instance Type</para>
        /// </summary>
        [AttributeLogicalName("instancetypecode")]
        [DisplayName("Recurring Instance Type")]
        public IncidentResolution_InstanceTypeCode? InstanceTypeCode {
            get {
                return GetOptionSetValue<IncidentResolution_InstanceTypeCode>("instancetypecode");
            }
        }
        
        /// <summary>
        /// <para>Information about whether the case resolution activity was billed as part of resolving a case.</para>
        /// <para>Display Name: Is Billed</para>
        /// </summary>
        [AttributeLogicalName("isbilled")]
        [DisplayName("Is Billed")]
        public bool? IsBilled {
            get {
                return GetAttributeValue<bool?>("isbilled");
            }
            set {
                SetAttributeValue("isbilled", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Is Private</para>
        /// </summary>
        [AttributeLogicalName("ismapiprivate")]
        [DisplayName("Is Private")]
        public bool? IsMapiPrivate {
            get {
                return GetAttributeValue<bool?>("ismapiprivate");
            }
            set {
                SetAttributeValue("ismapiprivate", value);
            }
        }
        
        /// <summary>
        /// <para>Information regarding whether the activity is a regular activity type or event type.</para>
        /// <para>Display Name: Is Regular Activity</para>
        /// </summary>
        [AttributeLogicalName("isregularactivity")]
        [DisplayName("Is Regular Activity")]
        public bool? IsRegularActivity {
            get {
                return GetAttributeValue<bool?>("isregularactivity");
            }
        }
        
        /// <summary>
        /// <para>Information that specifies if the case resolution activity was created from a workflow rule.</para>
        /// <para>Display Name: Is Workflow Created</para>
        /// </summary>
        [AttributeLogicalName("isworkflowcreated")]
        [DisplayName("Is Workflow Created")]
        public bool? IsWorkflowCreated {
            get {
                return GetAttributeValue<bool?>("isworkflowcreated");
            }
            set {
                SetAttributeValue("isworkflowcreated", value);
            }
        }
        
        /// <summary>
        /// <para>Contains the date and time stamp of the last on hold time.</para>
        /// <para>Display Name: Last On Hold Time</para>
        /// </summary>
        [AttributeLogicalName("lastonholdtime")]
        [DisplayName("Last On Hold Time")]
        public DateTime? LastOnHoldTime {
            get {
                return GetAttributeValue<DateTime?>("lastonholdtime");
            }
            set {
                SetAttributeValue("lastonholdtime", value);
            }
        }
        
        /// <summary>
        /// <para>Left the voice mail</para>
        /// <para>Display Name: Left Voice Mail</para>
        /// </summary>
        [AttributeLogicalName("leftvoicemail")]
        [DisplayName("Left Voice Mail")]
        public bool? LeftVoiceMail {
            get {
                return GetAttributeValue<bool?>("leftvoicemail");
            }
            set {
                SetAttributeValue("leftvoicemail", value);
            }
        }
        
        /// <summary>
        /// <para>lk_incidentresolution_modifiedby</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Shows the external party who modified the record.</para>
        /// <para>Display Name: Modified By (External Party)</para>
        /// </summary>
        [AttributeLogicalName("modifiedbyexternalparty")]
        [DisplayName("Modified By (External Party)")]
        public EntityReference ModifiedByExternalParty {
            get {
                return GetAttributeValue<EntityReference>("modifiedbyexternalparty");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the case resolution activity was last modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>lk_incidentresolution_modifiedonbehalfby</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Shows how long, in minutes, that the record was on hold.</para>
        /// <para>Display Name: On Hold Time (Minutes)</para>
        /// </summary>
        [AttributeLogicalName("onholdtime")]
        [DisplayName("On Hold Time (Minutes)")]
        [Range(-2147483648, 2147483647)]
        public int? OnHoldTime {
            get {
                return GetAttributeValue<int?>("onholdtime");
            }
        }
        
        /// <summary>
        /// <para>List of optional attendees for the activity.</para>
        /// <para>Display Name: Optional Attendees</para>
        /// </summary>
        [AttributeLogicalName("optionalattendees")]
        [DisplayName("Optional Attendees")]
        public IEnumerable<ActivityParty> OptionalAttendees {
            get {
                return GetEntityCollection<ActivityParty>("optionalattendees");
            }
            set {
                SetEntityCollection("optionalattendees", value);
            }
        }
        
        /// <summary>
        /// <para>Person who organized the activity.</para>
        /// <para>Display Name: Organizer</para>
        /// </summary>
        [AttributeLogicalName("organizer")]
        [DisplayName("Organizer")]
        public IEnumerable<ActivityParty> Organizer {
            get {
                return GetEntityCollection<ActivityParty>("organizer");
            }
            set {
                SetEntityCollection("organizer", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user or team who owns the case resolution activity.</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>business_unit_incident_resolution_activities</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>team_incidentresolution</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>user_incidentresolution</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Outsource vendor with which activity is associated.</para>
        /// <para>Display Name: Outsource Vendors</para>
        /// </summary>
        [AttributeLogicalName("partners")]
        [DisplayName("Outsource Vendors")]
        public IEnumerable<ActivityParty> Partners {
            get {
                return GetEntityCollection<ActivityParty>("partners");
            }
            set {
                SetEntityCollection("partners", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Delay activity processing until</para>
        /// </summary>
        [AttributeLogicalName("postponeactivityprocessinguntil")]
        [DisplayName("Delay activity processing until")]
        public DateTime? PostponeActivityProcessingUntil {
            get {
                return GetAttributeValue<DateTime?>("postponeactivityprocessinguntil");
            }
        }
        
        /// <summary>
        /// <para>Subject associated with the case resolution activity.</para>
        /// <para>Display Name: Subject</para>
        /// </summary>
        [AttributeLogicalName("subject")]
        [DisplayName("Subject")]
        [MaxLength(200)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("subject");
            }
            set {
                SetAttributeValue("subject", value);
            }
        }
        
        /// <summary>
        /// <para>Priority of the activity.</para>
        /// <para>Display Name: Priority</para>
        /// </summary>
        [AttributeLogicalName("prioritycode")]
        [DisplayName("Priority")]
        public IncidentResolution_PriorityCode? PriorityCode {
            get {
                return GetOptionSetValue<IncidentResolution_PriorityCode>("prioritycode");
            }
            set {
                SetOptionSetValue("prioritycode", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the Process.</para>
        /// <para>Display Name: Process</para>
        /// </summary>
        [AttributeLogicalName("processid")]
        [DisplayName("Process")]
        public Guid? ProcessId {
            get {
                return GetAttributeValue<Guid?>("processid");
            }
            set {
                SetAttributeValue("processid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the object with which the activity is associated.</para>
        /// <para>Display Name: Regarding</para>
        /// </summary>
        [AttributeLogicalName("regardingobjectid")]
        [DisplayName("Regarding")]
        public EntityReference RegardingObjectId {
            get {
                return GetAttributeValue<EntityReference>("regardingobjectid");
            }
            set {
                SetAttributeValue("regardingobjectid", value);
            }
        }
        
        /// <summary>
        /// <para>List of required attendees for the activity.</para>
        /// <para>Display Name: Required Attendees</para>
        /// </summary>
        [AttributeLogicalName("requiredattendees")]
        [DisplayName("Required Attendees")]
        public IEnumerable<ActivityParty> RequiredAttendees {
            get {
                return GetEntityCollection<ActivityParty>("requiredattendees");
            }
            set {
                SetEntityCollection("requiredattendees", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Resolution Type</para>
        /// </summary>
        [AttributeLogicalName("resolutiontypecode")]
        [DisplayName("Resolution Type")]
        public IncidentResolution_ResolutionTypeCode? ResolutionTypeCode {
            get {
                return GetOptionSetValue<IncidentResolution_ResolutionTypeCode>("resolutiontypecode");
            }
            set {
                SetOptionSetValue("resolutiontypecode", value);
            }
        }
        
        /// <summary>
        /// <para>Users or facility/equipment that are required for the activity.</para>
        /// <para>Display Name: Resources</para>
        /// </summary>
        [AttributeLogicalName("resources")]
        [DisplayName("Resources")]
        public IEnumerable<ActivityParty> Resources {
            get {
                return GetEntityCollection<ActivityParty>("resources");
            }
            set {
                SetEntityCollection("resources", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the service level agreement (SLA) that you want to apply to the case record.</para>
        /// <para>Display Name: SLA</para>
        /// </summary>
        [AttributeLogicalName("slaid")]
        [DisplayName("SLA")]
        public EntityReference SLAId {
            get {
                return GetAttributeValue<EntityReference>("slaid");
            }
            set {
                SetAttributeValue("slaid", value);
            }
        }
        
        /// <summary>
        /// <para>Last SLA that was applied to this case. This field is for internal use only.</para>
        /// <para>Display Name: Last SLA applied</para>
        /// </summary>
        [AttributeLogicalName("slainvokedid")]
        [DisplayName("Last SLA applied")]
        public EntityReference SLAInvokedId {
            get {
                return GetAttributeValue<EntityReference>("slainvokedid");
            }
        }
        
        /// <summary>
        /// <para>Scheduled duration of the case resolution activity, specified in minutes.</para>
        /// <para>Display Name: Scheduled Duration</para>
        /// </summary>
        [AttributeLogicalName("scheduleddurationminutes")]
        [DisplayName("Scheduled Duration")]
        [Range(0, 2147483647)]
        public int? ScheduledDurationMinutes {
            get {
                return GetAttributeValue<int?>("scheduleddurationminutes");
            }
        }
        
        /// <summary>
        /// <para>Scheduled end time of the case resolution activity.</para>
        /// <para>Display Name: Scheduled End</para>
        /// </summary>
        [AttributeLogicalName("scheduledend")]
        [DisplayName("Scheduled End")]
        public DateTime? ScheduledEnd {
            get {
                return GetAttributeValue<DateTime?>("scheduledend");
            }
            set {
                SetAttributeValue("scheduledend", value);
            }
        }
        
        /// <summary>
        /// <para>Scheduled start time of the case resolution activity.</para>
        /// <para>Display Name: Scheduled Start</para>
        /// </summary>
        [AttributeLogicalName("scheduledstart")]
        [DisplayName("Scheduled Start")]
        public DateTime? ScheduledStart {
            get {
                return GetAttributeValue<DateTime?>("scheduledstart");
            }
            set {
                SetAttributeValue("scheduledstart", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the mailbox associated with the sender of the email message.</para>
        /// <para>Display Name: Sender's Mailbox</para>
        /// </summary>
        [AttributeLogicalName("sendermailboxid")]
        [DisplayName("Sender\'s Mailbox")]
        public EntityReference SenderMailboxId {
            get {
                return GetAttributeValue<EntityReference>("sendermailboxid");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the activity was sent.</para>
        /// <para>Display Name: Date Sent</para>
        /// </summary>
        [AttributeLogicalName("senton")]
        [DisplayName("Date Sent")]
        public DateTime? SentOn {
            get {
                return GetAttributeValue<DateTime?>("senton");
            }
        }
        
        /// <summary>
        /// <para>Uniqueidentifier specifying the id of recurring series of an instance.</para>
        /// <para>Display Name: Series Id</para>
        /// </summary>
        [AttributeLogicalName("seriesid")]
        [DisplayName("Series Id")]
        public Guid? SeriesId {
            get {
                return GetAttributeValue<Guid?>("seriesid");
            }
        }
        
        /// <summary>
        /// <para>service_incidentresolutions</para>
        /// <para>Display Name: Service</para>
        /// </summary>
        [AttributeLogicalName("serviceid")]
        [DisplayName("Service")]
        public EntityReference ServiceId {
            get {
                return GetAttributeValue<EntityReference>("serviceid");
            }
            set {
                SetAttributeValue("serviceid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time by which the activities are sorted.</para>
        /// <para>Display Name: Sort Date</para>
        /// </summary>
        [AttributeLogicalName("sortdate")]
        [DisplayName("Sort Date")]
        public DateTime? SortDate {
            get {
                return GetAttributeValue<DateTime?>("sortdate");
            }
            set {
                SetAttributeValue("sortdate", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the Stage.</para>
        /// <para>Display Name: Process Stage</para>
        /// </summary>
        [AttributeLogicalName("stageid")]
        [DisplayName("Process Stage")]
        public Guid? StageId {
            get {
                return GetAttributeValue<Guid?>("stageid");
            }
            set {
                SetAttributeValue("stageid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows whether the case resolution is open, completed, or canceled. By default, all case resolutions are completed and the status value can't be changed.</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public IncidentResolutionState? StateCode {
            get {
                return GetOptionSetValue<IncidentResolutionState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the case resolution activity.</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public IncidentResolution_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<IncidentResolution_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>Subcategory of the case resolution activity.</para>
        /// <para>Display Name: Sub-Category</para>
        /// </summary>
        [AttributeLogicalName("subcategory")]
        [DisplayName("Sub-Category")]
        [MaxLength(250)]
        public string Subcategory {
            get {
                return GetAttributeValue<string>("subcategory");
            }
            set {
                SetAttributeValue("subcategory", value);
            }
        }
        
        /// <summary>
        /// <para>Subject associated with the case resolution activity.</para>
        /// <para>Display Name: Subject</para>
        /// </summary>
        [AttributeLogicalName("subject")]
        [DisplayName("Subject")]
        [MaxLength(200)]
        public string Subject {
            get {
                return GetAttributeValue<string>("subject");
            }
            set {
                SetAttributeValue("subject", value);
            }
        }
        
        /// <summary>
        /// <para>Time spent on the case resolution activity.</para>
        /// <para>Display Name: Billable Time</para>
        /// </summary>
        [AttributeLogicalName("timespent")]
        [DisplayName("Billable Time")]
        [Range(0, 2147483647)]
        public int? TimeSpent {
            get {
                return GetAttributeValue<int?>("timespent");
            }
            set {
                SetAttributeValue("timespent", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Person who is the receiver of the activity.</para>
        /// <para>Display Name: To</para>
        /// </summary>
        [AttributeLogicalName("to")]
        [DisplayName("To")]
        public IEnumerable<ActivityParty> To {
            get {
                return GetEntityCollection<ActivityParty>("to");
            }
            set {
                SetEntityCollection("to", value);
            }
        }
        
        /// <summary>
        /// <para>Total time spent on the case resolution activity.</para>
        /// <para>Display Name: Total Time</para>
        /// </summary>
        [AttributeLogicalName("totaltimespent")]
        [DisplayName("Total Time")]
        [Range(0, 2147483647)]
        public int? TotalTimeSpent {
            get {
                return GetAttributeValue<int?>("totaltimespent");
            }
            set {
                SetAttributeValue("totaltimespent", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the currency associated with the activitypointer.</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Traversed Path</para>
        /// </summary>
        [AttributeLogicalName("traversedpath")]
        [DisplayName("Traversed Path")]
        [MaxLength(1250)]
        public string TraversedPath {
            get {
                return GetAttributeValue<string>("traversedpath");
            }
            set {
                SetAttributeValue("traversedpath", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version number of the case.</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        [RelationshipSchemaName("CampaignResponse_IncidentResolutions")]
        public IEnumerable<CampaignResponse> CampaignResponse_IncidentResolutions {
            get {
                return GetRelatedEntities<CampaignResponse>("CampaignResponse_IncidentResolutions", null);
            }
            set {
                SetRelatedEntities("CampaignResponse_IncidentResolutions", null, value);
            }
        }
        
        [RelationshipSchemaName("IncidentResolution_SyncErrors")]
        public IEnumerable<SyncError> IncidentResolution_SyncErrors {
            get {
                return GetRelatedEntities<SyncError>("IncidentResolution_SyncErrors", null);
            }
            set {
                SetRelatedEntities("IncidentResolution_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("incidentid")]
        [RelationshipSchemaName("Incident_IncidentResolutions")]
        public Incident Incident_IncidentResolutions {
            get {
                return GetRelatedEntity<Incident>("Incident_IncidentResolutions", null);
            }
            set {
                SetRelatedEntity("Incident_IncidentResolutions", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("account_IncidentResolutions")]
        public Account account_IncidentResolutions {
            get {
                return GetRelatedEntity<Account>("account_IncidentResolutions", null);
            }
            set {
                SetRelatedEntity("account_IncidentResolutions", null, value);
            }
        }
        
        [AttributeLogicalName("activityid")]
        [RelationshipSchemaName("activity_pointer_incident_resolution")]
        public ActivityPointer activity_pointer_incident_resolution {
            get {
                return GetRelatedEntity<ActivityPointer>("activity_pointer_incident_resolution", null);
            }
            set {
                SetRelatedEntity("activity_pointer_incident_resolution", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("bookableresourcebooking_IncidentResolutions")]
        public BookableResourceBooking bookableresourcebooking_IncidentResolutions {
            get {
                return GetRelatedEntity<BookableResourceBooking>("bookableresourcebooking_IncidentResolutions", null);
            }
            set {
                SetRelatedEntity("bookableresourcebooking_IncidentResolutions", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("bookableresourcebookingheader_IncidentResolutions")]
        public BookableResourceBookingHeader bookableresourcebookingheader_IncidentResolutions {
            get {
                return GetRelatedEntity<BookableResourceBookingHeader>("bookableresourcebookingheader_IncidentResolutions", null);
            }
            set {
                SetRelatedEntity("bookableresourcebookingheader_IncidentResolutions", null, value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_incident_resolution_activities")]
        public BusinessUnit business_unit_incident_resolution_activities {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_incident_resolution_activities", null);
            }
            set {
                SetRelatedEntity("business_unit_incident_resolution_activities", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("campaign_IncidentResolutions")]
        public Campaign campaign_IncidentResolutions {
            get {
                return GetRelatedEntity<Campaign>("campaign_IncidentResolutions", null);
            }
            set {
                SetRelatedEntity("campaign_IncidentResolutions", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("campaignactivity_IncidentResolutions")]
        public CampaignActivity campaignactivity_IncidentResolutions {
            get {
                return GetRelatedEntity<CampaignActivity>("campaignactivity_IncidentResolutions", null);
            }
            set {
                SetRelatedEntity("campaignactivity_IncidentResolutions", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("entitlement_IncidentResolutions")]
        public Entitlement entitlement_IncidentResolutions {
            get {
                return GetRelatedEntity<Entitlement>("entitlement_IncidentResolutions", null);
            }
            set {
                SetRelatedEntity("entitlement_IncidentResolutions", null, value);
            }
        }
        
        [RelationshipSchemaName("incidentresolution_Teams")]
        public IEnumerable<Team> incidentresolution_Teams {
            get {
                return GetRelatedEntities<Team>("incidentresolution_Teams", null);
            }
            set {
                SetRelatedEntities("incidentresolution_Teams", null, value);
            }
        }
        
        [RelationshipSchemaName("incidentresolution_activity_parties")]
        public IEnumerable<ActivityParty> incidentresolution_activity_parties {
            get {
                return GetRelatedEntities<ActivityParty>("incidentresolution_activity_parties", null);
            }
            set {
                SetRelatedEntities("incidentresolution_activity_parties", null, value);
            }
        }
        
        [AttributeLogicalName("sendermailboxid")]
        [RelationshipSchemaName("incidentresolution_mailbox_sendermailboxid")]
        public Mailbox incidentresolution_mailbox_sendermailboxid {
            get {
                return GetRelatedEntity<Mailbox>("incidentresolution_mailbox_sendermailboxid", null);
            }
            set {
                SetRelatedEntity("incidentresolution_mailbox_sendermailboxid", null, value);
            }
        }
        
        [AttributeLogicalName("slaid")]
        [RelationshipSchemaName("incidentresolution_sla_slaid")]
        public SLA incidentresolution_sla_slaid {
            get {
                return GetRelatedEntity<SLA>("incidentresolution_sla_slaid", null);
            }
            set {
                SetRelatedEntity("incidentresolution_sla_slaid", null, value);
            }
        }
        
        [AttributeLogicalName("slainvokedid")]
        [RelationshipSchemaName("incidentresolution_sla_slainvokedid")]
        public SLA incidentresolution_sla_slainvokedid {
            get {
                return GetRelatedEntity<SLA>("incidentresolution_sla_slainvokedid", null);
            }
            set {
                SetRelatedEntity("incidentresolution_sla_slainvokedid", null, value);
            }
        }
        
        [AttributeLogicalName("transactioncurrencyid")]
        [RelationshipSchemaName("incidentresolution_transactioncurrency_transactioncurrencyid")]
        public TransactionCurrency incidentresolution_transactioncurrency_transactioncurrencyid {
            get {
                return GetRelatedEntity<TransactionCurrency>("incidentresolution_transactioncurrency_transactioncurrencyid", null);
            }
            set {
                SetRelatedEntity("incidentresolution_transactioncurrency_transactioncurrencyid", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("knowledgearticle_IncidentResolutions")]
        public KnowledgeArticle knowledgearticle_IncidentResolutions {
            get {
                return GetRelatedEntity<KnowledgeArticle>("knowledgearticle_IncidentResolutions", null);
            }
            set {
                SetRelatedEntity("knowledgearticle_IncidentResolutions", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("lead_IncidentResolutions")]
        public Lead lead_IncidentResolutions {
            get {
                return GetRelatedEntity<Lead>("lead_IncidentResolutions", null);
            }
            set {
                SetRelatedEntity("lead_IncidentResolutions", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_incidentresolution_createdby")]
        public SystemUser lk_incidentresolution_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_incidentresolution_createdby", null);
            }
            set {
                SetRelatedEntity("lk_incidentresolution_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_incidentresolution_createdonbehalfby")]
        public SystemUser lk_incidentresolution_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_incidentresolution_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_incidentresolution_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_incidentresolution_modifiedby")]
        public SystemUser lk_incidentresolution_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_incidentresolution_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_incidentresolution_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_incidentresolution_modifiedonbehalfby")]
        public SystemUser lk_incidentresolution_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_incidentresolution_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_incidentresolution_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_incidentresolution")]
        public Team team_incidentresolution {
            get {
                return GetRelatedEntity<Team>("team_incidentresolution", null);
            }
            set {
                SetRelatedEntity("team_incidentresolution", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_incidentresolution")]
        public SystemUser user_incidentresolution {
            get {
                return GetRelatedEntity<SystemUser>("user_incidentresolution", null);
            }
            set {
                SetRelatedEntity("user_incidentresolution", null, value);
            }
        }
        
        public static IncidentResolution Retrieve(IOrganizationService service, Guid id, params Expression<Func<IncidentResolution,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Order that has been billed.</para>
    /// <para>Display Name: Invoice</para>
    /// </summary>
    [EntityLogicalName("invoice")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class Invoice : ExtendedEntity<InvoiceState, Invoice_StatusCode> {
        
        public const string EntityLogicalName = "invoice";
        
        public const int EntityTypeCode = 1090;
        
        public Invoice() : 
                base(EntityLogicalName) {
        }
        
        public Invoice(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("name");
            }
        }
        
        [AttributeLogicalName("invoiceid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("invoiceid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the invoice.</para>
        /// <para>Display Name: Invoice</para>
        /// </summary>
        [AttributeLogicalName("invoiceid")]
        [DisplayName("Invoice")]
        public Guid? InvoiceId {
            get {
                return GetAttributeValue<Guid?>("invoiceid");
            }
            set {
                SetId("invoiceid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the account with which the invoice is associated.</para>
        /// <para>Display Name: Account</para>
        /// </summary>
        [AttributeLogicalName("accountid")]
        [DisplayName("Account")]
        public EntityReference AccountId {
            get {
                return GetAttributeValue<EntityReference>("accountid");
            }
        }
        
        /// <summary>
        /// <para>Type the city for the customer's billing address.</para>
        /// <para>Display Name: Bill To City</para>
        /// </summary>
        [AttributeLogicalName("billto_city")]
        [DisplayName("Bill To City")]
        [MaxLength(80)]
        public string BillTo_City {
            get {
                return GetAttributeValue<string>("billto_city");
            }
            set {
                SetAttributeValue("billto_city", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the complete Bill To address.</para>
        /// <para>Display Name: Bill To Address</para>
        /// </summary>
        [AttributeLogicalName("billto_composite")]
        [DisplayName("Bill To Address")]
        public string BillTo_Composite {
            get {
                return GetAttributeValue<string>("billto_composite");
            }
        }
        
        /// <summary>
        /// <para>Type the country or region for the customer's billing address.</para>
        /// <para>Display Name: Bill To Country/Region</para>
        /// </summary>
        [AttributeLogicalName("billto_country")]
        [DisplayName("Bill To Country/Region")]
        [MaxLength(80)]
        public string BillTo_Country {
            get {
                return GetAttributeValue<string>("billto_country");
            }
            set {
                SetAttributeValue("billto_country", value);
            }
        }
        
        /// <summary>
        /// <para>Type the fax number for the customer's billing address.</para>
        /// <para>Display Name: Bill To Fax</para>
        /// </summary>
        [AttributeLogicalName("billto_fax")]
        [DisplayName("Bill To Fax")]
        [MaxLength(50)]
        public string BillTo_Fax {
            get {
                return GetAttributeValue<string>("billto_fax");
            }
            set {
                SetAttributeValue("billto_fax", value);
            }
        }
        
        /// <summary>
        /// <para>Type the first line of the customer's billing address.</para>
        /// <para>Display Name: Bill To Street 1</para>
        /// </summary>
        [AttributeLogicalName("billto_line1")]
        [DisplayName("Bill To Street 1")]
        [MaxLength(250)]
        public string BillTo_Line1 {
            get {
                return GetAttributeValue<string>("billto_line1");
            }
            set {
                SetAttributeValue("billto_line1", value);
            }
        }
        
        /// <summary>
        /// <para>Type the second line of the customer's billing address.</para>
        /// <para>Display Name: Bill To Street 2</para>
        /// </summary>
        [AttributeLogicalName("billto_line2")]
        [DisplayName("Bill To Street 2")]
        [MaxLength(250)]
        public string BillTo_Line2 {
            get {
                return GetAttributeValue<string>("billto_line2");
            }
            set {
                SetAttributeValue("billto_line2", value);
            }
        }
        
        /// <summary>
        /// <para>Type the third line of the billing address.</para>
        /// <para>Display Name: Bill To Street 3</para>
        /// </summary>
        [AttributeLogicalName("billto_line3")]
        [DisplayName("Bill To Street 3")]
        [MaxLength(250)]
        public string BillTo_Line3 {
            get {
                return GetAttributeValue<string>("billto_line3");
            }
            set {
                SetAttributeValue("billto_line3", value);
            }
        }
        
        /// <summary>
        /// <para>Type a name for the customer's billing address, such as "Headquarters" or "Field office", to identify the address.</para>
        /// <para>Display Name: Bill To Name</para>
        /// </summary>
        [AttributeLogicalName("billto_name")]
        [DisplayName("Bill To Name")]
        [MaxLength(200)]
        public string BillTo_Name {
            get {
                return GetAttributeValue<string>("billto_name");
            }
            set {
                SetAttributeValue("billto_name", value);
            }
        }
        
        /// <summary>
        /// <para>Type the ZIP Code or postal code for the billing address.</para>
        /// <para>Display Name: Bill To ZIP/Postal Code</para>
        /// </summary>
        [AttributeLogicalName("billto_postalcode")]
        [DisplayName("Bill To ZIP/Postal Code")]
        [MaxLength(20)]
        public string BillTo_PostalCode {
            get {
                return GetAttributeValue<string>("billto_postalcode");
            }
            set {
                SetAttributeValue("billto_postalcode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the state or province for the billing address.</para>
        /// <para>Display Name: Bill To State/Province</para>
        /// </summary>
        [AttributeLogicalName("billto_stateorprovince")]
        [DisplayName("Bill To State/Province")]
        [MaxLength(50)]
        public string BillTo_StateOrProvince {
            get {
                return GetAttributeValue<string>("billto_stateorprovince");
            }
            set {
                SetAttributeValue("billto_stateorprovince", value);
            }
        }
        
        /// <summary>
        /// <para>Type the phone number for the customer's billing address.</para>
        /// <para>Display Name: Bill To Phone</para>
        /// </summary>
        [AttributeLogicalName("billto_telephone")]
        [DisplayName("Bill To Phone")]
        [MaxLength(50)]
        public string BillTo_Telephone {
            get {
                return GetAttributeValue<string>("billto_telephone");
            }
            set {
                SetAttributeValue("billto_telephone", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the contact associated with the invoice.</para>
        /// <para>Display Name: Contact</para>
        /// </summary>
        [AttributeLogicalName("contactid")]
        [DisplayName("Contact")]
        public EntityReference ContactId {
            get {
                return GetAttributeValue<EntityReference>("contactid");
            }
        }
        
        /// <summary>
        /// <para>lk_invoicebase_createdby</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics CRM options.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>lk_invoice_createdonbehalfby</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>invoice_customer_contacts</para>
        /// <para>Display Name: Customer</para>
        /// </summary>
        [AttributeLogicalName("customerid")]
        [DisplayName("Customer")]
        public EntityReference CustomerId {
            get {
                return GetAttributeValue<EntityReference>("customerid");
            }
            set {
                SetAttributeValue("customerid", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the date when the products included in the invoice were delivered.</para>
        /// <para>Display Name: Date Delivered</para>
        /// </summary>
        [AttributeLogicalName("datedelivered")]
        [DisplayName("Date Delivered")]
        public DateTime? DateDelivered {
            get {
                return GetAttributeValue<DateTime?>("datedelivered");
            }
            set {
                SetAttributeValue("datedelivered", value);
            }
        }
        
        /// <summary>
        /// <para>Type additional information to describe the invoice, such as shipping details or product substitutions.</para>
        /// <para>Display Name: Description</para>
        /// </summary>
        [AttributeLogicalName("description")]
        [DisplayName("Description")]
        public string Description {
            get {
                return GetAttributeValue<string>("description");
            }
            set {
                SetAttributeValue("description", value);
            }
        }
        
        /// <summary>
        /// <para>Type the discount amount for the invoice if the customer is eligible for special savings.</para>
        /// <para>Display Name: Invoice Discount Amount</para>
        /// </summary>
        [AttributeLogicalName("discountamount")]
        [DisplayName("Invoice Discount Amount")]
        public decimal? DiscountAmount {
            get {
                return GetMoneyValue("discountamount");
            }
            set {
                SetMoneyValue("discountamount", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the Invoice Discount field converted to the system's default base currency for reporting purposes. The calculation uses the exchange rate specified in the Currencies area.</para>
        /// <para>Display Name: Invoice Discount Amount (Base)</para>
        /// </summary>
        [AttributeLogicalName("discountamount_base")]
        [DisplayName("Invoice Discount Amount (Base)")]
        public decimal? DiscountAmount_Base {
            get {
                return GetMoneyValue("discountamount_base");
            }
        }
        
        /// <summary>
        /// <para>Type the discount rate that should be applied to the Detail Amount field, for use in calculating the Pre-Freight Amount and Total Amount values for the invoice.</para>
        /// <para>Display Name: Invoice Discount (%)</para>
        /// </summary>
        [AttributeLogicalName("discountpercentage")]
        [DisplayName("Invoice Discount (%)")]
        public decimal? DiscountPercentage {
            get {
                return GetAttributeValue<decimal?>("discountpercentage");
            }
            set {
                SetAttributeValue("discountpercentage", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the date by which the invoice should be paid by the customer.</para>
        /// <para>Display Name: Due Date</para>
        /// </summary>
        [AttributeLogicalName("duedate")]
        [DisplayName("Due Date")]
        public DateTime? DueDate {
            get {
                return GetAttributeValue<DateTime?>("duedate");
            }
            set {
                SetAttributeValue("duedate", value);
            }
        }
        
        /// <summary>
        /// <para>The primary email address for the entity.</para>
        /// <para>Display Name: Email Address</para>
        /// </summary>
        [AttributeLogicalName("emailaddress")]
        [DisplayName("Email Address")]
        [MaxLength(100)]
        public string EmailAddress {
            get {
                return GetAttributeValue<string>("emailaddress");
            }
            set {
                SetAttributeValue("emailaddress", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Entity Image Id</para>
        /// </summary>
        [AttributeLogicalName("entityimageid")]
        [DisplayName("Entity Image Id")]
        public Guid? EntityImageId {
            get {
                return GetAttributeValue<Guid?>("entityimageid");
            }
        }
        
        /// <summary>
        /// <para>Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("Exchange Rate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Type the cost of freight or shipping for the products included in the invoice for use in calculating the total amount due.</para>
        /// <para>Display Name: Freight Amount</para>
        /// </summary>
        [AttributeLogicalName("freightamount")]
        [DisplayName("Freight Amount")]
        public decimal? FreightAmount {
            get {
                return GetMoneyValue("freightamount");
            }
            set {
                SetMoneyValue("freightamount", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the Freight Amount field converted to the system's default base currency for reporting purposes. The calculation uses the exchange rate specified in the Currencies area.</para>
        /// <para>Display Name: Freight Amount (Base)</para>
        /// </summary>
        [AttributeLogicalName("freightamount_base")]
        [DisplayName("Freight Amount (Base)")]
        public decimal? FreightAmount_Base {
            get {
                return GetMoneyValue("freightamount_base");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the data import or data migration that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the identifying number or code of the invoice.</para>
        /// <para>Display Name: Invoice ID</para>
        /// </summary>
        [AttributeLogicalName("invoicenumber")]
        [DisplayName("Invoice ID")]
        [MaxLength(100)]
        public string InvoiceNumber {
            get {
                return GetAttributeValue<string>("invoicenumber");
            }
            set {
                SetAttributeValue("invoicenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether prices specified on the invoice are locked from any further updates.</para>
        /// <para>Display Name: Prices Locked</para>
        /// </summary>
        [AttributeLogicalName("ispricelocked")]
        [DisplayName("Prices Locked")]
        public bool? IsPriceLocked {
            get {
                return GetAttributeValue<bool?>("ispricelocked");
            }
            set {
                SetAttributeValue("ispricelocked", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the date and time when the invoice was last submitted to an accounting or ERP system for processing.</para>
        /// <para>Display Name: Last Submitted to Back Office</para>
        /// </summary>
        [AttributeLogicalName("lastbackofficesubmit")]
        [DisplayName("Last Submitted to Back Office")]
        public DateTime? LastBackofficeSubmit {
            get {
                return GetAttributeValue<DateTime?>("lastbackofficesubmit");
            }
            set {
                SetAttributeValue("lastbackofficesubmit", value);
            }
        }
        
        /// <summary>
        /// <para>Contains the date time stamp of the last on hold time.</para>
        /// <para>Display Name: Last On Hold Time</para>
        /// </summary>
        [AttributeLogicalName("lastonholdtime")]
        [DisplayName("Last On Hold Time")]
        public DateTime? LastOnHoldTime {
            get {
                return GetAttributeValue<DateTime?>("lastonholdtime");
            }
            set {
                SetAttributeValue("lastonholdtime", value);
            }
        }
        
        /// <summary>
        /// <para>lk_invoicebase_modifiedby</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics CRM options.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>lk_invoice_modifiedonbehalfby</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Type a descriptive name for the invoice.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Name")]
        [MaxLength(300)]
        public string Name {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the duration in minutes for which the invoice was on hold.</para>
        /// <para>Display Name: On Hold Time (Minutes)</para>
        /// </summary>
        [AttributeLogicalName("onholdtime")]
        [DisplayName("On Hold Time (Minutes)")]
        [Range(-2147483648, 2147483647)]
        public int? OnHoldTime {
            get {
                return GetAttributeValue<int?>("onholdtime");
            }
        }
        
        /// <summary>
        /// <para>opportunity_invoices</para>
        /// <para>Display Name: Opportunity</para>
        /// </summary>
        [AttributeLogicalName("opportunityid")]
        [DisplayName("Opportunity")]
        public EntityReference OpportunityId {
            get {
                return GetAttributeValue<EntityReference>("opportunityid");
            }
            set {
                SetAttributeValue("opportunityid", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>owner_invoices</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>business_unit_invoices</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>team_invoices</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>system_user_invoices</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Select the payment terms to indicate when the customer needs to pay the total amount.</para>
        /// <para>Display Name: Payment Terms</para>
        /// </summary>
        [AttributeLogicalName("paymenttermscode")]
        [DisplayName("Payment Terms")]
        public Invoice_PaymentTermsCode? PaymentTermsCode {
            get {
                return GetOptionSetValue<Invoice_PaymentTermsCode>("paymenttermscode");
            }
            set {
                SetOptionSetValue("paymenttermscode", value);
            }
        }
        
        /// <summary>
        /// <para>price_level_invoices</para>
        /// <para>Display Name: Price List</para>
        /// </summary>
        [AttributeLogicalName("pricelevelid")]
        [DisplayName("Price List")]
        public EntityReference PriceLevelId {
            get {
                return GetAttributeValue<EntityReference>("pricelevelid");
            }
            set {
                SetAttributeValue("pricelevelid", value);
            }
        }
        
        /// <summary>
        /// <para>Type of pricing error for the invoice.</para>
        /// <para>Display Name: Pricing Error </para>
        /// </summary>
        [AttributeLogicalName("pricingerrorcode")]
        [DisplayName("Pricing Error ")]
        public qooi_pricingerrorcode? PricingErrorCode {
            get {
                return GetOptionSetValue<qooi_pricingerrorcode>("pricingerrorcode");
            }
            set {
                SetOptionSetValue("pricingerrorcode", value);
            }
        }
        
        /// <summary>
        /// <para>Type a descriptive name for the invoice.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Name")]
        [MaxLength(300)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Select the priority so that preferred customers or critical issues are handled quickly.</para>
        /// <para>Display Name: Priority</para>
        /// </summary>
        [AttributeLogicalName("prioritycode")]
        [DisplayName("Priority")]
        public Invoice_PriorityCode? PriorityCode {
            get {
                return GetOptionSetValue<Invoice_PriorityCode>("prioritycode");
            }
            set {
                SetOptionSetValue("prioritycode", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the process.</para>
        /// <para>Display Name: Process</para>
        /// </summary>
        [AttributeLogicalName("processid")]
        [DisplayName("Process")]
        public Guid? ProcessId {
            get {
                return GetAttributeValue<Guid?>("processid");
            }
            set {
                SetAttributeValue("processid", value);
            }
        }
        
        /// <summary>
        /// <para>manualsla_invoice</para>
        /// <para>Display Name: SLA</para>
        /// </summary>
        [AttributeLogicalName("slaid")]
        [DisplayName("SLA")]
        public EntityReference SLAId {
            get {
                return GetAttributeValue<EntityReference>("slaid");
            }
            set {
                SetAttributeValue("slaid", value);
            }
        }
        
        /// <summary>
        /// <para>sla_invoice</para>
        /// <para>Display Name: Last SLA applied</para>
        /// </summary>
        [AttributeLogicalName("slainvokedid")]
        [DisplayName("Last SLA applied")]
        public EntityReference SLAInvokedId {
            get {
                return GetAttributeValue<EntityReference>("slainvokedid");
            }
        }
        
        /// <summary>
        /// <para>order_invoices</para>
        /// <para>Display Name: Order</para>
        /// </summary>
        [AttributeLogicalName("salesorderid")]
        [DisplayName("Order")]
        public EntityReference SalesOrderId {
            get {
                return GetAttributeValue<EntityReference>("salesorderid");
            }
            set {
                SetAttributeValue("salesorderid", value);
            }
        }
        
        /// <summary>
        /// <para>Type the city for the customer's shipping address.</para>
        /// <para>Display Name: Ship To City</para>
        /// </summary>
        [AttributeLogicalName("shipto_city")]
        [DisplayName("Ship To City")]
        [MaxLength(80)]
        public string ShipTo_City {
            get {
                return GetAttributeValue<string>("shipto_city");
            }
            set {
                SetAttributeValue("shipto_city", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the complete Ship To address.</para>
        /// <para>Display Name: Ship To Address</para>
        /// </summary>
        [AttributeLogicalName("shipto_composite")]
        [DisplayName("Ship To Address")]
        public string ShipTo_Composite {
            get {
                return GetAttributeValue<string>("shipto_composite");
            }
        }
        
        /// <summary>
        /// <para>Type the country or region for the customer's shipping address.</para>
        /// <para>Display Name: Ship To Country/Region</para>
        /// </summary>
        [AttributeLogicalName("shipto_country")]
        [DisplayName("Ship To Country/Region")]
        [MaxLength(80)]
        public string ShipTo_Country {
            get {
                return GetAttributeValue<string>("shipto_country");
            }
            set {
                SetAttributeValue("shipto_country", value);
            }
        }
        
        /// <summary>
        /// <para>Type the fax number for the customer's shipping address.</para>
        /// <para>Display Name: Ship To Fax</para>
        /// </summary>
        [AttributeLogicalName("shipto_fax")]
        [DisplayName("Ship To Fax")]
        [MaxLength(50)]
        public string ShipTo_Fax {
            get {
                return GetAttributeValue<string>("shipto_fax");
            }
            set {
                SetAttributeValue("shipto_fax", value);
            }
        }
        
        /// <summary>
        /// <para>Select the freight terms to make sure shipping orders are processed correctly.</para>
        /// <para>Display Name: Ship To Freight Terms</para>
        /// </summary>
        [AttributeLogicalName("shipto_freighttermscode")]
        [DisplayName("Ship To Freight Terms")]
        public Invoice_ShipTo_FreightTermsCode? ShipTo_FreightTermsCode {
            get {
                return GetOptionSetValue<Invoice_ShipTo_FreightTermsCode>("shipto_freighttermscode");
            }
            set {
                SetOptionSetValue("shipto_freighttermscode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the first line of the customer's shipping address.</para>
        /// <para>Display Name: Ship To Street 1</para>
        /// </summary>
        [AttributeLogicalName("shipto_line1")]
        [DisplayName("Ship To Street 1")]
        [MaxLength(250)]
        public string ShipTo_Line1 {
            get {
                return GetAttributeValue<string>("shipto_line1");
            }
            set {
                SetAttributeValue("shipto_line1", value);
            }
        }
        
        /// <summary>
        /// <para>Type the second line of the customer's shipping address.</para>
        /// <para>Display Name: Ship To Street 2</para>
        /// </summary>
        [AttributeLogicalName("shipto_line2")]
        [DisplayName("Ship To Street 2")]
        [MaxLength(250)]
        public string ShipTo_Line2 {
            get {
                return GetAttributeValue<string>("shipto_line2");
            }
            set {
                SetAttributeValue("shipto_line2", value);
            }
        }
        
        /// <summary>
        /// <para>Type the third line of the shipping address.</para>
        /// <para>Display Name: Ship To Street 3</para>
        /// </summary>
        [AttributeLogicalName("shipto_line3")]
        [DisplayName("Ship To Street 3")]
        [MaxLength(250)]
        public string ShipTo_Line3 {
            get {
                return GetAttributeValue<string>("shipto_line3");
            }
            set {
                SetAttributeValue("shipto_line3", value);
            }
        }
        
        /// <summary>
        /// <para>Type a name for the customer's shipping address, such as "Headquarters" or "Field office",  to identify the address.</para>
        /// <para>Display Name: Ship To Name</para>
        /// </summary>
        [AttributeLogicalName("shipto_name")]
        [DisplayName("Ship To Name")]
        [MaxLength(200)]
        public string ShipTo_Name {
            get {
                return GetAttributeValue<string>("shipto_name");
            }
            set {
                SetAttributeValue("shipto_name", value);
            }
        }
        
        /// <summary>
        /// <para>Type the ZIP Code or postal code for the shipping address.</para>
        /// <para>Display Name: Ship To ZIP/Postal Code</para>
        /// </summary>
        [AttributeLogicalName("shipto_postalcode")]
        [DisplayName("Ship To ZIP/Postal Code")]
        [MaxLength(20)]
        public string ShipTo_PostalCode {
            get {
                return GetAttributeValue<string>("shipto_postalcode");
            }
            set {
                SetAttributeValue("shipto_postalcode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the state or province for the shipping address.</para>
        /// <para>Display Name: Ship To State/Province</para>
        /// </summary>
        [AttributeLogicalName("shipto_stateorprovince")]
        [DisplayName("Ship To State/Province")]
        [MaxLength(50)]
        public string ShipTo_StateOrProvince {
            get {
                return GetAttributeValue<string>("shipto_stateorprovince");
            }
            set {
                SetAttributeValue("shipto_stateorprovince", value);
            }
        }
        
        /// <summary>
        /// <para>Type the phone number for the customer's shipping address.</para>
        /// <para>Display Name: Ship To Phone</para>
        /// </summary>
        [AttributeLogicalName("shipto_telephone")]
        [DisplayName("Ship To Phone")]
        [MaxLength(50)]
        public string ShipTo_Telephone {
            get {
                return GetAttributeValue<string>("shipto_telephone");
            }
            set {
                SetAttributeValue("shipto_telephone", value);
            }
        }
        
        /// <summary>
        /// <para>Select a shipping method for deliveries sent to this address.</para>
        /// <para>Display Name: Shipping Method</para>
        /// </summary>
        [AttributeLogicalName("shippingmethodcode")]
        [DisplayName("Shipping Method")]
        public Invoice_ShippingMethodCode? ShippingMethodCode {
            get {
                return GetOptionSetValue<Invoice_ShippingMethodCode>("shippingmethodcode");
            }
            set {
                SetOptionSetValue("shippingmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>Skip Price Calculation (For Internal Use)</para>
        /// <para>Display Name: Skip Price Calculation</para>
        /// </summary>
        [AttributeLogicalName("skippricecalculation")]
        [DisplayName("Skip Price Calculation")]
        public qooi_skippricecalculation? SkipPriceCalculation {
            get {
                return GetOptionSetValue<qooi_skippricecalculation>("skippricecalculation");
            }
            set {
                SetOptionSetValue("skippricecalculation", value);
            }
        }
        
        /// <summary>
        /// <para>processstage_invoices</para>
        /// <para>Display Name: Process Stage</para>
        /// </summary>
        [AttributeLogicalName("stageid")]
        [DisplayName("Process Stage")]
        public Guid? StageId {
            get {
                return GetAttributeValue<Guid?>("stageid");
            }
            set {
                SetAttributeValue("stageid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows whether the invoice is active, paid, or canceled. Paid and canceled invoices are read-only and can't be edited unless they are reactivated.</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public InvoiceState? StateCode {
            get {
                return GetOptionSetValue<InvoiceState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the invoice's status.</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public Invoice_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<Invoice_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the total amount due, calculated as the sum of the products, discount, freight, and taxes for the invoice.</para>
        /// <para>Display Name: Total Amount</para>
        /// </summary>
        [AttributeLogicalName("totalamount")]
        [DisplayName("Total Amount")]
        public decimal? TotalAmount {
            get {
                return GetMoneyValue("totalamount");
            }
            set {
                SetMoneyValue("totalamount", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the total product amount due, minus any discounts. This value is added to freight and tax amounts in the calculation for the total amount due for the invoice.</para>
        /// <para>Display Name: Total Pre-Freight Amount</para>
        /// </summary>
        [AttributeLogicalName("totalamountlessfreight")]
        [DisplayName("Total Pre-Freight Amount")]
        public decimal? TotalAmountLessFreight {
            get {
                return GetMoneyValue("totalamountlessfreight");
            }
            set {
                SetMoneyValue("totalamountlessfreight", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the Pre-Freight Amount field converted to the system's default base currency for reporting purposes. The calculation uses the exchange rate specified in the Currencies area.</para>
        /// <para>Display Name: Total Pre-Freight Amount (Base)</para>
        /// </summary>
        [AttributeLogicalName("totalamountlessfreight_base")]
        [DisplayName("Total Pre-Freight Amount (Base)")]
        public decimal? TotalAmountLessFreight_Base {
            get {
                return GetMoneyValue("totalamountlessfreight_base");
            }
        }
        
        /// <summary>
        /// <para>Shows the Total Amount field converted to the system's default base currency for reporting purposes. The calculation uses the exchange rate specified in the Currencies area.</para>
        /// <para>Display Name: Total Amount (Base)</para>
        /// </summary>
        [AttributeLogicalName("totalamount_base")]
        [DisplayName("Total Amount (Base)")]
        public decimal? TotalAmount_Base {
            get {
                return GetMoneyValue("totalamount_base");
            }
        }
        
        /// <summary>
        /// <para>Shows the total discount amount, based on the discount price and rate entered on the invoice.</para>
        /// <para>Display Name: Total Discount Amount</para>
        /// </summary>
        [AttributeLogicalName("totaldiscountamount")]
        [DisplayName("Total Discount Amount")]
        public decimal? TotalDiscountAmount {
            get {
                return GetMoneyValue("totaldiscountamount");
            }
            set {
                SetMoneyValue("totaldiscountamount", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the Total Discount Amount field converted to the system's default base currency for reporting purposes. The calculation uses the exchange rate specified in the Currencies area.</para>
        /// <para>Display Name: Total Discount Amount (Base)</para>
        /// </summary>
        [AttributeLogicalName("totaldiscountamount_base")]
        [DisplayName("Total Discount Amount (Base)")]
        public decimal? TotalDiscountAmount_Base {
            get {
                return GetMoneyValue("totaldiscountamount_base");
            }
        }
        
        /// <summary>
        /// <para>Shows the sum of all existing and write-in products included on the invoice, based on the specified price list and quantities.</para>
        /// <para>Display Name: Total Detail Amount</para>
        /// </summary>
        [AttributeLogicalName("totallineitemamount")]
        [DisplayName("Total Detail Amount")]
        public decimal? TotalLineItemAmount {
            get {
                return GetMoneyValue("totallineitemamount");
            }
            set {
                SetMoneyValue("totallineitemamount", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the Detail Amount field converted to the system's default base currency. The calculation uses the exchange rate specified in the Currencies area.</para>
        /// <para>Display Name: Total Detail Amount (Base)</para>
        /// </summary>
        [AttributeLogicalName("totallineitemamount_base")]
        [DisplayName("Total Detail Amount (Base)")]
        public decimal? TotalLineItemAmount_Base {
            get {
                return GetMoneyValue("totallineitemamount_base");
            }
        }
        
        /// <summary>
        /// <para>Shows the Manual Discount amounts specified on all products included in the invoice. This value is reflected in the Detail Amount field on the invoice and is added to any discount amount or rate specified on the invoice.</para>
        /// <para>Display Name: Total Line Item Discount Amount</para>
        /// </summary>
        [AttributeLogicalName("totallineitemdiscountamount")]
        [DisplayName("Total Line Item Discount Amount")]
        public decimal? TotalLineItemDiscountAmount {
            get {
                return GetMoneyValue("totallineitemdiscountamount");
            }
            set {
                SetMoneyValue("totallineitemdiscountamount", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the total of the Manual Discount amounts specified on all products included in the invoice. This value is reflected in the Detail Amount field on the invoice and is added to any discount amount or rate specified on the invoice.</para>
        /// <para>Display Name: Total Line Item Discount Amount (Base)</para>
        /// </summary>
        [AttributeLogicalName("totallineitemdiscountamount_base")]
        [DisplayName("Total Line Item Discount Amount (Base)")]
        public decimal? TotalLineItemDiscountAmount_Base {
            get {
                return GetMoneyValue("totallineitemdiscountamount_base");
            }
        }
        
        /// <summary>
        /// <para>Shows the total of the Tax amounts specified on all products included in the invoice, included in the Total Amount due calculation for the invoice.</para>
        /// <para>Display Name: Total Tax</para>
        /// </summary>
        [AttributeLogicalName("totaltax")]
        [DisplayName("Total Tax")]
        public decimal? TotalTax {
            get {
                return GetMoneyValue("totaltax");
            }
            set {
                SetMoneyValue("totaltax", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the Total Tax field converted to the system's default base currency for reporting purposes. The calculation uses the exchange rate specified in the Currencies area.</para>
        /// <para>Display Name: Total Tax (Base)</para>
        /// </summary>
        [AttributeLogicalName("totaltax_base")]
        [DisplayName("Total Tax (Base)")]
        public decimal? TotalTax_Base {
            get {
                return GetMoneyValue("totaltax_base");
            }
        }
        
        /// <summary>
        /// <para>transactioncurrency_invoice</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Traversed Path</para>
        /// </summary>
        [AttributeLogicalName("traversedpath")]
        [DisplayName("Traversed Path")]
        [MaxLength(1250)]
        public string TraversedPath {
            get {
                return GetAttributeValue<string>("traversedpath");
            }
            set {
                SetAttributeValue("traversedpath", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version number of the invoice.</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Select whether the products included in the invoice should be shipped to the specified address or held until the customer calls with further pick up or delivery instructions.</para>
        /// <para>Display Name: Ship To</para>
        /// </summary>
        [AttributeLogicalName("willcall")]
        [DisplayName("Ship To")]
        public bool? WillCall {
            get {
                return GetAttributeValue<bool?>("willcall");
            }
            set {
                SetAttributeValue("willcall", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the amount due on this invoice.</para>
        /// <para>Display Name: Amount Due</para>
        /// </summary>
        [AttributeLogicalName("msdyn_amountdue")]
        [DisplayName("Amount Due")]
        public decimal? msdyn_AmountDue {
            get {
                return GetMoneyValue("msdyn_amountdue");
            }
            set {
                SetMoneyValue("msdyn_amountdue", value);
            }
        }
        
        /// <summary>
        /// <para>Document date of the Invoice for use in calculation of payment due date</para>
        /// <para>Display Name: Invoice Date</para>
        /// </summary>
        [AttributeLogicalName("msdyn_invoicedate")]
        [DisplayName("Invoice Date")]
        public DateTime? msdyn_InvoiceDate {
            get {
                return GetAttributeValue<DateTime?>("msdyn_invoicedate");
            }
            set {
                SetAttributeValue("msdyn_invoicedate", value);
            }
        }
        
        /// <summary>
        /// <para>Whether the Invoice is for an Item-based or a service maintainence-based sale</para>
        /// <para>Display Name: Type</para>
        /// </summary>
        [AttributeLogicalName("msdyn_ordertype")]
        [DisplayName("Type")]
        public Invoice_msdyn_OrderType? msdyn_OrderType {
            get {
                return GetOptionSetValue<Invoice_msdyn_OrderType>("msdyn_ordertype");
            }
            set {
                SetOptionSetValue("msdyn_ordertype", value);
            }
        }
        
        /// <summary>
        /// <para>Value of the Amount Due in base currency.</para>
        /// <para>Display Name: Amount Due (Base)</para>
        /// </summary>
        [AttributeLogicalName("msdyn_amountdue_base")]
        [DisplayName("Amount Due (Base)")]
        public decimal? msdyn_amountdue_Base {
            get {
                return GetMoneyValue("msdyn_amountdue_base");
            }
        }
        
        [RelationshipSchemaName("Invoice_ActivityPointers")]
        public IEnumerable<ActivityPointer> Invoice_ActivityPointers {
            get {
                return GetRelatedEntities<ActivityPointer>("Invoice_ActivityPointers", null);
            }
            set {
                SetRelatedEntities("Invoice_ActivityPointers", null, value);
            }
        }
        
        [RelationshipSchemaName("Invoice_Appointments")]
        public IEnumerable<Appointment> Invoice_Appointments {
            get {
                return GetRelatedEntities<Appointment>("Invoice_Appointments", null);
            }
            set {
                SetRelatedEntities("Invoice_Appointments", null, value);
            }
        }
        
        [RelationshipSchemaName("Invoice_Emails")]
        public IEnumerable<Email> Invoice_Emails {
            get {
                return GetRelatedEntities<Email>("Invoice_Emails", null);
            }
            set {
                SetRelatedEntities("Invoice_Emails", null, value);
            }
        }
        
        [RelationshipSchemaName("Invoice_Faxes")]
        public IEnumerable<Fax> Invoice_Faxes {
            get {
                return GetRelatedEntities<Fax>("Invoice_Faxes", null);
            }
            set {
                SetRelatedEntities("Invoice_Faxes", null, value);
            }
        }
        
        [RelationshipSchemaName("Invoice_Letters")]
        public IEnumerable<Letter> Invoice_Letters {
            get {
                return GetRelatedEntities<Letter>("Invoice_Letters", null);
            }
            set {
                SetRelatedEntities("Invoice_Letters", null, value);
            }
        }
        
        [RelationshipSchemaName("Invoice_Phonecalls")]
        public IEnumerable<PhoneCall> Invoice_Phonecalls {
            get {
                return GetRelatedEntities<PhoneCall>("Invoice_Phonecalls", null);
            }
            set {
                SetRelatedEntities("Invoice_Phonecalls", null, value);
            }
        }
        
        [RelationshipSchemaName("Invoice_RecurringAppointmentMasters")]
        public IEnumerable<RecurringAppointmentMaster> Invoice_RecurringAppointmentMasters {
            get {
                return GetRelatedEntities<RecurringAppointmentMaster>("Invoice_RecurringAppointmentMasters", null);
            }
            set {
                SetRelatedEntities("Invoice_RecurringAppointmentMasters", null, value);
            }
        }
        
        [RelationshipSchemaName("Invoice_ServiceAppointments")]
        public IEnumerable<ServiceAppointment> Invoice_ServiceAppointments {
            get {
                return GetRelatedEntities<ServiceAppointment>("Invoice_ServiceAppointments", null);
            }
            set {
                SetRelatedEntities("Invoice_ServiceAppointments", null, value);
            }
        }
        
        [RelationshipSchemaName("Invoice_SocialActivities")]
        public IEnumerable<SocialActivity> Invoice_SocialActivities {
            get {
                return GetRelatedEntities<SocialActivity>("Invoice_SocialActivities", null);
            }
            set {
                SetRelatedEntities("Invoice_SocialActivities", null, value);
            }
        }
        
        [RelationshipSchemaName("Invoice_SyncErrors")]
        public IEnumerable<SyncError> Invoice_SyncErrors {
            get {
                return GetRelatedEntities<SyncError>("Invoice_SyncErrors", null);
            }
            set {
                SetRelatedEntities("Invoice_SyncErrors", null, value);
            }
        }
        
        [RelationshipSchemaName("Invoice_Tasks")]
        public IEnumerable<Task> Invoice_Tasks {
            get {
                return GetRelatedEntities<Task>("Invoice_Tasks", null);
            }
            set {
                SetRelatedEntities("Invoice_Tasks", null, value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_invoices")]
        public BusinessUnit business_unit_invoices {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_invoices", null);
            }
            set {
                SetRelatedEntity("business_unit_invoices", null, value);
            }
        }
        
        [RelationshipSchemaName("contactinvoices_association")]
        public IEnumerable<Contact> contactinvoices_association {
            get {
                return GetRelatedEntities<Contact>("contactinvoices_association", null);
            }
            set {
                SetRelatedEntities("contactinvoices_association", null, value);
            }
        }
        
        [RelationshipSchemaName("invoice_Teams")]
        public IEnumerable<Team> invoice_Teams {
            get {
                return GetRelatedEntities<Team>("invoice_Teams", null);
            }
            set {
                SetRelatedEntities("invoice_Teams", null, value);
            }
        }
        
        [RelationshipSchemaName("invoice_activity_parties")]
        public IEnumerable<ActivityParty> invoice_activity_parties {
            get {
                return GetRelatedEntities<ActivityParty>("invoice_activity_parties", null);
            }
            set {
                SetRelatedEntities("invoice_activity_parties", null, value);
            }
        }
        
        [RelationshipSchemaName("invoice_connections1")]
        public IEnumerable<Connection> invoice_connections1 {
            get {
                return GetRelatedEntities<Connection>("invoice_connections1", null);
            }
            set {
                SetRelatedEntities("invoice_connections1", null, value);
            }
        }
        
        [RelationshipSchemaName("invoice_connections2")]
        public IEnumerable<Connection> invoice_connections2 {
            get {
                return GetRelatedEntities<Connection>("invoice_connections2", null);
            }
            set {
                SetRelatedEntities("invoice_connections2", null, value);
            }
        }
        
        [AttributeLogicalName("customerid")]
        [RelationshipSchemaName("invoice_customer_accounts")]
        public Account invoice_customer_accounts {
            get {
                return GetRelatedEntity<Account>("invoice_customer_accounts", null);
            }
            set {
                SetRelatedEntity("invoice_customer_accounts", null, value);
            }
        }
        
        [AttributeLogicalName("customerid")]
        [RelationshipSchemaName("invoice_customer_contacts")]
        public Contact invoice_customer_contacts {
            get {
                return GetRelatedEntity<Contact>("invoice_customer_contacts", null);
            }
            set {
                SetRelatedEntity("invoice_customer_contacts", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_invoice_createdonbehalfby")]
        public SystemUser lk_invoice_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_invoice_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_invoice_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_invoice_modifiedonbehalfby")]
        public SystemUser lk_invoice_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_invoice_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_invoice_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_invoicebase_createdby")]
        public SystemUser lk_invoicebase_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_invoicebase_createdby", null);
            }
            set {
                SetRelatedEntity("lk_invoicebase_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_invoicebase_modifiedby")]
        public SystemUser lk_invoicebase_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_invoicebase_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_invoicebase_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("slaid")]
        [RelationshipSchemaName("manualsla_invoice")]
        public SLA manualsla_invoice {
            get {
                return GetRelatedEntity<SLA>("manualsla_invoice", null);
            }
            set {
                SetRelatedEntity("manualsla_invoice", null, value);
            }
        }
        
        [AttributeLogicalName("opportunityid")]
        [RelationshipSchemaName("opportunity_invoices")]
        public Opportunity opportunity_invoices {
            get {
                return GetRelatedEntity<Opportunity>("opportunity_invoices", null);
            }
            set {
                SetRelatedEntity("opportunity_invoices", null, value);
            }
        }
        
        [AttributeLogicalName("salesorderid")]
        [RelationshipSchemaName("order_invoices")]
        public SalesOrder order_invoices {
            get {
                return GetRelatedEntity<SalesOrder>("order_invoices", null);
            }
            set {
                SetRelatedEntity("order_invoices", null, value);
            }
        }
        
        [AttributeLogicalName("slainvokedid")]
        [RelationshipSchemaName("sla_invoice")]
        public SLA sla_invoice {
            get {
                return GetRelatedEntity<SLA>("sla_invoice", null);
            }
            set {
                SetRelatedEntity("sla_invoice", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("system_user_invoices")]
        public SystemUser system_user_invoices {
            get {
                return GetRelatedEntity<SystemUser>("system_user_invoices", null);
            }
            set {
                SetRelatedEntity("system_user_invoices", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_invoices")]
        public Team team_invoices {
            get {
                return GetRelatedEntity<Team>("team_invoices", null);
            }
            set {
                SetRelatedEntity("team_invoices", null, value);
            }
        }
        
        [AttributeLogicalName("transactioncurrencyid")]
        [RelationshipSchemaName("transactioncurrency_invoice")]
        public TransactionCurrency transactioncurrency_invoice {
            get {
                return GetRelatedEntity<TransactionCurrency>("transactioncurrency_invoice", null);
            }
            set {
                SetRelatedEntity("transactioncurrency_invoice", null, value);
            }
        }
        
        public static Invoice Retrieve(IOrganizationService service, Guid id, params Expression<Func<Invoice,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Organizational knowledge for internal and external use.</para>
    /// <para>Display Name: Knowledge Article</para>
    /// </summary>
    [EntityLogicalName("knowledgearticle")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class KnowledgeArticle : ExtendedEntity<KnowledgeArticleState, KnowledgeArticle_StatusCode> {
        
        public const string EntityLogicalName = "knowledgearticle";
        
        public const int EntityTypeCode = 9953;
        
        public KnowledgeArticle() : 
                base(EntityLogicalName) {
        }
        
        public KnowledgeArticle(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("title");
            }
        }
        
        [AttributeLogicalName("knowledgearticleid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("knowledgearticleid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for entity instances</para>
        /// <para>Display Name: Knowledge Article</para>
        /// </summary>
        [AttributeLogicalName("knowledgearticleid")]
        [DisplayName("Knowledge Article")]
        public Guid? knowledgearticleId {
            get {
                return GetAttributeValue<Guid?>("knowledgearticleid");
            }
            set {
                SetId("knowledgearticleid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the automatically generated ID exposed to customers, partners, and other external users to reference and look up articles.</para>
        /// <para>Display Name: Article Public Number</para>
        /// </summary>
        [AttributeLogicalName("articlepublicnumber")]
        [DisplayName("Article Public Number")]
        [MaxLength(4000)]
        public string ArticlePublicNumber {
            get {
                return GetAttributeValue<string>("articlepublicnumber");
            }
            set {
                SetAttributeValue("articlepublicnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the body of the article stored in HTML format.</para>
        /// <para>Display Name: Content</para>
        /// </summary>
        [AttributeLogicalName("content")]
        [DisplayName("Content")]
        public string Content {
            get {
                return GetAttributeValue<string>("content");
            }
            set {
                SetAttributeValue("content", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the record.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>A short overview of the article, primarily used in search results and for search engine optimization.</para>
        /// <para>Display Name: Description</para>
        /// </summary>
        [AttributeLogicalName("description")]
        [DisplayName("Description")]
        [MaxLength(155)]
        public string Description {
            get {
                return GetAttributeValue<string>("description");
            }
            set {
                SetAttributeValue("description", value);
            }
        }
        
        /// <summary>
        /// <para>Exchange rate for the currency associated with the KnowledgeArticle with respect to the base currency.</para>
        /// <para>Display Name: ExchangeRate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("ExchangeRate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Enter an expiration date for the article. Leave this field blank for no expiration date.</para>
        /// <para>Display Name: Expiration Date</para>
        /// </summary>
        [AttributeLogicalName("expirationdate")]
        [DisplayName("Expiration Date")]
        public DateTime? ExpirationDate {
            get {
                return GetAttributeValue<DateTime?>("expirationdate");
            }
            set {
                SetAttributeValue("expirationdate", value);
            }
        }
        
        /// <summary>
        /// <para>Contains the id of the expiration state of the entity.</para>
        /// <para>Display Name: Expiration State Id</para>
        /// </summary>
        [AttributeLogicalName("expirationstateid")]
        [DisplayName("Expiration State Id")]
        [Range(0, 2147483647)]
        public int? ExpirationStateId {
            get {
                return GetAttributeValue<int?>("expirationstateid");
            }
            set {
                SetAttributeValue("expirationstateid", value);
            }
        }
        
        /// <summary>
        /// <para>Contains the id of the expiration status of the entity.</para>
        /// <para>Display Name: Expired Status</para>
        /// </summary>
        [AttributeLogicalName("expirationstatusid")]
        [DisplayName("Expired Status")]
        [Range(0, 2147483647)]
        public int? ExpirationStatusId {
            get {
                return GetAttributeValue<int?>("expirationstatusid");
            }
            set {
                SetAttributeValue("expirationstatusid", value);
            }
        }
        
        /// <summary>
        /// <para>Expired Review Options</para>
        /// <para>Display Name: Expired Review Options</para>
        /// </summary>
        [AttributeLogicalName("expiredreviewoptions")]
        [DisplayName("Expired Review Options")]
        public KnowledgeArticle_ExpiredReviewOptions? ExpiredReviewOptions {
            get {
                return GetOptionSetValue<KnowledgeArticle_ExpiredReviewOptions>("expiredreviewoptions");
            }
            set {
                SetOptionSetValue("expiredreviewoptions", value);
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Shows whether this article is only visible internally.</para>
        /// <para>Display Name: Internal</para>
        /// </summary>
        [AttributeLogicalName("isinternal")]
        [DisplayName("Internal")]
        public bool? IsInternal {
            get {
                return GetAttributeValue<bool?>("isinternal");
            }
            set {
                SetAttributeValue("isinternal", value);
            }
        }
        
        /// <summary>
        /// <para>Shows which version of the knowledge article is the latest version.</para>
        /// <para>Display Name: Is Latest Version</para>
        /// </summary>
        [AttributeLogicalName("islatestversion")]
        [DisplayName("Is Latest Version")]
        public bool? IsLatestVersion {
            get {
                return GetAttributeValue<bool?>("islatestversion");
            }
            set {
                SetAttributeValue("islatestversion", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the article is the primary article.</para>
        /// <para>Display Name: Primary Article</para>
        /// </summary>
        [AttributeLogicalName("isprimary")]
        [DisplayName("Primary Article")]
        public bool? IsPrimary {
            get {
                return GetAttributeValue<bool?>("isprimary");
            }
            set {
                SetAttributeValue("isprimary", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the article is the root article.</para>
        /// <para>Display Name: Root Article</para>
        /// </summary>
        [AttributeLogicalName("isrootarticle")]
        [DisplayName("Root Article")]
        public bool? IsRootArticle {
            get {
                return GetAttributeValue<bool?>("isrootarticle");
            }
            set {
                SetAttributeValue("isrootarticle", value);
            }
        }
        
        /// <summary>
        /// <para>Type keywords to be used for searches in knowledge base articles. Separate keywords by using commas.</para>
        /// <para>Display Name: Keywords</para>
        /// </summary>
        [AttributeLogicalName("keywords")]
        [DisplayName("Keywords")]
        public string Keywords {
            get {
                return GetAttributeValue<string>("keywords");
            }
            set {
                SetAttributeValue("keywords", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the total number of article views.</para>
        /// <para>Display Name: Knowledge Article Views</para>
        /// </summary>
        [AttributeLogicalName("knowledgearticleviews")]
        [DisplayName("Knowledge Article Views")]
        [Range(0, 2147483647)]
        public int? KnowledgeArticleViews {
            get {
                return GetAttributeValue<int?>("knowledgearticleviews");
            }
        }
        
        /// <summary>
        /// <para>The date time for Knowledge Article View.</para>
        /// <para>Display Name: Knowledge Article View(Last Updated Time)</para>
        /// </summary>
        [AttributeLogicalName("knowledgearticleviews_date")]
        [DisplayName("Knowledge Article View(Last Updated Time)")]
        public DateTime? KnowledgeArticleViews_Date {
            get {
                return GetAttributeValue<DateTime?>("knowledgearticleviews_date");
            }
        }
        
        /// <summary>
        /// <para>State of Knowledge Article View.</para>
        /// <para>Display Name: Knowledge Article View(State)</para>
        /// </summary>
        [AttributeLogicalName("knowledgearticleviews_state")]
        [DisplayName("Knowledge Article View(State)")]
        [Range(-2147483648, 2147483647)]
        public int? KnowledgeArticleViews_State {
            get {
                return GetAttributeValue<int?>("knowledgearticleviews_state");
            }
        }
        
        /// <summary>
        /// <para>Select the language that the article's content is in.</para>
        /// <para>Display Name: Language</para>
        /// </summary>
        [AttributeLogicalName("languagelocaleid")]
        [DisplayName("Language")]
        public EntityReference LanguageLocaleId {
            get {
                return GetAttributeValue<EntityReference>("languagelocaleid");
            }
            set {
                SetAttributeValue("languagelocaleid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the major version number of this article's content.</para>
        /// <para>Display Name: Major Version Number</para>
        /// </summary>
        [AttributeLogicalName("majorversionnumber")]
        [DisplayName("Major Version Number")]
        [Range(0, 2147483647)]
        public int? MajorVersionNumber {
            get {
                return GetAttributeValue<int?>("majorversionnumber");
            }
            set {
                SetAttributeValue("majorversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the minor version number of this article's content.</para>
        /// <para>Display Name: Minor Version Number</para>
        /// </summary>
        [AttributeLogicalName("minorversionnumber")]
        [DisplayName("Minor Version Number")]
        [Range(0, 2147483647)]
        public int? MinorVersionNumber {
            get {
                return GetAttributeValue<int?>("minorversionnumber");
            }
            set {
                SetAttributeValue("minorversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who modified the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who modified the record.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user or team who owns the record.</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the business unit that owns the record</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the team that owns the record.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the user that owns the record.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Contains the id of the parent article content associated with the entity.</para>
        /// <para>Display Name: Parent Article Content Id</para>
        /// </summary>
        [AttributeLogicalName("parentarticlecontentid")]
        [DisplayName("Parent Article Content Id")]
        public EntityReference ParentArticleContentId {
            get {
                return GetAttributeValue<EntityReference>("parentarticlecontentid");
            }
            set {
                SetAttributeValue("parentarticlecontentid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the version that the current article was restored from.</para>
        /// <para>Display Name: Previous Article Content ID</para>
        /// </summary>
        [AttributeLogicalName("previousarticlecontentid")]
        [DisplayName("Previous Article Content ID")]
        public EntityReference PreviousArticleContentId {
            get {
                return GetAttributeValue<EntityReference>("previousarticlecontentid");
            }
            set {
                SetAttributeValue("previousarticlecontentid", value);
            }
        }
        
        /// <summary>
        /// <para>Type a title for the article.</para>
        /// <para>Display Name: Title</para>
        /// </summary>
        [AttributeLogicalName("title")]
        [DisplayName("Title")]
        [MaxLength(4000)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("title");
            }
            set {
                SetAttributeValue("title", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was published.</para>
        /// <para>Display Name: Publish On</para>
        /// </summary>
        [AttributeLogicalName("publishon")]
        [DisplayName("Publish On")]
        public DateTime? PublishOn {
            get {
                return GetAttributeValue<DateTime?>("publishon");
            }
            set {
                SetAttributeValue("publishon", value);
            }
        }
        
        /// <summary>
        /// <para>Publish Status of the Article.</para>
        /// <para>Display Name: Published Status</para>
        /// </summary>
        [AttributeLogicalName("publishstatusid")]
        [DisplayName("Published Status")]
        [Range(-2147483648, 2147483647)]
        public int? PublishStatusId {
            get {
                return GetAttributeValue<int?>("publishstatusid");
            }
            set {
                SetAttributeValue("publishstatusid", value);
            }
        }
        
        /// <summary>
        /// <para>Information which specifies how helpful the related record was.</para>
        /// <para>Display Name: Rating</para>
        /// </summary>
        [AttributeLogicalName("rating")]
        [DisplayName("Rating")]
        public decimal? Rating {
            get {
                return GetAttributeValue<decimal?>("rating");
            }
        }
        
        /// <summary>
        /// <para>Rating Count</para>
        /// <para>Display Name: Rating(Count)</para>
        /// </summary>
        [AttributeLogicalName("rating_count")]
        [DisplayName("Rating(Count)")]
        [Range(-2147483648, 2147483647)]
        public int? Rating_Count {
            get {
                return GetAttributeValue<int?>("rating_count");
            }
        }
        
        /// <summary>
        /// <para>The date time for Rating.</para>
        /// <para>Display Name: Rating(Last Updated Time)</para>
        /// </summary>
        [AttributeLogicalName("rating_date")]
        [DisplayName("Rating(Last Updated Time)")]
        public DateTime? Rating_Date {
            get {
                return GetAttributeValue<DateTime?>("rating_date");
            }
        }
        
        /// <summary>
        /// <para>State of Rating</para>
        /// <para>Display Name: Rating(State)</para>
        /// </summary>
        [AttributeLogicalName("rating_state")]
        [DisplayName("Rating(State)")]
        [Range(-2147483648, 2147483647)]
        public int? Rating_State {
            get {
                return GetAttributeValue<int?>("rating_state");
            }
        }
        
        /// <summary>
        /// <para>Total sum of Rating</para>
        /// <para>Display Name: Rating(sum)</para>
        /// </summary>
        [AttributeLogicalName("rating_sum")]
        [DisplayName("Rating(sum)")]
        public decimal? Rating_Sum {
            get {
                return GetAttributeValue<decimal?>("rating_sum");
            }
        }
        
        /// <summary>
        /// <para>Ready For Review</para>
        /// <para>Display Name: Ready For Review</para>
        /// </summary>
        [AttributeLogicalName("readyforreview")]
        [DisplayName("Ready For Review")]
        public bool? ReadyForReview {
            get {
                return GetAttributeValue<bool?>("readyforreview");
            }
            set {
                SetAttributeValue("readyforreview", value);
            }
        }
        
        /// <summary>
        /// <para>Review</para>
        /// <para>Display Name: Review</para>
        /// </summary>
        [AttributeLogicalName("review")]
        [DisplayName("Review")]
        public KnowledgeArticle_Review? Review {
            get {
                return GetOptionSetValue<KnowledgeArticle_Review>("review");
            }
            set {
                SetOptionSetValue("review", value);
            }
        }
        
        /// <summary>
        /// <para>Contains the id of the root article.</para>
        /// <para>Display Name: Root Article Id</para>
        /// </summary>
        [AttributeLogicalName("rootarticleid")]
        [DisplayName("Root Article Id")]
        public EntityReference RootArticleId {
            get {
                return GetAttributeValue<EntityReference>("rootarticleid");
            }
            set {
                SetAttributeValue("rootarticleid", value);
            }
        }
        
        /// <summary>
        /// <para>Contains the id of the scheduled status of the entity.</para>
        /// <para>Display Name: Scheduled Status</para>
        /// </summary>
        [AttributeLogicalName("scheduledstatusid")]
        [DisplayName("Scheduled Status")]
        [Range(-2147483648, 2147483647)]
        public int? ScheduledStatusId {
            get {
                return GetAttributeValue<int?>("scheduledstatusid");
            }
            set {
                SetAttributeValue("scheduledstatusid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows whether category associations have been set</para>
        /// <para>Display Name: Set Category Associations</para>
        /// </summary>
        [AttributeLogicalName("setcategoryassociations")]
        [DisplayName("Set Category Associations")]
        public bool? SetCategoryAssociations {
            get {
                return GetAttributeValue<bool?>("setcategoryassociations");
            }
            set {
                SetAttributeValue("setcategoryassociations", value);
            }
        }
        
        /// <summary>
        /// <para>Set Product Associations</para>
        /// <para>Display Name: Set Product Associations</para>
        /// </summary>
        [AttributeLogicalName("setproductassociations")]
        [DisplayName("Set Product Associations")]
        public bool? SetProductAssociations {
            get {
                return GetAttributeValue<bool?>("setproductassociations");
            }
            set {
                SetAttributeValue("setproductassociations", value);
            }
        }
        
        /// <summary>
        /// <para>Shows whether the article is a draft or is published, archived, or discarded. Draft articles aren't available externally and can be edited. Published articles are available externally, based on applicable permissions, but can't be edited. All metadata changes are reflected in the published version. Archived and discarded articles aren't available externally and can't be edited.</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public KnowledgeArticleState? StateCode {
            get {
                return GetOptionSetValue<KnowledgeArticleState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the article's status.</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public KnowledgeArticle_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<KnowledgeArticle_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the subject of the article to assist with article searches. You can configure subjects under Business Management in the Settings area.</para>
        /// <para>Display Name: Subject</para>
        /// </summary>
        [AttributeLogicalName("subjectid")]
        [DisplayName("Subject")]
        public EntityReference SubjectId {
            get {
                return GetAttributeValue<EntityReference>("subjectid");
            }
            set {
                SetAttributeValue("subjectid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Type a title for the article.</para>
        /// <para>Display Name: Title</para>
        /// </summary>
        [AttributeLogicalName("title")]
        [DisplayName("Title")]
        [MaxLength(4000)]
        public string Title {
            get {
                return GetAttributeValue<string>("title");
            }
            set {
                SetAttributeValue("title", value);
            }
        }
        
        /// <summary>
        /// <para>Exchange rate for the currency associated with the KnowledgeArticle with respect to the base currency.</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Update Content</para>
        /// <para>Display Name: Update Content</para>
        /// </summary>
        [AttributeLogicalName("updatecontent")]
        [DisplayName("Update Content")]
        public bool? UpdateContent {
            get {
                return GetAttributeValue<bool?>("updatecontent");
            }
            set {
                SetAttributeValue("updatecontent", value);
            }
        }
        
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Ingested article URL</para>
        /// <para>Display Name: Ingested Article URL</para>
        /// </summary>
        [AttributeLogicalName("msdyn_ingestedarticleurl")]
        [DisplayName("Ingested Article URL")]
        [MaxLength(2048)]
        public string msdyn_ingestedarticleurl {
            get {
                return GetAttributeValue<string>("msdyn_ingestedarticleurl");
            }
            set {
                SetAttributeValue("msdyn_ingestedarticleurl", value);
            }
        }
        
        /// <summary>
        /// <para>Value is true for all Ingested articles</para>
        /// <para>Display Name: Is Ingested Article</para>
        /// </summary>
        [AttributeLogicalName("msdyn_isingestedarticle")]
        [DisplayName("Is Ingested Article")]
        public bool? msdyn_isingestedarticle {
            get {
                return GetAttributeValue<bool?>("msdyn_isingestedarticle");
            }
            set {
                SetAttributeValue("msdyn_isingestedarticle", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Keywords and Description Suggestion control</para>
        /// </summary>
        [AttributeLogicalName("msdyn_keywordsdescsuggestioncontrol")]
        [DisplayName("Keywords and Description Suggestion control")]
        public bool? msdyn_keywordsdescsuggestioncontrol {
            get {
                return GetAttributeValue<bool?>("msdyn_keywordsdescsuggestioncontrol");
            }
            set {
                SetAttributeValue("msdyn_keywordsdescsuggestioncontrol", value);
            }
        }
        
        /// <summary>
        /// <para>Contains the id of the primary author associated with the article.</para>
        /// <para>Display Name: Primary Author Id</para>
        /// </summary>
        [AttributeLogicalName("primaryauthorid")]
        [DisplayName("Primary Author Id")]
        public EntityReference primaryauthorid {
            get {
                return GetAttributeValue<EntityReference>("primaryauthorid");
            }
            set {
                SetAttributeValue("primaryauthorid", value);
            }
        }
        
        /// <summary>
        /// <para>Contains the id of the process associated with the entity.</para>
        /// <para>Display Name: Process Id</para>
        /// </summary>
        [AttributeLogicalName("processid")]
        [DisplayName("Process Id")]
        public Guid? processid {
            get {
                return GetAttributeValue<Guid?>("processid");
            }
            set {
                SetAttributeValue("processid", value);
            }
        }
        
        /// <summary>
        /// <para>Contains the id of the stage where the entity is located.</para>
        /// <para>Display Name: Stage Id</para>
        /// </summary>
        [AttributeLogicalName("stageid")]
        [DisplayName("Stage Id")]
        public Guid? stageid {
            get {
                return GetAttributeValue<Guid?>("stageid");
            }
            set {
                SetAttributeValue("stageid", value);
            }
        }
        
        /// <summary>
        /// <para>A comma separated list of string values representing the unique identifiers of stages in a Business Process Flow Instance in the order that they occur.</para>
        /// <para>Display Name: (Deprecated) Traversed Path</para>
        /// </summary>
        [AttributeLogicalName("traversedpath")]
        [DisplayName("(Deprecated) Traversed Path")]
        [MaxLength(1250)]
        public string traversedpath {
            get {
                return GetAttributeValue<string>("traversedpath");
            }
            set {
                SetAttributeValue("traversedpath", value);
            }
        }
        
        [RelationshipSchemaName("KnowledgeArticle_ActivityPointers")]
        public IEnumerable<ActivityPointer> KnowledgeArticle_ActivityPointers {
            get {
                return GetRelatedEntities<ActivityPointer>("KnowledgeArticle_ActivityPointers", null);
            }
            set {
                SetRelatedEntities("KnowledgeArticle_ActivityPointers", null, value);
            }
        }
        
        [RelationshipSchemaName("KnowledgeArticle_Appointments")]
        public IEnumerable<Appointment> KnowledgeArticle_Appointments {
            get {
                return GetRelatedEntities<Appointment>("KnowledgeArticle_Appointments", null);
            }
            set {
                SetRelatedEntities("KnowledgeArticle_Appointments", null, value);
            }
        }
        
        [RelationshipSchemaName("KnowledgeArticle_Emails")]
        public IEnumerable<Email> KnowledgeArticle_Emails {
            get {
                return GetRelatedEntities<Email>("KnowledgeArticle_Emails", null);
            }
            set {
                SetRelatedEntities("KnowledgeArticle_Emails", null, value);
            }
        }
        
        [RelationshipSchemaName("KnowledgeArticle_Faxes")]
        public IEnumerable<Fax> KnowledgeArticle_Faxes {
            get {
                return GetRelatedEntities<Fax>("KnowledgeArticle_Faxes", null);
            }
            set {
                SetRelatedEntities("KnowledgeArticle_Faxes", null, value);
            }
        }
        
        [RelationshipSchemaName("KnowledgeArticle_Letters")]
        public IEnumerable<Letter> KnowledgeArticle_Letters {
            get {
                return GetRelatedEntities<Letter>("KnowledgeArticle_Letters", null);
            }
            set {
                SetRelatedEntities("KnowledgeArticle_Letters", null, value);
            }
        }
        
        [RelationshipSchemaName("KnowledgeArticle_Phonecalls")]
        public IEnumerable<PhoneCall> KnowledgeArticle_Phonecalls {
            get {
                return GetRelatedEntities<PhoneCall>("KnowledgeArticle_Phonecalls", null);
            }
            set {
                SetRelatedEntities("KnowledgeArticle_Phonecalls", null, value);
            }
        }
        
        [RelationshipSchemaName("KnowledgeArticle_RecurringAppointmentMasters")]
        public IEnumerable<RecurringAppointmentMaster> KnowledgeArticle_RecurringAppointmentMasters {
            get {
                return GetRelatedEntities<RecurringAppointmentMaster>("KnowledgeArticle_RecurringAppointmentMasters", null);
            }
            set {
                SetRelatedEntities("KnowledgeArticle_RecurringAppointmentMasters", null, value);
            }
        }
        
        [RelationshipSchemaName("KnowledgeArticle_ServiceAppointments")]
        public IEnumerable<ServiceAppointment> KnowledgeArticle_ServiceAppointments {
            get {
                return GetRelatedEntities<ServiceAppointment>("KnowledgeArticle_ServiceAppointments", null);
            }
            set {
                SetRelatedEntities("KnowledgeArticle_ServiceAppointments", null, value);
            }
        }
        
        [RelationshipSchemaName("KnowledgeArticle_SocialActivities")]
        public IEnumerable<SocialActivity> KnowledgeArticle_SocialActivities {
            get {
                return GetRelatedEntities<SocialActivity>("KnowledgeArticle_SocialActivities", null);
            }
            set {
                SetRelatedEntities("KnowledgeArticle_SocialActivities", null, value);
            }
        }
        
        [RelationshipSchemaName("KnowledgeArticle_SyncErrors")]
        public IEnumerable<SyncError> KnowledgeArticle_SyncErrors {
            get {
                return GetRelatedEntities<SyncError>("KnowledgeArticle_SyncErrors", null);
            }
            set {
                SetRelatedEntities("KnowledgeArticle_SyncErrors", null, value);
            }
        }
        
        [RelationshipSchemaName("KnowledgeArticle_Tasks")]
        public IEnumerable<Task> KnowledgeArticle_Tasks {
            get {
                return GetRelatedEntities<Task>("KnowledgeArticle_Tasks", null);
            }
            set {
                SetRelatedEntities("KnowledgeArticle_Tasks", null, value);
            }
        }
        
        [RelationshipSchemaName("knowledgearticle_parentarticle_contentid", EntityRole.Referenced)]
        public IEnumerable<KnowledgeArticle> Referencedknowledgearticle_parentarticle_contentid {
            get {
                return GetRelatedEntities<KnowledgeArticle>("knowledgearticle_parentarticle_contentid", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("knowledgearticle_parentarticle_contentid", EntityRole.Referenced, value);
            }
        }
        
        [RelationshipSchemaName("knowledgearticle_previousarticle_contentid", EntityRole.Referenced)]
        public IEnumerable<KnowledgeArticle> Referencedknowledgearticle_previousarticle_contentid {
            get {
                return GetRelatedEntities<KnowledgeArticle>("knowledgearticle_previousarticle_contentid", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("knowledgearticle_previousarticle_contentid", EntityRole.Referenced, value);
            }
        }
        
        [RelationshipSchemaName("knowledgearticle_rootarticle_id", EntityRole.Referenced)]
        public IEnumerable<KnowledgeArticle> Referencedknowledgearticle_rootarticle_id {
            get {
                return GetRelatedEntities<KnowledgeArticle>("knowledgearticle_rootarticle_id", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("knowledgearticle_rootarticle_id", EntityRole.Referenced, value);
            }
        }
        
        [AttributeLogicalName("parentarticlecontentid")]
        [RelationshipSchemaName("knowledgearticle_parentarticle_contentid", EntityRole.Referencing)]
        public KnowledgeArticle Referencingknowledgearticle_parentarticle_contentid {
            get {
                return GetRelatedEntity<KnowledgeArticle>("knowledgearticle_parentarticle_contentid", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("knowledgearticle_parentarticle_contentid", EntityRole.Referencing, value);
            }
        }
        
        [AttributeLogicalName("previousarticlecontentid")]
        [RelationshipSchemaName("knowledgearticle_previousarticle_contentid", EntityRole.Referencing)]
        public KnowledgeArticle Referencingknowledgearticle_previousarticle_contentid {
            get {
                return GetRelatedEntity<KnowledgeArticle>("knowledgearticle_previousarticle_contentid", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("knowledgearticle_previousarticle_contentid", EntityRole.Referencing, value);
            }
        }
        
        [AttributeLogicalName("rootarticleid")]
        [RelationshipSchemaName("knowledgearticle_rootarticle_id", EntityRole.Referencing)]
        public KnowledgeArticle Referencingknowledgearticle_rootarticle_id {
            get {
                return GetRelatedEntity<KnowledgeArticle>("knowledgearticle_rootarticle_id", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("knowledgearticle_rootarticle_id", EntityRole.Referencing, value);
            }
        }
        
        [AttributeLogicalName("transactioncurrencyid")]
        [RelationshipSchemaName("TransactionCurrency_knowledgearticle")]
        public TransactionCurrency TransactionCurrency_knowledgearticle {
            get {
                return GetRelatedEntity<TransactionCurrency>("TransactionCurrency_knowledgearticle", null);
            }
            set {
                SetRelatedEntity("TransactionCurrency_knowledgearticle", null, value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_knowledgearticle")]
        public BusinessUnit business_unit_knowledgearticle {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_knowledgearticle", null);
            }
            set {
                SetRelatedEntity("business_unit_knowledgearticle", null, value);
            }
        }
        
        [RelationshipSchemaName("knowledgearticle_CampaignResponses")]
        public IEnumerable<CampaignResponse> knowledgearticle_CampaignResponses {
            get {
                return GetRelatedEntities<CampaignResponse>("knowledgearticle_CampaignResponses", null);
            }
            set {
                SetRelatedEntities("knowledgearticle_CampaignResponses", null, value);
            }
        }
        
        [RelationshipSchemaName("knowledgearticle_IncidentResolutions")]
        public IEnumerable<IncidentResolution> knowledgearticle_IncidentResolutions {
            get {
                return GetRelatedEntities<IncidentResolution>("knowledgearticle_IncidentResolutions", null);
            }
            set {
                SetRelatedEntities("knowledgearticle_IncidentResolutions", null, value);
            }
        }
        
        [RelationshipSchemaName("knowledgearticle_OpportunityCloses")]
        public IEnumerable<OpportunityClose> knowledgearticle_OpportunityCloses {
            get {
                return GetRelatedEntities<OpportunityClose>("knowledgearticle_OpportunityCloses", null);
            }
            set {
                SetRelatedEntities("knowledgearticle_OpportunityCloses", null, value);
            }
        }
        
        [RelationshipSchemaName("knowledgearticle_QueueItems")]
        public IEnumerable<QueueItem> knowledgearticle_QueueItems {
            get {
                return GetRelatedEntities<QueueItem>("knowledgearticle_QueueItems", null);
            }
            set {
                SetRelatedEntities("knowledgearticle_QueueItems", null, value);
            }
        }
        
        [RelationshipSchemaName("knowledgearticle_SharePointDocumentLocations")]
        public IEnumerable<SharePointDocumentLocation> knowledgearticle_SharePointDocumentLocations {
            get {
                return GetRelatedEntities<SharePointDocumentLocation>("knowledgearticle_SharePointDocumentLocations", null);
            }
            set {
                SetRelatedEntities("knowledgearticle_SharePointDocumentLocations", null, value);
            }
        }
        
        [RelationshipSchemaName("knowledgearticle_Teams")]
        public IEnumerable<Team> knowledgearticle_Teams {
            get {
                return GetRelatedEntities<Team>("knowledgearticle_Teams", null);
            }
            set {
                SetRelatedEntities("knowledgearticle_Teams", null, value);
            }
        }
        
        [RelationshipSchemaName("knowledgearticle_activity_parties")]
        public IEnumerable<ActivityParty> knowledgearticle_activity_parties {
            get {
                return GetRelatedEntities<ActivityParty>("knowledgearticle_activity_parties", null);
            }
            set {
                SetRelatedEntities("knowledgearticle_activity_parties", null, value);
            }
        }
        
        [RelationshipSchemaName("knowledgearticle_connections1")]
        public IEnumerable<Connection> knowledgearticle_connections1 {
            get {
                return GetRelatedEntities<Connection>("knowledgearticle_connections1", null);
            }
            set {
                SetRelatedEntities("knowledgearticle_connections1", null, value);
            }
        }
        
        [RelationshipSchemaName("knowledgearticle_connections2")]
        public IEnumerable<Connection> knowledgearticle_connections2 {
            get {
                return GetRelatedEntities<Connection>("knowledgearticle_connections2", null);
            }
            set {
                SetRelatedEntities("knowledgearticle_connections2", null, value);
            }
        }
        
        [AttributeLogicalName("primaryauthorid")]
        [RelationshipSchemaName("knowledgearticle_primaryauthorid")]
        public SystemUser knowledgearticle_primaryauthorid {
            get {
                return GetRelatedEntity<SystemUser>("knowledgearticle_primaryauthorid", null);
            }
            set {
                SetRelatedEntity("knowledgearticle_primaryauthorid", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_knowledgearticle_createdby")]
        public SystemUser lk_knowledgearticle_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_knowledgearticle_createdby", null);
            }
            set {
                SetRelatedEntity("lk_knowledgearticle_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_knowledgearticle_createdonbehalfby")]
        public SystemUser lk_knowledgearticle_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_knowledgearticle_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_knowledgearticle_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_knowledgearticle_modifiedby")]
        public SystemUser lk_knowledgearticle_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_knowledgearticle_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_knowledgearticle_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_knowledgearticle_modifiedonbehalfby")]
        public SystemUser lk_knowledgearticle_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_knowledgearticle_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_knowledgearticle_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_knowledgearticle")]
        public Team team_knowledgearticle {
            get {
                return GetRelatedEntity<Team>("team_knowledgearticle", null);
            }
            set {
                SetRelatedEntity("team_knowledgearticle", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_knowledgearticle")]
        public SystemUser user_knowledgearticle {
            get {
                return GetRelatedEntity<SystemUser>("user_knowledgearticle", null);
            }
            set {
                SetRelatedEntity("user_knowledgearticle", null, value);
            }
        }
        
        public static KnowledgeArticle Retrieve(IOrganizationService service, Guid id, params Expression<Func<KnowledgeArticle,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Prospect or potential sales opportunity. Leads are converted into accounts, contacts, or opportunities when they are qualified. Otherwise, they are deleted or archived.</para>
    /// <para>Display Name: Lead</para>
    /// </summary>
    [EntityLogicalName("lead")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class Lead : ExtendedEntity<LeadState, Lead_StatusCode> {
        
        public const string EntityLogicalName = "lead";
        
        public const int EntityTypeCode = 4;
        
        public Lead() : 
                base(EntityLogicalName) {
        }
        
        public Lead(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("fullname");
            }
        }
        
        [AttributeLogicalName("leadid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("leadid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the lead.</para>
        /// <para>Display Name: Lead</para>
        /// </summary>
        [AttributeLogicalName("leadid")]
        [DisplayName("Lead")]
        public Guid? LeadId {
            get {
                return GetAttributeValue<Guid?>("leadid");
            }
            set {
                SetId("leadid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the account with which the lead is associated.</para>
        /// <para>Display Name: Account</para>
        /// </summary>
        [AttributeLogicalName("accountid")]
        [DisplayName("Account")]
        public EntityReference AccountId {
            get {
                return GetAttributeValue<EntityReference>("accountid");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for address 1.</para>
        /// <para>Display Name: Address 1: ID</para>
        /// </summary>
        [AttributeLogicalName("address1_addressid")]
        [DisplayName("Address 1: ID")]
        public Guid? Address1_AddressId {
            get {
                return GetAttributeValue<Guid?>("address1_addressid");
            }
            set {
                SetAttributeValue("address1_addressid", value);
            }
        }
        
        /// <summary>
        /// <para>Select the primary address type.</para>
        /// <para>Display Name: Address 1: Address Type</para>
        /// </summary>
        [AttributeLogicalName("address1_addresstypecode")]
        [DisplayName("Address 1: Address Type")]
        public Lead_Address1_AddressTypeCode? Address1_AddressTypeCode {
            get {
                return GetOptionSetValue<Lead_Address1_AddressTypeCode>("address1_addresstypecode");
            }
            set {
                SetOptionSetValue("address1_addresstypecode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the city for the primary address.</para>
        /// <para>Display Name: City</para>
        /// </summary>
        [AttributeLogicalName("address1_city")]
        [DisplayName("City")]
        [MaxLength(80)]
        public string Address1_City {
            get {
                return GetAttributeValue<string>("address1_city");
            }
            set {
                SetAttributeValue("address1_city", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the complete primary address.</para>
        /// <para>Display Name: Address 1</para>
        /// </summary>
        [AttributeLogicalName("address1_composite")]
        [DisplayName("Address 1")]
        public string Address1_Composite {
            get {
                return GetAttributeValue<string>("address1_composite");
            }
        }
        
        /// <summary>
        /// <para>Type the country or region for the primary address.</para>
        /// <para>Display Name: Country/Region</para>
        /// </summary>
        [AttributeLogicalName("address1_country")]
        [DisplayName("Country/Region")]
        [MaxLength(80)]
        public string Address1_Country {
            get {
                return GetAttributeValue<string>("address1_country");
            }
            set {
                SetAttributeValue("address1_country", value);
            }
        }
        
        /// <summary>
        /// <para>Type the county for the primary address.</para>
        /// <para>Display Name: Address 1: County</para>
        /// </summary>
        [AttributeLogicalName("address1_county")]
        [DisplayName("Address 1: County")]
        [MaxLength(50)]
        public string Address1_County {
            get {
                return GetAttributeValue<string>("address1_county");
            }
            set {
                SetAttributeValue("address1_county", value);
            }
        }
        
        /// <summary>
        /// <para>Type the fax number associated with the primary address.</para>
        /// <para>Display Name: Address 1: Fax</para>
        /// </summary>
        [AttributeLogicalName("address1_fax")]
        [DisplayName("Address 1: Fax")]
        [MaxLength(50)]
        public string Address1_Fax {
            get {
                return GetAttributeValue<string>("address1_fax");
            }
            set {
                SetAttributeValue("address1_fax", value);
            }
        }
        
        /// <summary>
        /// <para>Type the latitude value for the primary address for use in mapping and other applications.</para>
        /// <para>Display Name: Address 1: Latitude</para>
        /// </summary>
        [AttributeLogicalName("address1_latitude")]
        [DisplayName("Address 1: Latitude")]
        public double? Address1_Latitude {
            get {
                return GetAttributeValue<double?>("address1_latitude");
            }
            set {
                SetAttributeValue("address1_latitude", value);
            }
        }
        
        /// <summary>
        /// <para>Type the first line of the primary address.</para>
        /// <para>Display Name: Street 1</para>
        /// </summary>
        [AttributeLogicalName("address1_line1")]
        [DisplayName("Street 1")]
        [MaxLength(250)]
        public string Address1_Line1 {
            get {
                return GetAttributeValue<string>("address1_line1");
            }
            set {
                SetAttributeValue("address1_line1", value);
            }
        }
        
        /// <summary>
        /// <para>Type the second line of the primary address.</para>
        /// <para>Display Name: Street 2</para>
        /// </summary>
        [AttributeLogicalName("address1_line2")]
        [DisplayName("Street 2")]
        [MaxLength(250)]
        public string Address1_Line2 {
            get {
                return GetAttributeValue<string>("address1_line2");
            }
            set {
                SetAttributeValue("address1_line2", value);
            }
        }
        
        /// <summary>
        /// <para>Type the third line of the primary address.</para>
        /// <para>Display Name: Street 3</para>
        /// </summary>
        [AttributeLogicalName("address1_line3")]
        [DisplayName("Street 3")]
        [MaxLength(250)]
        public string Address1_Line3 {
            get {
                return GetAttributeValue<string>("address1_line3");
            }
            set {
                SetAttributeValue("address1_line3", value);
            }
        }
        
        /// <summary>
        /// <para>Type the longitude value for the primary address for use in mapping and other applications.</para>
        /// <para>Display Name: Address 1: Longitude</para>
        /// </summary>
        [AttributeLogicalName("address1_longitude")]
        [DisplayName("Address 1: Longitude")]
        public double? Address1_Longitude {
            get {
                return GetAttributeValue<double?>("address1_longitude");
            }
            set {
                SetAttributeValue("address1_longitude", value);
            }
        }
        
        /// <summary>
        /// <para>Type a descriptive name for the primary address, such as Corporate Headquarters.</para>
        /// <para>Display Name: Address 1: Name</para>
        /// </summary>
        [AttributeLogicalName("address1_name")]
        [DisplayName("Address 1: Name")]
        [MaxLength(100)]
        public string Address1_Name {
            get {
                return GetAttributeValue<string>("address1_name");
            }
            set {
                SetAttributeValue("address1_name", value);
            }
        }
        
        /// <summary>
        /// <para>Type the post office box number of the primary address.</para>
        /// <para>Display Name: Address 1: Post Office Box</para>
        /// </summary>
        [AttributeLogicalName("address1_postofficebox")]
        [DisplayName("Address 1: Post Office Box")]
        [MaxLength(20)]
        public string Address1_PostOfficeBox {
            get {
                return GetAttributeValue<string>("address1_postofficebox");
            }
            set {
                SetAttributeValue("address1_postofficebox", value);
            }
        }
        
        /// <summary>
        /// <para>Type the ZIP Code or postal code for the primary address.</para>
        /// <para>Display Name: ZIP/Postal Code</para>
        /// </summary>
        [AttributeLogicalName("address1_postalcode")]
        [DisplayName("ZIP/Postal Code")]
        [MaxLength(20)]
        public string Address1_PostalCode {
            get {
                return GetAttributeValue<string>("address1_postalcode");
            }
            set {
                SetAttributeValue("address1_postalcode", value);
            }
        }
        
        /// <summary>
        /// <para>Select a shipping method for deliveries sent to this address.</para>
        /// <para>Display Name: Address 1: Shipping Method</para>
        /// </summary>
        [AttributeLogicalName("address1_shippingmethodcode")]
        [DisplayName("Address 1: Shipping Method")]
        public Lead_Address1_ShippingMethodCode? Address1_ShippingMethodCode {
            get {
                return GetOptionSetValue<Lead_Address1_ShippingMethodCode>("address1_shippingmethodcode");
            }
            set {
                SetOptionSetValue("address1_shippingmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the state or province of the primary address.</para>
        /// <para>Display Name: State/Province</para>
        /// </summary>
        [AttributeLogicalName("address1_stateorprovince")]
        [DisplayName("State/Province")]
        [MaxLength(50)]
        public string Address1_StateOrProvince {
            get {
                return GetAttributeValue<string>("address1_stateorprovince");
            }
            set {
                SetAttributeValue("address1_stateorprovince", value);
            }
        }
        
        /// <summary>
        /// <para>Type the main phone number associated with the primary address.</para>
        /// <para>Display Name: Address 1: Telephone 1</para>
        /// </summary>
        [AttributeLogicalName("address1_telephone1")]
        [DisplayName("Address 1: Telephone 1")]
        [MaxLength(50)]
        public string Address1_Telephone1 {
            get {
                return GetAttributeValue<string>("address1_telephone1");
            }
            set {
                SetAttributeValue("address1_telephone1", value);
            }
        }
        
        /// <summary>
        /// <para>Type a second phone number associated with the primary address.</para>
        /// <para>Display Name: Address 1: Telephone 2</para>
        /// </summary>
        [AttributeLogicalName("address1_telephone2")]
        [DisplayName("Address 1: Telephone 2")]
        [MaxLength(50)]
        public string Address1_Telephone2 {
            get {
                return GetAttributeValue<string>("address1_telephone2");
            }
            set {
                SetAttributeValue("address1_telephone2", value);
            }
        }
        
        /// <summary>
        /// <para>Type a third phone number associated with the primary address.</para>
        /// <para>Display Name: Address 1: Telephone 3</para>
        /// </summary>
        [AttributeLogicalName("address1_telephone3")]
        [DisplayName("Address 1: Telephone 3")]
        [MaxLength(50)]
        public string Address1_Telephone3 {
            get {
                return GetAttributeValue<string>("address1_telephone3");
            }
            set {
                SetAttributeValue("address1_telephone3", value);
            }
        }
        
        /// <summary>
        /// <para>Type the UPS zone of the primary address to make sure shipping charges are calculated correctly and deliveries are made promptly, if shipped by UPS.</para>
        /// <para>Display Name: Address 1: UPS Zone</para>
        /// </summary>
        [AttributeLogicalName("address1_upszone")]
        [DisplayName("Address 1: UPS Zone")]
        [MaxLength(4)]
        public string Address1_UPSZone {
            get {
                return GetAttributeValue<string>("address1_upszone");
            }
            set {
                SetAttributeValue("address1_upszone", value);
            }
        }
        
        /// <summary>
        /// <para>Select the time zone, or UTC offset, for this address so that other people can reference it when they contact someone at this address.</para>
        /// <para>Display Name: Address 1: UTC Offset</para>
        /// </summary>
        [AttributeLogicalName("address1_utcoffset")]
        [DisplayName("Address 1: UTC Offset")]
        [Range(-1500, 1500)]
        public int? Address1_UTCOffset {
            get {
                return GetAttributeValue<int?>("address1_utcoffset");
            }
            set {
                SetAttributeValue("address1_utcoffset", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for address 2.</para>
        /// <para>Display Name: Address 2: ID</para>
        /// </summary>
        [AttributeLogicalName("address2_addressid")]
        [DisplayName("Address 2: ID")]
        public Guid? Address2_AddressId {
            get {
                return GetAttributeValue<Guid?>("address2_addressid");
            }
            set {
                SetAttributeValue("address2_addressid", value);
            }
        }
        
        /// <summary>
        /// <para>Select the secondary address type.</para>
        /// <para>Display Name: Address 2: Address Type</para>
        /// </summary>
        [AttributeLogicalName("address2_addresstypecode")]
        [DisplayName("Address 2: Address Type")]
        public Lead_Address2_AddressTypeCode? Address2_AddressTypeCode {
            get {
                return GetOptionSetValue<Lead_Address2_AddressTypeCode>("address2_addresstypecode");
            }
            set {
                SetOptionSetValue("address2_addresstypecode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the city for the secondary address.</para>
        /// <para>Display Name: Address 2: City</para>
        /// </summary>
        [AttributeLogicalName("address2_city")]
        [DisplayName("Address 2: City")]
        [MaxLength(80)]
        public string Address2_City {
            get {
                return GetAttributeValue<string>("address2_city");
            }
            set {
                SetAttributeValue("address2_city", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the complete secondary address.</para>
        /// <para>Display Name: Address 2</para>
        /// </summary>
        [AttributeLogicalName("address2_composite")]
        [DisplayName("Address 2")]
        public string Address2_Composite {
            get {
                return GetAttributeValue<string>("address2_composite");
            }
        }
        
        /// <summary>
        /// <para>Type the country or region for the secondary address.</para>
        /// <para>Display Name: Address 2: Country/Region</para>
        /// </summary>
        [AttributeLogicalName("address2_country")]
        [DisplayName("Address 2: Country/Region")]
        [MaxLength(80)]
        public string Address2_Country {
            get {
                return GetAttributeValue<string>("address2_country");
            }
            set {
                SetAttributeValue("address2_country", value);
            }
        }
        
        /// <summary>
        /// <para>Type the county for the secondary address.</para>
        /// <para>Display Name: Address 2: County</para>
        /// </summary>
        [AttributeLogicalName("address2_county")]
        [DisplayName("Address 2: County")]
        [MaxLength(50)]
        public string Address2_County {
            get {
                return GetAttributeValue<string>("address2_county");
            }
            set {
                SetAttributeValue("address2_county", value);
            }
        }
        
        /// <summary>
        /// <para>Type the fax number associated with the secondary address.</para>
        /// <para>Display Name: Address 2: Fax</para>
        /// </summary>
        [AttributeLogicalName("address2_fax")]
        [DisplayName("Address 2: Fax")]
        [MaxLength(50)]
        public string Address2_Fax {
            get {
                return GetAttributeValue<string>("address2_fax");
            }
            set {
                SetAttributeValue("address2_fax", value);
            }
        }
        
        /// <summary>
        /// <para>Type the latitude value for the secondary address for use in mapping and other applications.</para>
        /// <para>Display Name: Address 2: Latitude</para>
        /// </summary>
        [AttributeLogicalName("address2_latitude")]
        [DisplayName("Address 2: Latitude")]
        public double? Address2_Latitude {
            get {
                return GetAttributeValue<double?>("address2_latitude");
            }
            set {
                SetAttributeValue("address2_latitude", value);
            }
        }
        
        /// <summary>
        /// <para>Type the first line of the secondary address.</para>
        /// <para>Display Name: Address 2: Street 1</para>
        /// </summary>
        [AttributeLogicalName("address2_line1")]
        [DisplayName("Address 2: Street 1")]
        [MaxLength(250)]
        public string Address2_Line1 {
            get {
                return GetAttributeValue<string>("address2_line1");
            }
            set {
                SetAttributeValue("address2_line1", value);
            }
        }
        
        /// <summary>
        /// <para>Type the second line of the secondary address.</para>
        /// <para>Display Name: Address 2: Street 2</para>
        /// </summary>
        [AttributeLogicalName("address2_line2")]
        [DisplayName("Address 2: Street 2")]
        [MaxLength(250)]
        public string Address2_Line2 {
            get {
                return GetAttributeValue<string>("address2_line2");
            }
            set {
                SetAttributeValue("address2_line2", value);
            }
        }
        
        /// <summary>
        /// <para>Type the third line of the secondary address.</para>
        /// <para>Display Name: Address 2: Street 3</para>
        /// </summary>
        [AttributeLogicalName("address2_line3")]
        [DisplayName("Address 2: Street 3")]
        [MaxLength(250)]
        public string Address2_Line3 {
            get {
                return GetAttributeValue<string>("address2_line3");
            }
            set {
                SetAttributeValue("address2_line3", value);
            }
        }
        
        /// <summary>
        /// <para>Type the longitude value for the secondary address for use in mapping and other applications.</para>
        /// <para>Display Name: Address 2: Longitude</para>
        /// </summary>
        [AttributeLogicalName("address2_longitude")]
        [DisplayName("Address 2: Longitude")]
        public double? Address2_Longitude {
            get {
                return GetAttributeValue<double?>("address2_longitude");
            }
            set {
                SetAttributeValue("address2_longitude", value);
            }
        }
        
        /// <summary>
        /// <para>Type a descriptive name for the secondary address, such as Corporate Headquarters.</para>
        /// <para>Display Name: Address 2: Name</para>
        /// </summary>
        [AttributeLogicalName("address2_name")]
        [DisplayName("Address 2: Name")]
        [MaxLength(100)]
        public string Address2_Name {
            get {
                return GetAttributeValue<string>("address2_name");
            }
            set {
                SetAttributeValue("address2_name", value);
            }
        }
        
        /// <summary>
        /// <para>Type the post office box number of the secondary address.</para>
        /// <para>Display Name: Address 2: Post Office Box</para>
        /// </summary>
        [AttributeLogicalName("address2_postofficebox")]
        [DisplayName("Address 2: Post Office Box")]
        [MaxLength(20)]
        public string Address2_PostOfficeBox {
            get {
                return GetAttributeValue<string>("address2_postofficebox");
            }
            set {
                SetAttributeValue("address2_postofficebox", value);
            }
        }
        
        /// <summary>
        /// <para>Type the ZIP Code or postal code for the secondary address.</para>
        /// <para>Display Name: Address 2: ZIP/Postal Code</para>
        /// </summary>
        [AttributeLogicalName("address2_postalcode")]
        [DisplayName("Address 2: ZIP/Postal Code")]
        [MaxLength(20)]
        public string Address2_PostalCode {
            get {
                return GetAttributeValue<string>("address2_postalcode");
            }
            set {
                SetAttributeValue("address2_postalcode", value);
            }
        }
        
        /// <summary>
        /// <para>Select a shipping method for deliveries sent to this address.</para>
        /// <para>Display Name: Address 2: Shipping Method</para>
        /// </summary>
        [AttributeLogicalName("address2_shippingmethodcode")]
        [DisplayName("Address 2: Shipping Method")]
        public Lead_Address2_ShippingMethodCode? Address2_ShippingMethodCode {
            get {
                return GetOptionSetValue<Lead_Address2_ShippingMethodCode>("address2_shippingmethodcode");
            }
            set {
                SetOptionSetValue("address2_shippingmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the state or province of the secondary address.</para>
        /// <para>Display Name: Address 2: State/Province</para>
        /// </summary>
        [AttributeLogicalName("address2_stateorprovince")]
        [DisplayName("Address 2: State/Province")]
        [MaxLength(50)]
        public string Address2_StateOrProvince {
            get {
                return GetAttributeValue<string>("address2_stateorprovince");
            }
            set {
                SetAttributeValue("address2_stateorprovince", value);
            }
        }
        
        /// <summary>
        /// <para>Type the main phone number associated with the secondary address.</para>
        /// <para>Display Name: Address 2: Telephone 1</para>
        /// </summary>
        [AttributeLogicalName("address2_telephone1")]
        [DisplayName("Address 2: Telephone 1")]
        [MaxLength(50)]
        public string Address2_Telephone1 {
            get {
                return GetAttributeValue<string>("address2_telephone1");
            }
            set {
                SetAttributeValue("address2_telephone1", value);
            }
        }
        
        /// <summary>
        /// <para>Type a second phone number associated with the secondary address.</para>
        /// <para>Display Name: Address 2: Telephone 2</para>
        /// </summary>
        [AttributeLogicalName("address2_telephone2")]
        [DisplayName("Address 2: Telephone 2")]
        [MaxLength(50)]
        public string Address2_Telephone2 {
            get {
                return GetAttributeValue<string>("address2_telephone2");
            }
            set {
                SetAttributeValue("address2_telephone2", value);
            }
        }
        
        /// <summary>
        /// <para>Type a third phone number associated with the secondary address.</para>
        /// <para>Display Name: Address 2: Telephone 3</para>
        /// </summary>
        [AttributeLogicalName("address2_telephone3")]
        [DisplayName("Address 2: Telephone 3")]
        [MaxLength(50)]
        public string Address2_Telephone3 {
            get {
                return GetAttributeValue<string>("address2_telephone3");
            }
            set {
                SetAttributeValue("address2_telephone3", value);
            }
        }
        
        /// <summary>
        /// <para>Type the UPS zone of the secondary address to make sure shipping charges are calculated correctly and deliveries are made promptly, if shipped by UPS.</para>
        /// <para>Display Name: Address 2: UPS Zone</para>
        /// </summary>
        [AttributeLogicalName("address2_upszone")]
        [DisplayName("Address 2: UPS Zone")]
        [MaxLength(4)]
        public string Address2_UPSZone {
            get {
                return GetAttributeValue<string>("address2_upszone");
            }
            set {
                SetAttributeValue("address2_upszone", value);
            }
        }
        
        /// <summary>
        /// <para>Select the time zone, or UTC offset, for this address so that other people can reference it when they contact someone at this address.</para>
        /// <para>Display Name: Address 2: UTC Offset</para>
        /// </summary>
        [AttributeLogicalName("address2_utcoffset")]
        [DisplayName("Address 2: UTC Offset")]
        [Range(-1500, 1500)]
        public int? Address2_UTCOffset {
            get {
                return GetAttributeValue<int?>("address2_utcoffset");
            }
            set {
                SetAttributeValue("address2_utcoffset", value);
            }
        }
        
        /// <summary>
        /// <para>Information about the budget amount of the lead's company or organization.</para>
        /// <para>Display Name: Budget Amount</para>
        /// </summary>
        [AttributeLogicalName("budgetamount")]
        [DisplayName("Budget Amount")]
        public decimal? BudgetAmount {
            get {
                return GetMoneyValue("budgetamount");
            }
            set {
                SetMoneyValue("budgetamount", value);
            }
        }
        
        /// <summary>
        /// <para>Base currency equivalent of the estimated budget of the lead.</para>
        /// <para>Display Name: Budget Amount (Base)</para>
        /// </summary>
        [AttributeLogicalName("budgetamount_base")]
        [DisplayName("Budget Amount (Base)")]
        public decimal? BudgetAmount_Base {
            get {
                return GetMoneyValue("budgetamount_base");
            }
        }
        
        /// <summary>
        /// <para>Information about the budget status of the lead's company or organization.</para>
        /// <para>Display Name: Budget</para>
        /// </summary>
        [AttributeLogicalName("budgetstatus")]
        [DisplayName("Budget")]
        public budgetstatus? BudgetStatus {
            get {
                return GetOptionSetValue<budgetstatus>("budgetstatus");
            }
            set {
                SetOptionSetValue("budgetstatus", value);
            }
        }
        
        /// <summary>
        /// <para>Stores Image of the Business Card</para>
        /// <para>Display Name: Business Card</para>
        /// </summary>
        [AttributeLogicalName("businesscard")]
        [DisplayName("Business Card")]
        public string BusinessCard {
            get {
                return GetAttributeValue<string>("businesscard");
            }
            set {
                SetAttributeValue("businesscard", value);
            }
        }
        
        /// <summary>
        /// <para>Stores Business Card Control Properties.</para>
        /// <para>Display Name: BusinessCardAttributes</para>
        /// </summary>
        [AttributeLogicalName("businesscardattributes")]
        [DisplayName("BusinessCardAttributes")]
        [MaxLength(4000)]
        public string BusinessCardAttributes {
            get {
                return GetAttributeValue<string>("businesscardattributes");
            }
            set {
                SetAttributeValue("businesscardattributes", value);
            }
        }
        
        /// <summary>
        /// <para>campaign_leads</para>
        /// <para>Display Name: Source Campaign</para>
        /// </summary>
        [AttributeLogicalName("campaignid")]
        [DisplayName("Source Campaign")]
        public EntityReference CampaignId {
            get {
                return GetAttributeValue<EntityReference>("campaignid");
            }
            set {
                SetAttributeValue("campaignid", value);
            }
        }
        
        /// <summary>
        /// <para>Type the name of the company associated with the lead. This becomes the account name when the lead is qualified and converted to a customer account.</para>
        /// <para>Display Name: Company Name</para>
        /// </summary>
        [AttributeLogicalName("companyname")]
        [DisplayName("Company Name")]
        [MaxLength(100)]
        public string CompanyName {
            get {
                return GetAttributeValue<string>("companyname");
            }
            set {
                SetAttributeValue("companyname", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the lead confirmed interest in your offerings. This helps in determining the lead quality.</para>
        /// <para>Display Name: Confirm Interest</para>
        /// </summary>
        [AttributeLogicalName("confirminterest")]
        [DisplayName("Confirm Interest")]
        public bool? ConfirmInterest {
            get {
                return GetAttributeValue<bool?>("confirminterest");
            }
            set {
                SetAttributeValue("confirminterest", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the contact with which the lead is associated.</para>
        /// <para>Display Name: Contact</para>
        /// </summary>
        [AttributeLogicalName("contactid")]
        [DisplayName("Contact")]
        public EntityReference ContactId {
            get {
                return GetAttributeValue<EntityReference>("contactid");
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics CRM options.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>lk_lead_createdonbehalfby</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>lead_customer_contacts</para>
        /// <para>Display Name: Customer</para>
        /// </summary>
        [AttributeLogicalName("customerid")]
        [DisplayName("Customer")]
        public EntityReference CustomerId {
            get {
                return GetAttributeValue<EntityReference>("customerid");
            }
            set {
                SetAttributeValue("customerid", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether your notes include information about who makes the purchase decisions at the lead's company.</para>
        /// <para>Display Name: Decision Maker?</para>
        /// </summary>
        [AttributeLogicalName("decisionmaker")]
        [DisplayName("Decision Maker?")]
        public bool? DecisionMaker {
            get {
                return GetAttributeValue<bool?>("decisionmaker");
            }
            set {
                SetAttributeValue("decisionmaker", value);
            }
        }
        
        /// <summary>
        /// <para>Type additional information to describe the lead, such as an excerpt from the company's website.</para>
        /// <para>Display Name: Description</para>
        /// </summary>
        [AttributeLogicalName("description")]
        [DisplayName("Description")]
        public string Description {
            get {
                return GetAttributeValue<string>("description");
            }
            set {
                SetAttributeValue("description", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the lead accepts bulk email sent through marketing campaigns or quick campaigns. If Do Not Allow is selected, the lead can be added to marketing lists, but will be excluded from the email.</para>
        /// <para>Display Name: Do not allow Bulk Emails</para>
        /// </summary>
        [AttributeLogicalName("donotbulkemail")]
        [DisplayName("Do not allow Bulk Emails")]
        public bool? DoNotBulkEMail {
            get {
                return GetAttributeValue<bool?>("donotbulkemail");
            }
            set {
                SetAttributeValue("donotbulkemail", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the lead allows direct email sent from Microsoft Dynamics 365.</para>
        /// <para>Display Name: Do not allow Emails</para>
        /// </summary>
        [AttributeLogicalName("donotemail")]
        [DisplayName("Do not allow Emails")]
        public bool? DoNotEMail {
            get {
                return GetAttributeValue<bool?>("donotemail");
            }
            set {
                SetAttributeValue("donotemail", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the lead allows faxes.</para>
        /// <para>Display Name: Do not allow Faxes</para>
        /// </summary>
        [AttributeLogicalName("donotfax")]
        [DisplayName("Do not allow Faxes")]
        public bool? DoNotFax {
            get {
                return GetAttributeValue<bool?>("donotfax");
            }
            set {
                SetAttributeValue("donotfax", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the lead allows phone calls.</para>
        /// <para>Display Name: Do not allow Phone Calls</para>
        /// </summary>
        [AttributeLogicalName("donotphone")]
        [DisplayName("Do not allow Phone Calls")]
        public bool? DoNotPhone {
            get {
                return GetAttributeValue<bool?>("donotphone");
            }
            set {
                SetAttributeValue("donotphone", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the lead allows direct mail.</para>
        /// <para>Display Name: Do not allow Mails</para>
        /// </summary>
        [AttributeLogicalName("donotpostalmail")]
        [DisplayName("Do not allow Mails")]
        public bool? DoNotPostalMail {
            get {
                return GetAttributeValue<bool?>("donotpostalmail");
            }
            set {
                SetAttributeValue("donotpostalmail", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the lead accepts marketing materials, such as brochures or catalogs. Leads that opt out can be excluded from marketing initiatives.</para>
        /// <para>Display Name: Marketing Material</para>
        /// </summary>
        [AttributeLogicalName("donotsendmm")]
        [DisplayName("Marketing Material")]
        public bool? DoNotSendMM {
            get {
                return GetAttributeValue<bool?>("donotsendmm");
            }
            set {
                SetAttributeValue("donotsendmm", value);
            }
        }
        
        /// <summary>
        /// <para>Type the primary email address for the lead.</para>
        /// <para>Display Name: Email</para>
        /// </summary>
        [AttributeLogicalName("emailaddress1")]
        [DisplayName("Email")]
        [MaxLength(100)]
        public string EMailAddress1 {
            get {
                return GetAttributeValue<string>("emailaddress1");
            }
            set {
                SetAttributeValue("emailaddress1", value);
            }
        }
        
        /// <summary>
        /// <para>Type the secondary email address for the lead.</para>
        /// <para>Display Name: Email Address 2</para>
        /// </summary>
        [AttributeLogicalName("emailaddress2")]
        [DisplayName("Email Address 2")]
        [MaxLength(100)]
        public string EMailAddress2 {
            get {
                return GetAttributeValue<string>("emailaddress2");
            }
            set {
                SetAttributeValue("emailaddress2", value);
            }
        }
        
        /// <summary>
        /// <para>Type a third email address for the lead.</para>
        /// <para>Display Name: Email Address 3</para>
        /// </summary>
        [AttributeLogicalName("emailaddress3")]
        [DisplayName("Email Address 3")]
        [MaxLength(100)]
        public string EMailAddress3 {
            get {
                return GetAttributeValue<string>("emailaddress3");
            }
            set {
                SetAttributeValue("emailaddress3", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Entity Image Id</para>
        /// </summary>
        [AttributeLogicalName("entityimageid")]
        [DisplayName("Entity Image Id")]
        public Guid? EntityImageId {
            get {
                return GetAttributeValue<Guid?>("entityimageid");
            }
        }
        
        /// <summary>
        /// <para>Type the estimated revenue value that this lead will generate to assist in sales forecasting and planning.</para>
        /// <para>Display Name: Est. Value</para>
        /// </summary>
        [AttributeLogicalName("estimatedamount")]
        [DisplayName("Est. Value")]
        public decimal? EstimatedAmount {
            get {
                return GetMoneyValue("estimatedamount");
            }
            set {
                SetMoneyValue("estimatedamount", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the Est. Value field converted to the system's default base currency. The calculation uses the exchange rate specified in the Currencies area.</para>
        /// <para>Display Name: Est. Value (Base)</para>
        /// </summary>
        [AttributeLogicalName("estimatedamount_base")]
        [DisplayName("Est. Value (Base)")]
        public decimal? EstimatedAmount_Base {
            get {
                return GetMoneyValue("estimatedamount_base");
            }
        }
        
        /// <summary>
        /// <para>Enter the expected close date for the lead, so that the sales team can schedule timely follow-up meetings to move the prospect to the next sales stage.</para>
        /// <para>Display Name: Est. Close Date</para>
        /// </summary>
        [AttributeLogicalName("estimatedclosedate")]
        [DisplayName("Est. Close Date")]
        public DateTime? EstimatedCloseDate {
            get {
                return GetAttributeValue<DateTime?>("estimatedclosedate");
            }
            set {
                SetAttributeValue("estimatedclosedate", value);
            }
        }
        
        /// <summary>
        /// <para>Type a numeric value of the lead's estimated value, such as a product quantity, if no revenue amount can be specified in the Est. Value field. This can be used for sales forecasting and planning.</para>
        /// <para>Display Name: Est. Value (deprecated)</para>
        /// </summary>
        [AttributeLogicalName("estimatedvalue")]
        [DisplayName("Est. Value (deprecated)")]
        public double? EstimatedValue {
            get {
                return GetAttributeValue<double?>("estimatedvalue");
            }
            set {
                SetAttributeValue("estimatedvalue", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the fit between the lead's requirements and your offerings was evaluated.</para>
        /// <para>Display Name: Evaluate Fit</para>
        /// </summary>
        [AttributeLogicalName("evaluatefit")]
        [DisplayName("Evaluate Fit")]
        public bool? EvaluateFit {
            get {
                return GetAttributeValue<bool?>("evaluatefit");
            }
            set {
                SetAttributeValue("evaluatefit", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("Exchange Rate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Type the fax number for the primary contact for the lead.</para>
        /// <para>Display Name: Fax</para>
        /// </summary>
        [AttributeLogicalName("fax")]
        [DisplayName("Fax")]
        [MaxLength(50)]
        public string Fax {
            get {
                return GetAttributeValue<string>("fax");
            }
            set {
                SetAttributeValue("fax", value);
            }
        }
        
        /// <summary>
        /// <para>Type the first name of the primary contact for the lead to make sure the prospect is addressed correctly in sales calls, email, and marketing campaigns.</para>
        /// <para>Display Name: First Name</para>
        /// </summary>
        [AttributeLogicalName("firstname")]
        [DisplayName("First Name")]
        [MaxLength(50)]
        public string FirstName {
            get {
                return GetAttributeValue<string>("firstname");
            }
            set {
                SetAttributeValue("firstname", value);
            }
        }
        
        /// <summary>
        /// <para>Information about whether to allow following email activity like opens, attachment views and link clicks for emails sent to the lead.</para>
        /// <para>Display Name: Follow Email Activity</para>
        /// </summary>
        [AttributeLogicalName("followemail")]
        [DisplayName("Follow Email Activity")]
        public bool? FollowEmail {
            get {
                return GetAttributeValue<bool?>("followemail");
            }
            set {
                SetAttributeValue("followemail", value);
            }
        }
        
        /// <summary>
        /// <para>Combines and shows the lead's first and last names so the full name can be displayed in views and reports.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("fullname")]
        [DisplayName("Name")]
        [MaxLength(160)]
        public string FullName {
            get {
                return GetAttributeValue<string>("fullname");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the data import or data migration that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Select the primary industry in which the lead's business is focused, for use in marketing segmentation and demographic analysis.</para>
        /// <para>Display Name: Industry</para>
        /// </summary>
        [AttributeLogicalName("industrycode")]
        [DisplayName("Industry")]
        public Lead_IndustryCode? IndustryCode {
            get {
                return GetOptionSetValue<Lead_IndustryCode>("industrycode");
            }
            set {
                SetOptionSetValue("industrycode", value);
            }
        }
        
        /// <summary>
        /// <para>Choose whether someone from the sales team contacted this lead earlier.</para>
        /// <para>Display Name: Initial Communication</para>
        /// </summary>
        [AttributeLogicalName("initialcommunication")]
        [DisplayName("Initial Communication")]
        public initialcommunication? InitialCommunication {
            get {
                return GetOptionSetValue<initialcommunication>("initialcommunication");
            }
            set {
                SetOptionSetValue("initialcommunication", value);
            }
        }
        
        /// <summary>
        /// <para>Type the job title of the primary contact for this lead to make sure the prospect is addressed correctly in sales calls, email, and marketing campaigns.</para>
        /// <para>Display Name: Job Title</para>
        /// </summary>
        [AttributeLogicalName("jobtitle")]
        [DisplayName("Job Title")]
        [MaxLength(100)]
        public string JobTitle {
            get {
                return GetAttributeValue<string>("jobtitle");
            }
            set {
                SetAttributeValue("jobtitle", value);
            }
        }
        
        /// <summary>
        /// <para>Type the last name of the primary contact for the lead to make sure the prospect is addressed correctly in sales calls, email, and marketing campaigns.</para>
        /// <para>Display Name: Last Name</para>
        /// </summary>
        [AttributeLogicalName("lastname")]
        [DisplayName("Last Name")]
        [MaxLength(50)]
        public string LastName {
            get {
                return GetAttributeValue<string>("lastname");
            }
            set {
                SetAttributeValue("lastname", value);
            }
        }
        
        /// <summary>
        /// <para>Contains the date and time stamp of the last on hold time.</para>
        /// <para>Display Name: Last On Hold Time</para>
        /// </summary>
        [AttributeLogicalName("lastonholdtime")]
        [DisplayName("Last On Hold Time")]
        public DateTime? LastOnHoldTime {
            get {
                return GetAttributeValue<DateTime?>("lastonholdtime");
            }
            set {
                SetAttributeValue("lastonholdtime", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the date when the lead was last included in a marketing campaign or quick campaign.</para>
        /// <para>Display Name: Last Campaign Date</para>
        /// </summary>
        [AttributeLogicalName("lastusedincampaign")]
        [DisplayName("Last Campaign Date")]
        public DateTime? LastUsedInCampaign {
            get {
                return GetAttributeValue<DateTime?>("lastusedincampaign");
            }
            set {
                SetAttributeValue("lastusedincampaign", value);
            }
        }
        
        /// <summary>
        /// <para>Select a rating value to indicate the lead's potential to become a customer.</para>
        /// <para>Display Name: Rating</para>
        /// </summary>
        [AttributeLogicalName("leadqualitycode")]
        [DisplayName("Rating")]
        public Lead_LeadQualityCode? LeadQualityCode {
            get {
                return GetOptionSetValue<Lead_LeadQualityCode>("leadqualitycode");
            }
            set {
                SetOptionSetValue("leadqualitycode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the primary marketing source that prompted the lead to contact you.</para>
        /// <para>Display Name: Lead Source</para>
        /// </summary>
        [AttributeLogicalName("leadsourcecode")]
        [DisplayName("Lead Source")]
        public Lead_LeadSourceCode? LeadSourceCode {
            get {
                return GetOptionSetValue<Lead_LeadSourceCode>("leadsourcecode");
            }
            set {
                SetOptionSetValue("leadsourcecode", value);
            }
        }
        
        /// <summary>
        /// <para>lead_master_lead</para>
        /// <para>Display Name: Master ID</para>
        /// </summary>
        [AttributeLogicalName("masterid")]
        [DisplayName("Master ID")]
        public EntityReference MasterId {
            get {
                return GetAttributeValue<EntityReference>("masterid");
            }
        }
        
        /// <summary>
        /// <para>Tells whether the lead has been merged with another lead.</para>
        /// <para>Display Name: Merged</para>
        /// </summary>
        [AttributeLogicalName("merged")]
        [DisplayName("Merged")]
        public bool? Merged {
            get {
                return GetAttributeValue<bool?>("merged");
            }
        }
        
        /// <summary>
        /// <para>Type the middle name or initial of the primary contact for the lead to make sure the prospect is addressed correctly.</para>
        /// <para>Display Name: Middle Name</para>
        /// </summary>
        [AttributeLogicalName("middlename")]
        [DisplayName("Middle Name")]
        [MaxLength(50)]
        public string MiddleName {
            get {
                return GetAttributeValue<string>("middlename");
            }
            set {
                SetAttributeValue("middlename", value);
            }
        }
        
        /// <summary>
        /// <para>Type the mobile phone number for the primary contact for the lead.</para>
        /// <para>Display Name: Mobile Phone</para>
        /// </summary>
        [AttributeLogicalName("mobilephone")]
        [DisplayName("Mobile Phone")]
        [MaxLength(20)]
        public string MobilePhone {
            get {
                return GetAttributeValue<string>("mobilephone");
            }
            set {
                SetAttributeValue("mobilephone", value);
            }
        }
        
        /// <summary>
        /// <para>Shows who last updated the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics CRM options.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>lk_lead_modifiedonbehalfby</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Choose how high the level of need is for the lead's company.</para>
        /// <para>Display Name: Need</para>
        /// </summary>
        [AttributeLogicalName("need")]
        [DisplayName("Need")]
        public need? Need {
            get {
                return GetOptionSetValue<need>("need");
            }
            set {
                SetOptionSetValue("need", value);
            }
        }
        
        /// <summary>
        /// <para>Type the number of employees that work at the company associated with the lead, for use in marketing segmentation and demographic analysis.</para>
        /// <para>Display Name: No. of Employees</para>
        /// </summary>
        [AttributeLogicalName("numberofemployees")]
        [DisplayName("No. of Employees")]
        [Range(0, 1000000)]
        public int? NumberOfEmployees {
            get {
                return GetAttributeValue<int?>("numberofemployees");
            }
            set {
                SetAttributeValue("numberofemployees", value);
            }
        }
        
        /// <summary>
        /// <para>Shows how long, in minutes, that the record was on hold.</para>
        /// <para>Display Name: On Hold Time (Minutes)</para>
        /// </summary>
        [AttributeLogicalName("onholdtime")]
        [DisplayName("On Hold Time (Minutes)")]
        [Range(-2147483648, 2147483647)]
        public int? OnHoldTime {
            get {
                return GetAttributeValue<int?>("onholdtime");
            }
        }
        
        /// <summary>
        /// <para>OriginatingCase_Lead</para>
        /// <para>Display Name: Originating Case</para>
        /// </summary>
        [AttributeLogicalName("originatingcaseid")]
        [DisplayName("Originating Case")]
        public EntityReference OriginatingCaseId {
            get {
                return GetAttributeValue<EntityReference>("originatingcaseid");
            }
            set {
                SetAttributeValue("originatingcaseid", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>owner_leads</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>business_unit_leads</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>lead_owning_team</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>lead_owning_user</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Type the pager number for the primary contact for the lead.</para>
        /// <para>Display Name: Pager</para>
        /// </summary>
        [AttributeLogicalName("pager")]
        [DisplayName("Pager")]
        [MaxLength(20)]
        public string Pager {
            get {
                return GetAttributeValue<string>("pager");
            }
            set {
                SetAttributeValue("pager", value);
            }
        }
        
        /// <summary>
        /// <para>lead_parent_account</para>
        /// <para>Display Name: Parent Account for lead</para>
        /// </summary>
        [AttributeLogicalName("parentaccountid")]
        [DisplayName("Parent Account for lead")]
        public EntityReference ParentAccountId {
            get {
                return GetAttributeValue<EntityReference>("parentaccountid");
            }
            set {
                SetAttributeValue("parentaccountid", value);
            }
        }
        
        /// <summary>
        /// <para>lead_parent_contact</para>
        /// <para>Display Name: Parent Contact for lead</para>
        /// </summary>
        [AttributeLogicalName("parentcontactid")]
        [DisplayName("Parent Contact for lead")]
        public EntityReference ParentContactId {
            get {
                return GetAttributeValue<EntityReference>("parentcontactid");
            }
            set {
                SetAttributeValue("parentcontactid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows whether the lead participates in workflow rules.</para>
        /// <para>Display Name: Participates in Workflow</para>
        /// </summary>
        [AttributeLogicalName("participatesinworkflow")]
        [DisplayName("Participates in Workflow")]
        public bool? ParticipatesInWorkflow {
            get {
                return GetAttributeValue<bool?>("participatesinworkflow");
            }
            set {
                SetAttributeValue("participatesinworkflow", value);
            }
        }
        
        /// <summary>
        /// <para>Select the preferred method of contact.</para>
        /// <para>Display Name: Preferred Method of Contact</para>
        /// </summary>
        [AttributeLogicalName("preferredcontactmethodcode")]
        [DisplayName("Preferred Method of Contact")]
        public Lead_PreferredContactMethodCode? PreferredContactMethodCode {
            get {
                return GetOptionSetValue<Lead_PreferredContactMethodCode>("preferredcontactmethodcode");
            }
            set {
                SetOptionSetValue("preferredcontactmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>Combines and shows the lead's first and last names so the full name can be displayed in views and reports.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("fullname")]
        [DisplayName("Name")]
        [MaxLength(160)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("fullname");
            }
        }
        
        /// <summary>
        /// <para>Select the priority so that preferred customers or critical issues are handled quickly.</para>
        /// <para>Display Name: Priority</para>
        /// </summary>
        [AttributeLogicalName("prioritycode")]
        [DisplayName("Priority")]
        public Lead_PriorityCode? PriorityCode {
            get {
                return GetOptionSetValue<Lead_PriorityCode>("prioritycode");
            }
            set {
                SetOptionSetValue("prioritycode", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the process.</para>
        /// <para>Display Name: Process</para>
        /// </summary>
        [AttributeLogicalName("processid")]
        [DisplayName("Process")]
        public Guid? ProcessId {
            get {
                return GetAttributeValue<Guid?>("processid");
            }
            set {
                SetAttributeValue("processid", value);
            }
        }
        
        /// <summary>
        /// <para>Choose whether an individual or a committee will be involved in the  purchase process for the lead.</para>
        /// <para>Display Name: Purchase Process</para>
        /// </summary>
        [AttributeLogicalName("purchaseprocess")]
        [DisplayName("Purchase Process")]
        public purchaseprocess? PurchaseProcess {
            get {
                return GetOptionSetValue<purchaseprocess>("purchaseprocess");
            }
            set {
                SetOptionSetValue("purchaseprocess", value);
            }
        }
        
        /// <summary>
        /// <para>Choose how long the lead will likely take to make the purchase, so the sales team will be aware.</para>
        /// <para>Display Name: Purchase Timeframe</para>
        /// </summary>
        [AttributeLogicalName("purchasetimeframe")]
        [DisplayName("Purchase Timeframe")]
        public purchasetimeframe? PurchaseTimeFrame {
            get {
                return GetOptionSetValue<purchasetimeframe>("purchasetimeframe");
            }
            set {
                SetOptionSetValue("purchasetimeframe", value);
            }
        }
        
        /// <summary>
        /// <para>Type comments about the qualification or scoring of the lead.</para>
        /// <para>Display Name: Qualification Comments</para>
        /// </summary>
        [AttributeLogicalName("qualificationcomments")]
        [DisplayName("Qualification Comments")]
        public string QualificationComments {
            get {
                return GetAttributeValue<string>("qualificationcomments");
            }
            set {
                SetAttributeValue("qualificationcomments", value);
            }
        }
        
        /// <summary>
        /// <para>lead_qualifying_opportunity</para>
        /// <para>Display Name: Qualifying Opportunity</para>
        /// </summary>
        [AttributeLogicalName("qualifyingopportunityid")]
        [DisplayName("Qualifying Opportunity")]
        public EntityReference QualifyingOpportunityId {
            get {
                return GetAttributeValue<EntityReference>("qualifyingopportunityid");
            }
            set {
                SetAttributeValue("qualifyingopportunityid", value);
            }
        }
        
        /// <summary>
        /// <para>CampaignResponse_Lead</para>
        /// <para>Display Name: Related Campaign Response</para>
        /// </summary>
        [AttributeLogicalName("relatedobjectid")]
        [DisplayName("Related Campaign Response")]
        public EntityReference RelatedObjectId {
            get {
                return GetAttributeValue<EntityReference>("relatedobjectid");
            }
            set {
                SetAttributeValue("relatedobjectid", value);
            }
        }
        
        /// <summary>
        /// <para>Type the annual revenue of the company associated with the lead to provide an understanding of the prospect's business.</para>
        /// <para>Display Name: Annual Revenue</para>
        /// </summary>
        [AttributeLogicalName("revenue")]
        [DisplayName("Annual Revenue")]
        public decimal? Revenue {
            get {
                return GetMoneyValue("revenue");
            }
            set {
                SetMoneyValue("revenue", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the Annual Revenue field converted to the system's default base currency. The calculation uses the exchange rate specified in the Currencies area.</para>
        /// <para>Display Name: Annual Revenue (Base)</para>
        /// </summary>
        [AttributeLogicalName("revenue_base")]
        [DisplayName("Annual Revenue (Base)")]
        public decimal? Revenue_Base {
            get {
                return GetMoneyValue("revenue_base");
            }
        }
        
        /// <summary>
        /// <para>Type the Standard Industrial Classification (SIC) code that indicates the lead's primary industry of business for use in marketing segmentation and demographic analysis.</para>
        /// <para>Display Name: SIC Code</para>
        /// </summary>
        [AttributeLogicalName("sic")]
        [DisplayName("SIC Code")]
        [MaxLength(20)]
        public string SIC {
            get {
                return GetAttributeValue<string>("sic");
            }
            set {
                SetAttributeValue("sic", value);
            }
        }
        
        /// <summary>
        /// <para>manualsla_lead</para>
        /// <para>Display Name: SLA</para>
        /// </summary>
        [AttributeLogicalName("slaid")]
        [DisplayName("SLA")]
        public EntityReference SLAId {
            get {
                return GetAttributeValue<EntityReference>("slaid");
            }
            set {
                SetAttributeValue("slaid", value);
            }
        }
        
        /// <summary>
        /// <para>sla_lead</para>
        /// <para>Display Name: Last SLA applied</para>
        /// </summary>
        [AttributeLogicalName("slainvokedid")]
        [DisplayName("Last SLA applied")]
        public EntityReference SLAInvokedId {
            get {
                return GetAttributeValue<EntityReference>("slainvokedid");
            }
        }
        
        /// <summary>
        /// <para>Select the sales stage of this lead to aid the sales team in their efforts to convert this lead to an opportunity.</para>
        /// <para>Display Name: Sales Stage</para>
        /// </summary>
        [AttributeLogicalName("salesstage")]
        [DisplayName("Sales Stage")]
        public lead_salesstage? SalesStage {
            get {
                return GetOptionSetValue<lead_salesstage>("salesstage");
            }
            set {
                SetOptionSetValue("salesstage", value);
            }
        }
        
        /// <summary>
        /// <para>Select the sales process stage for the lead to help determine the probability of the lead converting to an opportunity.</para>
        /// <para>Display Name: Sales Stage Code</para>
        /// </summary>
        [AttributeLogicalName("salesstagecode")]
        [DisplayName("Sales Stage Code")]
        public Lead_SalesStageCode? SalesStageCode {
            get {
                return GetOptionSetValue<Lead_SalesStageCode>("salesstagecode");
            }
            set {
                SetOptionSetValue("salesstagecode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the salutation of the primary contact for this lead to make sure the prospect is addressed correctly in sales calls, email messages, and marketing campaigns.</para>
        /// <para>Display Name: Salutation</para>
        /// </summary>
        [AttributeLogicalName("salutation")]
        [DisplayName("Salutation")]
        [MaxLength(100)]
        public string Salutation {
            get {
                return GetAttributeValue<string>("salutation");
            }
            set {
                SetAttributeValue("salutation", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the date and time of the prospecting follow-up meeting with the lead.</para>
        /// <para>Display Name: Schedule Follow Up (Prospect)</para>
        /// </summary>
        [AttributeLogicalName("schedulefollowup_prospect")]
        [DisplayName("Schedule Follow Up (Prospect)")]
        public DateTime? ScheduleFollowUp_Prospect {
            get {
                return GetAttributeValue<DateTime?>("schedulefollowup_prospect");
            }
            set {
                SetAttributeValue("schedulefollowup_prospect", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the date and time of the qualifying follow-up meeting with the lead.</para>
        /// <para>Display Name: Schedule Follow Up (Qualify)</para>
        /// </summary>
        [AttributeLogicalName("schedulefollowup_qualify")]
        [DisplayName("Schedule Follow Up (Qualify)")]
        public DateTime? ScheduleFollowUp_Qualify {
            get {
                return GetAttributeValue<DateTime?>("schedulefollowup_qualify");
            }
            set {
                SetAttributeValue("schedulefollowup_qualify", value);
            }
        }
        
        /// <summary>
        /// <para>processstage_lead</para>
        /// <para>Display Name: Process Stage</para>
        /// </summary>
        [AttributeLogicalName("stageid")]
        [DisplayName("Process Stage")]
        public Guid? StageId {
            get {
                return GetAttributeValue<Guid?>("stageid");
            }
            set {
                SetAttributeValue("stageid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows whether the lead is open, qualified, or disqualified. Qualified and disqualified leads are read-only and can't be edited unless they are reactivated.</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public LeadState? StateCode {
            get {
                return GetOptionSetValue<LeadState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the lead's status.</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public Lead_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<Lead_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>Type a subject or descriptive name, such as the expected order, company name, or marketing source list, to identify the lead.</para>
        /// <para>Display Name: Topic</para>
        /// </summary>
        [AttributeLogicalName("subject")]
        [DisplayName("Topic")]
        [MaxLength(300)]
        public string Subject {
            get {
                return GetAttributeValue<string>("subject");
            }
            set {
                SetAttributeValue("subject", value);
            }
        }
        
        /// <summary>
        /// <para>Number of users or conversations followed the record</para>
        /// <para>Display Name: TeamsFollowed</para>
        /// </summary>
        [AttributeLogicalName("teamsfollowed")]
        [DisplayName("TeamsFollowed")]
        [Range(-2147483648, 2147483647)]
        public int? TeamsFollowed {
            get {
                return GetAttributeValue<int?>("teamsfollowed");
            }
            set {
                SetAttributeValue("teamsfollowed", value);
            }
        }
        
        /// <summary>
        /// <para>Type the work phone number for the primary contact for the lead.</para>
        /// <para>Display Name: Business Phone</para>
        /// </summary>
        [AttributeLogicalName("telephone1")]
        [DisplayName("Business Phone")]
        [MaxLength(50)]
        public string Telephone1 {
            get {
                return GetAttributeValue<string>("telephone1");
            }
            set {
                SetAttributeValue("telephone1", value);
            }
        }
        
        /// <summary>
        /// <para>Type the home phone number for the primary contact for the lead.</para>
        /// <para>Display Name: Home Phone</para>
        /// </summary>
        [AttributeLogicalName("telephone2")]
        [DisplayName("Home Phone")]
        [MaxLength(50)]
        public string Telephone2 {
            get {
                return GetAttributeValue<string>("telephone2");
            }
            set {
                SetAttributeValue("telephone2", value);
            }
        }
        
        /// <summary>
        /// <para>Type an alternate phone number for the primary contact for the lead.</para>
        /// <para>Display Name: Other Phone</para>
        /// </summary>
        [AttributeLogicalName("telephone3")]
        [DisplayName("Other Phone")]
        [MaxLength(50)]
        public string Telephone3 {
            get {
                return GetAttributeValue<string>("telephone3");
            }
            set {
                SetAttributeValue("telephone3", value);
            }
        }
        
        /// <summary>
        /// <para>Total time spent for emails (read and write) and meetings by me in relation to the lead record.</para>
        /// <para>Display Name: Time Spent by me</para>
        /// </summary>
        [AttributeLogicalName("timespentbymeonemailandmeetings")]
        [DisplayName("Time Spent by me")]
        [MaxLength(1250)]
        public string TimeSpentByMeOnEmailAndMeetings {
            get {
                return GetAttributeValue<string>("timespentbymeonemailandmeetings");
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the local currency for the record to make sure budgets are reported in the correct currency.</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Traversed Path</para>
        /// </summary>
        [AttributeLogicalName("traversedpath")]
        [DisplayName("Traversed Path")]
        [MaxLength(1250)]
        public string TraversedPath {
            get {
                return GetAttributeValue<string>("traversedpath");
            }
            set {
                SetAttributeValue("traversedpath", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version number of the lead.</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Type the website URL for the company associated with this lead.</para>
        /// <para>Display Name: Website</para>
        /// </summary>
        [AttributeLogicalName("websiteurl")]
        [DisplayName("Website")]
        [MaxLength(200)]
        public string WebSiteUrl {
            get {
                return GetAttributeValue<string>("websiteurl");
            }
            set {
                SetAttributeValue("websiteurl", value);
            }
        }
        
        /// <summary>
        /// <para>Type the phonetic spelling of the lead's company name, if the name is specified in Japanese, to make sure the name is pronounced correctly in phone calls with the prospect.</para>
        /// <para>Display Name: Yomi Company Name</para>
        /// </summary>
        [AttributeLogicalName("yomicompanyname")]
        [DisplayName("Yomi Company Name")]
        [MaxLength(100)]
        public string YomiCompanyName {
            get {
                return GetAttributeValue<string>("yomicompanyname");
            }
            set {
                SetAttributeValue("yomicompanyname", value);
            }
        }
        
        /// <summary>
        /// <para>Type the phonetic spelling of the lead's first name, if the name is specified in Japanese, to make sure the name is pronounced correctly in phone calls with the prospect.</para>
        /// <para>Display Name: Yomi First Name</para>
        /// </summary>
        [AttributeLogicalName("yomifirstname")]
        [DisplayName("Yomi First Name")]
        [MaxLength(150)]
        public string YomiFirstName {
            get {
                return GetAttributeValue<string>("yomifirstname");
            }
            set {
                SetAttributeValue("yomifirstname", value);
            }
        }
        
        /// <summary>
        /// <para>Combines and shows the lead's Yomi first and last names so the full phonetic name can be displayed in views and reports.</para>
        /// <para>Display Name: Yomi Full Name</para>
        /// </summary>
        [AttributeLogicalName("yomifullname")]
        [DisplayName("Yomi Full Name")]
        [MaxLength(450)]
        public string YomiFullName {
            get {
                return GetAttributeValue<string>("yomifullname");
            }
        }
        
        /// <summary>
        /// <para>Type the phonetic spelling of the lead's last name, if the name is specified in Japanese, to make sure the name is pronounced correctly in phone calls with the prospect.</para>
        /// <para>Display Name: Yomi Last Name</para>
        /// </summary>
        [AttributeLogicalName("yomilastname")]
        [DisplayName("Yomi Last Name")]
        [MaxLength(150)]
        public string YomiLastName {
            get {
                return GetAttributeValue<string>("yomilastname");
            }
            set {
                SetAttributeValue("yomilastname", value);
            }
        }
        
        /// <summary>
        /// <para>Type the phonetic spelling of the lead's middle name, if the name is specified in Japanese, to make sure the name is pronounced correctly in phone calls with the prospect.</para>
        /// <para>Display Name: Yomi Middle Name</para>
        /// </summary>
        [AttributeLogicalName("yomimiddlename")]
        [DisplayName("Yomi Middle Name")]
        [MaxLength(150)]
        public string YomiMiddleName {
            get {
                return GetAttributeValue<string>("yomimiddlename");
            }
            set {
                SetAttributeValue("yomimiddlename", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Anonymized</para>
        /// </summary>
        [AttributeLogicalName("dg_anonymized")]
        [DisplayName("Anonymized")]
        public DateTime? dg_Anonymized {
            get {
                return GetAttributeValue<DateTime?>("dg_anonymized");
            }
            set {
                SetAttributeValue("dg_anonymized", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: (Deprecated) Lead Grade</para>
        /// </summary>
        [AttributeLogicalName("msdyn_leadgrade")]
        [DisplayName("(Deprecated) Lead Grade")]
        public msdyn_leadgradeoptset? msdyn_LeadGrade {
            get {
                return GetOptionSetValue<msdyn_leadgradeoptset>("msdyn_leadgrade");
            }
            set {
                SetOptionSetValue("msdyn_leadgrade", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: (Deprecated) Lead Score</para>
        /// </summary>
        [AttributeLogicalName("msdyn_leadscore")]
        [DisplayName("(Deprecated) Lead Score")]
        [Range(-2147483648, 2147483647)]
        public int? msdyn_LeadScore {
            get {
                return GetAttributeValue<int?>("msdyn_leadscore");
            }
            set {
                SetAttributeValue("msdyn_leadscore", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: (Deprecated) Lead Score Trend</para>
        /// </summary>
        [AttributeLogicalName("msdyn_leadscoretrend")]
        [DisplayName("(Deprecated) Lead Score Trend")]
        public msdyn_leadscoretrendoptset? msdyn_LeadScoreTrend {
            get {
                return GetOptionSetValue<msdyn_leadscoretrendoptset>("msdyn_leadscoretrend");
            }
            set {
                SetOptionSetValue("msdyn_leadscoretrend", value);
            }
        }
        
        /// <summary>
        /// <para>Predictive score</para>
        /// <para>Display Name: Predictive Score</para>
        /// </summary>
        [AttributeLogicalName("msdyn_predictivescoreid")]
        [DisplayName("Predictive Score")]
        public EntityReference msdyn_PredictiveScoreId {
            get {
                return GetAttributeValue<EntityReference>("msdyn_predictivescoreid");
            }
            set {
                SetAttributeValue("msdyn_predictivescoreid", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: (Deprecated) Score History</para>
        /// </summary>
        [AttributeLogicalName("msdyn_scorehistory")]
        [DisplayName("(Deprecated) Score History")]
        public string msdyn_ScoreHistory {
            get {
                return GetAttributeValue<string>("msdyn_scorehistory");
            }
            set {
                SetAttributeValue("msdyn_scorehistory", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: (Deprecated) Score Reasons</para>
        /// </summary>
        [AttributeLogicalName("msdyn_scorereasons")]
        [DisplayName("(Deprecated) Score Reasons")]
        public string msdyn_ScoreReasons {
            get {
                return GetAttributeValue<string>("msdyn_scorereasons");
            }
            set {
                SetAttributeValue("msdyn_scorereasons", value);
            }
        }
        
        /// <summary>
        /// <para>Describes whether lead is opted out or not</para>
        /// <para>Display Name: GDPR Optout</para>
        /// </summary>
        [AttributeLogicalName("msdyn_gdproptout")]
        [DisplayName("GDPR Optout")]
        public bool? msdyn_gdproptout {
            get {
                return GetAttributeValue<bool?>("msdyn_gdproptout");
            }
            set {
                SetAttributeValue("msdyn_gdproptout", value);
            }
        }
        
        /// <summary>
        /// <para>LeadKPIId</para>
        /// <para>Display Name: KPI</para>
        /// </summary>
        [AttributeLogicalName("msdyn_leadkpiid")]
        [DisplayName("KPI")]
        public EntityReference msdyn_leadkpiid {
            get {
                return GetAttributeValue<EntityReference>("msdyn_leadkpiid");
            }
            set {
                SetAttributeValue("msdyn_leadkpiid", value);
            }
        }
        
        /// <summary>
        /// <para>Whether the Opportunity created when qualifying this Lead is for an Item- based or a Work-based sale</para>
        /// <para>Display Name: Type</para>
        /// </summary>
        [AttributeLogicalName("msdyn_ordertype")]
        [DisplayName("Type")]
        public Lead_msdyn_ordertype? msdyn_ordertype {
            get {
                return GetOptionSetValue<Lead_msdyn_ordertype>("msdyn_ordertype");
            }
            set {
                SetOptionSetValue("msdyn_ordertype", value);
            }
        }
        
        /// <summary>
        /// <para>Result of the assignment rule process</para>
        /// <para>Display Name: Assignment Rule Result</para>
        /// </summary>
        [AttributeLogicalName("msdyn_salesassignmentresult")]
        [DisplayName("Assignment Rule Result")]
        public Lead_msdyn_salesassignmentresult? msdyn_salesassignmentresult {
            get {
                return GetOptionSetValue<Lead_msdyn_salesassignmentresult>("msdyn_salesassignmentresult");
            }
            set {
                SetOptionSetValue("msdyn_salesassignmentresult", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for Segment associated with Lead.</para>
        /// <para>Display Name: Segment Id</para>
        /// </summary>
        [AttributeLogicalName("msdyn_segmentid")]
        [DisplayName("Segment Id")]
        public EntityReference msdyn_segmentid {
            get {
                return GetAttributeValue<EntityReference>("msdyn_segmentid");
            }
            set {
                SetAttributeValue("msdyn_segmentid", value);
            }
        }
        
        [RelationshipSchemaName("CampaignActivity_Leads")]
        public IEnumerable<CampaignActivity> CampaignActivity_Leads {
            get {
                return GetRelatedEntities<CampaignActivity>("CampaignActivity_Leads", null);
            }
            set {
                SetRelatedEntities("CampaignActivity_Leads", null, value);
            }
        }
        
        [AttributeLogicalName("relatedobjectid")]
        [RelationshipSchemaName("CampaignResponse_Lead")]
        public CampaignResponse CampaignResponse_Lead {
            get {
                return GetRelatedEntity<CampaignResponse>("CampaignResponse_Lead", null);
            }
            set {
                SetRelatedEntity("CampaignResponse_Lead", null, value);
            }
        }
        
        [RelationshipSchemaName("CreatedLead_BulkOperationLogs")]
        public IEnumerable<BulkOperationLog> CreatedLead_BulkOperationLogs {
            get {
                return GetRelatedEntities<BulkOperationLog>("CreatedLead_BulkOperationLogs", null);
            }
            set {
                SetRelatedEntities("CreatedLead_BulkOperationLogs", null, value);
            }
        }
        
        [RelationshipSchemaName("Lead_ActivityPointers")]
        public IEnumerable<ActivityPointer> Lead_ActivityPointers {
            get {
                return GetRelatedEntities<ActivityPointer>("Lead_ActivityPointers", null);
            }
            set {
                SetRelatedEntities("Lead_ActivityPointers", null, value);
            }
        }
        
        [RelationshipSchemaName("Lead_Appointments")]
        public IEnumerable<Appointment> Lead_Appointments {
            get {
                return GetRelatedEntities<Appointment>("Lead_Appointments", null);
            }
            set {
                SetRelatedEntities("Lead_Appointments", null, value);
            }
        }
        
        [RelationshipSchemaName("Lead_Email_EmailSender")]
        public IEnumerable<Email> Lead_Email_EmailSender {
            get {
                return GetRelatedEntities<Email>("Lead_Email_EmailSender", null);
            }
            set {
                SetRelatedEntities("Lead_Email_EmailSender", null, value);
            }
        }
        
        [RelationshipSchemaName("Lead_Emails")]
        public IEnumerable<Email> Lead_Emails {
            get {
                return GetRelatedEntities<Email>("Lead_Emails", null);
            }
            set {
                SetRelatedEntities("Lead_Emails", null, value);
            }
        }
        
        [RelationshipSchemaName("Lead_Faxes")]
        public IEnumerable<Fax> Lead_Faxes {
            get {
                return GetRelatedEntities<Fax>("Lead_Faxes", null);
            }
            set {
                SetRelatedEntities("Lead_Faxes", null, value);
            }
        }
        
        [RelationshipSchemaName("Lead_Letters")]
        public IEnumerable<Letter> Lead_Letters {
            get {
                return GetRelatedEntities<Letter>("Lead_Letters", null);
            }
            set {
                SetRelatedEntities("Lead_Letters", null, value);
            }
        }
        
        [RelationshipSchemaName("Lead_Phonecalls")]
        public IEnumerable<PhoneCall> Lead_Phonecalls {
            get {
                return GetRelatedEntities<PhoneCall>("Lead_Phonecalls", null);
            }
            set {
                SetRelatedEntities("Lead_Phonecalls", null, value);
            }
        }
        
        [RelationshipSchemaName("Lead_RecurringAppointmentMasters")]
        public IEnumerable<RecurringAppointmentMaster> Lead_RecurringAppointmentMasters {
            get {
                return GetRelatedEntities<RecurringAppointmentMaster>("Lead_RecurringAppointmentMasters", null);
            }
            set {
                SetRelatedEntities("Lead_RecurringAppointmentMasters", null, value);
            }
        }
        
        [RelationshipSchemaName("Lead_ServiceAppointments")]
        public IEnumerable<ServiceAppointment> Lead_ServiceAppointments {
            get {
                return GetRelatedEntities<ServiceAppointment>("Lead_ServiceAppointments", null);
            }
            set {
                SetRelatedEntities("Lead_ServiceAppointments", null, value);
            }
        }
        
        [RelationshipSchemaName("Lead_SharepointDocumentLocation")]
        public IEnumerable<SharePointDocumentLocation> Lead_SharepointDocumentLocation {
            get {
                return GetRelatedEntities<SharePointDocumentLocation>("Lead_SharepointDocumentLocation", null);
            }
            set {
                SetRelatedEntities("Lead_SharepointDocumentLocation", null, value);
            }
        }
        
        [RelationshipSchemaName("Lead_SocialActivities")]
        public IEnumerable<SocialActivity> Lead_SocialActivities {
            get {
                return GetRelatedEntities<SocialActivity>("Lead_SocialActivities", null);
            }
            set {
                SetRelatedEntities("Lead_SocialActivities", null, value);
            }
        }
        
        [RelationshipSchemaName("Lead_SyncErrors")]
        public IEnumerable<SyncError> Lead_SyncErrors {
            get {
                return GetRelatedEntities<SyncError>("Lead_SyncErrors", null);
            }
            set {
                SetRelatedEntities("Lead_SyncErrors", null, value);
            }
        }
        
        [RelationshipSchemaName("Lead_Tasks")]
        public IEnumerable<Task> Lead_Tasks {
            get {
                return GetRelatedEntities<Task>("Lead_Tasks", null);
            }
            set {
                SetRelatedEntities("Lead_Tasks", null, value);
            }
        }
        
        [AttributeLogicalName("originatingcaseid")]
        [RelationshipSchemaName("OriginatingCase_Lead")]
        public Incident OriginatingCase_Lead {
            get {
                return GetRelatedEntity<Incident>("OriginatingCase_Lead", null);
            }
            set {
                SetRelatedEntity("OriginatingCase_Lead", null, value);
            }
        }
        
        [RelationshipSchemaName("lead_master_lead", EntityRole.Referenced)]
        public IEnumerable<Lead> Referencedlead_master_lead {
            get {
                return GetRelatedEntities<Lead>("lead_master_lead", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("lead_master_lead", EntityRole.Referenced, value);
            }
        }
        
        [AttributeLogicalName("masterid")]
        [RelationshipSchemaName("lead_master_lead", EntityRole.Referencing)]
        public Lead Referencinglead_master_lead {
            get {
                return GetRelatedEntity<Lead>("lead_master_lead", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("lead_master_lead", EntityRole.Referencing, value);
            }
        }
        
        [RelationshipSchemaName("SourceLead_BulkOperationLogs")]
        public IEnumerable<BulkOperationLog> SourceLead_BulkOperationLogs {
            get {
                return GetRelatedEntities<BulkOperationLog>("SourceLead_BulkOperationLogs", null);
            }
            set {
                SetRelatedEntities("SourceLead_BulkOperationLogs", null, value);
            }
        }
        
        [RelationshipSchemaName("account_originating_lead")]
        public IEnumerable<Account> account_originating_lead {
            get {
                return GetRelatedEntities<Account>("account_originating_lead", null);
            }
            set {
                SetRelatedEntities("account_originating_lead", null, value);
            }
        }
        
        [RelationshipSchemaName("accountleads_association")]
        public IEnumerable<Account> accountleads_association {
            get {
                return GetRelatedEntities<Account>("accountleads_association", null);
            }
            set {
                SetRelatedEntities("accountleads_association", null, value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_leads")]
        public BusinessUnit business_unit_leads {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_leads", null);
            }
            set {
                SetRelatedEntity("business_unit_leads", null, value);
            }
        }
        
        [AttributeLogicalName("campaignid")]
        [RelationshipSchemaName("campaign_leads")]
        public Campaign campaign_leads {
            get {
                return GetRelatedEntity<Campaign>("campaign_leads", null);
            }
            set {
                SetRelatedEntity("campaign_leads", null, value);
            }
        }
        
        [RelationshipSchemaName("contact_originating_lead")]
        public IEnumerable<Contact> contact_originating_lead {
            get {
                return GetRelatedEntities<Contact>("contact_originating_lead", null);
            }
            set {
                SetRelatedEntities("contact_originating_lead", null, value);
            }
        }
        
        [RelationshipSchemaName("contactleads_association")]
        public IEnumerable<Contact> contactleads_association {
            get {
                return GetRelatedEntities<Contact>("contactleads_association", null);
            }
            set {
                SetRelatedEntities("contactleads_association", null, value);
            }
        }
        
        [RelationshipSchemaName("lead_CampaignResponses")]
        public IEnumerable<CampaignResponse> lead_CampaignResponses {
            get {
                return GetRelatedEntities<CampaignResponse>("lead_CampaignResponses", null);
            }
            set {
                SetRelatedEntities("lead_CampaignResponses", null, value);
            }
        }
        
        [RelationshipSchemaName("lead_IncidentResolutions")]
        public IEnumerable<IncidentResolution> lead_IncidentResolutions {
            get {
                return GetRelatedEntities<IncidentResolution>("lead_IncidentResolutions", null);
            }
            set {
                SetRelatedEntities("lead_IncidentResolutions", null, value);
            }
        }
        
        [RelationshipSchemaName("lead_OpportunityCloses")]
        public IEnumerable<OpportunityClose> lead_OpportunityCloses {
            get {
                return GetRelatedEntities<OpportunityClose>("lead_OpportunityCloses", null);
            }
            set {
                SetRelatedEntities("lead_OpportunityCloses", null, value);
            }
        }
        
        [RelationshipSchemaName("lead_Teams")]
        public IEnumerable<Team> lead_Teams {
            get {
                return GetRelatedEntities<Team>("lead_Teams", null);
            }
            set {
                SetRelatedEntities("lead_Teams", null, value);
            }
        }
        
        [RelationshipSchemaName("lead_activity_parties")]
        public IEnumerable<ActivityParty> lead_activity_parties {
            get {
                return GetRelatedEntities<ActivityParty>("lead_activity_parties", null);
            }
            set {
                SetRelatedEntities("lead_activity_parties", null, value);
            }
        }
        
        [RelationshipSchemaName("lead_connections1")]
        public IEnumerable<Connection> lead_connections1 {
            get {
                return GetRelatedEntities<Connection>("lead_connections1", null);
            }
            set {
                SetRelatedEntities("lead_connections1", null, value);
            }
        }
        
        [RelationshipSchemaName("lead_connections2")]
        public IEnumerable<Connection> lead_connections2 {
            get {
                return GetRelatedEntities<Connection>("lead_connections2", null);
            }
            set {
                SetRelatedEntities("lead_connections2", null, value);
            }
        }
        
        [AttributeLogicalName("customerid")]
        [RelationshipSchemaName("lead_customer_accounts")]
        public Account lead_customer_accounts {
            get {
                return GetRelatedEntity<Account>("lead_customer_accounts", null);
            }
            set {
                SetRelatedEntity("lead_customer_accounts", null, value);
            }
        }
        
        [AttributeLogicalName("customerid")]
        [RelationshipSchemaName("lead_customer_contacts")]
        public Contact lead_customer_contacts {
            get {
                return GetRelatedEntity<Contact>("lead_customer_contacts", null);
            }
            set {
                SetRelatedEntity("lead_customer_contacts", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("lead_owning_team")]
        public Team lead_owning_team {
            get {
                return GetRelatedEntity<Team>("lead_owning_team", null);
            }
            set {
                SetRelatedEntity("lead_owning_team", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("lead_owning_user")]
        public SystemUser lead_owning_user {
            get {
                return GetRelatedEntity<SystemUser>("lead_owning_user", null);
            }
            set {
                SetRelatedEntity("lead_owning_user", null, value);
            }
        }
        
        [AttributeLogicalName("parentaccountid")]
        [RelationshipSchemaName("lead_parent_account")]
        public Account lead_parent_account {
            get {
                return GetRelatedEntity<Account>("lead_parent_account", null);
            }
            set {
                SetRelatedEntity("lead_parent_account", null, value);
            }
        }
        
        [AttributeLogicalName("parentcontactid")]
        [RelationshipSchemaName("lead_parent_contact")]
        public Contact lead_parent_contact {
            get {
                return GetRelatedEntity<Contact>("lead_parent_contact", null);
            }
            set {
                SetRelatedEntity("lead_parent_contact", null, value);
            }
        }
        
        [AttributeLogicalName("qualifyingopportunityid")]
        [RelationshipSchemaName("lead_qualifying_opportunity")]
        public Opportunity lead_qualifying_opportunity {
            get {
                return GetRelatedEntity<Opportunity>("lead_qualifying_opportunity", null);
            }
            set {
                SetRelatedEntity("lead_qualifying_opportunity", null, value);
            }
        }
        
        [RelationshipSchemaName("listlead_association")]
        public IEnumerable<List> listlead_association {
            get {
                return GetRelatedEntities<List>("listlead_association", null);
            }
            set {
                SetRelatedEntities("listlead_association", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_lead_createdonbehalfby")]
        public SystemUser lk_lead_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_lead_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_lead_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_lead_modifiedonbehalfby")]
        public SystemUser lk_lead_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_lead_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_lead_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_leadbase_createdby")]
        public SystemUser lk_leadbase_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_leadbase_createdby", null);
            }
            set {
                SetRelatedEntity("lk_leadbase_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_leadbase_modifiedby")]
        public SystemUser lk_leadbase_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_leadbase_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_leadbase_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("slaid")]
        [RelationshipSchemaName("manualsla_lead")]
        public SLA manualsla_lead {
            get {
                return GetRelatedEntity<SLA>("manualsla_lead", null);
            }
            set {
                SetRelatedEntity("manualsla_lead", null, value);
            }
        }
        
        [RelationshipSchemaName("opportunity_originating_lead")]
        public IEnumerable<Opportunity> opportunity_originating_lead {
            get {
                return GetRelatedEntities<Opportunity>("opportunity_originating_lead", null);
            }
            set {
                SetRelatedEntities("opportunity_originating_lead", null, value);
            }
        }
        
        [AttributeLogicalName("slainvokedid")]
        [RelationshipSchemaName("sla_lead")]
        public SLA sla_lead {
            get {
                return GetRelatedEntity<SLA>("sla_lead", null);
            }
            set {
                SetRelatedEntity("sla_lead", null, value);
            }
        }
        
        [AttributeLogicalName("transactioncurrencyid")]
        [RelationshipSchemaName("transactioncurrency_lead")]
        public TransactionCurrency transactioncurrency_lead {
            get {
                return GetRelatedEntity<TransactionCurrency>("transactioncurrency_lead", null);
            }
            set {
                SetRelatedEntity("transactioncurrency_lead", null, value);
            }
        }
        
        public static Lead Retrieve(IOrganizationService service, Guid id, params Expression<Func<Lead,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Activity that tracks the delivery of a letter. The activity can contain the electronic copy of the letter.</para>
    /// <para>Display Name: Letter</para>
    /// </summary>
    [EntityLogicalName("letter")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class Letter : ExtendedEntity<LetterState, Letter_StatusCode> {
        
        public const string EntityLogicalName = "letter";
        
        public const int EntityTypeCode = 4207;
        
        public Letter() : 
                base(EntityLogicalName) {
        }
        
        public Letter(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("subject");
            }
        }
        
        [AttributeLogicalName("activityid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("activityid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the letter activity.</para>
        /// <para>Display Name: Letter</para>
        /// </summary>
        [AttributeLogicalName("activityid")]
        [DisplayName("Letter")]
        public Guid? ActivityId {
            get {
                return GetAttributeValue<Guid?>("activityid");
            }
            set {
                SetId("activityid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the type of activity.</para>
        /// <para>Display Name: Activity Type</para>
        /// </summary>
        [AttributeLogicalName("activitytypecode")]
        [DisplayName("Activity Type")]
        public string ActivityTypeCode {
            get {
                return GetAttributeValue<string>("activitytypecode");
            }
        }
        
        /// <summary>
        /// <para>Type the number of minutes spent creating and sending the letter. The duration is used in reporting.</para>
        /// <para>Display Name: Duration</para>
        /// </summary>
        [AttributeLogicalName("actualdurationminutes")]
        [DisplayName("Duration")]
        [Range(0, 2147483647)]
        public int? ActualDurationMinutes {
            get {
                return GetAttributeValue<int?>("actualdurationminutes");
            }
            set {
                SetAttributeValue("actualdurationminutes", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the actual end date and time of the letter. By default, it displays the date and time when the activity was completed or canceled, but can be edited to capture the actual time to create and send the letter.</para>
        /// <para>Display Name: Actual End</para>
        /// </summary>
        [AttributeLogicalName("actualend")]
        [DisplayName("Actual End")]
        public DateTime? ActualEnd {
            get {
                return GetAttributeValue<DateTime?>("actualend");
            }
            set {
                SetAttributeValue("actualend", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the actual start date and time for the letter. By default, it displays the date and time when the activity was created, but can be edited to capture the actual time to create and send the letter.</para>
        /// <para>Display Name: Actual Start</para>
        /// </summary>
        [AttributeLogicalName("actualstart")]
        [DisplayName("Actual Start")]
        public DateTime? ActualStart {
            get {
                return GetAttributeValue<DateTime?>("actualstart");
            }
            set {
                SetAttributeValue("actualstart", value);
            }
        }
        
        /// <summary>
        /// <para>Type the complete recipient address for the letter to ensure timely delivery.</para>
        /// <para>Display Name: Address</para>
        /// </summary>
        [AttributeLogicalName("address")]
        [DisplayName("Address")]
        [MaxLength(200)]
        public string Address {
            get {
                return GetAttributeValue<string>("address");
            }
            set {
                SetAttributeValue("address", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the recipients that are included in the letter distribution, but are not displayed to other recipients.</para>
        /// <para>Display Name: Bcc</para>
        /// </summary>
        [AttributeLogicalName("bcc")]
        [DisplayName("Bcc")]
        public IEnumerable<ActivityParty> Bcc {
            get {
                return GetEntityCollection<ActivityParty>("bcc");
            }
            set {
                SetEntityCollection("bcc", value);
            }
        }
        
        /// <summary>
        /// <para>Type a category to identify the letter type, such as sales offer or past due notice, to tie the letter to a business group or function.</para>
        /// <para>Display Name: Category</para>
        /// </summary>
        [AttributeLogicalName("category")]
        [DisplayName("Category")]
        [MaxLength(250)]
        public string Category {
            get {
                return GetAttributeValue<string>("category");
            }
            set {
                SetAttributeValue("category", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the recipients that should be copied on the letter.</para>
        /// <para>Display Name: Cc</para>
        /// </summary>
        [AttributeLogicalName("cc")]
        [DisplayName("Cc")]
        public IEnumerable<ActivityParty> Cc {
            get {
                return GetEntityCollection<ActivityParty>("cc");
            }
            set {
                SetEntityCollection("cc", value);
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record on behalf of another user.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Type the letter body or additional information to describe the letter, such as the primary message or the products and services described.</para>
        /// <para>Display Name: Description</para>
        /// </summary>
        [AttributeLogicalName("description")]
        [DisplayName("Description")]
        public string Description {
            get {
                return GetAttributeValue<string>("description");
            }
            set {
                SetAttributeValue("description", value);
            }
        }
        
        /// <summary>
        /// <para>Select the direction of the letter as incoming or outbound.</para>
        /// <para>Display Name: Direction</para>
        /// </summary>
        [AttributeLogicalName("directioncode")]
        [DisplayName("Direction")]
        public bool? DirectionCode {
            get {
                return GetAttributeValue<bool?>("directioncode");
            }
            set {
                SetAttributeValue("directioncode", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("Exchange Rate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Enter the account, contact, lead, or user who sent the letter.</para>
        /// <para>Display Name: From</para>
        /// </summary>
        [AttributeLogicalName("from")]
        [DisplayName("From")]
        public IEnumerable<ActivityParty> From {
            get {
                return GetEntityCollection<ActivityParty>("from");
            }
            set {
                SetEntityCollection("from", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the data import or data migration that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Shows whether the letter activity was billed as part of resolving a case.</para>
        /// <para>Display Name: Is Billed</para>
        /// </summary>
        [AttributeLogicalName("isbilled")]
        [DisplayName("Is Billed")]
        public bool? IsBilled {
            get {
                return GetAttributeValue<bool?>("isbilled");
            }
            set {
                SetAttributeValue("isbilled", value);
            }
        }
        
        /// <summary>
        /// <para>Shows whether the activity is a regular activity type or event type.</para>
        /// <para>Display Name: Is Regular Activity</para>
        /// </summary>
        [AttributeLogicalName("isregularactivity")]
        [DisplayName("Is Regular Activity")]
        public bool? IsRegularActivity {
            get {
                return GetAttributeValue<bool?>("isregularactivity");
            }
        }
        
        /// <summary>
        /// <para>Shows whether the letter activity was created by a workflow rule.</para>
        /// <para>Display Name: Is Workflow Created</para>
        /// </summary>
        [AttributeLogicalName("isworkflowcreated")]
        [DisplayName("Is Workflow Created")]
        public bool? IsWorkflowCreated {
            get {
                return GetAttributeValue<bool?>("isworkflowcreated");
            }
            set {
                SetAttributeValue("isworkflowcreated", value);
            }
        }
        
        /// <summary>
        /// <para>Contains the date and time stamp of the last on hold time.</para>
        /// <para>Display Name: Last On Hold Time</para>
        /// </summary>
        [AttributeLogicalName("lastonholdtime")]
        [DisplayName("Last On Hold Time")]
        public DateTime? LastOnHoldTime {
            get {
                return GetAttributeValue<DateTime?>("lastonholdtime");
            }
            set {
                SetAttributeValue("lastonholdtime", value);
            }
        }
        
        /// <summary>
        /// <para>Shows who last updated the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Shows who last updated the record on behalf of another user.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Shows how long, in minutes, that the record was on hold.</para>
        /// <para>Display Name: On Hold Time (Minutes)</para>
        /// </summary>
        [AttributeLogicalName("onholdtime")]
        [DisplayName("On Hold Time (Minutes)")]
        [Range(-2147483648, 2147483647)]
        public int? OnHoldTime {
            get {
                return GetAttributeValue<int?>("onholdtime");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the user or team who is assigned to manage the record. This field is updated every time the record is assigned to a different user.</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the business unit that owns the letter activity.</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the team that owns the letter activity.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user that owns the letter activity.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Type a short description about the objective or primary topic of the letter.</para>
        /// <para>Display Name: Subject</para>
        /// </summary>
        [AttributeLogicalName("subject")]
        [DisplayName("Subject")]
        [MaxLength(200)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("subject");
            }
            set {
                SetAttributeValue("subject", value);
            }
        }
        
        /// <summary>
        /// <para>Select the priority so that preferred customers or critical issues are handled quickly.</para>
        /// <para>Display Name: Priority</para>
        /// </summary>
        [AttributeLogicalName("prioritycode")]
        [DisplayName("Priority")]
        public Letter_PriorityCode? PriorityCode {
            get {
                return GetOptionSetValue<Letter_PriorityCode>("prioritycode");
            }
            set {
                SetOptionSetValue("prioritycode", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the process.</para>
        /// <para>Display Name: Process</para>
        /// </summary>
        [AttributeLogicalName("processid")]
        [DisplayName("Process")]
        public Guid? ProcessId {
            get {
                return GetAttributeValue<Guid?>("processid");
            }
            set {
                SetAttributeValue("processid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the object with which the letter activity is associated.</para>
        /// <para>Display Name: Regarding</para>
        /// </summary>
        [AttributeLogicalName("regardingobjectid")]
        [DisplayName("Regarding")]
        public EntityReference RegardingObjectId {
            get {
                return GetAttributeValue<EntityReference>("regardingobjectid");
            }
            set {
                SetAttributeValue("regardingobjectid", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the service level agreement (SLA) that you want to apply to the Letter record.</para>
        /// <para>Display Name: SLA</para>
        /// </summary>
        [AttributeLogicalName("slaid")]
        [DisplayName("SLA")]
        public EntityReference SLAId {
            get {
                return GetAttributeValue<EntityReference>("slaid");
            }
            set {
                SetAttributeValue("slaid", value);
            }
        }
        
        /// <summary>
        /// <para>Last SLA that was applied to this Letter. This field is for internal use only.</para>
        /// <para>Display Name: Last SLA applied</para>
        /// </summary>
        [AttributeLogicalName("slainvokedid")]
        [DisplayName("Last SLA applied")]
        public EntityReference SLAInvokedId {
            get {
                return GetAttributeValue<EntityReference>("slainvokedid");
            }
        }
        
        /// <summary>
        /// <para>Scheduled duration of the letter activity, specified in minutes.</para>
        /// <para>Display Name: Scheduled Duration</para>
        /// </summary>
        [AttributeLogicalName("scheduleddurationminutes")]
        [DisplayName("Scheduled Duration")]
        [Range(0, 2147483647)]
        public int? ScheduledDurationMinutes {
            get {
                return GetAttributeValue<int?>("scheduleddurationminutes");
            }
        }
        
        /// <summary>
        /// <para>Enter the expected due date and time.</para>
        /// <para>Display Name: Due Date</para>
        /// </summary>
        [AttributeLogicalName("scheduledend")]
        [DisplayName("Due Date")]
        public DateTime? ScheduledEnd {
            get {
                return GetAttributeValue<DateTime?>("scheduledend");
            }
            set {
                SetAttributeValue("scheduledend", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the expected due date and time.</para>
        /// <para>Display Name: Start Date</para>
        /// </summary>
        [AttributeLogicalName("scheduledstart")]
        [DisplayName("Start Date")]
        public DateTime? ScheduledStart {
            get {
                return GetAttributeValue<DateTime?>("scheduledstart");
            }
            set {
                SetAttributeValue("scheduledstart", value);
            }
        }
        
        /// <summary>
        /// <para>service_letters</para>
        /// <para>Display Name: Service</para>
        /// </summary>
        [AttributeLogicalName("serviceid")]
        [DisplayName("Service")]
        public EntityReference ServiceId {
            get {
                return GetAttributeValue<EntityReference>("serviceid");
            }
            set {
                SetAttributeValue("serviceid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time by which the activities are sorted.</para>
        /// <para>Display Name: Sort Date</para>
        /// </summary>
        [AttributeLogicalName("sortdate")]
        [DisplayName("Sort Date")]
        public DateTime? SortDate {
            get {
                return GetAttributeValue<DateTime?>("sortdate");
            }
            set {
                SetAttributeValue("sortdate", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the stage.</para>
        /// <para>Display Name: (Deprecated) Process Stage</para>
        /// </summary>
        [AttributeLogicalName("stageid")]
        [DisplayName("(Deprecated) Process Stage")]
        public Guid? StageId {
            get {
                return GetAttributeValue<Guid?>("stageid");
            }
            set {
                SetAttributeValue("stageid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows whether the letter is open, completed, or canceled. Completed and canceled letters are read-only and can't be edited.</para>
        /// <para>Display Name: Activity Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Activity Status")]
        public LetterState? StateCode {
            get {
                return GetOptionSetValue<LetterState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the letter's status.</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public Letter_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<Letter_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>Type a subcategory to identify the letter type and relate the activity to a specific product, sales region, business group, or other function.</para>
        /// <para>Display Name: Sub-Category</para>
        /// </summary>
        [AttributeLogicalName("subcategory")]
        [DisplayName("Sub-Category")]
        [MaxLength(250)]
        public string Subcategory {
            get {
                return GetAttributeValue<string>("subcategory");
            }
            set {
                SetAttributeValue("subcategory", value);
            }
        }
        
        /// <summary>
        /// <para>Type a short description about the objective or primary topic of the letter.</para>
        /// <para>Display Name: Subject</para>
        /// </summary>
        [AttributeLogicalName("subject")]
        [DisplayName("Subject")]
        [MaxLength(200)]
        public string Subject {
            get {
                return GetAttributeValue<string>("subject");
            }
            set {
                SetAttributeValue("subject", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Subscription</para>
        /// </summary>
        [AttributeLogicalName("subscriptionid")]
        [DisplayName("Subscription")]
        public Guid? SubscriptionId {
            get {
                return GetAttributeValue<Guid?>("subscriptionid");
            }
            set {
                SetAttributeValue("subscriptionid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the account, contact, lead, or user recipients for the letter.</para>
        /// <para>Display Name: To</para>
        /// </summary>
        [AttributeLogicalName("to")]
        [DisplayName("To")]
        public IEnumerable<ActivityParty> To {
            get {
                return GetEntityCollection<ActivityParty>("to");
            }
            set {
                SetEntityCollection("to", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the local currency for the record to make sure budgets are reported in the correct currency.</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: (Deprecated) Traversed Path</para>
        /// </summary>
        [AttributeLogicalName("traversedpath")]
        [DisplayName("(Deprecated) Traversed Path")]
        [MaxLength(1250)]
        public string TraversedPath {
            get {
                return GetAttributeValue<string>("traversedpath");
            }
            set {
                SetAttributeValue("traversedpath", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version number of the letter.</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Account_Letters")]
        public Account Account_Letters {
            get {
                return GetRelatedEntity<Account>("Account_Letters", null);
            }
            set {
                SetRelatedEntity("Account_Letters", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("CampaignActivity_Letters")]
        public CampaignActivity CampaignActivity_Letters {
            get {
                return GetRelatedEntity<CampaignActivity>("CampaignActivity_Letters", null);
            }
            set {
                SetRelatedEntity("CampaignActivity_Letters", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Campaign_Letters")]
        public Campaign Campaign_Letters {
            get {
                return GetRelatedEntity<Campaign>("Campaign_Letters", null);
            }
            set {
                SetRelatedEntity("Campaign_Letters", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Contact_Letters")]
        public Contact Contact_Letters {
            get {
                return GetRelatedEntity<Contact>("Contact_Letters", null);
            }
            set {
                SetRelatedEntity("Contact_Letters", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Contract_Letters")]
        public Contract Contract_Letters {
            get {
                return GetRelatedEntity<Contract>("Contract_Letters", null);
            }
            set {
                SetRelatedEntity("Contract_Letters", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Incident_Letters")]
        public Incident Incident_Letters {
            get {
                return GetRelatedEntity<Incident>("Incident_Letters", null);
            }
            set {
                SetRelatedEntity("Incident_Letters", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Invoice_Letters")]
        public Invoice Invoice_Letters {
            get {
                return GetRelatedEntity<Invoice>("Invoice_Letters", null);
            }
            set {
                SetRelatedEntity("Invoice_Letters", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("KnowledgeArticle_Letters")]
        public KnowledgeArticle KnowledgeArticle_Letters {
            get {
                return GetRelatedEntity<KnowledgeArticle>("KnowledgeArticle_Letters", null);
            }
            set {
                SetRelatedEntity("KnowledgeArticle_Letters", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Lead_Letters")]
        public Lead Lead_Letters {
            get {
                return GetRelatedEntity<Lead>("Lead_Letters", null);
            }
            set {
                SetRelatedEntity("Lead_Letters", null, value);
            }
        }
        
        [RelationshipSchemaName("Letter_QueueItem")]
        public IEnumerable<QueueItem> Letter_QueueItem {
            get {
                return GetRelatedEntities<QueueItem>("Letter_QueueItem", null);
            }
            set {
                SetRelatedEntities("Letter_QueueItem", null, value);
            }
        }
        
        [RelationshipSchemaName("Letter_SyncErrors")]
        public IEnumerable<SyncError> Letter_SyncErrors {
            get {
                return GetRelatedEntities<SyncError>("Letter_SyncErrors", null);
            }
            set {
                SetRelatedEntities("Letter_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Opportunity_Letters")]
        public Opportunity Opportunity_Letters {
            get {
                return GetRelatedEntity<Opportunity>("Opportunity_Letters", null);
            }
            set {
                SetRelatedEntity("Opportunity_Letters", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Quote_Letters")]
        public Quote Quote_Letters {
            get {
                return GetRelatedEntity<Quote>("Quote_Letters", null);
            }
            set {
                SetRelatedEntity("Quote_Letters", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("SalesOrder_Letters")]
        public SalesOrder SalesOrder_Letters {
            get {
                return GetRelatedEntity<SalesOrder>("SalesOrder_Letters", null);
            }
            set {
                SetRelatedEntity("SalesOrder_Letters", null, value);
            }
        }
        
        [AttributeLogicalName("transactioncurrencyid")]
        [RelationshipSchemaName("TransactionCurrency_Letter")]
        public TransactionCurrency TransactionCurrency_Letter {
            get {
                return GetRelatedEntity<TransactionCurrency>("TransactionCurrency_Letter", null);
            }
            set {
                SetRelatedEntity("TransactionCurrency_Letter", null, value);
            }
        }
        
        [AttributeLogicalName("activityid")]
        [RelationshipSchemaName("activity_pointer_letter")]
        public ActivityPointer activity_pointer_letter {
            get {
                return GetRelatedEntity<ActivityPointer>("activity_pointer_letter", null);
            }
            set {
                SetRelatedEntity("activity_pointer_letter", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("bookableresourcebooking_Letters")]
        public BookableResourceBooking bookableresourcebooking_Letters {
            get {
                return GetRelatedEntity<BookableResourceBooking>("bookableresourcebooking_Letters", null);
            }
            set {
                SetRelatedEntity("bookableresourcebooking_Letters", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("bookableresourcebookingheader_Letters")]
        public BookableResourceBookingHeader bookableresourcebookingheader_Letters {
            get {
                return GetRelatedEntity<BookableResourceBookingHeader>("bookableresourcebookingheader_Letters", null);
            }
            set {
                SetRelatedEntity("bookableresourcebookingheader_Letters", null, value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_letter_activities")]
        public BusinessUnit business_unit_letter_activities {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_letter_activities", null);
            }
            set {
                SetRelatedEntity("business_unit_letter_activities", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("dg_event_Letters")]
        public dg_event dg_event_Letters {
            get {
                return GetRelatedEntity<dg_event>("dg_event_Letters", null);
            }
            set {
                SetRelatedEntity("dg_event_Letters", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("dg_participant_Letters")]
        public dg_participant dg_participant_Letters {
            get {
                return GetRelatedEntity<dg_participant>("dg_participant_Letters", null);
            }
            set {
                SetRelatedEntity("dg_participant_Letters", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("entitlement_Letters")]
        public Entitlement entitlement_Letters {
            get {
                return GetRelatedEntity<Entitlement>("entitlement_Letters", null);
            }
            set {
                SetRelatedEntity("entitlement_Letters", null, value);
            }
        }
        
        [RelationshipSchemaName("letter_activity_parties")]
        public IEnumerable<ActivityParty> letter_activity_parties {
            get {
                return GetRelatedEntities<ActivityParty>("letter_activity_parties", null);
            }
            set {
                SetRelatedEntities("letter_activity_parties", null, value);
            }
        }
        
        [RelationshipSchemaName("letter_campaignresponse")]
        public IEnumerable<CampaignResponse> letter_campaignresponse {
            get {
                return GetRelatedEntities<CampaignResponse>("letter_campaignresponse", null);
            }
            set {
                SetRelatedEntities("letter_campaignresponse", null, value);
            }
        }
        
        [RelationshipSchemaName("letter_connections1")]
        public IEnumerable<Connection> letter_connections1 {
            get {
                return GetRelatedEntities<Connection>("letter_connections1", null);
            }
            set {
                SetRelatedEntities("letter_connections1", null, value);
            }
        }
        
        [RelationshipSchemaName("letter_connections2")]
        public IEnumerable<Connection> letter_connections2 {
            get {
                return GetRelatedEntities<Connection>("letter_connections2", null);
            }
            set {
                SetRelatedEntities("letter_connections2", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_letter_createdby")]
        public SystemUser lk_letter_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_letter_createdby", null);
            }
            set {
                SetRelatedEntity("lk_letter_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_letter_createdonbehalfby")]
        public SystemUser lk_letter_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_letter_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_letter_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_letter_modifiedby")]
        public SystemUser lk_letter_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_letter_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_letter_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_letter_modifiedonbehalfby")]
        public SystemUser lk_letter_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_letter_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_letter_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("slaid")]
        [RelationshipSchemaName("manualsla_letter")]
        public SLA manualsla_letter {
            get {
                return GetRelatedEntity<SLA>("manualsla_letter", null);
            }
            set {
                SetRelatedEntity("manualsla_letter", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("msdyn_agreement_Letters")]
        public msdyn_agreement msdyn_agreement_Letters {
            get {
                return GetRelatedEntity<msdyn_agreement>("msdyn_agreement_Letters", null);
            }
            set {
                SetRelatedEntity("msdyn_agreement_Letters", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("msdyn_postalbum_Letters")]
        public msdyn_PostAlbum msdyn_postalbum_Letters {
            get {
                return GetRelatedEntity<msdyn_PostAlbum>("msdyn_postalbum_Letters", null);
            }
            set {
                SetRelatedEntity("msdyn_postalbum_Letters", null, value);
            }
        }
        
        [AttributeLogicalName("slainvokedid")]
        [RelationshipSchemaName("sla_letter")]
        public SLA sla_letter {
            get {
                return GetRelatedEntity<SLA>("sla_letter", null);
            }
            set {
                SetRelatedEntity("sla_letter", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_letter")]
        public Team team_letter {
            get {
                return GetRelatedEntity<Team>("team_letter", null);
            }
            set {
                SetRelatedEntity("team_letter", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_letter")]
        public SystemUser user_letter {
            get {
                return GetRelatedEntity<SystemUser>("user_letter", null);
            }
            set {
                SetRelatedEntity("user_letter", null, value);
            }
        }
        
        public static Letter Retrieve(IOrganizationService service, Guid id, params Expression<Func<Letter,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Group of existing or potential customers created for a marketing campaign or other sales purposes.</para>
    /// <para>Display Name: Marketing List</para>
    /// </summary>
    [EntityLogicalName("list")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class List : ExtendedEntity<ListState, List_StatusCode> {
        
        public const string EntityLogicalName = "list";
        
        public const int EntityTypeCode = 4300;
        
        public List() : 
                base(EntityLogicalName) {
        }
        
        public List(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("listname");
            }
        }
        
        [AttributeLogicalName("listid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("listid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the marketing list.</para>
        /// <para>Display Name: Marketing List</para>
        /// </summary>
        [AttributeLogicalName("listid")]
        [DisplayName("Marketing List")]
        public Guid? ListId {
            get {
                return GetAttributeValue<Guid?>("listid");
            }
            set {
                SetId("listid", value);
            }
        }
        
        /// <summary>
        /// <para>Type the cost of obtaining the marketing list.</para>
        /// <para>Display Name: Cost</para>
        /// </summary>
        [AttributeLogicalName("cost")]
        [DisplayName("Cost")]
        public decimal? Cost {
            get {
                return GetMoneyValue("cost");
            }
            set {
                SetMoneyValue("cost", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the Cost field converted to the system's default base currency for reporting purposes. The calculation uses the exchange rate specified in the Currencies area.</para>
        /// <para>Display Name: Cost (Base)</para>
        /// </summary>
        [AttributeLogicalName("cost_base")]
        [DisplayName("Cost (Base)")]
        public decimal? Cost_Base {
            get {
                return GetMoneyValue("cost_base");
            }
        }
        
        /// <summary>
        /// <para>lk_list_createdby</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Select the type of members that this marketing list will contain: accounts, contacts, or leads. Each list can have only one member type and this value can't be changed after the marketing list is created.</para>
        /// <para>Display Name: Marketing List Member Type</para>
        /// </summary>
        [AttributeLogicalName("createdfromcode")]
        [DisplayName("Marketing List Member Type")]
        public List_CreatedFromCode? CreatedFromCode {
            get {
                return GetOptionSetValue<List_CreatedFromCode>("createdfromcode");
            }
            set {
                SetOptionSetValue("createdfromcode", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics CRM options.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>lk_list_createdonbehalfby</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Type additional information to describe the marketing list, such as the intended use or date of the last update.</para>
        /// <para>Display Name: Description</para>
        /// </summary>
        [AttributeLogicalName("description")]
        [DisplayName("Description")]
        public string Description {
            get {
                return GetAttributeValue<string>("description");
            }
            set {
                SetAttributeValue("description", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether to override the opt-out settings on leads, contacts, and accounts for the members of the target marketing lists of the campaign activity. If No is selected, those who have chosen to opt out won't be excluded from the list. This means they will receive marketing materials.</para>
        /// <para>Display Name: Exclude Members Who Opt Out</para>
        /// </summary>
        [AttributeLogicalName("donotsendonoptout")]
        [DisplayName("Exclude Members Who Opt Out")]
        public bool? DoNotSendOnOptOut {
            get {
                return GetAttributeValue<bool?>("donotsendonoptout");
            }
            set {
                SetAttributeValue("donotsendonoptout", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("Exchange Rate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Select whether inactive accounts, contacts, or leads should be excluded from the campaign activity distribution when the marketing list is included in a campaign.</para>
        /// <para>Display Name: Ignore Inactive List Members</para>
        /// </summary>
        [AttributeLogicalName("ignoreinactivelistmembers")]
        [DisplayName("Ignore Inactive List Members")]
        public bool? IgnoreInactiveListMembers {
            get {
                return GetAttributeValue<bool?>("ignoreinactivelistmembers");
            }
            set {
                SetAttributeValue("ignoreinactivelistmembers", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the data import or data migration that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the marketing list was last used in a campaign or in the creation of activities or opportunities.</para>
        /// <para>Display Name: Last Used On</para>
        /// </summary>
        [AttributeLogicalName("lastusedon")]
        [DisplayName("Last Used On")]
        public DateTime? LastUsedOn {
            get {
                return GetAttributeValue<DateTime?>("lastusedon");
            }
            set {
                SetAttributeValue("lastusedon", value);
            }
        }
        
        /// <summary>
        /// <para>Type a name for the marketing list so that it is identified correctly in lists.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("listname")]
        [DisplayName("Name")]
        [MaxLength(128)]
        public string ListName {
            get {
                return GetAttributeValue<string>("listname");
            }
            set {
                SetAttributeValue("listname", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the marketing list is locked. If Yes is selected, no additional members can be added to the marketing list.</para>
        /// <para>Display Name: Locked</para>
        /// </summary>
        [AttributeLogicalName("lockstatus")]
        [DisplayName("Locked")]
        public bool? LockStatus {
            get {
                return GetAttributeValue<bool?>("lockstatus");
            }
            set {
                SetAttributeValue("lockstatus", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the sum of all members in the marketing list.</para>
        /// <para>Display Name: Members Count</para>
        /// </summary>
        [AttributeLogicalName("membercount")]
        [DisplayName("Members Count")]
        [Range(0, 1000000000)]
        public int? MemberCount {
            get {
                return GetAttributeValue<int?>("membercount");
            }
            set {
                SetAttributeValue("membercount", value);
            }
        }
        
        /// <summary>
        /// <para>Type of the members that can be stored in the marketing list. Please do not remove from form!</para>
        /// <para>Display Name: Member Type</para>
        /// </summary>
        [AttributeLogicalName("membertype")]
        [DisplayName("Member Type")]
        [Range(0, 1000000000)]
        public int? MemberType {
            get {
                return GetAttributeValue<int?>("membertype");
            }
            set {
                SetAttributeValue("membertype", value);
            }
        }
        
        /// <summary>
        /// <para>lk_list_modifiedby</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics CRM options.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>lk_list_modifiedonbehalfby</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>owner_lists</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>business_unit_list</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>team_list</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>user_list</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Type a name for the marketing list so that it is identified correctly in lists.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("listname")]
        [DisplayName("Name")]
        [MaxLength(128)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("listname");
            }
            set {
                SetAttributeValue("listname", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the process.</para>
        /// <para>Display Name: Process</para>
        /// </summary>
        [AttributeLogicalName("processid")]
        [DisplayName("Process")]
        public Guid? ProcessId {
            get {
                return GetAttributeValue<Guid?>("processid");
            }
            set {
                SetAttributeValue("processid", value);
            }
        }
        
        /// <summary>
        /// <para>Type the intended use of the marketing list to identify its key segments, target offers, or business group.</para>
        /// <para>Display Name: Purpose</para>
        /// </summary>
        [AttributeLogicalName("purpose")]
        [DisplayName("Purpose")]
        [MaxLength(512)]
        public string Purpose {
            get {
                return GetAttributeValue<string>("purpose");
            }
            set {
                SetAttributeValue("purpose", value);
            }
        }
        
        /// <summary>
        /// <para>Query used for retrieving members of marketing list.</para>
        /// <para>Display Name: Query</para>
        /// </summary>
        [AttributeLogicalName("query")]
        [DisplayName("Query")]
        [MaxLength(1073741823)]
        public string Query {
            get {
                return GetAttributeValue<string>("query");
            }
            set {
                SetAttributeValue("query", value);
            }
        }
        
        /// <summary>
        /// <para>Type the source of the marketing list, such as a third-party supplier or internal database.</para>
        /// <para>Display Name: Source</para>
        /// </summary>
        [AttributeLogicalName("source")]
        [DisplayName("Source")]
        [MaxLength(128)]
        public string Source {
            get {
                return GetAttributeValue<string>("source");
            }
            set {
                SetAttributeValue("source", value);
            }
        }
        
        /// <summary>
        /// <para>processstage_lists</para>
        /// <para>Display Name: Process Stage</para>
        /// </summary>
        [AttributeLogicalName("stageid")]
        [DisplayName("Process Stage")]
        public Guid? StageId {
            get {
                return GetAttributeValue<Guid?>("stageid");
            }
            set {
                SetAttributeValue("stageid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows whether the marketing list is active or inactive. Inactive marketing lists are read-only and can't be edited unless they are reactivated.</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public ListState? StateCode {
            get {
                return GetOptionSetValue<ListState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the marketing list's status.</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public List_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<List_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>transactioncurrency_list</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Traversed Path</para>
        /// </summary>
        [AttributeLogicalName("traversedpath")]
        [DisplayName("Traversed Path")]
        [MaxLength(1250)]
        public string TraversedPath {
            get {
                return GetAttributeValue<string>("traversedpath");
            }
            set {
                SetAttributeValue("traversedpath", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether you want the marketing list to be static or dynamic. The members in a static marketing list are unchanging. A dynamic marketing list is based on a dynamic query that retrieves the updated list of members</para>
        /// <para>Display Name: Type</para>
        /// </summary>
        [AttributeLogicalName("type")]
        [DisplayName("Type")]
        public bool? Type {
            get {
                return GetAttributeValue<bool?>("type");
            }
            set {
                SetAttributeValue("type", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version number of the marketing list.</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Display Name: processFetchXML</para>
        /// </summary>
        [AttributeLogicalName("processfetchxml")]
        [DisplayName("processFetchXML")]
        public string processFetchXML {
            get {
                return GetAttributeValue<string>("processfetchxml");
            }
            set {
                SetAttributeValue("processfetchxml", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: processedMemberCount</para>
        /// </summary>
        [AttributeLogicalName("processedmembercount")]
        [DisplayName("processedMemberCount")]
        [Range(-2147483648, 2147483647)]
        public int? processedMemberCount {
            get {
                return GetAttributeValue<int?>("processedmembercount");
            }
            set {
                SetAttributeValue("processedmembercount", value);
            }
        }
        
        [RelationshipSchemaName("List_SyncErrors")]
        public IEnumerable<SyncError> List_SyncErrors {
            get {
                return GetRelatedEntities<SyncError>("List_SyncErrors", null);
            }
            set {
                SetRelatedEntities("List_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_list")]
        public BusinessUnit business_unit_list {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_list", null);
            }
            set {
                SetRelatedEntity("business_unit_list", null, value);
            }
        }
        
        [RelationshipSchemaName("campaignactivitylist_association")]
        public IEnumerable<CampaignActivity> campaignactivitylist_association {
            get {
                return GetRelatedEntities<CampaignActivity>("campaignactivitylist_association", null);
            }
            set {
                SetRelatedEntities("campaignactivitylist_association", null, value);
            }
        }
        
        [RelationshipSchemaName("campaignlist_association")]
        public IEnumerable<Campaign> campaignlist_association {
            get {
                return GetRelatedEntities<Campaign>("campaignlist_association", null);
            }
            set {
                SetRelatedEntities("campaignlist_association", null, value);
            }
        }
        
        [RelationshipSchemaName("list_Teams")]
        public IEnumerable<Team> list_Teams {
            get {
                return GetRelatedEntities<Team>("list_Teams", null);
            }
            set {
                SetRelatedEntities("list_Teams", null, value);
            }
        }
        
        [RelationshipSchemaName("list_connections1")]
        public IEnumerable<Connection> list_connections1 {
            get {
                return GetRelatedEntities<Connection>("list_connections1", null);
            }
            set {
                SetRelatedEntities("list_connections1", null, value);
            }
        }
        
        [RelationshipSchemaName("list_connections2")]
        public IEnumerable<Connection> list_connections2 {
            get {
                return GetRelatedEntities<Connection>("list_connections2", null);
            }
            set {
                SetRelatedEntities("list_connections2", null, value);
            }
        }
        
        [RelationshipSchemaName("listaccount_association")]
        public IEnumerable<Account> listaccount_association {
            get {
                return GetRelatedEntities<Account>("listaccount_association", null);
            }
            set {
                SetRelatedEntities("listaccount_association", null, value);
            }
        }
        
        [RelationshipSchemaName("listcontact_association")]
        public IEnumerable<Contact> listcontact_association {
            get {
                return GetRelatedEntities<Contact>("listcontact_association", null);
            }
            set {
                SetRelatedEntities("listcontact_association", null, value);
            }
        }
        
        [RelationshipSchemaName("listlead_association")]
        public IEnumerable<Lead> listlead_association {
            get {
                return GetRelatedEntities<Lead>("listlead_association", null);
            }
            set {
                SetRelatedEntities("listlead_association", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_list_createdby")]
        public SystemUser lk_list_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_list_createdby", null);
            }
            set {
                SetRelatedEntity("lk_list_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_list_createdonbehalfby")]
        public SystemUser lk_list_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_list_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_list_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_list_modifiedby")]
        public SystemUser lk_list_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_list_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_list_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_list_modifiedonbehalfby")]
        public SystemUser lk_list_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_list_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_list_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_list")]
        public Team team_list {
            get {
                return GetRelatedEntity<Team>("team_list", null);
            }
            set {
                SetRelatedEntity("team_list", null, value);
            }
        }
        
        [AttributeLogicalName("transactioncurrencyid")]
        [RelationshipSchemaName("transactioncurrency_list")]
        public TransactionCurrency transactioncurrency_list {
            get {
                return GetRelatedEntity<TransactionCurrency>("transactioncurrency_list", null);
            }
            set {
                SetRelatedEntity("transactioncurrency_list", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_list")]
        public SystemUser user_list {
            get {
                return GetRelatedEntity<SystemUser>("user_list", null);
            }
            set {
                SetRelatedEntity("user_list", null, value);
            }
        }
        
        public static List Retrieve(IOrganizationService service, Guid id, params Expression<Func<List,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Item in a marketing list.</para>
    /// <para>Display Name: Marketing List Member</para>
    /// </summary>
    [EntityLogicalName("listmember")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class ListMember : ExtendedEntity<EmptyEnum, EmptyEnum> {
        
        public const string EntityLogicalName = "listmember";
        
        public const string RelationshipSchemaName = "ListMember";
        
        public const int EntityTypeCode = 4301;
        
        public ListMember() : 
                base(EntityLogicalName) {
        }
        
        public ListMember(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("name");
            }
        }
        
        [AttributeLogicalName("listmemberid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("listmemberid", value);
            }
        }
        
        [AttributeLogicalName("listmemberid")]
        public Guid? ListMemberId {
            get {
                return GetAttributeValue<Guid?>("listmemberid");
            }
            set {
                SetId("listmemberid", value);
            }
        }
        
        /// <summary>
        /// <para>lk_listmember_createdby</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        [AttributeLogicalName("createdon")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>lk_listmember_createdonbehalfby</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Entity</para>
        /// </summary>
        [AttributeLogicalName("entityid")]
        [DisplayName("Entity")]
        public EntityReference EntityId {
            get {
                return GetAttributeValue<EntityReference>("entityid");
            }
            set {
                SetAttributeValue("entityid", value);
            }
        }
        
        [AttributeLogicalName("entitytype")]
        public string EntityType {
            get {
                return GetAttributeValue<string>("entitytype");
            }
            set {
                SetAttributeValue("entitytype", value);
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Marketing List</para>
        /// </summary>
        [AttributeLogicalName("listid")]
        [DisplayName("Marketing List")]
        public EntityReference ListId {
            get {
                return GetAttributeValue<EntityReference>("listid");
            }
            set {
                SetAttributeValue("listid", value);
            }
        }
        
        /// <summary>
        /// <para>lk_listmember_modifiedby</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the list member was last modified.</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>lk_listmember_modifiedonbehalfby</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>name</para>
        /// <para>Display Name: name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("name")]
        [MaxLength(100)]
        public string Name {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user or team who owns the list member.</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        public Guid? OwningBusinessUnit {
            get {
                return GetAttributeValue<Guid?>("owningbusinessunit");
            }
        }
        
        [AttributeLogicalName("owninguser")]
        public Guid? OwningUser {
            get {
                return GetAttributeValue<Guid?>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>name</para>
        /// <para>Display Name: name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("name")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        [RelationshipSchemaName("listmember_Teams")]
        public IEnumerable<Team> listmember_Teams {
            get {
                return GetRelatedEntities<Team>("listmember_Teams", null);
            }
            set {
                SetRelatedEntities("listmember_Teams", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_listmember_createdby")]
        public SystemUser lk_listmember_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_listmember_createdby", null);
            }
            set {
                SetRelatedEntity("lk_listmember_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_listmember_createdonbehalfby")]
        public SystemUser lk_listmember_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_listmember_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_listmember_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_listmember_modifiedby")]
        public SystemUser lk_listmember_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_listmember_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_listmember_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_listmember_modifiedonbehalfby")]
        public SystemUser lk_listmember_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_listmember_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_listmember_modifiedonbehalfby", null, value);
            }
        }
        
        public static ListMember Retrieve(IOrganizationService service, Guid id, params Expression<Func<ListMember,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Mailbox</para>
    /// </summary>
    [EntityLogicalName("mailbox")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class Mailbox : ExtendedEntity<MailboxState, Mailbox_StatusCode> {
        
        public const string EntityLogicalName = "mailbox";
        
        public const int EntityTypeCode = 9606;
        
        public Mailbox() : 
                base(EntityLogicalName) {
        }
        
        public Mailbox(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("name");
            }
        }
        
        [AttributeLogicalName("mailboxid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("mailboxid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the mailbox.</para>
        /// <para>Display Name: Mailbox</para>
        /// </summary>
        [AttributeLogicalName("mailboxid")]
        [DisplayName("Mailbox")]
        public Guid? MailboxId {
            get {
                return GetAttributeValue<Guid?>("mailboxid");
            }
            set {
                SetId("mailboxid", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the delivery method for the mailbox for appointments, contacts, and tasks.</para>
        /// <para>Display Name: Appointments, Contacts, and Tasks</para>
        /// </summary>
        [AttributeLogicalName("actdeliverymethod")]
        [DisplayName("Appointments, Contacts, and Tasks")]
        public Mailbox_ACTDeliveryMethod? ACTDeliveryMethod {
            get {
                return GetOptionSetValue<Mailbox_ACTDeliveryMethod>("actdeliverymethod");
            }
            set {
                SetOptionSetValue("actdeliverymethod", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the Appointments, Contacts, and Tasks.</para>
        /// <para>Display Name: Appointments, Contacts, and Tasks Status</para>
        /// </summary>
        [AttributeLogicalName("actstatus")]
        [DisplayName("Appointments, Contacts, and Tasks Status")]
        public Mailbox_ACTStatus? ACTStatus {
            get {
                return GetOptionSetValue<Mailbox_ACTStatus>("actstatus");
            }
            set {
                SetOptionSetValue("actstatus", value);
            }
        }
        
        /// <summary>
        /// <para>Choose whether to allow the email connector to use credentials.</para>
        /// <para>Display Name: Allow to Use Credentials for Email Processing</para>
        /// </summary>
        [AttributeLogicalName("allowemailconnectortousecredentials")]
        [DisplayName("Allow to Use Credentials for Email Processing")]
        public bool? AllowEmailConnectorToUseCredentials {
            get {
                return GetAttributeValue<bool?>("allowemailconnectortousecredentials");
            }
            set {
                SetAttributeValue("allowemailconnectortousecredentials", value);
            }
        }
        
        /// <summary>
        /// <para>Mailbox Total Duration in Average</para>
        /// <para>Display Name: Monitor Total Performance</para>
        /// </summary>
        [AttributeLogicalName("averagetotalduration")]
        [DisplayName("Monitor Total Performance")]
        [Range(-1, 2147483647)]
        public int? AverageTotalDuration {
            get {
                return GetAttributeValue<int?>("averagetotalduration");
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record on behalf of another user.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        [AttributeLogicalName("credentialinfo")]
        [MaxLength(4000)]
        public string CredentialInfo {
            get {
                return GetAttributeValue<string>("credentialinfo");
            }
            set {
                SetAttributeValue("credentialinfo", value);
            }
        }
        
        [AttributeLogicalName("dataencryptionkey")]
        [MaxLength(3500)]
        public string DataEncryptionKey {
            get {
                return GetAttributeValue<string>("dataencryptionkey");
            }
            set {
                SetAttributeValue("dataencryptionkey", value);
            }
        }
        
        /// <summary>
        /// <para>Exchange web services endpoint URL for the mailbox.</para>
        /// <para>Display Name: Exchange Web Services URL</para>
        /// </summary>
        [AttributeLogicalName("ewsurl")]
        [DisplayName("Exchange Web Services URL")]
        [MaxLength(2084)]
        public string EWSURL {
            get {
                return GetAttributeValue<string>("ewsurl");
            }
            set {
                SetAttributeValue("ewsurl", value);
            }
        }
        
        /// <summary>
        /// <para>Type the email address of the mailbox.</para>
        /// <para>Display Name: Email Address</para>
        /// </summary>
        [AttributeLogicalName("emailaddress")]
        [DisplayName("Email Address")]
        [MaxLength(100)]
        public string EmailAddress {
            get {
                return GetAttributeValue<string>("emailaddress");
            }
            set {
                SetAttributeValue("emailaddress", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the status of the email address.</para>
        /// <para>Display Name: Email Address Status</para>
        /// </summary>
        [AttributeLogicalName("emailrouteraccessapproval")]
        [DisplayName("Email Address Status")]
        public Mailbox_EmailRouterAccessApproval? EmailRouterAccessApproval {
            get {
                return GetOptionSetValue<Mailbox_EmailRouterAccessApproval>("emailrouteraccessapproval");
            }
            set {
                SetOptionSetValue("emailrouteraccessapproval", value);
            }
        }
        
        /// <summary>
        /// <para>Select the email server profile of the mailbox.</para>
        /// <para>Display Name: Server Profile</para>
        /// </summary>
        [AttributeLogicalName("emailserverprofile")]
        [DisplayName("Server Profile")]
        public EntityReference EmailServerProfile {
            get {
                return GetAttributeValue<EntityReference>("emailserverprofile");
            }
            set {
                SetAttributeValue("emailserverprofile", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the mailbox is enabled for Appointments, Contacts, and Tasks.</para>
        /// <para>Display Name: Enabled For Appointments, Contacts, And Tasks</para>
        /// </summary>
        [AttributeLogicalName("enabledforact")]
        [DisplayName("Enabled For Appointments, Contacts, And Tasks")]
        public bool? EnabledForACT {
            get {
                return GetAttributeValue<bool?>("enabledforact");
            }
            set {
                SetAttributeValue("enabledforact", value);
            }
        }
        
        /// <summary>
        /// <para>Choose whether the mailbox is enabled for receiving email.</para>
        /// <para>Display Name: Enabled For Incoming Email</para>
        /// </summary>
        [AttributeLogicalName("enabledforincomingemail")]
        [DisplayName("Enabled For Incoming Email")]
        public bool? EnabledForIncomingEmail {
            get {
                return GetAttributeValue<bool?>("enabledforincomingemail");
            }
            set {
                SetAttributeValue("enabledforincomingemail", value);
            }
        }
        
        /// <summary>
        /// <para>Choose whether the mailbox is enabled for sending email.</para>
        /// <para>Display Name: Enabled For Outgoing Email</para>
        /// </summary>
        [AttributeLogicalName("enabledforoutgoingemail")]
        [DisplayName("Enabled For Outgoing Email")]
        public bool? EnabledForOutgoingEmail {
            get {
                return GetAttributeValue<bool?>("enabledforoutgoingemail");
            }
            set {
                SetAttributeValue("enabledforoutgoingemail", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Entity Image Id</para>
        /// </summary>
        [AttributeLogicalName("entityimageid")]
        [DisplayName("Entity Image Id")]
        public Guid? EntityImageId {
            get {
                return GetAttributeValue<Guid?>("entityimageid");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the exchange contacts import was last completed for a mailbox record.</para>
        /// <para>Display Name: Exchange Contacts Import Completed On</para>
        /// </summary>
        [AttributeLogicalName("exchangecontactsimportcompletedon")]
        [DisplayName("Exchange Contacts Import Completed On")]
        public DateTime? ExchangeContactsImportCompletedOn {
            get {
                return GetAttributeValue<DateTime?>("exchangecontactsimportcompletedon");
            }
        }
        
        /// <summary>
        /// <para>Indicates the exchange contacts import status for a mailbox record.</para>
        /// <para>Display Name: Exchange Contacts Import Status</para>
        /// </summary>
        [AttributeLogicalName("exchangecontactsimportstatus")]
        [DisplayName("Exchange Contacts Import Status")]
        public Mailbox_ExchangeContactsImportStatus? ExchangeContactsImportStatus {
            get {
                return GetOptionSetValue<Mailbox_ExchangeContactsImportStatus>("exchangecontactsimportstatus");
            }
            set {
                SetOptionSetValue("exchangecontactsimportstatus", value);
            }
        }
        
        /// <summary>
        /// <para>Contains the exchange synchronization state in XML format.</para>
        /// <para>Display Name: Exchange Sync State</para>
        /// </summary>
        [AttributeLogicalName("exchangesyncstatexml")]
        [DisplayName("Exchange Sync State")]
        public string ExchangeSyncStateXml {
            get {
                return GetAttributeValue<string>("exchangesyncstatexml");
            }
            set {
                SetAttributeValue("exchangesyncstatexml", value);
            }
        }
        
        /// <summary>
        /// <para>Holds the hierarchy of folders under inbox in XML format.</para>
        /// <para>Display Name: Folder Hierarchy</para>
        /// </summary>
        [AttributeLogicalName("folderhierarchy")]
        [DisplayName("Folder Hierarchy")]
        public string FolderHierarchy {
            get {
                return GetAttributeValue<string>("folderhierarchy");
            }
            set {
                SetAttributeValue("folderhierarchy", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only</para>
        /// <para>Display Name: Count of the number of times a mailbox gets forced unlocked</para>
        /// </summary>
        [AttributeLogicalName("forcedunlockcount")]
        [DisplayName("Count of the number of times a mailbox gets forced unlocked")]
        [Range(0, 2147483647)]
        public int? ForcedUnlockCount {
            get {
                return GetAttributeValue<int?>("forcedunlockcount");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the async host that is processing this mailbox.</para>
        /// <para>Display Name: Host</para>
        /// </summary>
        [AttributeLogicalName("hostid")]
        [DisplayName("Host")]
        [MaxLength(256)]
        public string HostId {
            get {
                return GetAttributeValue<string>("hostid");
            }
        }
        
        /// <summary>
        /// <para>Select how incoming email will be delivered to the mailbox.</para>
        /// <para>Display Name: Incoming Email</para>
        /// </summary>
        [AttributeLogicalName("incomingemaildeliverymethod")]
        [DisplayName("Incoming Email")]
        public Mailbox_IncomingEmailDeliveryMethod? IncomingEmailDeliveryMethod {
            get {
                return GetOptionSetValue<Mailbox_IncomingEmailDeliveryMethod>("incomingemaildeliverymethod");
            }
            set {
                SetOptionSetValue("incomingemaildeliverymethod", value);
            }
        }
        
        /// <summary>
        /// <para>Select the status that will be assigned to incoming email messages.</para>
        /// <para>Display Name: Incoming Email Status</para>
        /// </summary>
        [AttributeLogicalName("incomingemailstatus")]
        [DisplayName("Incoming Email Status")]
        public Mailbox_IncomingEmailStatus? IncomingEmailStatus {
            get {
                return GetOptionSetValue<Mailbox_IncomingEmailStatus>("incomingemailstatus");
            }
            set {
                SetOptionSetValue("incomingemailstatus", value);
            }
        }
        
        /// <summary>
        /// <para>Set the current organization as the synchronization organization.</para>
        /// <para>Display Name: Set Current Organization as Synchronization Organization</para>
        /// </summary>
        [AttributeLogicalName("isactsyncorgflagset")]
        [DisplayName("Set Current Organization as Synchronization Organization")]
        public bool? IsACTSyncOrgFlagSet {
            get {
                return GetAttributeValue<bool?>("isactsyncorgflagset");
            }
            set {
                SetAttributeValue("isactsyncorgflagset", value);
            }
        }
        
        [AttributeLogicalName("isdataencryptionkeyset")]
        public bool? IsDataEncryptionKeySet {
            get {
                return GetAttributeValue<bool?>("isdataencryptionkeyset");
            }
        }
        
        /// <summary>
        /// <para>Shows the status of approval of the email address by O365 Admin.</para>
        /// <para>Display Name: Email Address O365 Admin Approval Status</para>
        /// </summary>
        [AttributeLogicalName("isemailaddressapprovedbyo365admin")]
        [DisplayName("Email Address O365 Admin Approval Status")]
        public bool? IsEmailAddressApprovedByO365Admin {
            get {
                return GetAttributeValue<bool?>("isemailaddressapprovedbyo365admin");
            }
            set {
                SetAttributeValue("isemailaddressapprovedbyo365admin", value);
            }
        }
        
        /// <summary>
        /// <para>Is Exchange Contacts Import Scheduled.</para>
        /// <para>Display Name: Is Exchange Contacts Import Scheduled.</para>
        /// </summary>
        [AttributeLogicalName("isexchangecontactsimportscheduled")]
        [DisplayName("Is Exchange Contacts Import Scheduled.")]
        public bool? IsExchangeContactsImportScheduled {
            get {
                return GetAttributeValue<bool?>("isexchangecontactsimportscheduled");
            }
        }
        
        /// <summary>
        /// <para>Select whether the mailbox is a forward mailbox.</para>
        /// <para>Display Name: Is Forward Mailbox</para>
        /// </summary>
        [AttributeLogicalName("isforwardmailbox")]
        [DisplayName("Is Forward Mailbox")]
        public bool? IsForwardMailbox {
            get {
                return GetAttributeValue<bool?>("isforwardmailbox");
            }
        }
        
        [AttributeLogicalName("isoauthaccesstokenset")]
        public bool? IsOauthAccessTokenSet {
            get {
                return GetAttributeValue<bool?>("isoauthaccesstokenset");
            }
        }
        
        [AttributeLogicalName("isoauthrefreshtokenset")]
        public bool? IsOauthRefreshTokenSet {
            get {
                return GetAttributeValue<bool?>("isoauthrefreshtokenset");
            }
        }
        
        [AttributeLogicalName("ispasswordset")]
        public bool? IsPasswordSet {
            get {
                return GetAttributeValue<bool?>("ispasswordset");
            }
        }
        
        /// <summary>
        /// <para>Select whether the mailbox corresponds to one for the service account.</para>
        /// <para>Display Name: Is Service Account</para>
        /// </summary>
        [AttributeLogicalName("isserviceaccount")]
        [DisplayName("Is Service Account")]
        public bool? IsServiceAccount {
            get {
                return GetAttributeValue<bool?>("isserviceaccount");
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Items Failed For Last Sync</para>
        /// </summary>
        [AttributeLogicalName("itemsfailedforlastsync")]
        [DisplayName("Items Failed For Last Sync")]
        [Range(0, 2147483647)]
        public int? ItemsFailedForLastSync {
            get {
                return GetAttributeValue<int?>("itemsfailedforlastsync");
            }
            set {
                SetAttributeValue("itemsfailedforlastsync", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Items Processed For Last Sync</para>
        /// </summary>
        [AttributeLogicalName("itemsprocessedforlastsync")]
        [DisplayName("Items Processed For Last Sync")]
        [Range(0, 2147483647)]
        public int? ItemsProcessedForLastSync {
            get {
                return GetAttributeValue<int?>("itemsprocessedforlastsync");
            }
            set {
                SetAttributeValue("itemsprocessedforlastsync", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the Exchange web services URL was last discovered using the AutoDiscover service.</para>
        /// <para>Display Name: Last Auto Discovered On</para>
        /// </summary>
        [AttributeLogicalName("lastautodiscoveredon")]
        [DisplayName("Last Auto Discovered On")]
        public DateTime? LastAutoDiscoveredOn {
            get {
                return GetAttributeValue<DateTime?>("lastautodiscoveredon");
            }
            set {
                SetAttributeValue("lastautodiscoveredon", value);
            }
        }
        
        /// <summary>
        /// <para>Last Duration for the mailbox</para>
        /// <para>Display Name: Monitor last duration Performance</para>
        /// </summary>
        [AttributeLogicalName("lastduration")]
        [DisplayName("Monitor last duration Performance")]
        [Range(-1, 2147483647)]
        public int? LastDuration {
            get {
                return GetAttributeValue<int?>("lastduration");
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Last Date Time when a mailbox got forced unlocked</para>
        /// </summary>
        [AttributeLogicalName("lastmailboxforcedunlockoccurredon")]
        [DisplayName("Last Date Time when a mailbox got forced unlocked")]
        public DateTime? LastMailboxForcedUnlockOccurredOn {
            get {
                return GetAttributeValue<DateTime?>("lastmailboxforcedunlockoccurredon");
            }
        }
        
        /// <summary>
        /// <para>Last Successful Sync Time</para>
        /// <para>Display Name: Last Successful Sync Time</para>
        /// </summary>
        [AttributeLogicalName("lastsuccessfulsynccompletedon")]
        [DisplayName("Last Successful Sync Time")]
        public DateTime? LastSuccessfulSyncCompletedOn {
            get {
                return GetAttributeValue<DateTime?>("lastsuccessfulsynccompletedon");
            }
            set {
                SetAttributeValue("lastsuccessfulsynccompletedon", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Last Sync Error Stack</para>
        /// </summary>
        [AttributeLogicalName("lastsyncerror")]
        [DisplayName("Last Sync Error Stack")]
        [MaxLength(2048)]
        public string LastSyncError {
            get {
                return GetAttributeValue<string>("lastsyncerror");
            }
            set {
                SetAttributeValue("lastsyncerror", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Last Sync Error Code</para>
        /// </summary>
        [AttributeLogicalName("lastsyncerrorcode")]
        [DisplayName("Last Sync Error Code")]
        [Range(-2147483648, 2147483647)]
        public int? LastSyncErrorCode {
            get {
                return GetAttributeValue<int?>("lastsyncerrorcode");
            }
            set {
                SetAttributeValue("lastsyncerrorcode", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only</para>
        /// <para>Display Name: Last Sync Error Continuous Count</para>
        /// </summary>
        [AttributeLogicalName("lastsyncerrorcount")]
        [DisplayName("Last Sync Error Continuous Count")]
        [Range(0, 2147483647)]
        public int? LastSyncErrorCount {
            get {
                return GetAttributeValue<int?>("lastsyncerrorcount");
            }
            set {
                SetAttributeValue("lastsyncerrorcount", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Last Sync Error Machine Name</para>
        /// </summary>
        [AttributeLogicalName("lastsyncerrormachinename")]
        [DisplayName("Last Sync Error Machine Name")]
        [MaxLength(320)]
        public string LastSyncErrorMachineName {
            get {
                return GetAttributeValue<string>("lastsyncerrormachinename");
            }
            set {
                SetAttributeValue("lastsyncerrormachinename", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Last Sync Error Time</para>
        /// </summary>
        [AttributeLogicalName("lastsyncerroroccurredon")]
        [DisplayName("Last Sync Error Time")]
        public DateTime? LastSyncErrorOccurredOn {
            get {
                return GetAttributeValue<DateTime?>("lastsyncerroroccurredon");
            }
            set {
                SetAttributeValue("lastsyncerroroccurredon", value);
            }
        }
        
        /// <summary>
        /// <para>Last Sync Start Time</para>
        /// <para>Display Name: Last Sync Start Time</para>
        /// </summary>
        [AttributeLogicalName("lastsyncstartedon")]
        [DisplayName("Last Sync Start Time")]
        public DateTime? LastSyncStartedOn {
            get {
                return GetAttributeValue<DateTime?>("lastsyncstartedon");
            }
        }
        
        /// <summary>
        /// <para>Identifies the last MessageId that has been processed for tagging in the remote system.</para>
        /// <para>Display Name: Last Tagged MessageId</para>
        /// </summary>
        [AttributeLogicalName("lasttaggedmessageid")]
        [DisplayName("Last Tagged MessageId")]
        [MaxLength(320)]
        public string LastTaggedMessageId {
            get {
                return GetAttributeValue<string>("lasttaggedmessageid");
            }
            set {
                SetAttributeValue("lasttaggedmessageid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Processing Context of the Mailbox</para>
        /// </summary>
        [AttributeLogicalName("mailboxprocessingcontext")]
        [DisplayName("Processing Context of the Mailbox")]
        [Range(0, 2147483647)]
        public int? MailboxProcessingContext {
            get {
                return GetAttributeValue<int?>("mailboxprocessingcontext");
            }
            set {
                SetAttributeValue("mailboxprocessingcontext", value);
            }
        }
        
        /// <summary>
        /// <para>Last Sync Status for Outgoing, Incoming and ACT as a whole.</para>
        /// <para>Display Name: Mailbox Status</para>
        /// </summary>
        [AttributeLogicalName("mailboxstatus")]
        [DisplayName("Mailbox Status")]
        public Mailbox_MailboxStatus? MailboxStatus {
            get {
                return GetOptionSetValue<Mailbox_MailboxStatus>("mailboxstatus");
            }
        }
        
        /// <summary>
        /// <para>Shows who last updated the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Shows who last updated the record on behalf of another user.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Type the name of the mailbox.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Name")]
        [MaxLength(200)]
        public string Name {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>The next scheduled ACT sync delay, in seconds, to apply to the mailbox.</para>
        /// <para>Display Name: Next Scheduled ACT Sync Delay In Seconds</para>
        /// </summary>
        [AttributeLogicalName("nextscheduledactsyncinseconds")]
        [DisplayName("Next Scheduled ACT Sync Delay In Seconds")]
        [Range(0, 2147483647)]
        public int? NextScheduledACTSyncInSeconds {
            get {
                return GetAttributeValue<int?>("nextscheduledactsyncinseconds");
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Zero appointment, contact, task count for mailbox</para>
        /// </summary>
        [AttributeLogicalName("noactcount")]
        [DisplayName("Zero appointment, contact, task count for mailbox")]
        [Range(0, 2147483647)]
        public int? NoACTCount {
            get {
                return GetAttributeValue<int?>("noactcount");
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Zero email count for mailbox</para>
        /// </summary>
        [AttributeLogicalName("noemailcount")]
        [DisplayName("Zero email count for mailbox")]
        [Range(0, 2147483647)]
        public int? NoEmailCount {
            get {
                return GetAttributeValue<int?>("noemailcount");
            }
        }
        
        /// <summary>
        /// <para>Type the Oauth access token for the mailbox.</para>
        /// <para>Display Name: Oauth access token</para>
        /// </summary>
        [AttributeLogicalName("oauthaccesstoken")]
        [DisplayName("Oauth access token")]
        [MaxLength(1024)]
        public string OauthAccessToken {
            get {
                return GetAttributeValue<string>("oauthaccesstoken");
            }
            set {
                SetAttributeValue("oauthaccesstoken", value);
            }
        }
        
        /// <summary>
        /// <para>Type the Oauth refresh token for the mailbox.</para>
        /// <para>Display Name: Oauth refresh token</para>
        /// </summary>
        [AttributeLogicalName("oauthrefreshtoken")]
        [DisplayName("Oauth refresh token")]
        [MaxLength(256)]
        public string OauthRefreshToken {
            get {
                return GetAttributeValue<string>("oauthrefreshtoken");
            }
            set {
                SetAttributeValue("oauthrefreshtoken", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time when the Oauth token will expire</para>
        /// <para>Display Name: Oauth token expiration datetime</para>
        /// </summary>
        [AttributeLogicalName("oauthtokenexpireson")]
        [DisplayName("Oauth token expiration datetime")]
        public DateTime? OauthTokenExpiresOn {
            get {
                return GetAttributeValue<DateTime?>("oauthtokenexpireson");
            }
            set {
                SetAttributeValue("oauthtokenexpireson", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time when the last office apps deployment was completed for a mailbox record.</para>
        /// <para>Display Name: Office Apps Deployment Completed On</para>
        /// </summary>
        [AttributeLogicalName("officeappsdeploymentcompleteon")]
        [DisplayName("Office Apps Deployment Completed On")]
        public DateTime? OfficeAppsDeploymentCompleteOn {
            get {
                return GetAttributeValue<DateTime?>("officeappsdeploymentcompleteon");
            }
        }
        
        /// <summary>
        /// <para>The Office Apps deployment error.</para>
        /// <para>Display Name: Office Apps Deployment Error</para>
        /// </summary>
        [AttributeLogicalName("officeappsdeploymenterror")]
        [DisplayName("Office Apps Deployment Error")]
        [MaxLength(2048)]
        public string OfficeAppsDeploymentError {
            get {
                return GetAttributeValue<string>("officeappsdeploymenterror");
            }
        }
        
        /// <summary>
        /// <para>Indicates if the office apps deployment has been scheduled for a mailbox record.</para>
        /// <para>Display Name: Office Apps Deployment Scheduled</para>
        /// </summary>
        [AttributeLogicalName("officeappsdeploymentscheduled")]
        [DisplayName("Office Apps Deployment Scheduled")]
        public bool? OfficeAppsDeploymentScheduled {
            get {
                return GetAttributeValue<bool?>("officeappsdeploymentscheduled");
            }
            set {
                SetAttributeValue("officeappsdeploymentscheduled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates the office apps deployment type for a mailbox record.</para>
        /// <para>Display Name: Office Apps Deployment Type</para>
        /// </summary>
        [AttributeLogicalName("officeappsdeploymentstatus")]
        [DisplayName("Office Apps Deployment Type")]
        public Mailbox_OfficeAppsDeploymentStatus? OfficeAppsDeploymentStatus {
            get {
                return GetOptionSetValue<Mailbox_OfficeAppsDeploymentStatus>("officeappsdeploymentstatus");
            }
            set {
                SetOptionSetValue("officeappsdeploymentstatus", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates if the crm org is to be marked as primary syncing org for the mailbox record.</para>
        /// <para>Display Name: Crm Org Marked as Primary Org for Exchange Mailbox</para>
        /// </summary>
        [AttributeLogicalName("orgmarkedasprimaryforexchangesync")]
        [DisplayName("Crm Org Marked as Primary Org for Exchange Mailbox")]
        public bool? OrgMarkedAsPrimaryForExchangeSync {
            get {
                return GetAttributeValue<bool?>("orgmarkedasprimaryforexchangesync");
            }
            set {
                SetAttributeValue("orgmarkedasprimaryforexchangesync", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the organization associated with the record.</para>
        /// <para>Display Name: Organization</para>
        /// </summary>
        [AttributeLogicalName("organizationid")]
        [DisplayName("Organization")]
        public EntityReference OrganizationId {
            get {
                return GetAttributeValue<EntityReference>("organizationid");
            }
        }
        
        /// <summary>
        /// <para>Select how outgoing email will be sent from the mailbox.</para>
        /// <para>Display Name: Outgoing Email</para>
        /// </summary>
        [AttributeLogicalName("outgoingemaildeliverymethod")]
        [DisplayName("Outgoing Email")]
        public Mailbox_OutgoingEmailDeliveryMethod? OutgoingEmailDeliveryMethod {
            get {
                return GetOptionSetValue<Mailbox_OutgoingEmailDeliveryMethod>("outgoingemaildeliverymethod");
            }
            set {
                SetOptionSetValue("outgoingemaildeliverymethod", value);
            }
        }
        
        /// <summary>
        /// <para>Select the status of outgoing email messages.</para>
        /// <para>Display Name: Outgoing Email Status</para>
        /// </summary>
        [AttributeLogicalName("outgoingemailstatus")]
        [DisplayName("Outgoing Email Status")]
        public Mailbox_OutgoingEmailStatus? OutgoingEmailStatus {
            get {
                return GetOptionSetValue<Mailbox_OutgoingEmailStatus>("outgoingemailstatus");
            }
            set {
                SetOptionSetValue("outgoingemailstatus", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the user or team who is assigned to manage the record. This field is updated every time the record is assigned to a different user.</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Select the business unit that owns the record.</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the team that owns the record.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the user that owns the record.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Type the password for the mailbox.</para>
        /// <para>Display Name: Password</para>
        /// </summary>
        [AttributeLogicalName("password")]
        [DisplayName("Password")]
        [MaxLength(200)]
        public string Password {
            get {
                return GetAttributeValue<string>("password");
            }
            set {
                SetAttributeValue("password", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when processing will begin on this mailbox.</para>
        /// <para>Display Name: Postpone Mailbox Processing Until</para>
        /// </summary>
        [AttributeLogicalName("postponemailboxprocessinguntil")]
        [DisplayName("Postpone Mailbox Processing Until")]
        public DateTime? PostponeMailboxProcessingUntil {
            get {
                return GetAttributeValue<DateTime?>("postponemailboxprocessinguntil");
            }
            set {
                SetAttributeValue("postponemailboxprocessinguntil", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the next outlook mail app install will be run for a mailbox record.</para>
        /// <para>Display Name: Postpone Outlook Mail App Install Until</para>
        /// </summary>
        [AttributeLogicalName("postponeofficeappsdeploymentuntil")]
        [DisplayName("Postpone Outlook Mail App Install Until")]
        public DateTime? PostponeOfficeAppsDeploymentUntil {
            get {
                return GetAttributeValue<DateTime?>("postponeofficeappsdeploymentuntil");
            }
            set {
                SetAttributeValue("postponeofficeappsdeploymentuntil", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the mailbox can start sending emails.</para>
        /// <para>Display Name: Postpone Sending Until</para>
        /// </summary>
        [AttributeLogicalName("postponesendinguntil")]
        [DisplayName("Postpone Sending Until")]
        public DateTime? PostponeSendingUntil {
            get {
                return GetAttributeValue<DateTime?>("postponesendinguntil");
            }
            set {
                SetAttributeValue("postponesendinguntil", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the next email configuration test will be run for a mailbox record.</para>
        /// <para>Display Name: Postpone Test Email Configuration Until</para>
        /// </summary>
        [AttributeLogicalName("postponetestemailconfigurationuntil")]
        [DisplayName("Postpone Test Email Configuration Until")]
        public DateTime? PostponeTestEmailConfigurationUntil {
            get {
                return GetAttributeValue<DateTime?>("postponetestemailconfigurationuntil");
            }
            set {
                SetAttributeValue("postponetestemailconfigurationuntil", value);
            }
        }
        
        /// <summary>
        /// <para>Type the name of the mailbox.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Name")]
        [MaxLength(200)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether to delete emails from the mailbox after processing.</para>
        /// <para>Display Name: Delete Emails after Processing</para>
        /// </summary>
        [AttributeLogicalName("processanddeleteemails")]
        [DisplayName("Delete Emails after Processing")]
        public bool? ProcessAndDeleteEmails {
            get {
                return GetAttributeValue<bool?>("processanddeleteemails");
            }
            set {
                SetAttributeValue("processanddeleteemails", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time to start processing email received by the mailbox.</para>
        /// <para>Display Name: Process Email Received After</para>
        /// </summary>
        [AttributeLogicalName("processemailreceivedafter")]
        [DisplayName("Process Email Received After")]
        public DateTime? ProcessEmailReceivedAfter {
            get {
                return GetAttributeValue<DateTime?>("processemailreceivedafter");
            }
            set {
                SetAttributeValue("processemailreceivedafter", value);
            }
        }
        
        /// <summary>
        /// <para>The number of times mailbox has processed</para>
        /// <para>Display Name: Monitor Performance</para>
        /// </summary>
        [AttributeLogicalName("processedtimes")]
        [DisplayName("Monitor Performance")]
        [Range(-1, 2147483647)]
        public int? ProcessedTimes {
            get {
                return GetAttributeValue<int?>("processedtimes");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the processing of the mailbox was last attempted.</para>
        /// <para>Display Name: Date Processing Last Attempted</para>
        /// </summary>
        [AttributeLogicalName("processinglastattemptedon")]
        [DisplayName("Date Processing Last Attempted")]
        public DateTime? ProcessingLastAttemptedOn {
            get {
                return GetAttributeValue<DateTime?>("processinglastattemptedon");
            }
        }
        
        /// <summary>
        /// <para>Information that indicates whether email will be processed for this mailbox</para>
        /// <para>Display Name: Mailbox Processing State</para>
        /// </summary>
        [AttributeLogicalName("processingstatecode")]
        [DisplayName("Mailbox Processing State")]
        [Range(0, 2147483647)]
        public int? ProcessingStateCode {
            get {
                return GetAttributeValue<int?>("processingstatecode");
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Postpone receiving emails for the mailbox until the specified data and time.</para>
        /// </summary>
        [AttributeLogicalName("receivingpostponeduntil")]
        [DisplayName("Postpone receiving emails for the mailbox until the specified data and time.")]
        public DateTime? ReceivingPostponedUntil {
            get {
                return GetAttributeValue<DateTime?>("receivingpostponeduntil");
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Postpone processing Appointments, Contacts, and Tasks for the mailbox until the specified data and time.</para>
        /// </summary>
        [AttributeLogicalName("receivingpostponeduntilforact")]
        [DisplayName("Postpone processing Appointments, Contacts, and Tasks for the mailbox until the s" +
            "pecified data and time.")]
        public DateTime? ReceivingPostponedUntilForACT {
            get {
                return GetAttributeValue<DateTime?>("receivingpostponeduntilforact");
            }
        }
        
        /// <summary>
        /// <para>Choose the user associated to the mailbox.</para>
        /// <para>Display Name: Regarding</para>
        /// </summary>
        [AttributeLogicalName("regardingobjectid")]
        [DisplayName("Regarding")]
        public EntityReference RegardingObjectId {
            get {
                return GetAttributeValue<EntityReference>("regardingobjectid");
            }
        }
        
        /// <summary>
        /// <para>Shows whether the mailbox is active or inactive.</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public MailboxState? StateCode {
            get {
                return GetOptionSetValue<MailboxState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the mailbox's status.</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public Mailbox_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<Mailbox_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>Identifies the timestamp after for which emails should be tagged in the remote system.</para>
        /// <para>Display Name: Tag Emails After</para>
        /// </summary>
        [AttributeLogicalName("tagemailsafter")]
        [DisplayName("Tag Emails After")]
        public DateTime? TagEmailsAfter {
            get {
                return GetAttributeValue<DateTime?>("tagemailsafter");
            }
            set {
                SetAttributeValue("tagemailsafter", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the number of times an email configuration test has been performed.</para>
        /// <para>Display Name: Test Email Configuration Retry Count</para>
        /// </summary>
        [AttributeLogicalName("testemailconfigurationretrycount")]
        [DisplayName("Test Email Configuration Retry Count")]
        [Range(0, 2147483647)]
        public int? TestEmailConfigurationRetryCount {
            get {
                return GetAttributeValue<int?>("testemailconfigurationretrycount");
            }
            set {
                SetAttributeValue("testemailconfigurationretrycount", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates if the email configuration test has been scheduled for a mailbox record.</para>
        /// <para>Display Name: Test Email Configuration Scheduled</para>
        /// </summary>
        [AttributeLogicalName("testemailconfigurationscheduled")]
        [DisplayName("Test Email Configuration Scheduled")]
        public bool? TestEmailConfigurationScheduled {
            get {
                return GetAttributeValue<bool?>("testemailconfigurationscheduled");
            }
            set {
                SetAttributeValue("testemailconfigurationscheduled", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time when the last email configuration test was completed for a mailbox record.</para>
        /// <para>Display Name: Mailbox Test Completed On</para>
        /// </summary>
        [AttributeLogicalName("testmailboxaccesscompletedon")]
        [DisplayName("Mailbox Test Completed On")]
        public DateTime? TestMailboxAccessCompletedOn {
            get {
                return GetAttributeValue<DateTime?>("testmailboxaccesscompletedon");
            }
            set {
                SetAttributeValue("testmailboxaccesscompletedon", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Concatenation of transient failure counts of all mailbox operations.</para>
        /// <para>Display Name: Transient Failure Count</para>
        /// </summary>
        [AttributeLogicalName("transientfailurecount")]
        [DisplayName("Transient Failure Count")]
        [Range(0, 2147483647)]
        public int? TransientFailureCount {
            get {
                return GetAttributeValue<int?>("transientfailurecount");
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the Undeliverable folder in the mailbox managed by Microsoft Exchange.</para>
        /// <para>Display Name: Undeliverable Folder</para>
        /// </summary>
        [AttributeLogicalName("undeliverablefolder")]
        [DisplayName("Undeliverable Folder")]
        [MaxLength(256)]
        public string UndeliverableFolder {
            get {
                return GetAttributeValue<string>("undeliverablefolder");
            }
            set {
                SetAttributeValue("undeliverablefolder", value);
            }
        }
        
        /// <summary>
        /// <para>Type a user name used for mailbox authentication.</para>
        /// <para>Display Name: User Name</para>
        /// </summary>
        [AttributeLogicalName("username")]
        [DisplayName("User Name")]
        [MaxLength(200)]
        public string Username {
            get {
                return GetAttributeValue<string>("username");
            }
            set {
                SetAttributeValue("username", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates if verbose tracing needs to be enabled for this mailbox.</para>
        /// <para>Display Name: Verbose Logging</para>
        /// </summary>
        [AttributeLogicalName("verboseloggingenabled")]
        [DisplayName("Verbose Logging")]
        [Range(0, 100)]
        public int? VerboseLoggingEnabled {
            get {
                return GetAttributeValue<int?>("verboseloggingenabled");
            }
            set {
                SetAttributeValue("verboseloggingenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Version number of the mailbox.</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        [RelationshipSchemaName("Mailbox_SyncErrors")]
        public IEnumerable<SyncError> Mailbox_SyncErrors {
            get {
                return GetRelatedEntities<SyncError>("Mailbox_SyncErrors", null);
            }
            set {
                SetRelatedEntities("Mailbox_SyncErrors", null, value);
            }
        }
        
        [RelationshipSchemaName("activitypointer_sendermailboxid_mailbox")]
        public IEnumerable<ActivityPointer> activitypointer_sendermailboxid_mailbox {
            get {
                return GetRelatedEntities<ActivityPointer>("activitypointer_sendermailboxid_mailbox", null);
            }
            set {
                SetRelatedEntities("activitypointer_sendermailboxid_mailbox", null, value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_mailbox")]
        public BusinessUnit business_unit_mailbox {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_mailbox", null);
            }
            set {
                SetRelatedEntity("business_unit_mailbox", null, value);
            }
        }
        
        [RelationshipSchemaName("campaignactivity_mailbox_sendermailboxid")]
        public IEnumerable<CampaignActivity> campaignactivity_mailbox_sendermailboxid {
            get {
                return GetRelatedEntities<CampaignActivity>("campaignactivity_mailbox_sendermailboxid", null);
            }
            set {
                SetRelatedEntities("campaignactivity_mailbox_sendermailboxid", null, value);
            }
        }
        
        [RelationshipSchemaName("campaignresponse_mailbox_sendermailboxid")]
        public IEnumerable<CampaignResponse> campaignresponse_mailbox_sendermailboxid {
            get {
                return GetRelatedEntities<CampaignResponse>("campaignresponse_mailbox_sendermailboxid", null);
            }
            set {
                SetRelatedEntities("campaignresponse_mailbox_sendermailboxid", null, value);
            }
        }
        
        [RelationshipSchemaName("email_sendermailboxid_mailbox")]
        public IEnumerable<Email> email_sendermailboxid_mailbox {
            get {
                return GetRelatedEntities<Email>("email_sendermailboxid_mailbox", null);
            }
            set {
                SetRelatedEntities("email_sendermailboxid_mailbox", null, value);
            }
        }
        
        [AttributeLogicalName("emailserverprofile")]
        [RelationshipSchemaName("emailserverprofile_mailbox")]
        public EmailServerProfile emailserverprofile_mailbox {
            get {
                return GetRelatedEntity<EmailServerProfile>("emailserverprofile_mailbox", null);
            }
            set {
                SetRelatedEntity("emailserverprofile_mailbox", null, value);
            }
        }
        
        [RelationshipSchemaName("incidentresolution_mailbox_sendermailboxid")]
        public IEnumerable<IncidentResolution> incidentresolution_mailbox_sendermailboxid {
            get {
                return GetRelatedEntities<IncidentResolution>("incidentresolution_mailbox_sendermailboxid", null);
            }
            set {
                SetRelatedEntities("incidentresolution_mailbox_sendermailboxid", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_mailbox_createdby")]
        public SystemUser lk_mailbox_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_mailbox_createdby", null);
            }
            set {
                SetRelatedEntity("lk_mailbox_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_mailbox_createdonbehalfby")]
        public SystemUser lk_mailbox_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_mailbox_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_mailbox_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_mailbox_modifiedby")]
        public SystemUser lk_mailbox_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_mailbox_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_mailbox_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_mailbox_modifiedonbehalfby")]
        public SystemUser lk_mailbox_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_mailbox_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_mailbox_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("mailbox_email_ReceivingMailboxId")]
        public IEnumerable<Email> mailbox_email_ReceivingMailboxId {
            get {
                return GetRelatedEntities<Email>("mailbox_email_ReceivingMailboxId", null);
            }
            set {
                SetRelatedEntities("mailbox_email_ReceivingMailboxId", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("mailbox_regarding_systemuser")]
        public SystemUser mailbox_regarding_systemuser {
            get {
                return GetRelatedEntity<SystemUser>("mailbox_regarding_systemuser", null);
            }
            set {
                SetRelatedEntity("mailbox_regarding_systemuser", null, value);
            }
        }
        
        [RelationshipSchemaName("opportunityclose_mailbox_sendermailboxid")]
        public IEnumerable<OpportunityClose> opportunityclose_mailbox_sendermailboxid {
            get {
                return GetRelatedEntities<OpportunityClose>("opportunityclose_mailbox_sendermailboxid", null);
            }
            set {
                SetRelatedEntities("opportunityclose_mailbox_sendermailboxid", null, value);
            }
        }
        
        [AttributeLogicalName("organizationid")]
        [RelationshipSchemaName("organization_mailbox")]
        public Organization organization_mailbox {
            get {
                return GetRelatedEntity<Organization>("organization_mailbox", null);
            }
            set {
                SetRelatedEntity("organization_mailbox", null, value);
            }
        }
        
        [RelationshipSchemaName("serviceappointment_mailbox_sendermailboxid")]
        public IEnumerable<ServiceAppointment> serviceappointment_mailbox_sendermailboxid {
            get {
                return GetRelatedEntities<ServiceAppointment>("serviceappointment_mailbox_sendermailboxid", null);
            }
            set {
                SetRelatedEntities("serviceappointment_mailbox_sendermailboxid", null, value);
            }
        }
        
        [RelationshipSchemaName("systemuser_defaultmailbox_mailbox")]
        public IEnumerable<SystemUser> systemuser_defaultmailbox_mailbox {
            get {
                return GetRelatedEntities<SystemUser>("systemuser_defaultmailbox_mailbox", null);
            }
            set {
                SetRelatedEntities("systemuser_defaultmailbox_mailbox", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_mailbox")]
        public Team team_mailbox {
            get {
                return GetRelatedEntity<Team>("team_mailbox", null);
            }
            set {
                SetRelatedEntity("team_mailbox", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_mailbox")]
        public SystemUser user_mailbox {
            get {
                return GetRelatedEntity<SystemUser>("user_mailbox", null);
            }
            set {
                SetRelatedEntity("user_mailbox", null, value);
            }
        }
        
        public static Mailbox Retrieve(IOrganizationService service, Guid id, params Expression<Func<Mailbox,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Potential revenue-generating event, or sale to an account, which needs to be tracked through a sales process to completion.</para>
    /// <para>Display Name: Opportunity</para>
    /// </summary>
    [EntityLogicalName("opportunity")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class Opportunity : ExtendedEntity<OpportunityState, Opportunity_StatusCode> {
        
        public const string EntityLogicalName = "opportunity";
        
        public const int EntityTypeCode = 3;
        
        public Opportunity() : 
                base(EntityLogicalName) {
        }
        
        public Opportunity(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("name");
            }
        }
        
        [AttributeLogicalName("opportunityid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("opportunityid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the opportunity.</para>
        /// <para>Display Name: Opportunity</para>
        /// </summary>
        [AttributeLogicalName("opportunityid")]
        [DisplayName("Opportunity")]
        public Guid? OpportunityId {
            get {
                return GetAttributeValue<Guid?>("opportunityid");
            }
            set {
                SetId("opportunityid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the account with which the opportunity is associated.</para>
        /// <para>Display Name: Account</para>
        /// </summary>
        [AttributeLogicalName("accountid")]
        [DisplayName("Account")]
        public EntityReference AccountId {
            get {
                return GetAttributeValue<EntityReference>("accountid");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the opportunity was closed or canceled.</para>
        /// <para>Display Name: Actual Close Date</para>
        /// </summary>
        [AttributeLogicalName("actualclosedate")]
        [DisplayName("Actual Close Date")]
        public DateTime? ActualCloseDate {
            get {
                return GetAttributeValue<DateTime?>("actualclosedate");
            }
            set {
                SetAttributeValue("actualclosedate", value);
            }
        }
        
        /// <summary>
        /// <para>Type the actual revenue amount for the opportunity for reporting and analysis of estimated versus actual sales. Field defaults to the Est. Revenue value when an opportunity is won.</para>
        /// <para>Display Name: Actual Revenue</para>
        /// </summary>
        [AttributeLogicalName("actualvalue")]
        [DisplayName("Actual Revenue")]
        public decimal? ActualValue {
            get {
                return GetMoneyValue("actualvalue");
            }
            set {
                SetMoneyValue("actualvalue", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the Actual Revenue field converted to the system's default base currency for reporting purposes. The calculation uses the exchange rate specified in the Currencies area.</para>
        /// <para>Display Name: Actual Revenue (Base)</para>
        /// </summary>
        [AttributeLogicalName("actualvalue_base")]
        [DisplayName("Actual Revenue (Base)")]
        public decimal? ActualValue_Base {
            get {
                return GetMoneyValue("actualvalue_base");
            }
        }
        
        /// <summary>
        /// <para>Type a value between 0 and 1,000,000,000,000 to indicate the lead's potential available budget.</para>
        /// <para>Display Name: Budget Amount</para>
        /// </summary>
        [AttributeLogicalName("budgetamount")]
        [DisplayName("Budget Amount")]
        public decimal? BudgetAmount {
            get {
                return GetMoneyValue("budgetamount");
            }
            set {
                SetMoneyValue("budgetamount", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the budget amount converted to the system's base currency.</para>
        /// <para>Display Name: Budget Amount (Base)</para>
        /// </summary>
        [AttributeLogicalName("budgetamount_base")]
        [DisplayName("Budget Amount (Base)")]
        public decimal? BudgetAmount_Base {
            get {
                return GetMoneyValue("budgetamount_base");
            }
        }
        
        /// <summary>
        /// <para>Select the likely budget status for the lead's company. This may help determine the lead rating or your sales approach.</para>
        /// <para>Display Name: Budget</para>
        /// </summary>
        [AttributeLogicalName("budgetstatus")]
        [DisplayName("Budget")]
        public budgetstatus? BudgetStatus {
            get {
                return GetOptionSetValue<budgetstatus>("budgetstatus");
            }
            set {
                SetOptionSetValue("budgetstatus", value);
            }
        }
        
        /// <summary>
        /// <para>campaign_opportunities</para>
        /// <para>Display Name: Source Campaign</para>
        /// </summary>
        [AttributeLogicalName("campaignid")]
        [DisplayName("Source Campaign")]
        public EntityReference CampaignId {
            get {
                return GetAttributeValue<EntityReference>("campaignid");
            }
            set {
                SetAttributeValue("campaignid", value);
            }
        }
        
        /// <summary>
        /// <para>Choose whether the proposal feedback has been captured for the opportunity.</para>
        /// <para>Display Name: Proposal Feedback Captured</para>
        /// </summary>
        [AttributeLogicalName("captureproposalfeedback")]
        [DisplayName("Proposal Feedback Captured")]
        public bool? CaptureProposalFeedback {
            get {
                return GetAttributeValue<bool?>("captureproposalfeedback");
            }
            set {
                SetAttributeValue("captureproposalfeedback", value);
            }
        }
        
        /// <summary>
        /// <para>Type a number from 0 to 100 that represents the likelihood of closing the opportunity. This can aid the sales team in their efforts to convert the opportunity in a sale.</para>
        /// <para>Display Name: Probability</para>
        /// </summary>
        [AttributeLogicalName("closeprobability")]
        [DisplayName("Probability")]
        [Range(0, 100)]
        public int? CloseProbability {
            get {
                return GetAttributeValue<int?>("closeprobability");
            }
            set {
                SetAttributeValue("closeprobability", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether a final proposal has been completed for the opportunity.</para>
        /// <para>Display Name: Final Proposal Ready</para>
        /// </summary>
        [AttributeLogicalName("completefinalproposal")]
        [DisplayName("Final Proposal Ready")]
        public bool? CompleteFinalProposal {
            get {
                return GetAttributeValue<bool?>("completefinalproposal");
            }
            set {
                SetAttributeValue("completefinalproposal", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether an internal review has been completed for this opportunity.</para>
        /// <para>Display Name: Complete Internal Review</para>
        /// </summary>
        [AttributeLogicalName("completeinternalreview")]
        [DisplayName("Complete Internal Review")]
        public bool? CompleteInternalReview {
            get {
                return GetAttributeValue<bool?>("completeinternalreview");
            }
            set {
                SetAttributeValue("completeinternalreview", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the lead confirmed interest in your offerings. This helps in determining the lead quality and the probability of it turning into an opportunity.</para>
        /// <para>Display Name: Confirm Interest</para>
        /// </summary>
        [AttributeLogicalName("confirminterest")]
        [DisplayName("Confirm Interest")]
        public bool? ConfirmInterest {
            get {
                return GetAttributeValue<bool?>("confirminterest");
            }
            set {
                SetAttributeValue("confirminterest", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the contact associated with the opportunity.</para>
        /// <para>Display Name: Contact</para>
        /// </summary>
        [AttributeLogicalName("contactid")]
        [DisplayName("Contact")]
        public EntityReference ContactId {
            get {
                return GetAttributeValue<EntityReference>("contactid");
            }
        }
        
        /// <summary>
        /// <para>lk_opportunitybase_createdby</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics CRM options.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>lk_opportunity_createdonbehalfby</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Type notes about the company or organization associated with the opportunity.</para>
        /// <para>Display Name: Current Situation</para>
        /// </summary>
        [AttributeLogicalName("currentsituation")]
        [DisplayName("Current Situation")]
        public string CurrentSituation {
            get {
                return GetAttributeValue<string>("currentsituation");
            }
            set {
                SetAttributeValue("currentsituation", value);
            }
        }
        
        /// <summary>
        /// <para>opportunity_customer_contacts</para>
        /// <para>Display Name: Potential Customer</para>
        /// </summary>
        [AttributeLogicalName("customerid")]
        [DisplayName("Potential Customer")]
        public EntityReference CustomerId {
            get {
                return GetAttributeValue<EntityReference>("customerid");
            }
            set {
                SetAttributeValue("customerid", value);
            }
        }
        
        /// <summary>
        /// <para>Type some notes about the customer's requirements, to help the sales team identify products and services that could meet their requirements.</para>
        /// <para>Display Name: Customer Need</para>
        /// </summary>
        [AttributeLogicalName("customerneed")]
        [DisplayName("Customer Need")]
        public string CustomerNeed {
            get {
                return GetAttributeValue<string>("customerneed");
            }
            set {
                SetAttributeValue("customerneed", value);
            }
        }
        
        /// <summary>
        /// <para>Type notes about the customer's pain points to help the sales team identify products and services that could address these pain points.</para>
        /// <para>Display Name: Customer Pain Points</para>
        /// </summary>
        [AttributeLogicalName("customerpainpoints")]
        [DisplayName("Customer Pain Points")]
        public string CustomerPainPoints {
            get {
                return GetAttributeValue<string>("customerpainpoints");
            }
            set {
                SetAttributeValue("customerpainpoints", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether your notes include information about who makes the purchase decisions at the lead's company.</para>
        /// <para>Display Name: Decision Maker?</para>
        /// </summary>
        [AttributeLogicalName("decisionmaker")]
        [DisplayName("Decision Maker?")]
        public bool? DecisionMaker {
            get {
                return GetAttributeValue<bool?>("decisionmaker");
            }
            set {
                SetAttributeValue("decisionmaker", value);
            }
        }
        
        /// <summary>
        /// <para>Type additional information to describe the opportunity, such as possible products to sell or past purchases from the customer.</para>
        /// <para>Display Name: Description</para>
        /// </summary>
        [AttributeLogicalName("description")]
        [DisplayName("Description")]
        public string Description {
            get {
                return GetAttributeValue<string>("description");
            }
            set {
                SetAttributeValue("description", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether a proposal has been developed for the opportunity.</para>
        /// <para>Display Name: Develop Proposal</para>
        /// </summary>
        [AttributeLogicalName("developproposal")]
        [DisplayName("Develop Proposal")]
        public bool? DevelopProposal {
            get {
                return GetAttributeValue<bool?>("developproposal");
            }
            set {
                SetAttributeValue("developproposal", value);
            }
        }
        
        /// <summary>
        /// <para>Type the discount amount for the opportunity if the customer is eligible for special savings.</para>
        /// <para>Display Name: Opportunity Discount Amount</para>
        /// </summary>
        [AttributeLogicalName("discountamount")]
        [DisplayName("Opportunity Discount Amount")]
        public decimal? DiscountAmount {
            get {
                return GetMoneyValue("discountamount");
            }
            set {
                SetMoneyValue("discountamount", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the Opportunity Discount Amount field converted to the system's default base currency for reporting purposes. The calculation uses the exchange rate specified in the Currencies area.</para>
        /// <para>Display Name: Opportunity Discount Amount (Base)</para>
        /// </summary>
        [AttributeLogicalName("discountamount_base")]
        [DisplayName("Opportunity Discount Amount (Base)")]
        public decimal? DiscountAmount_Base {
            get {
                return GetMoneyValue("discountamount_base");
            }
        }
        
        /// <summary>
        /// <para>Type the discount rate that should be applied to the Product Totals field to include additional savings for the customer in the opportunity.</para>
        /// <para>Display Name: Opportunity Discount (%)</para>
        /// </summary>
        [AttributeLogicalName("discountpercentage")]
        [DisplayName("Opportunity Discount (%)")]
        public decimal? DiscountPercentage {
            get {
                return GetAttributeValue<decimal?>("discountpercentage");
            }
            set {
                SetAttributeValue("discountpercentage", value);
            }
        }
        
        /// <summary>
        /// <para>The primary email address for the entity.</para>
        /// <para>Display Name: Email Address</para>
        /// </summary>
        [AttributeLogicalName("emailaddress")]
        [DisplayName("Email Address")]
        [MaxLength(100)]
        public string EmailAddress {
            get {
                return GetAttributeValue<string>("emailaddress");
            }
            set {
                SetAttributeValue("emailaddress", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the expected closing date of the opportunity to help make accurate revenue forecasts.</para>
        /// <para>Display Name: Est. Close Date</para>
        /// </summary>
        [AttributeLogicalName("estimatedclosedate")]
        [DisplayName("Est. Close Date")]
        public DateTime? EstimatedCloseDate {
            get {
                return GetAttributeValue<DateTime?>("estimatedclosedate");
            }
            set {
                SetAttributeValue("estimatedclosedate", value);
            }
        }
        
        /// <summary>
        /// <para>Type the estimated revenue amount to indicate the potential sale or value of the opportunity for revenue forecasting. This field can be either system-populated or editable based on the selection in the Revenue field.</para>
        /// <para>Display Name: Est. Revenue</para>
        /// </summary>
        [AttributeLogicalName("estimatedvalue")]
        [DisplayName("Est. Revenue")]
        public decimal? EstimatedValue {
            get {
                return GetMoneyValue("estimatedvalue");
            }
            set {
                SetMoneyValue("estimatedvalue", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the Actual Revenue field converted to the system's default base currency for reporting purposes. The calculation uses the exchange rate specified in the Currencies area.</para>
        /// <para>Display Name: Est. Revenue (Base)</para>
        /// </summary>
        [AttributeLogicalName("estimatedvalue_base")]
        [DisplayName("Est. Revenue (Base)")]
        public decimal? EstimatedValue_Base {
            get {
                return GetMoneyValue("estimatedvalue_base");
            }
        }
        
        /// <summary>
        /// <para>Select whether the fit between the lead's requirements and your offerings was evaluated.</para>
        /// <para>Display Name: Evaluate Fit</para>
        /// </summary>
        [AttributeLogicalName("evaluatefit")]
        [DisplayName("Evaluate Fit")]
        public bool? EvaluateFit {
            get {
                return GetAttributeValue<bool?>("evaluatefit");
            }
            set {
                SetAttributeValue("evaluatefit", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("Exchange Rate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Choose whether the sales team has recorded detailed notes on the proposals and the account's responses.</para>
        /// <para>Display Name: File Debrief</para>
        /// </summary>
        [AttributeLogicalName("filedebrief")]
        [DisplayName("File Debrief")]
        public bool? FileDebrief {
            get {
                return GetAttributeValue<bool?>("filedebrief");
            }
            set {
                SetAttributeValue("filedebrief", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the date and time when the final decision of the opportunity was made.</para>
        /// <para>Display Name: Final Decision Date</para>
        /// </summary>
        [AttributeLogicalName("finaldecisiondate")]
        [DisplayName("Final Decision Date")]
        public DateTime? FinalDecisionDate {
            get {
                return GetAttributeValue<DateTime?>("finaldecisiondate");
            }
            set {
                SetAttributeValue("finaldecisiondate", value);
            }
        }
        
        /// <summary>
        /// <para>Type the cost of freight or shipping for the products included in the opportunity for use in calculating the Total Amount field.</para>
        /// <para>Display Name: Freight Amount</para>
        /// </summary>
        [AttributeLogicalName("freightamount")]
        [DisplayName("Freight Amount")]
        public decimal? FreightAmount {
            get {
                return GetMoneyValue("freightamount");
            }
            set {
                SetMoneyValue("freightamount", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the Freight Amount field converted to the system's default base currency for reporting purposes. The calculation uses the exchange rate specified in the Currencies area.</para>
        /// <para>Display Name: Freight Amount (Base)</para>
        /// </summary>
        [AttributeLogicalName("freightamount_base")]
        [DisplayName("Freight Amount (Base)")]
        public decimal? FreightAmount_Base {
            get {
                return GetMoneyValue("freightamount_base");
            }
        }
        
        /// <summary>
        /// <para>Select whether information about competitors is included.</para>
        /// <para>Display Name: Identify Competitors</para>
        /// </summary>
        [AttributeLogicalName("identifycompetitors")]
        [DisplayName("Identify Competitors")]
        public bool? IdentifyCompetitors {
            get {
                return GetAttributeValue<bool?>("identifycompetitors");
            }
            set {
                SetAttributeValue("identifycompetitors", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the customer contacts for this opportunity have been identified.</para>
        /// <para>Display Name: Identify Customer Contacts</para>
        /// </summary>
        [AttributeLogicalName("identifycustomercontacts")]
        [DisplayName("Identify Customer Contacts")]
        public bool? IdentifyCustomerContacts {
            get {
                return GetAttributeValue<bool?>("identifycustomercontacts");
            }
            set {
                SetAttributeValue("identifycustomercontacts", value);
            }
        }
        
        /// <summary>
        /// <para>Choose whether you have recorded who will pursue the opportunity.</para>
        /// <para>Display Name: Identify Sales Team</para>
        /// </summary>
        [AttributeLogicalName("identifypursuitteam")]
        [DisplayName("Identify Sales Team")]
        public bool? IdentifyPursuitTeam {
            get {
                return GetAttributeValue<bool?>("identifypursuitteam");
            }
            set {
                SetAttributeValue("identifypursuitteam", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the data import or data migration that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Choose whether someone from the sales team contacted this lead earlier.</para>
        /// <para>Display Name: Initial Communication</para>
        /// </summary>
        [AttributeLogicalName("initialcommunication")]
        [DisplayName("Initial Communication")]
        public initialcommunication? InitialCommunication {
            get {
                return GetOptionSetValue<initialcommunication>("initialcommunication");
            }
            set {
                SetOptionSetValue("initialcommunication", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the estimated revenue for the opportunity is calculated automatically based on the products entered or entered manually by a user.</para>
        /// <para>Display Name: Revenue</para>
        /// </summary>
        [AttributeLogicalName("isrevenuesystemcalculated")]
        [DisplayName("Revenue")]
        public bool? IsRevenueSystemCalculated {
            get {
                return GetAttributeValue<bool?>("isrevenuesystemcalculated");
            }
            set {
                SetAttributeValue("isrevenuesystemcalculated", value);
            }
        }
        
        /// <summary>
        /// <para>Contains the date time stamp of the last on hold time.</para>
        /// <para>Display Name: Last On Hold Time</para>
        /// </summary>
        [AttributeLogicalName("lastonholdtime")]
        [DisplayName("Last On Hold Time")]
        public DateTime? LastOnHoldTime {
            get {
                return GetAttributeValue<DateTime?>("lastonholdtime");
            }
            set {
                SetAttributeValue("lastonholdtime", value);
            }
        }
        
        /// <summary>
        /// <para>lk_opportunitybase_modifiedby</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics CRM options.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>lk_opportunity_modifiedonbehalfby</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Type a subject or descriptive name, such as the expected order or company name, for the opportunity.</para>
        /// <para>Display Name: Topic</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Topic")]
        [MaxLength(300)]
        public string Name {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Choose how high the level of need is for the lead's company.</para>
        /// <para>Display Name: Need</para>
        /// </summary>
        [AttributeLogicalName("need")]
        [DisplayName("Need")]
        public need? Need {
            get {
                return GetOptionSetValue<need>("need");
            }
            set {
                SetOptionSetValue("need", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the duration in minutes for which the opportunity was on hold.</para>
        /// <para>Display Name: On Hold Time (Minutes)</para>
        /// </summary>
        [AttributeLogicalName("onholdtime")]
        [DisplayName("On Hold Time (Minutes)")]
        [Range(-2147483648, 2147483647)]
        public int? OnHoldTime {
            get {
                return GetAttributeValue<int?>("onholdtime");
            }
        }
        
        /// <summary>
        /// <para>Select the expected value or priority of the opportunity based on revenue, customer status, or closing probability.</para>
        /// <para>Display Name: Rating</para>
        /// </summary>
        [AttributeLogicalName("opportunityratingcode")]
        [DisplayName("Rating")]
        public Opportunity_OpportunityRatingCode? OpportunityRatingCode {
            get {
                return GetOptionSetValue<Opportunity_OpportunityRatingCode>("opportunityratingcode");
            }
            set {
                SetOptionSetValue("opportunityratingcode", value);
            }
        }
        
        /// <summary>
        /// <para>opportunity_originating_lead</para>
        /// <para>Display Name: Originating Lead</para>
        /// </summary>
        [AttributeLogicalName("originatingleadid")]
        [DisplayName("Originating Lead")]
        public EntityReference OriginatingLeadId {
            get {
                return GetAttributeValue<EntityReference>("originatingleadid");
            }
            set {
                SetAttributeValue("originatingleadid", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>owner_opportunitys</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>business_unit_opportunities</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>team_opportunities</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>opportunity_owning_user</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>opportunity_parent_account</para>
        /// <para>Display Name: Account</para>
        /// </summary>
        [AttributeLogicalName("parentaccountid")]
        [DisplayName("Account")]
        public EntityReference ParentAccountId {
            get {
                return GetAttributeValue<EntityReference>("parentaccountid");
            }
            set {
                SetAttributeValue("parentaccountid", value);
            }
        }
        
        /// <summary>
        /// <para>opportunity_parent_contact</para>
        /// <para>Display Name: Contact</para>
        /// </summary>
        [AttributeLogicalName("parentcontactid")]
        [DisplayName("Contact")]
        public EntityReference ParentContactId {
            get {
                return GetAttributeValue<EntityReference>("parentcontactid");
            }
            set {
                SetAttributeValue("parentcontactid", value);
            }
        }
        
        /// <summary>
        /// <para>Information about whether the opportunity participates in workflow rules.</para>
        /// <para>Display Name: Participates in Workflow</para>
        /// </summary>
        [AttributeLogicalName("participatesinworkflow")]
        [DisplayName("Participates in Workflow")]
        public bool? ParticipatesInWorkflow {
            get {
                return GetAttributeValue<bool?>("participatesinworkflow");
            }
            set {
                SetAttributeValue("participatesinworkflow", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the final proposal has been presented to the account.</para>
        /// <para>Display Name: Present Final Proposal</para>
        /// </summary>
        [AttributeLogicalName("presentfinalproposal")]
        [DisplayName("Present Final Proposal")]
        public bool? PresentFinalProposal {
            get {
                return GetAttributeValue<bool?>("presentfinalproposal");
            }
            set {
                SetAttributeValue("presentfinalproposal", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether a proposal for the opportunity has been presented to the account.</para>
        /// <para>Display Name: Presented Proposal</para>
        /// </summary>
        [AttributeLogicalName("presentproposal")]
        [DisplayName("Presented Proposal")]
        public bool? PresentProposal {
            get {
                return GetAttributeValue<bool?>("presentproposal");
            }
            set {
                SetAttributeValue("presentproposal", value);
            }
        }
        
        /// <summary>
        /// <para>price_level_opportunties</para>
        /// <para>Display Name: Price List</para>
        /// </summary>
        [AttributeLogicalName("pricelevelid")]
        [DisplayName("Price List")]
        public EntityReference PriceLevelId {
            get {
                return GetAttributeValue<EntityReference>("pricelevelid");
            }
            set {
                SetAttributeValue("pricelevelid", value);
            }
        }
        
        /// <summary>
        /// <para>Pricing error for the opportunity.</para>
        /// <para>Display Name: Pricing Error </para>
        /// </summary>
        [AttributeLogicalName("pricingerrorcode")]
        [DisplayName("Pricing Error ")]
        public qooi_pricingerrorcode? PricingErrorCode {
            get {
                return GetOptionSetValue<qooi_pricingerrorcode>("pricingerrorcode");
            }
            set {
                SetOptionSetValue("pricingerrorcode", value);
            }
        }
        
        /// <summary>
        /// <para>Type a subject or descriptive name, such as the expected order or company name, for the opportunity.</para>
        /// <para>Display Name: Topic</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Topic")]
        [MaxLength(300)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Select the priority so that preferred customers or critical issues are handled quickly.</para>
        /// <para>Display Name: Priority</para>
        /// </summary>
        [AttributeLogicalName("prioritycode")]
        [DisplayName("Priority")]
        public Opportunity_PriorityCode? PriorityCode {
            get {
                return GetOptionSetValue<Opportunity_PriorityCode>("prioritycode");
            }
            set {
                SetOptionSetValue("prioritycode", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the process.</para>
        /// <para>Display Name: Process</para>
        /// </summary>
        [AttributeLogicalName("processid")]
        [DisplayName("Process")]
        public Guid? ProcessId {
            get {
                return GetAttributeValue<Guid?>("processid");
            }
            set {
                SetAttributeValue("processid", value);
            }
        }
        
        /// <summary>
        /// <para>Type notes about the proposed solution for the opportunity.</para>
        /// <para>Display Name: Proposed Solution</para>
        /// </summary>
        [AttributeLogicalName("proposedsolution")]
        [DisplayName("Proposed Solution")]
        public string ProposedSolution {
            get {
                return GetAttributeValue<string>("proposedsolution");
            }
            set {
                SetAttributeValue("proposedsolution", value);
            }
        }
        
        /// <summary>
        /// <para>Choose whether an individual or a committee will be involved in the  purchase process for the lead.</para>
        /// <para>Display Name: Purchase Process</para>
        /// </summary>
        [AttributeLogicalName("purchaseprocess")]
        [DisplayName("Purchase Process")]
        public purchaseprocess? PurchaseProcess {
            get {
                return GetOptionSetValue<purchaseprocess>("purchaseprocess");
            }
            set {
                SetOptionSetValue("purchaseprocess", value);
            }
        }
        
        /// <summary>
        /// <para>Choose how long the lead will likely take to make the purchase.</para>
        /// <para>Display Name: Purchase Timeframe</para>
        /// </summary>
        [AttributeLogicalName("purchasetimeframe")]
        [DisplayName("Purchase Timeframe")]
        public purchasetimeframe? PurchaseTimeframe {
            get {
                return GetOptionSetValue<purchasetimeframe>("purchasetimeframe");
            }
            set {
                SetOptionSetValue("purchasetimeframe", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the decision about pursuing the opportunity has been made.</para>
        /// <para>Display Name: Decide Go/No-Go</para>
        /// </summary>
        [AttributeLogicalName("pursuitdecision")]
        [DisplayName("Decide Go/No-Go")]
        public bool? PursuitDecision {
            get {
                return GetAttributeValue<bool?>("pursuitdecision");
            }
            set {
                SetAttributeValue("pursuitdecision", value);
            }
        }
        
        /// <summary>
        /// <para>Type comments about the qualification or scoring of the lead.</para>
        /// <para>Display Name: Qualification Comments</para>
        /// </summary>
        [AttributeLogicalName("qualificationcomments")]
        [DisplayName("Qualification Comments")]
        public string QualificationComments {
            get {
                return GetAttributeValue<string>("qualificationcomments");
            }
            set {
                SetAttributeValue("qualificationcomments", value);
            }
        }
        
        /// <summary>
        /// <para>Type comments about the quotes associated with the opportunity.</para>
        /// <para>Display Name: Quote Comments</para>
        /// </summary>
        [AttributeLogicalName("quotecomments")]
        [DisplayName("Quote Comments")]
        public string QuoteComments {
            get {
                return GetAttributeValue<string>("quotecomments");
            }
            set {
                SetAttributeValue("quotecomments", value);
            }
        }
        
        /// <summary>
        /// <para>Choose whether the proposal feedback has been captured and resolved for the opportunity.</para>
        /// <para>Display Name: Feedback Resolved</para>
        /// </summary>
        [AttributeLogicalName("resolvefeedback")]
        [DisplayName("Feedback Resolved")]
        public bool? ResolveFeedback {
            get {
                return GetAttributeValue<bool?>("resolvefeedback");
            }
            set {
                SetAttributeValue("resolvefeedback", value);
            }
        }
        
        /// <summary>
        /// <para>manualsla_opportunity</para>
        /// <para>Display Name: SLA</para>
        /// </summary>
        [AttributeLogicalName("slaid")]
        [DisplayName("SLA")]
        public EntityReference SLAId {
            get {
                return GetAttributeValue<EntityReference>("slaid");
            }
            set {
                SetAttributeValue("slaid", value);
            }
        }
        
        /// <summary>
        /// <para>sla_opportunity</para>
        /// <para>Display Name: Last SLA applied</para>
        /// </summary>
        [AttributeLogicalName("slainvokedid")]
        [DisplayName("Last SLA applied")]
        public EntityReference SLAInvokedId {
            get {
                return GetAttributeValue<EntityReference>("slainvokedid");
            }
        }
        
        /// <summary>
        /// <para>Select the sales stage of this opportunity to aid the sales team in their efforts to win this opportunity.</para>
        /// <para>Display Name: Sales Stage</para>
        /// </summary>
        [AttributeLogicalName("salesstage")]
        [DisplayName("Sales Stage")]
        public opportunity_salesstage? SalesStage {
            get {
                return GetOptionSetValue<opportunity_salesstage>("salesstage");
            }
            set {
                SetOptionSetValue("salesstage", value);
            }
        }
        
        /// <summary>
        /// <para>Select the sales process stage for the opportunity to indicate the probability of closing the opportunity.</para>
        /// <para>Display Name: Process Code</para>
        /// </summary>
        [AttributeLogicalName("salesstagecode")]
        [DisplayName("Process Code")]
        public Opportunity_SalesStageCode? SalesStageCode {
            get {
                return GetOptionSetValue<Opportunity_SalesStageCode>("salesstagecode");
            }
            set {
                SetOptionSetValue("salesstagecode", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the date and time of the prospecting follow-up meeting with the lead.</para>
        /// <para>Display Name: Scheduled Follow up (Prospect)</para>
        /// </summary>
        [AttributeLogicalName("schedulefollowup_prospect")]
        [DisplayName("Scheduled Follow up (Prospect)")]
        public DateTime? ScheduleFollowup_Prospect {
            get {
                return GetAttributeValue<DateTime?>("schedulefollowup_prospect");
            }
            set {
                SetAttributeValue("schedulefollowup_prospect", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the date and time of the qualifying follow-up meeting with the lead.</para>
        /// <para>Display Name: Scheduled Follow up (Qualify)</para>
        /// </summary>
        [AttributeLogicalName("schedulefollowup_qualify")]
        [DisplayName("Scheduled Follow up (Qualify)")]
        public DateTime? ScheduleFollowup_Qualify {
            get {
                return GetAttributeValue<DateTime?>("schedulefollowup_qualify");
            }
            set {
                SetAttributeValue("schedulefollowup_qualify", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the date and time of the proposal meeting for the opportunity.</para>
        /// <para>Display Name: Schedule Proposal Meeting</para>
        /// </summary>
        [AttributeLogicalName("scheduleproposalmeeting")]
        [DisplayName("Schedule Proposal Meeting")]
        public DateTime? ScheduleProposalMeeting {
            get {
                return GetAttributeValue<DateTime?>("scheduleproposalmeeting");
            }
            set {
                SetAttributeValue("scheduleproposalmeeting", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether a thank you note has been sent to the account for considering the proposal.</para>
        /// <para>Display Name: Send Thank You Note</para>
        /// </summary>
        [AttributeLogicalName("sendthankyounote")]
        [DisplayName("Send Thank You Note")]
        public bool? SendThankYouNote {
            get {
                return GetAttributeValue<bool?>("sendthankyounote");
            }
            set {
                SetAttributeValue("sendthankyounote", value);
            }
        }
        
        /// <summary>
        /// <para>Skip Price Calculation (For Internal Use)</para>
        /// <para>Display Name: Skip Price Calculation</para>
        /// </summary>
        [AttributeLogicalName("skippricecalculation")]
        [DisplayName("Skip Price Calculation")]
        public qooi_skippricecalculation? SkipPriceCalculation {
            get {
                return GetOptionSetValue<qooi_skippricecalculation>("skippricecalculation");
            }
            set {
                SetOptionSetValue("skippricecalculation", value);
            }
        }
        
        /// <summary>
        /// <para>processstage_opportunity</para>
        /// <para>Display Name: Process Stage</para>
        /// </summary>
        [AttributeLogicalName("stageid")]
        [DisplayName("Process Stage")]
        public Guid? StageId {
            get {
                return GetAttributeValue<Guid?>("stageid");
            }
            set {
                SetAttributeValue("stageid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows whether the opportunity is open, won, or lost. Won and lost opportunities are read-only and can't be edited until they are reactivated.</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public OpportunityState? StateCode {
            get {
                return GetOptionSetValue<OpportunityState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the opportunity's status.</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public Opportunity_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<Opportunity_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the workflow step.</para>
        /// <para>Display Name: Step</para>
        /// </summary>
        [AttributeLogicalName("stepid")]
        [DisplayName("Step")]
        public Guid? StepId {
            get {
                return GetAttributeValue<Guid?>("stepid");
            }
            set {
                SetAttributeValue("stepid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the current phase in the sales pipeline for the opportunity. This is updated by a workflow.</para>
        /// <para>Display Name: Pipeline Phase</para>
        /// </summary>
        [AttributeLogicalName("stepname")]
        [DisplayName("Pipeline Phase")]
        [MaxLength(200)]
        public string StepName {
            get {
                return GetAttributeValue<string>("stepname");
            }
            set {
                SetAttributeValue("stepname", value);
            }
        }
        
        /// <summary>
        /// <para>Number of users or conversations followed the record</para>
        /// <para>Display Name: TeamsFollowed</para>
        /// </summary>
        [AttributeLogicalName("teamsfollowed")]
        [DisplayName("TeamsFollowed")]
        [Range(-2147483648, 2147483647)]
        public int? TeamsFollowed {
            get {
                return GetAttributeValue<int?>("teamsfollowed");
            }
            set {
                SetAttributeValue("teamsfollowed", value);
            }
        }
        
        /// <summary>
        /// <para>Select when the opportunity is likely to be closed.</para>
        /// <para>Display Name: Timeline</para>
        /// </summary>
        [AttributeLogicalName("timeline")]
        [DisplayName("Timeline")]
        public Opportunity_TimeLine? TimeLine {
            get {
                return GetOptionSetValue<Opportunity_TimeLine>("timeline");
            }
            set {
                SetOptionSetValue("timeline", value);
            }
        }
        
        /// <summary>
        /// <para>Total time spent for emails (read and write) and meetings by me in relation to the opportunity record.</para>
        /// <para>Display Name: Time Spent by me</para>
        /// </summary>
        [AttributeLogicalName("timespentbymeonemailandmeetings")]
        [DisplayName("Time Spent by me")]
        [MaxLength(1250)]
        public string TimeSpentByMeOnEmailAndMeetings {
            get {
                return GetAttributeValue<string>("timespentbymeonemailandmeetings");
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the total amount due, calculated as the sum of the products, discounts, freight, and taxes for the opportunity.</para>
        /// <para>Display Name: Total Amount</para>
        /// </summary>
        [AttributeLogicalName("totalamount")]
        [DisplayName("Total Amount")]
        public decimal? TotalAmount {
            get {
                return GetMoneyValue("totalamount");
            }
            set {
                SetMoneyValue("totalamount", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the total product amount for the opportunity, minus any discounts. This value is added to freight and tax amounts in the calculation for the total amount of the opportunity.</para>
        /// <para>Display Name: Total Pre-Freight Amount</para>
        /// </summary>
        [AttributeLogicalName("totalamountlessfreight")]
        [DisplayName("Total Pre-Freight Amount")]
        public decimal? TotalAmountLessFreight {
            get {
                return GetMoneyValue("totalamountlessfreight");
            }
            set {
                SetMoneyValue("totalamountlessfreight", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the Total Pre-Freight Amount field converted to the system's default base currency for reporting purposes. The calculation uses the exchange rate specified in the Currencies area.</para>
        /// <para>Display Name: Total Pre-Freight Amount (Base)</para>
        /// </summary>
        [AttributeLogicalName("totalamountlessfreight_base")]
        [DisplayName("Total Pre-Freight Amount (Base)")]
        public decimal? TotalAmountLessFreight_Base {
            get {
                return GetMoneyValue("totalamountlessfreight_base");
            }
        }
        
        /// <summary>
        /// <para>Shows the Total Amount field converted to the system's default base currency for reporting purposes. The calculation uses the exchange rate specified in the Currencies area.</para>
        /// <para>Display Name: Total Amount (Base)</para>
        /// </summary>
        [AttributeLogicalName("totalamount_base")]
        [DisplayName("Total Amount (Base)")]
        public decimal? TotalAmount_Base {
            get {
                return GetMoneyValue("totalamount_base");
            }
        }
        
        /// <summary>
        /// <para>Shows the total discount amount, based on the discount price and rate entered on the opportunity.</para>
        /// <para>Display Name: Total Discount Amount</para>
        /// </summary>
        [AttributeLogicalName("totaldiscountamount")]
        [DisplayName("Total Discount Amount")]
        public decimal? TotalDiscountAmount {
            get {
                return GetMoneyValue("totaldiscountamount");
            }
            set {
                SetMoneyValue("totaldiscountamount", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the Total Discount Amount field converted to the system's default base currency for reporting purposes. The calculation uses the exchange rate specified in the Currencies area.</para>
        /// <para>Display Name: Total Discount Amount (Base)</para>
        /// </summary>
        [AttributeLogicalName("totaldiscountamount_base")]
        [DisplayName("Total Discount Amount (Base)")]
        public decimal? TotalDiscountAmount_Base {
            get {
                return GetMoneyValue("totaldiscountamount_base");
            }
        }
        
        /// <summary>
        /// <para>Shows the sum of all existing and write-in products included on the opportunity, based on the specified price list and quantities.</para>
        /// <para>Display Name: Total Detail Amount</para>
        /// </summary>
        [AttributeLogicalName("totallineitemamount")]
        [DisplayName("Total Detail Amount")]
        public decimal? TotalLineItemAmount {
            get {
                return GetMoneyValue("totallineitemamount");
            }
            set {
                SetMoneyValue("totallineitemamount", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the Total Detail Amount field converted to the system's default base currency for reporting purposes. The calculation uses the exchange rate specified in the Currencies area.</para>
        /// <para>Display Name: Total Detail Amount (Base)</para>
        /// </summary>
        [AttributeLogicalName("totallineitemamount_base")]
        [DisplayName("Total Detail Amount (Base)")]
        public decimal? TotalLineItemAmount_Base {
            get {
                return GetMoneyValue("totallineitemamount_base");
            }
        }
        
        /// <summary>
        /// <para>Shows the total of the Manual Discount amounts specified on all products included in the opportunity. This value is reflected in the Total Detail Amount field on the opportunity and is added to any discount amount or rate specified on the opportunity.</para>
        /// <para>Display Name: Total Line Item Discount Amount</para>
        /// </summary>
        [AttributeLogicalName("totallineitemdiscountamount")]
        [DisplayName("Total Line Item Discount Amount")]
        public decimal? TotalLineItemDiscountAmount {
            get {
                return GetMoneyValue("totallineitemdiscountamount");
            }
            set {
                SetMoneyValue("totallineitemdiscountamount", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the Total Line Item Discount Amount field to the system's default base currency for reporting purposes. The calculation uses the exchange rate specified in the Currencies area.</para>
        /// <para>Display Name: Total Line Item Discount Amount (Base)</para>
        /// </summary>
        [AttributeLogicalName("totallineitemdiscountamount_base")]
        [DisplayName("Total Line Item Discount Amount (Base)")]
        public decimal? TotalLineItemDiscountAmount_Base {
            get {
                return GetMoneyValue("totallineitemdiscountamount_base");
            }
        }
        
        /// <summary>
        /// <para>Shows the total of the Tax amounts specified on all products included in the opportunity, included in the Total Amount field calculation for the opportunity.</para>
        /// <para>Display Name: Total Tax</para>
        /// </summary>
        [AttributeLogicalName("totaltax")]
        [DisplayName("Total Tax")]
        public decimal? TotalTax {
            get {
                return GetMoneyValue("totaltax");
            }
            set {
                SetMoneyValue("totaltax", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the Total Tax field converted to the system's default base currency for reporting purposes. The calculation uses the exchange rate specified in the Currencies area.</para>
        /// <para>Display Name: Total Tax (Base)</para>
        /// </summary>
        [AttributeLogicalName("totaltax_base")]
        [DisplayName("Total Tax (Base)")]
        public decimal? TotalTax_Base {
            get {
                return GetMoneyValue("totaltax_base");
            }
        }
        
        /// <summary>
        /// <para>transactioncurrency_opportunity</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Traversed Path</para>
        /// </summary>
        [AttributeLogicalName("traversedpath")]
        [DisplayName("Traversed Path")]
        [MaxLength(1250)]
        public string TraversedPath {
            get {
                return GetAttributeValue<string>("traversedpath");
            }
            set {
                SetAttributeValue("traversedpath", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version number of the opportunity.</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Display Name: (Deprecated) Opportunity Grade</para>
        /// </summary>
        [AttributeLogicalName("msdyn_opportunitygrade")]
        [DisplayName("(Deprecated) Opportunity Grade")]
        public msdyn_opportunitygradeoptset? msdyn_OpportunityGrade {
            get {
                return GetOptionSetValue<msdyn_opportunitygradeoptset>("msdyn_opportunitygrade");
            }
            set {
                SetOptionSetValue("msdyn_opportunitygrade", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: (Deprecated) Opportunity Score</para>
        /// </summary>
        [AttributeLogicalName("msdyn_opportunityscore")]
        [DisplayName("(Deprecated) Opportunity Score")]
        [Range(-2147483648, 2147483647)]
        public int? msdyn_OpportunityScore {
            get {
                return GetAttributeValue<int?>("msdyn_opportunityscore");
            }
            set {
                SetAttributeValue("msdyn_opportunityscore", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: (Deprecated) Opportunity Score Trend</para>
        /// </summary>
        [AttributeLogicalName("msdyn_opportunityscoretrend")]
        [DisplayName("(Deprecated) Opportunity Score Trend")]
        public msdyn_opportunityscoretrendoptset? msdyn_OpportunityScoreTrend {
            get {
                return GetOptionSetValue<msdyn_opportunityscoretrendoptset>("msdyn_opportunityscoretrend");
            }
            set {
                SetOptionSetValue("msdyn_opportunityscoretrend", value);
            }
        }
        
        /// <summary>
        /// <para>Internal use only.</para>
        /// <para>Display Name: Order Type</para>
        /// </summary>
        [AttributeLogicalName("msdyn_ordertype")]
        [DisplayName("Order Type")]
        public Opportunity_msdyn_OrderType? msdyn_OrderType {
            get {
                return GetOptionSetValue<Opportunity_msdyn_OrderType>("msdyn_ordertype");
            }
            set {
                SetOptionSetValue("msdyn_ordertype", value);
            }
        }
        
        /// <summary>
        /// <para>Predictive score</para>
        /// <para>Display Name: Predictive Score</para>
        /// </summary>
        [AttributeLogicalName("msdyn_predictivescoreid")]
        [DisplayName("Predictive Score")]
        public EntityReference msdyn_PredictiveScoreId {
            get {
                return GetAttributeValue<EntityReference>("msdyn_predictivescoreid");
            }
            set {
                SetAttributeValue("msdyn_predictivescoreid", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: (Deprecated) Score History</para>
        /// </summary>
        [AttributeLogicalName("msdyn_scorehistory")]
        [DisplayName("(Deprecated) Score History")]
        public string msdyn_ScoreHistory {
            get {
                return GetAttributeValue<string>("msdyn_scorehistory");
            }
            set {
                SetAttributeValue("msdyn_scorehistory", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: (Deprecated) Score Reasons</para>
        /// </summary>
        [AttributeLogicalName("msdyn_scorereasons")]
        [DisplayName("(Deprecated) Score Reasons")]
        public string msdyn_ScoreReasons {
            get {
                return GetAttributeValue<string>("msdyn_scorereasons");
            }
            set {
                SetAttributeValue("msdyn_scorereasons", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for Work Order Type associated with Opportunity.</para>
        /// <para>Display Name: Work Order Type</para>
        /// </summary>
        [AttributeLogicalName("msdyn_workordertype")]
        [DisplayName("Work Order Type")]
        public EntityReference msdyn_WorkOrderType {
            get {
                return GetAttributeValue<EntityReference>("msdyn_workordertype");
            }
            set {
                SetAttributeValue("msdyn_workordertype", value);
            }
        }
        
        /// <summary>
        /// <para>Categories used for forecasting.</para>
        /// <para>Display Name: Forecast category</para>
        /// </summary>
        [AttributeLogicalName("msdyn_forecastcategory")]
        [DisplayName("Forecast category")]
        public Opportunity_msdyn_forecastcategory? msdyn_forecastcategory {
            get {
                return GetOptionSetValue<Opportunity_msdyn_forecastcategory>("msdyn_forecastcategory");
            }
            set {
                SetOptionSetValue("msdyn_forecastcategory", value);
            }
        }
        
        /// <summary>
        /// <para>Describes whether opportunity is opted out or not</para>
        /// <para>Display Name: GDPR Optout</para>
        /// </summary>
        [AttributeLogicalName("msdyn_gdproptout")]
        [DisplayName("GDPR Optout")]
        public bool? msdyn_gdproptout {
            get {
                return GetAttributeValue<bool?>("msdyn_gdproptout");
            }
            set {
                SetAttributeValue("msdyn_gdproptout", value);
            }
        }
        
        /// <summary>
        /// <para>Maps to opportunity KPI records</para>
        /// <para>Display Name: KPI</para>
        /// </summary>
        [AttributeLogicalName("msdyn_opportunitykpiid")]
        [DisplayName("KPI")]
        public EntityReference msdyn_opportunitykpiid {
            get {
                return GetAttributeValue<EntityReference>("msdyn_opportunitykpiid");
            }
            set {
                SetAttributeValue("msdyn_opportunitykpiid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for Segment associated with Opportunity.</para>
        /// <para>Display Name: Segment Id</para>
        /// </summary>
        [AttributeLogicalName("msdyn_segmentid")]
        [DisplayName("Segment Id")]
        public EntityReference msdyn_segmentid {
            get {
                return GetAttributeValue<EntityReference>("msdyn_segmentid");
            }
            set {
                SetAttributeValue("msdyn_segmentid", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: msdyn_similaropportunities</para>
        /// </summary>
        [AttributeLogicalName("msdyn_similaropportunities")]
        [DisplayName("msdyn_similaropportunities")]
        public string msdyn_similaropportunities {
            get {
                return GetAttributeValue<string>("msdyn_similaropportunities");
            }
            set {
                SetAttributeValue("msdyn_similaropportunities", value);
            }
        }
        
        [RelationshipSchemaName("CreatedOpportunity_BulkOperationLogs")]
        public IEnumerable<BulkOperationLog> CreatedOpportunity_BulkOperationLogs {
            get {
                return GetRelatedEntities<BulkOperationLog>("CreatedOpportunity_BulkOperationLogs", null);
            }
            set {
                SetRelatedEntities("CreatedOpportunity_BulkOperationLogs", null, value);
            }
        }
        
        [RelationshipSchemaName("Opportunity_ActivityPointers")]
        public IEnumerable<ActivityPointer> Opportunity_ActivityPointers {
            get {
                return GetRelatedEntities<ActivityPointer>("Opportunity_ActivityPointers", null);
            }
            set {
                SetRelatedEntities("Opportunity_ActivityPointers", null, value);
            }
        }
        
        [RelationshipSchemaName("Opportunity_Appointments")]
        public IEnumerable<Appointment> Opportunity_Appointments {
            get {
                return GetRelatedEntities<Appointment>("Opportunity_Appointments", null);
            }
            set {
                SetRelatedEntities("Opportunity_Appointments", null, value);
            }
        }
        
        [RelationshipSchemaName("Opportunity_Emails")]
        public IEnumerable<Email> Opportunity_Emails {
            get {
                return GetRelatedEntities<Email>("Opportunity_Emails", null);
            }
            set {
                SetRelatedEntities("Opportunity_Emails", null, value);
            }
        }
        
        [RelationshipSchemaName("Opportunity_Faxes")]
        public IEnumerable<Fax> Opportunity_Faxes {
            get {
                return GetRelatedEntities<Fax>("Opportunity_Faxes", null);
            }
            set {
                SetRelatedEntities("Opportunity_Faxes", null, value);
            }
        }
        
        [RelationshipSchemaName("Opportunity_Letters")]
        public IEnumerable<Letter> Opportunity_Letters {
            get {
                return GetRelatedEntities<Letter>("Opportunity_Letters", null);
            }
            set {
                SetRelatedEntities("Opportunity_Letters", null, value);
            }
        }
        
        [RelationshipSchemaName("Opportunity_OpportunityClose")]
        public IEnumerable<OpportunityClose> Opportunity_OpportunityClose {
            get {
                return GetRelatedEntities<OpportunityClose>("Opportunity_OpportunityClose", null);
            }
            set {
                SetRelatedEntities("Opportunity_OpportunityClose", null, value);
            }
        }
        
        [RelationshipSchemaName("Opportunity_Phonecalls")]
        public IEnumerable<PhoneCall> Opportunity_Phonecalls {
            get {
                return GetRelatedEntities<PhoneCall>("Opportunity_Phonecalls", null);
            }
            set {
                SetRelatedEntities("Opportunity_Phonecalls", null, value);
            }
        }
        
        [RelationshipSchemaName("Opportunity_RecurringAppointmentMasters")]
        public IEnumerable<RecurringAppointmentMaster> Opportunity_RecurringAppointmentMasters {
            get {
                return GetRelatedEntities<RecurringAppointmentMaster>("Opportunity_RecurringAppointmentMasters", null);
            }
            set {
                SetRelatedEntities("Opportunity_RecurringAppointmentMasters", null, value);
            }
        }
        
        [RelationshipSchemaName("Opportunity_ServiceAppointments")]
        public IEnumerable<ServiceAppointment> Opportunity_ServiceAppointments {
            get {
                return GetRelatedEntities<ServiceAppointment>("Opportunity_ServiceAppointments", null);
            }
            set {
                SetRelatedEntities("Opportunity_ServiceAppointments", null, value);
            }
        }
        
        [RelationshipSchemaName("Opportunity_SharepointDocumentLocation")]
        public IEnumerable<SharePointDocumentLocation> Opportunity_SharepointDocumentLocation {
            get {
                return GetRelatedEntities<SharePointDocumentLocation>("Opportunity_SharepointDocumentLocation", null);
            }
            set {
                SetRelatedEntities("Opportunity_SharepointDocumentLocation", null, value);
            }
        }
        
        [RelationshipSchemaName("Opportunity_SocialActivities")]
        public IEnumerable<SocialActivity> Opportunity_SocialActivities {
            get {
                return GetRelatedEntities<SocialActivity>("Opportunity_SocialActivities", null);
            }
            set {
                SetRelatedEntities("Opportunity_SocialActivities", null, value);
            }
        }
        
        [RelationshipSchemaName("Opportunity_SyncErrors")]
        public IEnumerable<SyncError> Opportunity_SyncErrors {
            get {
                return GetRelatedEntities<SyncError>("Opportunity_SyncErrors", null);
            }
            set {
                SetRelatedEntities("Opportunity_SyncErrors", null, value);
            }
        }
        
        [RelationshipSchemaName("Opportunity_Tasks")]
        public IEnumerable<Task> Opportunity_Tasks {
            get {
                return GetRelatedEntities<Task>("Opportunity_Tasks", null);
            }
            set {
                SetRelatedEntities("Opportunity_Tasks", null, value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_opportunities")]
        public BusinessUnit business_unit_opportunities {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_opportunities", null);
            }
            set {
                SetRelatedEntity("business_unit_opportunities", null, value);
            }
        }
        
        [AttributeLogicalName("campaignid")]
        [RelationshipSchemaName("campaign_opportunities")]
        public Campaign campaign_opportunities {
            get {
                return GetRelatedEntity<Campaign>("campaign_opportunities", null);
            }
            set {
                SetRelatedEntity("campaign_opportunities", null, value);
            }
        }
        
        [RelationshipSchemaName("lead_qualifying_opportunity")]
        public IEnumerable<Lead> lead_qualifying_opportunity {
            get {
                return GetRelatedEntities<Lead>("lead_qualifying_opportunity", null);
            }
            set {
                SetRelatedEntities("lead_qualifying_opportunity", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_opportunity_createdonbehalfby")]
        public SystemUser lk_opportunity_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_opportunity_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_opportunity_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_opportunity_modifiedonbehalfby")]
        public SystemUser lk_opportunity_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_opportunity_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_opportunity_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_opportunitybase_createdby")]
        public SystemUser lk_opportunitybase_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_opportunitybase_createdby", null);
            }
            set {
                SetRelatedEntity("lk_opportunitybase_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_opportunitybase_modifiedby")]
        public SystemUser lk_opportunitybase_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_opportunitybase_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_opportunitybase_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_opportunitysalesprocess_opportunityid")]
        public IEnumerable<OpportunitySalesProcess> lk_opportunitysalesprocess_opportunityid {
            get {
                return GetRelatedEntities<OpportunitySalesProcess>("lk_opportunitysalesprocess_opportunityid", null);
            }
            set {
                SetRelatedEntities("lk_opportunitysalesprocess_opportunityid", null, value);
            }
        }
        
        [AttributeLogicalName("slaid")]
        [RelationshipSchemaName("manualsla_opportunity")]
        public SLA manualsla_opportunity {
            get {
                return GetRelatedEntity<SLA>("manualsla_opportunity", null);
            }
            set {
                SetRelatedEntity("manualsla_opportunity", null, value);
            }
        }
        
        [RelationshipSchemaName("opportunity_OpportunityCloses")]
        public IEnumerable<OpportunityClose> opportunity_OpportunityCloses {
            get {
                return GetRelatedEntities<OpportunityClose>("opportunity_OpportunityCloses", null);
            }
            set {
                SetRelatedEntities("opportunity_OpportunityCloses", null, value);
            }
        }
        
        [RelationshipSchemaName("opportunity_Teams")]
        public IEnumerable<Team> opportunity_Teams {
            get {
                return GetRelatedEntities<Team>("opportunity_Teams", null);
            }
            set {
                SetRelatedEntities("opportunity_Teams", null, value);
            }
        }
        
        [RelationshipSchemaName("opportunity_activity_parties")]
        public IEnumerable<ActivityParty> opportunity_activity_parties {
            get {
                return GetRelatedEntities<ActivityParty>("opportunity_activity_parties", null);
            }
            set {
                SetRelatedEntities("opportunity_activity_parties", null, value);
            }
        }
        
        [RelationshipSchemaName("opportunity_connections1")]
        public IEnumerable<Connection> opportunity_connections1 {
            get {
                return GetRelatedEntities<Connection>("opportunity_connections1", null);
            }
            set {
                SetRelatedEntities("opportunity_connections1", null, value);
            }
        }
        
        [RelationshipSchemaName("opportunity_connections2")]
        public IEnumerable<Connection> opportunity_connections2 {
            get {
                return GetRelatedEntities<Connection>("opportunity_connections2", null);
            }
            set {
                SetRelatedEntities("opportunity_connections2", null, value);
            }
        }
        
        [AttributeLogicalName("customerid")]
        [RelationshipSchemaName("opportunity_customer_accounts")]
        public Account opportunity_customer_accounts {
            get {
                return GetRelatedEntity<Account>("opportunity_customer_accounts", null);
            }
            set {
                SetRelatedEntity("opportunity_customer_accounts", null, value);
            }
        }
        
        [AttributeLogicalName("customerid")]
        [RelationshipSchemaName("opportunity_customer_contacts")]
        public Contact opportunity_customer_contacts {
            get {
                return GetRelatedEntity<Contact>("opportunity_customer_contacts", null);
            }
            set {
                SetRelatedEntity("opportunity_customer_contacts", null, value);
            }
        }
        
        [RelationshipSchemaName("opportunity_invoices")]
        public IEnumerable<Invoice> opportunity_invoices {
            get {
                return GetRelatedEntities<Invoice>("opportunity_invoices", null);
            }
            set {
                SetRelatedEntities("opportunity_invoices", null, value);
            }
        }
        
        [AttributeLogicalName("originatingleadid")]
        [RelationshipSchemaName("opportunity_originating_lead")]
        public Lead opportunity_originating_lead {
            get {
                return GetRelatedEntity<Lead>("opportunity_originating_lead", null);
            }
            set {
                SetRelatedEntity("opportunity_originating_lead", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("opportunity_owning_user")]
        public SystemUser opportunity_owning_user {
            get {
                return GetRelatedEntity<SystemUser>("opportunity_owning_user", null);
            }
            set {
                SetRelatedEntity("opportunity_owning_user", null, value);
            }
        }
        
        [AttributeLogicalName("parentaccountid")]
        [RelationshipSchemaName("opportunity_parent_account")]
        public Account opportunity_parent_account {
            get {
                return GetRelatedEntity<Account>("opportunity_parent_account", null);
            }
            set {
                SetRelatedEntity("opportunity_parent_account", null, value);
            }
        }
        
        [AttributeLogicalName("parentcontactid")]
        [RelationshipSchemaName("opportunity_parent_contact")]
        public Contact opportunity_parent_contact {
            get {
                return GetRelatedEntity<Contact>("opportunity_parent_contact", null);
            }
            set {
                SetRelatedEntity("opportunity_parent_contact", null, value);
            }
        }
        
        [RelationshipSchemaName("opportunity_quotes")]
        public IEnumerable<Quote> opportunity_quotes {
            get {
                return GetRelatedEntities<Quote>("opportunity_quotes", null);
            }
            set {
                SetRelatedEntities("opportunity_quotes", null, value);
            }
        }
        
        [RelationshipSchemaName("opportunity_sales_orders")]
        public IEnumerable<SalesOrder> opportunity_sales_orders {
            get {
                return GetRelatedEntities<SalesOrder>("opportunity_sales_orders", null);
            }
            set {
                SetRelatedEntities("opportunity_sales_orders", null, value);
            }
        }
        
        [AttributeLogicalName("slainvokedid")]
        [RelationshipSchemaName("sla_opportunity")]
        public SLA sla_opportunity {
            get {
                return GetRelatedEntity<SLA>("sla_opportunity", null);
            }
            set {
                SetRelatedEntity("sla_opportunity", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_opportunities")]
        public Team team_opportunities {
            get {
                return GetRelatedEntity<Team>("team_opportunities", null);
            }
            set {
                SetRelatedEntity("team_opportunities", null, value);
            }
        }
        
        [AttributeLogicalName("transactioncurrencyid")]
        [RelationshipSchemaName("transactioncurrency_opportunity")]
        public TransactionCurrency transactioncurrency_opportunity {
            get {
                return GetRelatedEntity<TransactionCurrency>("transactioncurrency_opportunity", null);
            }
            set {
                SetRelatedEntity("transactioncurrency_opportunity", null, value);
            }
        }
        
        public static Opportunity Retrieve(IOrganizationService service, Guid id, params Expression<Func<Opportunity,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Activity that is created automatically when an opportunity is closed, containing information such as the description of the closing and actual revenue.</para>
    /// <para>Display Name: Opportunity Close</para>
    /// </summary>
    [EntityLogicalName("opportunityclose")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class OpportunityClose : ExtendedEntity<OpportunityCloseState, OpportunityClose_StatusCode> {
        
        public const string EntityLogicalName = "opportunityclose";
        
        public const int EntityTypeCode = 4208;
        
        public OpportunityClose() : 
                base(EntityLogicalName) {
        }
        
        public OpportunityClose(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("subject");
            }
        }
        
        [AttributeLogicalName("activityid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("activityid", value);
            }
        }
        
        /// <summary>
        /// <para>activity_pointer_opportunity_close</para>
        /// <para>Display Name: Opportunity Close</para>
        /// </summary>
        [AttributeLogicalName("activityid")]
        [DisplayName("Opportunity Close")]
        public Guid? ActivityId {
            get {
                return GetAttributeValue<Guid?>("activityid");
            }
            set {
                SetId("activityid", value);
            }
        }
        
        /// <summary>
        /// <para>Additional information provided by the external application as JSON. For internal use only.</para>
        /// <para>Display Name: Activity Additional Parameters</para>
        /// </summary>
        [AttributeLogicalName("activityadditionalparams")]
        [DisplayName("Activity Additional Parameters")]
        public string ActivityAdditionalParams {
            get {
                return GetAttributeValue<string>("activityadditionalparams");
            }
            set {
                SetAttributeValue("activityadditionalparams", value);
            }
        }
        
        /// <summary>
        /// <para>Type of activity.</para>
        /// <para>Display Name: Activity Type</para>
        /// </summary>
        [AttributeLogicalName("activitytypecode")]
        [DisplayName("Activity Type")]
        public string ActivityTypeCode {
            get {
                return GetAttributeValue<string>("activitytypecode");
            }
        }
        
        /// <summary>
        /// <para>Actual duration of the opportunity close activity in minutes.</para>
        /// <para>Display Name: Actual Duration</para>
        /// </summary>
        [AttributeLogicalName("actualdurationminutes")]
        [DisplayName("Actual Duration")]
        [Range(0, 2147483647)]
        public int? ActualDurationMinutes {
            get {
                return GetAttributeValue<int?>("actualdurationminutes");
            }
            set {
                SetAttributeValue("actualdurationminutes", value);
            }
        }
        
        /// <summary>
        /// <para>Actual end time of the opportunity close activity.</para>
        /// <para>Display Name: Closed On</para>
        /// </summary>
        [AttributeLogicalName("actualend")]
        [DisplayName("Closed On")]
        public DateTime? ActualEnd {
            get {
                return GetAttributeValue<DateTime?>("actualend");
            }
            set {
                SetAttributeValue("actualend", value);
            }
        }
        
        /// <summary>
        /// <para>Actual revenue generated for the opportunity.</para>
        /// <para>Display Name: Actual Revenue</para>
        /// </summary>
        [AttributeLogicalName("actualrevenue")]
        [DisplayName("Actual Revenue")]
        public decimal? ActualRevenue {
            get {
                return GetMoneyValue("actualrevenue");
            }
            set {
                SetMoneyValue("actualrevenue", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the Actual Revenue field converted to the system's default base currency for reporting purposes. The calculation uses the exchange rate specified in the Currencies area.</para>
        /// <para>Display Name: Actual Revenue (Base)</para>
        /// </summary>
        [AttributeLogicalName("actualrevenue_base")]
        [DisplayName("Actual Revenue (Base)")]
        public decimal? ActualRevenue_Base {
            get {
                return GetMoneyValue("actualrevenue_base");
            }
        }
        
        /// <summary>
        /// <para>Actual start time of the opportunity close activity.</para>
        /// <para>Display Name: Actual Start</para>
        /// </summary>
        [AttributeLogicalName("actualstart")]
        [DisplayName("Actual Start")]
        public DateTime? ActualStart {
            get {
                return GetAttributeValue<DateTime?>("actualstart");
            }
            set {
                SetAttributeValue("actualstart", value);
            }
        }
        
        /// <summary>
        /// <para>Blind Carbon-copy (bcc) recipients of the activity.</para>
        /// <para>Display Name: BCC</para>
        /// </summary>
        [AttributeLogicalName("bcc")]
        [DisplayName("BCC")]
        public IEnumerable<ActivityParty> Bcc {
            get {
                return GetEntityCollection<ActivityParty>("bcc");
            }
            set {
                SetEntityCollection("bcc", value);
            }
        }
        
        /// <summary>
        /// <para>Category of the opportunity close activity.</para>
        /// <para>Display Name: Category</para>
        /// </summary>
        [AttributeLogicalName("category")]
        [DisplayName("Category")]
        [MaxLength(250)]
        public string Category {
            get {
                return GetAttributeValue<string>("category");
            }
            set {
                SetAttributeValue("category", value);
            }
        }
        
        /// <summary>
        /// <para>Carbon-copy (cc) recipients of the activity.</para>
        /// <para>Display Name: CC</para>
        /// </summary>
        [AttributeLogicalName("cc")]
        [DisplayName("CC")]
        public IEnumerable<ActivityParty> Cc {
            get {
                return GetEntityCollection<ActivityParty>("cc");
            }
            set {
                SetEntityCollection("cc", value);
            }
        }
        
        /// <summary>
        /// <para>Shows how contact about the social activity originated, such as from Twitter or Facebook. This field is read-only.</para>
        /// <para>Display Name: Social Channel</para>
        /// </summary>
        [AttributeLogicalName("community")]
        [DisplayName("Social Channel")]
        public socialprofile_community? Community {
            get {
                return GetOptionSetValue<socialprofile_community>("community");
            }
            set {
                SetOptionSetValue("community", value);
            }
        }
        
        /// <summary>
        /// <para>competitor_opportunity_activities</para>
        /// <para>Display Name: Competitor</para>
        /// </summary>
        [AttributeLogicalName("competitorid")]
        [DisplayName("Competitor")]
        public EntityReference CompetitorId {
            get {
                return GetAttributeValue<EntityReference>("competitorid");
            }
            set {
                SetAttributeValue("competitorid", value);
            }
        }
        
        /// <summary>
        /// <para>lk_opportunityclose_createdby</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>lk_externalparty_opportunityclose_createdby</para>
        /// <para>Display Name: Created By (External Party)</para>
        /// </summary>
        [AttributeLogicalName("createdbyexternalparty")]
        [DisplayName("Created By (External Party)")]
        public EntityReference CreatedByExternalParty {
            get {
                return GetAttributeValue<EntityReference>("createdbyexternalparty");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the opportunity close activity was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>lk_opportunityclose_createdonbehalfby</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Customer with which the activity is associated.</para>
        /// <para>Display Name: Customers</para>
        /// </summary>
        [AttributeLogicalName("customers")]
        [DisplayName("Customers")]
        public IEnumerable<ActivityParty> Customers {
            get {
                return GetEntityCollection<ActivityParty>("customers");
            }
            set {
                SetEntityCollection("customers", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time when the delivery of the activity was last attempted.</para>
        /// <para>Display Name: Date Delivery Last Attempted</para>
        /// </summary>
        [AttributeLogicalName("deliverylastattemptedon")]
        [DisplayName("Date Delivery Last Attempted")]
        public DateTime? DeliveryLastAttemptedOn {
            get {
                return GetAttributeValue<DateTime?>("deliverylastattemptedon");
            }
        }
        
        /// <summary>
        /// <para>Priority of delivery of the activity to the email server.</para>
        /// <para>Display Name: Delivery Priority</para>
        /// </summary>
        [AttributeLogicalName("deliveryprioritycode")]
        [DisplayName("Delivery Priority")]
        public activitypointer_deliveryprioritycode? DeliveryPriorityCode {
            get {
                return GetOptionSetValue<activitypointer_deliveryprioritycode>("deliveryprioritycode");
            }
            set {
                SetOptionSetValue("deliveryprioritycode", value);
            }
        }
        
        /// <summary>
        /// <para>Activity that is created automatically when an opportunity is closed, containing information such as the description of the closing and actual revenue.</para>
        /// <para>Display Name: Description</para>
        /// </summary>
        [AttributeLogicalName("description")]
        [DisplayName("Description")]
        public string Description {
            get {
                return GetAttributeValue<string>("description");
            }
            set {
                SetAttributeValue("description", value);
            }
        }
        
        /// <summary>
        /// <para>The message id of activity which is returned from Exchange Server.</para>
        /// <para>Display Name: Exchange Item ID</para>
        /// </summary>
        [AttributeLogicalName("exchangeitemid")]
        [DisplayName("Exchange Item ID")]
        [MaxLength(200)]
        public string ExchangeItemId {
            get {
                return GetAttributeValue<string>("exchangeitemid");
            }
            set {
                SetAttributeValue("exchangeitemid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("Exchange Rate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Shows the web link of Activity of type email.</para>
        /// <para>Display Name: Exchange WebLink</para>
        /// </summary>
        [AttributeLogicalName("exchangeweblink")]
        [DisplayName("Exchange WebLink")]
        [MaxLength(1250)]
        public string ExchangeWebLink {
            get {
                return GetAttributeValue<string>("exchangeweblink");
            }
            set {
                SetAttributeValue("exchangeweblink", value);
            }
        }
        
        /// <summary>
        /// <para>Person who the activity is from.</para>
        /// <para>Display Name: From</para>
        /// </summary>
        [AttributeLogicalName("from")]
        [DisplayName("From")]
        public IEnumerable<ActivityParty> From {
            get {
                return GetEntityCollection<ActivityParty>("from");
            }
            set {
                SetEntityCollection("from", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the data import or data migration that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Type of instance of a recurring series.</para>
        /// <para>Display Name: Recurring Instance Type</para>
        /// </summary>
        [AttributeLogicalName("instancetypecode")]
        [DisplayName("Recurring Instance Type")]
        public OpportunityClose_InstanceTypeCode? InstanceTypeCode {
            get {
                return GetOptionSetValue<OpportunityClose_InstanceTypeCode>("instancetypecode");
            }
        }
        
        /// <summary>
        /// <para>Information about whether the opportunity close activity was billed as part of resolving a case.</para>
        /// <para>Display Name: Is Billed</para>
        /// </summary>
        [AttributeLogicalName("isbilled")]
        [DisplayName("Is Billed")]
        public bool? IsBilled {
            get {
                return GetAttributeValue<bool?>("isbilled");
            }
            set {
                SetAttributeValue("isbilled", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Is Private</para>
        /// </summary>
        [AttributeLogicalName("ismapiprivate")]
        [DisplayName("Is Private")]
        public bool? IsMapiPrivate {
            get {
                return GetAttributeValue<bool?>("ismapiprivate");
            }
            set {
                SetAttributeValue("ismapiprivate", value);
            }
        }
        
        /// <summary>
        /// <para>Information regarding whether the activity is a regular activity type or event type.</para>
        /// <para>Display Name: Is Regular Activity</para>
        /// </summary>
        [AttributeLogicalName("isregularactivity")]
        [DisplayName("Is Regular Activity")]
        public bool? IsRegularActivity {
            get {
                return GetAttributeValue<bool?>("isregularactivity");
            }
        }
        
        /// <summary>
        /// <para>Information that specifies if the opportunity close activity was created from a workflow rule.</para>
        /// <para>Display Name: Is Workflow Created</para>
        /// </summary>
        [AttributeLogicalName("isworkflowcreated")]
        [DisplayName("Is Workflow Created")]
        public bool? IsWorkflowCreated {
            get {
                return GetAttributeValue<bool?>("isworkflowcreated");
            }
            set {
                SetAttributeValue("isworkflowcreated", value);
            }
        }
        
        /// <summary>
        /// <para>Contains the date and time stamp of the last on hold time.</para>
        /// <para>Display Name: Last On Hold Time</para>
        /// </summary>
        [AttributeLogicalName("lastonholdtime")]
        [DisplayName("Last On Hold Time")]
        public DateTime? LastOnHoldTime {
            get {
                return GetAttributeValue<DateTime?>("lastonholdtime");
            }
            set {
                SetAttributeValue("lastonholdtime", value);
            }
        }
        
        /// <summary>
        /// <para>Left the voice mail</para>
        /// <para>Display Name: Left Voice Mail</para>
        /// </summary>
        [AttributeLogicalName("leftvoicemail")]
        [DisplayName("Left Voice Mail")]
        public bool? LeftVoiceMail {
            get {
                return GetAttributeValue<bool?>("leftvoicemail");
            }
            set {
                SetAttributeValue("leftvoicemail", value);
            }
        }
        
        /// <summary>
        /// <para>lk_opportunityclose_modifiedby</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>lk_externalparty_opportunityclose_modifiedby</para>
        /// <para>Display Name: Modified By (External Party)</para>
        /// </summary>
        [AttributeLogicalName("modifiedbyexternalparty")]
        [DisplayName("Modified By (External Party)")]
        public EntityReference ModifiedByExternalParty {
            get {
                return GetAttributeValue<EntityReference>("modifiedbyexternalparty");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the opportunity close activity was last modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>lk_opportunityclose_modifiedonbehalfby</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Shows how long, in minutes, that the record was on hold.</para>
        /// <para>Display Name: On Hold Time (Minutes)</para>
        /// </summary>
        [AttributeLogicalName("onholdtime")]
        [DisplayName("On Hold Time (Minutes)")]
        [Range(-2147483648, 2147483647)]
        public int? OnHoldTime {
            get {
                return GetAttributeValue<int?>("onholdtime");
            }
        }
        
        /// <summary>
        /// <para>Opportunity_OpportunityClose</para>
        /// <para>Display Name: Opportunity</para>
        /// </summary>
        [AttributeLogicalName("opportunityid")]
        [DisplayName("Opportunity")]
        public EntityReference OpportunityId {
            get {
                return GetAttributeValue<EntityReference>("opportunityid");
            }
            set {
                SetAttributeValue("opportunityid", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the opportunity.</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("opportunitystatecode")]
        [DisplayName("Status")]
        public OpportunityClose_OpportunityStateCode? OpportunityStateCode {
            get {
                return GetOptionSetValue<OpportunityClose_OpportunityStateCode>("opportunitystatecode");
            }
            set {
                SetOptionSetValue("opportunitystatecode", value);
            }
        }
        
        /// <summary>
        /// <para>Status reason of the opportunity.</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("opportunitystatuscode")]
        [DisplayName("Status Reason")]
        public OpportunityClose_OpportunityStatusCode? OpportunityStatusCode {
            get {
                return GetOptionSetValue<OpportunityClose_OpportunityStatusCode>("opportunitystatuscode");
            }
            set {
                SetOptionSetValue("opportunitystatuscode", value);
            }
        }
        
        /// <summary>
        /// <para>List of optional attendees for the activity.</para>
        /// <para>Display Name: Optional Attendees</para>
        /// </summary>
        [AttributeLogicalName("optionalattendees")]
        [DisplayName("Optional Attendees")]
        public IEnumerable<ActivityParty> OptionalAttendees {
            get {
                return GetEntityCollection<ActivityParty>("optionalattendees");
            }
            set {
                SetEntityCollection("optionalattendees", value);
            }
        }
        
        /// <summary>
        /// <para>Person who organized the activity.</para>
        /// <para>Display Name: Organizer</para>
        /// </summary>
        [AttributeLogicalName("organizer")]
        [DisplayName("Organizer")]
        public IEnumerable<ActivityParty> Organizer {
            get {
                return GetEntityCollection<ActivityParty>("organizer");
            }
            set {
                SetEntityCollection("organizer", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user or team who owns the opportunity close activity.</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>business_unit_opportunity_close_activities</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>team_opportunityclose</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>user_opportunityclose</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Outsource vendor with which activity is associated.</para>
        /// <para>Display Name: Outsource Vendors</para>
        /// </summary>
        [AttributeLogicalName("partners")]
        [DisplayName("Outsource Vendors")]
        public IEnumerable<ActivityParty> Partners {
            get {
                return GetEntityCollection<ActivityParty>("partners");
            }
            set {
                SetEntityCollection("partners", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Delay activity processing until</para>
        /// </summary>
        [AttributeLogicalName("postponeactivityprocessinguntil")]
        [DisplayName("Delay activity processing until")]
        public DateTime? PostponeActivityProcessingUntil {
            get {
                return GetAttributeValue<DateTime?>("postponeactivityprocessinguntil");
            }
        }
        
        /// <summary>
        /// <para>Subject associated with the opportunity close activity.</para>
        /// <para>Display Name: Subject</para>
        /// </summary>
        [AttributeLogicalName("subject")]
        [DisplayName("Subject")]
        [MaxLength(200)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("subject");
            }
            set {
                SetAttributeValue("subject", value);
            }
        }
        
        /// <summary>
        /// <para>Priority of the activity.</para>
        /// <para>Display Name: Priority</para>
        /// </summary>
        [AttributeLogicalName("prioritycode")]
        [DisplayName("Priority")]
        public OpportunityClose_PriorityCode? PriorityCode {
            get {
                return GetOptionSetValue<OpportunityClose_PriorityCode>("prioritycode");
            }
            set {
                SetOptionSetValue("prioritycode", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the Process.</para>
        /// <para>Display Name: Process</para>
        /// </summary>
        [AttributeLogicalName("processid")]
        [DisplayName("Process")]
        public Guid? ProcessId {
            get {
                return GetAttributeValue<Guid?>("processid");
            }
            set {
                SetAttributeValue("processid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the object with which the activity is associated.</para>
        /// <para>Display Name: Regarding</para>
        /// </summary>
        [AttributeLogicalName("regardingobjectid")]
        [DisplayName("Regarding")]
        public EntityReference RegardingObjectId {
            get {
                return GetAttributeValue<EntityReference>("regardingobjectid");
            }
            set {
                SetAttributeValue("regardingobjectid", value);
            }
        }
        
        /// <summary>
        /// <para>List of required attendees for the activity.</para>
        /// <para>Display Name: Required Attendees</para>
        /// </summary>
        [AttributeLogicalName("requiredattendees")]
        [DisplayName("Required Attendees")]
        public IEnumerable<ActivityParty> RequiredAttendees {
            get {
                return GetEntityCollection<ActivityParty>("requiredattendees");
            }
            set {
                SetEntityCollection("requiredattendees", value);
            }
        }
        
        /// <summary>
        /// <para>Users or facility/equipment that are required for the activity.</para>
        /// <para>Display Name: Resources</para>
        /// </summary>
        [AttributeLogicalName("resources")]
        [DisplayName("Resources")]
        public IEnumerable<ActivityParty> Resources {
            get {
                return GetEntityCollection<ActivityParty>("resources");
            }
            set {
                SetEntityCollection("resources", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the service level agreement (SLA) that you want to apply to the case record.</para>
        /// <para>Display Name: SLA</para>
        /// </summary>
        [AttributeLogicalName("slaid")]
        [DisplayName("SLA")]
        public EntityReference SLAId {
            get {
                return GetAttributeValue<EntityReference>("slaid");
            }
            set {
                SetAttributeValue("slaid", value);
            }
        }
        
        /// <summary>
        /// <para>Last SLA that was applied to this case. This field is for internal use only.</para>
        /// <para>Display Name: Last SLA applied</para>
        /// </summary>
        [AttributeLogicalName("slainvokedid")]
        [DisplayName("Last SLA applied")]
        public EntityReference SLAInvokedId {
            get {
                return GetAttributeValue<EntityReference>("slainvokedid");
            }
        }
        
        /// <summary>
        /// <para>Scheduled duration of the opportunity close activity, specified in minutes.</para>
        /// <para>Display Name: Scheduled Duration</para>
        /// </summary>
        [AttributeLogicalName("scheduleddurationminutes")]
        [DisplayName("Scheduled Duration")]
        [Range(0, 2147483647)]
        public int? ScheduledDurationMinutes {
            get {
                return GetAttributeValue<int?>("scheduleddurationminutes");
            }
        }
        
        /// <summary>
        /// <para>Scheduled end time of the opportunity close activity.</para>
        /// <para>Display Name: Scheduled End</para>
        /// </summary>
        [AttributeLogicalName("scheduledend")]
        [DisplayName("Scheduled End")]
        public DateTime? ScheduledEnd {
            get {
                return GetAttributeValue<DateTime?>("scheduledend");
            }
            set {
                SetAttributeValue("scheduledend", value);
            }
        }
        
        /// <summary>
        /// <para>Scheduled start time of the opportunity close activity.</para>
        /// <para>Display Name: Scheduled Start</para>
        /// </summary>
        [AttributeLogicalName("scheduledstart")]
        [DisplayName("Scheduled Start")]
        public DateTime? ScheduledStart {
            get {
                return GetAttributeValue<DateTime?>("scheduledstart");
            }
            set {
                SetAttributeValue("scheduledstart", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the mailbox associated with the sender of the email message.</para>
        /// <para>Display Name: Sender's Mailbox</para>
        /// </summary>
        [AttributeLogicalName("sendermailboxid")]
        [DisplayName("Sender\'s Mailbox")]
        public EntityReference SenderMailboxId {
            get {
                return GetAttributeValue<EntityReference>("sendermailboxid");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the activity was sent.</para>
        /// <para>Display Name: Date Sent</para>
        /// </summary>
        [AttributeLogicalName("senton")]
        [DisplayName("Date Sent")]
        public DateTime? SentOn {
            get {
                return GetAttributeValue<DateTime?>("senton");
            }
        }
        
        /// <summary>
        /// <para>Uniqueidentifier specifying the id of recurring series of an instance.</para>
        /// <para>Display Name: Series Id</para>
        /// </summary>
        [AttributeLogicalName("seriesid")]
        [DisplayName("Series Id")]
        public Guid? SeriesId {
            get {
                return GetAttributeValue<Guid?>("seriesid");
            }
        }
        
        /// <summary>
        /// <para>service_opportunityclose</para>
        /// <para>Display Name: Service</para>
        /// </summary>
        [AttributeLogicalName("serviceid")]
        [DisplayName("Service")]
        public EntityReference ServiceId {
            get {
                return GetAttributeValue<EntityReference>("serviceid");
            }
            set {
                SetAttributeValue("serviceid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time by which the activities are sorted.</para>
        /// <para>Display Name: Sort Date</para>
        /// </summary>
        [AttributeLogicalName("sortdate")]
        [DisplayName("Sort Date")]
        public DateTime? SortDate {
            get {
                return GetAttributeValue<DateTime?>("sortdate");
            }
            set {
                SetAttributeValue("sortdate", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the Stage.</para>
        /// <para>Display Name: Process Stage</para>
        /// </summary>
        [AttributeLogicalName("stageid")]
        [DisplayName("Process Stage")]
        public Guid? StageId {
            get {
                return GetAttributeValue<Guid?>("stageid");
            }
            set {
                SetAttributeValue("stageid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows whether the opportunity close activity is open, completed, or canceled.  By default, opportunity close activities are completed unless the opportunity is reactivated,  which updates them to canceled.</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public OpportunityCloseState? StateCode {
            get {
                return GetOptionSetValue<OpportunityCloseState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the opportunity close activity.</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public OpportunityClose_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<OpportunityClose_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>Subcategory of the opportunity close activity.</para>
        /// <para>Display Name: Sub-Category</para>
        /// </summary>
        [AttributeLogicalName("subcategory")]
        [DisplayName("Sub-Category")]
        [MaxLength(250)]
        public string Subcategory {
            get {
                return GetAttributeValue<string>("subcategory");
            }
            set {
                SetAttributeValue("subcategory", value);
            }
        }
        
        /// <summary>
        /// <para>Subject associated with the opportunity close activity.</para>
        /// <para>Display Name: Subject</para>
        /// </summary>
        [AttributeLogicalName("subject")]
        [DisplayName("Subject")]
        [MaxLength(200)]
        public string Subject {
            get {
                return GetAttributeValue<string>("subject");
            }
            set {
                SetAttributeValue("subject", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Person who is the receiver of the activity.</para>
        /// <para>Display Name: To</para>
        /// </summary>
        [AttributeLogicalName("to")]
        [DisplayName("To")]
        public IEnumerable<ActivityParty> To {
            get {
                return GetEntityCollection<ActivityParty>("to");
            }
            set {
                SetEntityCollection("to", value);
            }
        }
        
        /// <summary>
        /// <para>transactioncurrency_opportunityclose</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Traversed Path</para>
        /// </summary>
        [AttributeLogicalName("traversedpath")]
        [DisplayName("Traversed Path")]
        [MaxLength(1250)]
        public string TraversedPath {
            get {
                return GetAttributeValue<string>("traversedpath");
            }
            set {
                SetAttributeValue("traversedpath", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version number of the opportunity close activity.</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        [RelationshipSchemaName("CampaignResponse_OpportunityCloses")]
        public IEnumerable<CampaignResponse> CampaignResponse_OpportunityCloses {
            get {
                return GetRelatedEntities<CampaignResponse>("CampaignResponse_OpportunityCloses", null);
            }
            set {
                SetRelatedEntities("CampaignResponse_OpportunityCloses", null, value);
            }
        }
        
        [RelationshipSchemaName("OpportunityClose_SyncErrors")]
        public IEnumerable<SyncError> OpportunityClose_SyncErrors {
            get {
                return GetRelatedEntities<SyncError>("OpportunityClose_SyncErrors", null);
            }
            set {
                SetRelatedEntities("OpportunityClose_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("opportunityid")]
        [RelationshipSchemaName("Opportunity_OpportunityClose")]
        public Opportunity Opportunity_OpportunityClose {
            get {
                return GetRelatedEntity<Opportunity>("Opportunity_OpportunityClose", null);
            }
            set {
                SetRelatedEntity("Opportunity_OpportunityClose", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("account_OpportunityCloses")]
        public Account account_OpportunityCloses {
            get {
                return GetRelatedEntity<Account>("account_OpportunityCloses", null);
            }
            set {
                SetRelatedEntity("account_OpportunityCloses", null, value);
            }
        }
        
        [AttributeLogicalName("activityid")]
        [RelationshipSchemaName("activity_pointer_opportunity_close")]
        public ActivityPointer activity_pointer_opportunity_close {
            get {
                return GetRelatedEntity<ActivityPointer>("activity_pointer_opportunity_close", null);
            }
            set {
                SetRelatedEntity("activity_pointer_opportunity_close", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("bookableresourcebooking_OpportunityCloses")]
        public BookableResourceBooking bookableresourcebooking_OpportunityCloses {
            get {
                return GetRelatedEntity<BookableResourceBooking>("bookableresourcebooking_OpportunityCloses", null);
            }
            set {
                SetRelatedEntity("bookableresourcebooking_OpportunityCloses", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("bookableresourcebookingheader_OpportunityCloses")]
        public BookableResourceBookingHeader bookableresourcebookingheader_OpportunityCloses {
            get {
                return GetRelatedEntity<BookableResourceBookingHeader>("bookableresourcebookingheader_OpportunityCloses", null);
            }
            set {
                SetRelatedEntity("bookableresourcebookingheader_OpportunityCloses", null, value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_opportunity_close_activities")]
        public BusinessUnit business_unit_opportunity_close_activities {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_opportunity_close_activities", null);
            }
            set {
                SetRelatedEntity("business_unit_opportunity_close_activities", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("campaign_OpportunityCloses")]
        public Campaign campaign_OpportunityCloses {
            get {
                return GetRelatedEntity<Campaign>("campaign_OpportunityCloses", null);
            }
            set {
                SetRelatedEntity("campaign_OpportunityCloses", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("campaignactivity_OpportunityCloses")]
        public CampaignActivity campaignactivity_OpportunityCloses {
            get {
                return GetRelatedEntity<CampaignActivity>("campaignactivity_OpportunityCloses", null);
            }
            set {
                SetRelatedEntity("campaignactivity_OpportunityCloses", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("entitlement_OpportunityCloses")]
        public Entitlement entitlement_OpportunityCloses {
            get {
                return GetRelatedEntity<Entitlement>("entitlement_OpportunityCloses", null);
            }
            set {
                SetRelatedEntity("entitlement_OpportunityCloses", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("incident_OpportunityCloses")]
        public Incident incident_OpportunityCloses {
            get {
                return GetRelatedEntity<Incident>("incident_OpportunityCloses", null);
            }
            set {
                SetRelatedEntity("incident_OpportunityCloses", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("knowledgearticle_OpportunityCloses")]
        public KnowledgeArticle knowledgearticle_OpportunityCloses {
            get {
                return GetRelatedEntity<KnowledgeArticle>("knowledgearticle_OpportunityCloses", null);
            }
            set {
                SetRelatedEntity("knowledgearticle_OpportunityCloses", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("lead_OpportunityCloses")]
        public Lead lead_OpportunityCloses {
            get {
                return GetRelatedEntity<Lead>("lead_OpportunityCloses", null);
            }
            set {
                SetRelatedEntity("lead_OpportunityCloses", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_opportunityclose_createdby")]
        public SystemUser lk_opportunityclose_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_opportunityclose_createdby", null);
            }
            set {
                SetRelatedEntity("lk_opportunityclose_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_opportunityclose_createdonbehalfby")]
        public SystemUser lk_opportunityclose_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_opportunityclose_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_opportunityclose_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_opportunityclose_modifiedby")]
        public SystemUser lk_opportunityclose_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_opportunityclose_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_opportunityclose_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_opportunityclose_modifiedonbehalfby")]
        public SystemUser lk_opportunityclose_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_opportunityclose_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_opportunityclose_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("opportunity_OpportunityCloses")]
        public Opportunity opportunity_OpportunityCloses {
            get {
                return GetRelatedEntity<Opportunity>("opportunity_OpportunityCloses", null);
            }
            set {
                SetRelatedEntity("opportunity_OpportunityCloses", null, value);
            }
        }
        
        [RelationshipSchemaName("opportunityclose_Teams")]
        public IEnumerable<Team> opportunityclose_Teams {
            get {
                return GetRelatedEntities<Team>("opportunityclose_Teams", null);
            }
            set {
                SetRelatedEntities("opportunityclose_Teams", null, value);
            }
        }
        
        [RelationshipSchemaName("opportunityclose_activity_parties")]
        public IEnumerable<ActivityParty> opportunityclose_activity_parties {
            get {
                return GetRelatedEntities<ActivityParty>("opportunityclose_activity_parties", null);
            }
            set {
                SetRelatedEntities("opportunityclose_activity_parties", null, value);
            }
        }
        
        [AttributeLogicalName("sendermailboxid")]
        [RelationshipSchemaName("opportunityclose_mailbox_sendermailboxid")]
        public Mailbox opportunityclose_mailbox_sendermailboxid {
            get {
                return GetRelatedEntity<Mailbox>("opportunityclose_mailbox_sendermailboxid", null);
            }
            set {
                SetRelatedEntity("opportunityclose_mailbox_sendermailboxid", null, value);
            }
        }
        
        [AttributeLogicalName("slaid")]
        [RelationshipSchemaName("opportunityclose_sla_slaid")]
        public SLA opportunityclose_sla_slaid {
            get {
                return GetRelatedEntity<SLA>("opportunityclose_sla_slaid", null);
            }
            set {
                SetRelatedEntity("opportunityclose_sla_slaid", null, value);
            }
        }
        
        [AttributeLogicalName("slainvokedid")]
        [RelationshipSchemaName("opportunityclose_sla_slainvokedid")]
        public SLA opportunityclose_sla_slainvokedid {
            get {
                return GetRelatedEntity<SLA>("opportunityclose_sla_slainvokedid", null);
            }
            set {
                SetRelatedEntity("opportunityclose_sla_slainvokedid", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_opportunityclose")]
        public Team team_opportunityclose {
            get {
                return GetRelatedEntity<Team>("team_opportunityclose", null);
            }
            set {
                SetRelatedEntity("team_opportunityclose", null, value);
            }
        }
        
        [AttributeLogicalName("transactioncurrencyid")]
        [RelationshipSchemaName("transactioncurrency_opportunityclose")]
        public TransactionCurrency transactioncurrency_opportunityclose {
            get {
                return GetRelatedEntity<TransactionCurrency>("transactioncurrency_opportunityclose", null);
            }
            set {
                SetRelatedEntity("transactioncurrency_opportunityclose", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_opportunityclose")]
        public SystemUser user_opportunityclose {
            get {
                return GetRelatedEntity<SystemUser>("user_opportunityclose", null);
            }
            set {
                SetRelatedEntity("user_opportunityclose", null, value);
            }
        }
        
        public static OpportunityClose Retrieve(IOrganizationService service, Guid id, params Expression<Func<OpportunityClose,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Opportunity Sales Process Business Process Flow </para>
    /// <para>Display Name: Opportunity Sales Process</para>
    /// </summary>
    [EntityLogicalName("opportunitysalesprocess")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class OpportunitySalesProcess : ExtendedEntity<OpportunitySalesProcessState, OpportunitySalesProcess_StatusCode> {
        
        public const string EntityLogicalName = "opportunitysalesprocess";
        
        public const int EntityTypeCode = 953;
        
        public OpportunitySalesProcess() : 
                base(EntityLogicalName) {
        }
        
        public OpportunitySalesProcess(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("name");
            }
        }
        
        [AttributeLogicalName("businessprocessflowinstanceid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("businessprocessflowinstanceid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for Opportunity Sales Process bpf entity instances</para>
        /// <para>Display Name: Opportunity Sales Process Instance Id</para>
        /// </summary>
        [AttributeLogicalName("businessprocessflowinstanceid")]
        [DisplayName("Opportunity Sales Process Instance Id")]
        public Guid? BusinessProcessFlowInstanceId {
            get {
                return GetAttributeValue<Guid?>("businessprocessflowinstanceid");
            }
            set {
                SetId("businessprocessflowinstanceid", value);
            }
        }
        
        /// <summary>
        /// <para>lk_opportunitysalesprocess_activestageid</para>
        /// <para>Display Name: Active Stage</para>
        /// </summary>
        [AttributeLogicalName("activestageid")]
        [DisplayName("Active Stage")]
        public EntityReference ActiveStageId {
            get {
                return GetAttributeValue<EntityReference>("activestageid");
            }
            set {
                SetAttributeValue("activestageid", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time when current active stage is started.</para>
        /// <para>Display Name: Active Stage Started On</para>
        /// </summary>
        [AttributeLogicalName("activestagestartedon")]
        [DisplayName("Active Stage Started On")]
        public DateTime? ActiveStageStartedOn {
            get {
                return GetAttributeValue<DateTime?>("activestagestartedon");
            }
            set {
                SetAttributeValue("activestagestartedon", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time when Business Process Flow instance is completed.</para>
        /// <para>Display Name: Completed On</para>
        /// </summary>
        [AttributeLogicalName("completedon")]
        [DisplayName("Completed On")]
        public DateTime? CompletedOn {
            get {
                return GetAttributeValue<DateTime?>("completedon");
            }
            set {
                SetAttributeValue("completedon", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the record.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Duration the business process flow was active.</para>
        /// <para>Display Name: Duration</para>
        /// </summary>
        [AttributeLogicalName("duration")]
        [DisplayName("Duration")]
        [Range(0, 2147483647)]
        public int? Duration {
            get {
                return GetAttributeValue<int?>("duration");
            }
        }
        
        /// <summary>
        /// <para>Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("Exchange Rate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who modified the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who modified the record.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Process Name.</para>
        /// <para>Display Name: Process Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Process Name")]
        [MaxLength(200)]
        public string Name {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the workflow associated to the Business Process Flow instance.</para>
        /// <para>Display Name: Opportunity</para>
        /// </summary>
        [AttributeLogicalName("opportunityid")]
        [DisplayName("Opportunity")]
        public EntityReference OpportunityId {
            get {
                return GetAttributeValue<EntityReference>("opportunityid");
            }
            set {
                SetAttributeValue("opportunityid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the organization</para>
        /// <para>Display Name: Organization Id</para>
        /// </summary>
        [AttributeLogicalName("organizationid")]
        [DisplayName("Organization Id")]
        public EntityReference OrganizationId {
            get {
                return GetAttributeValue<EntityReference>("organizationid");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Process Name.</para>
        /// <para>Display Name: Process Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Process Name")]
        [MaxLength(200)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>lk_opportunitysalesprocess_processid</para>
        /// <para>Display Name: Process</para>
        /// </summary>
        [AttributeLogicalName("processid")]
        [DisplayName("Process")]
        public EntityReference ProcessId {
            get {
                return GetAttributeValue<EntityReference>("processid");
            }
            set {
                SetAttributeValue("processid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the workflow associated to the Business Process Flow instance.</para>
        /// <para>Display Name: Related Quote</para>
        /// </summary>
        [AttributeLogicalName("quoteid")]
        [DisplayName("Related Quote")]
        public EntityReference QuoteId {
            get {
                return GetAttributeValue<EntityReference>("quoteid");
            }
            set {
                SetAttributeValue("quoteid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the workflow associated to the Business Process Flow instance.</para>
        /// <para>Display Name: Related Sales Order</para>
        /// </summary>
        [AttributeLogicalName("salesorderid")]
        [DisplayName("Related Sales Order")]
        public EntityReference SalesOrderId {
            get {
                return GetAttributeValue<EntityReference>("salesorderid");
            }
            set {
                SetAttributeValue("salesorderid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows whether the Delve action record is pending, completed, or tracking.</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public OpportunitySalesProcessState? StateCode {
            get {
                return GetOptionSetValue<OpportunitySalesProcessState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the delve action record status.</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public OpportunitySalesProcess_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<OpportunitySalesProcess_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the local currency for the record to make sure budgets are reported in the correct currency.</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>Comma delimited string of process stage ids that represent visited stages of the Business Process Flow instance.</para>
        /// <para>Display Name: Traversed Path</para>
        /// </summary>
        [AttributeLogicalName("traversedpath")]
        [DisplayName("Traversed Path")]
        [MaxLength(1250)]
        public string TraversedPath {
            get {
                return GetAttributeValue<string>("traversedpath");
            }
            set {
                SetAttributeValue("traversedpath", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version Number</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        [RelationshipSchemaName("OpportunitySalesProcess_SyncErrors")]
        public IEnumerable<SyncError> OpportunitySalesProcess_SyncErrors {
            get {
                return GetRelatedEntities<SyncError>("OpportunitySalesProcess_SyncErrors", null);
            }
            set {
                SetRelatedEntities("OpportunitySalesProcess_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_opportunitysalesprocess_createdby")]
        public SystemUser lk_opportunitysalesprocess_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_opportunitysalesprocess_createdby", null);
            }
            set {
                SetRelatedEntity("lk_opportunitysalesprocess_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_opportunitysalesprocess_createdonbehalfby")]
        public SystemUser lk_opportunitysalesprocess_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_opportunitysalesprocess_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_opportunitysalesprocess_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_opportunitysalesprocess_modifiedby")]
        public SystemUser lk_opportunitysalesprocess_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_opportunitysalesprocess_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_opportunitysalesprocess_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_opportunitysalesprocess_modifiedonbehalfby")]
        public SystemUser lk_opportunitysalesprocess_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_opportunitysalesprocess_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_opportunitysalesprocess_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("opportunityid")]
        [RelationshipSchemaName("lk_opportunitysalesprocess_opportunityid")]
        public Opportunity lk_opportunitysalesprocess_opportunityid {
            get {
                return GetRelatedEntity<Opportunity>("lk_opportunitysalesprocess_opportunityid", null);
            }
            set {
                SetRelatedEntity("lk_opportunitysalesprocess_opportunityid", null, value);
            }
        }
        
        [AttributeLogicalName("processid")]
        [RelationshipSchemaName("lk_opportunitysalesprocess_processid")]
        public Workflow lk_opportunitysalesprocess_processid {
            get {
                return GetRelatedEntity<Workflow>("lk_opportunitysalesprocess_processid", null);
            }
            set {
                SetRelatedEntity("lk_opportunitysalesprocess_processid", null, value);
            }
        }
        
        [AttributeLogicalName("quoteid")]
        [RelationshipSchemaName("lk_opportunitysalesprocess_quoteid")]
        public Quote lk_opportunitysalesprocess_quoteid {
            get {
                return GetRelatedEntity<Quote>("lk_opportunitysalesprocess_quoteid", null);
            }
            set {
                SetRelatedEntity("lk_opportunitysalesprocess_quoteid", null, value);
            }
        }
        
        [AttributeLogicalName("salesorderid")]
        [RelationshipSchemaName("lk_opportunitysalesprocess_salesorderid")]
        public SalesOrder lk_opportunitysalesprocess_salesorderid {
            get {
                return GetRelatedEntity<SalesOrder>("lk_opportunitysalesprocess_salesorderid", null);
            }
            set {
                SetRelatedEntity("lk_opportunitysalesprocess_salesorderid", null, value);
            }
        }
        
        [AttributeLogicalName("organizationid")]
        [RelationshipSchemaName("organization_opportunitysalesprocess")]
        public Organization organization_opportunitysalesprocess {
            get {
                return GetRelatedEntity<Organization>("organization_opportunitysalesprocess", null);
            }
            set {
                SetRelatedEntity("organization_opportunitysalesprocess", null, value);
            }
        }
        
        [AttributeLogicalName("transactioncurrencyid")]
        [RelationshipSchemaName("transactioncurrency_opportunitysalesprocess")]
        public TransactionCurrency transactioncurrency_opportunitysalesprocess {
            get {
                return GetRelatedEntity<TransactionCurrency>("transactioncurrency_opportunitysalesprocess", null);
            }
            set {
                SetRelatedEntity("transactioncurrency_opportunitysalesprocess", null, value);
            }
        }
        
        public static OpportunitySalesProcess Retrieve(IOrganizationService service, Guid id, params Expression<Func<OpportunitySalesProcess,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Top level of the Microsoft Dynamics 365 business hierarchy. The organization can be a specific business, holding company, or corporation.</para>
    /// <para>Display Name: Organization</para>
    /// </summary>
    [EntityLogicalName("organization")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class Organization : ExtendedEntity<EmptyEnum, EmptyEnum> {
        
        public const string EntityLogicalName = "organization";
        
        public const int EntityTypeCode = 1019;
        
        public Organization() : 
                base(EntityLogicalName) {
        }
        
        public Organization(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("name");
            }
        }
        
        [AttributeLogicalName("organizationid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("organizationid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the organization.</para>
        /// <para>Display Name: Organization</para>
        /// </summary>
        [AttributeLogicalName("organizationid")]
        [DisplayName("Organization")]
        public Guid? OrganizationId {
            get {
                return GetAttributeValue<Guid?>("organizationid");
            }
            set {
                SetId("organizationid", value);
            }
        }
        
        /// <summary>
        /// <para>ACI Web Endpoint URL.</para>
        /// <para>Display Name: ACI Tenant URL.</para>
        /// </summary>
        [AttributeLogicalName("aciwebendpointurl")]
        [DisplayName("ACI Tenant URL.")]
        [MaxLength(500)]
        public string ACIWebEndpointUrl {
            get {
                return GetAttributeValue<string>("aciwebendpointurl");
            }
            set {
                SetAttributeValue("aciwebendpointurl", value);
            }
        }
        
        /// <summary>
        /// <para>AM designator to use throughout Microsoft Dynamics CRM.</para>
        /// <para>Display Name: AM Designator</para>
        /// </summary>
        [AttributeLogicalName("amdesignator")]
        [DisplayName("AM Designator")]
        [MaxLength(25)]
        public string AMDesignator {
            get {
                return GetAttributeValue<string>("amdesignator");
            }
            set {
                SetAttributeValue("amdesignator", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the template to be used for acknowledgement when a user unsubscribes.</para>
        /// <para>Display Name: Acknowledgement Template</para>
        /// </summary>
        [AttributeLogicalName("acknowledgementtemplateid")]
        [DisplayName("Acknowledgement Template")]
        public EntityReference AcknowledgementTemplateId {
            get {
                return GetAttributeValue<EntityReference>("acknowledgementtemplateid");
            }
            set {
                SetAttributeValue("acknowledgementtemplateid", value);
            }
        }
        
        /// <summary>
        /// <para>Flag to indicate if the display column options on a view in model-driven apps is enabled</para>
        /// <para>Display Name: Advanced column editor enabled</para>
        /// </summary>
        [AttributeLogicalName("advancedcolumneditorenabled")]
        [DisplayName("Advanced column editor enabled")]
        public bool? AdvancedColumnEditorEnabled {
            get {
                return GetAttributeValue<bool?>("advancedcolumneditorenabled");
            }
            set {
                SetAttributeValue("advancedcolumneditorenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Flag to indicate if the advanced column filtering in a view in model-driven apps is enabled</para>
        /// <para>Display Name: Advanced column filtering enabled</para>
        /// </summary>
        [AttributeLogicalName("advancedcolumnfilteringenabled")]
        [DisplayName("Advanced column filtering enabled")]
        public bool? AdvancedColumnFilteringEnabled {
            get {
                return GetAttributeValue<bool?>("advancedcolumnfilteringenabled");
            }
            set {
                SetAttributeValue("advancedcolumnfilteringenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Flag to indicate if the advanced filtering on all tables in a model-driven app is enabled</para>
        /// <para>Display Name: Advanced filtering enabled</para>
        /// </summary>
        [AttributeLogicalName("advancedfilteringenabled")]
        [DisplayName("Advanced filtering enabled")]
        public bool? AdvancedFilteringEnabled {
            get {
                return GetAttributeValue<bool?>("advancedfilteringenabled");
            }
            set {
                SetAttributeValue("advancedfilteringenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Flag to indicate if the Advanced Lookup feature is enabled for lookup controls</para>
        /// <para>Display Name: Advanced lookup enabled</para>
        /// </summary>
        [AttributeLogicalName("advancedlookupenabled")]
        [DisplayName("Advanced lookup enabled")]
        public bool? AdvancedLookupEnabled {
            get {
                return GetAttributeValue<bool?>("advancedlookupenabled");
            }
            set {
                SetAttributeValue("advancedlookupenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether background address book synchronization in Microsoft Office Outlook is allowed.</para>
        /// <para>Display Name: Allow Address Book Synchronization</para>
        /// </summary>
        [AttributeLogicalName("allowaddressbooksyncs")]
        [DisplayName("Allow Address Book Synchronization")]
        public bool? AllowAddressBookSyncs {
            get {
                return GetAttributeValue<bool?>("allowaddressbooksyncs");
            }
            set {
                SetAttributeValue("allowaddressbooksyncs", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether automatic response creation is allowed.</para>
        /// <para>Display Name: Allow Automatic Response Creation</para>
        /// </summary>
        [AttributeLogicalName("allowautoresponsecreation")]
        [DisplayName("Allow Automatic Response Creation")]
        public bool? AllowAutoResponseCreation {
            get {
                return GetAttributeValue<bool?>("allowautoresponsecreation");
            }
            set {
                SetAttributeValue("allowautoresponsecreation", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether automatic unsubscribe is allowed.</para>
        /// <para>Display Name: Allow Automatic Unsubscribe</para>
        /// </summary>
        [AttributeLogicalName("allowautounsubscribe")]
        [DisplayName("Allow Automatic Unsubscribe")]
        public bool? AllowAutoUnsubscribe {
            get {
                return GetAttributeValue<bool?>("allowautounsubscribe");
            }
            set {
                SetAttributeValue("allowautounsubscribe", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether automatic unsubscribe acknowledgement email is allowed to send.</para>
        /// <para>Display Name: Allow Automatic Unsubscribe Acknowledgement</para>
        /// </summary>
        [AttributeLogicalName("allowautounsubscribeacknowledgement")]
        [DisplayName("Allow Automatic Unsubscribe Acknowledgement")]
        public bool? AllowAutoUnsubscribeAcknowledgement {
            get {
                return GetAttributeValue<bool?>("allowautounsubscribeacknowledgement");
            }
            set {
                SetAttributeValue("allowautounsubscribeacknowledgement", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether Outlook Client message bar advertisement is allowed.</para>
        /// <para>Display Name: Allow Outlook Client Message Bar Advertisement</para>
        /// </summary>
        [AttributeLogicalName("allowclientmessagebarad")]
        [DisplayName("Allow Outlook Client Message Bar Advertisement")]
        public bool? AllowClientMessageBarAd {
            get {
                return GetAttributeValue<bool?>("allowclientmessagebarad");
            }
            set {
                SetAttributeValue("allowclientmessagebarad", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether auditing of changes to entity is allowed when no attributes have changed.</para>
        /// <para>Display Name: Allow Entity Level Auditing</para>
        /// </summary>
        [AttributeLogicalName("allowentityonlyaudit")]
        [DisplayName("Allow Entity Level Auditing")]
        public bool? AllowEntityOnlyAudit {
            get {
                return GetAttributeValue<bool?>("allowentityonlyaudit");
            }
            set {
                SetAttributeValue("allowentityonlyaudit", value);
            }
        }
        
        /// <summary>
        /// <para>Enable access to legacy web client UI</para>
        /// <para>Display Name: Enable access to legacy web client UI</para>
        /// </summary>
        [AttributeLogicalName("allowlegacyclientexperience")]
        [DisplayName("Enable access to legacy web client UI")]
        public bool? AllowLegacyClientExperience {
            get {
                return GetAttributeValue<bool?>("allowlegacyclientexperience");
            }
            set {
                SetAttributeValue("allowlegacyclientexperience", value);
            }
        }
        
        /// <summary>
        /// <para>Enable embedding of certain legacy dialogs in Unified Interface browser client</para>
        /// <para>Display Name: Enable embedding of certain legacy dialogs in Unified Interface browser client</para>
        /// </summary>
        [AttributeLogicalName("allowlegacydialogsembedding")]
        [DisplayName("Enable embedding of certain legacy dialogs in Unified Interface browser client")]
        public bool? AllowLegacyDialogsEmbedding {
            get {
                return GetAttributeValue<bool?>("allowlegacydialogsembedding");
            }
            set {
                SetAttributeValue("allowlegacydialogsembedding", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether marketing emails execution is allowed.</para>
        /// <para>Display Name: Allow Marketing Email Execution</para>
        /// </summary>
        [AttributeLogicalName("allowmarketingemailexecution")]
        [DisplayName("Allow Marketing Email Execution")]
        public bool? AllowMarketingEmailExecution {
            get {
                return GetAttributeValue<bool?>("allowmarketingemailexecution");
            }
            set {
                SetAttributeValue("allowmarketingemailexecution", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether background offline synchronization in Microsoft Office Outlook is allowed.</para>
        /// <para>Display Name: Allow Offline Scheduled Synchronization</para>
        /// </summary>
        [AttributeLogicalName("allowofflinescheduledsyncs")]
        [DisplayName("Allow Offline Scheduled Synchronization")]
        public bool? AllowOfflineScheduledSyncs {
            get {
                return GetAttributeValue<bool?>("allowofflinescheduledsyncs");
            }
            set {
                SetAttributeValue("allowofflinescheduledsyncs", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether scheduled synchronizations to Outlook are allowed.</para>
        /// <para>Display Name: Allow Scheduled Synchronization</para>
        /// </summary>
        [AttributeLogicalName("allowoutlookscheduledsyncs")]
        [DisplayName("Allow Scheduled Synchronization")]
        public bool? AllowOutlookScheduledSyncs {
            get {
                return GetAttributeValue<bool?>("allowoutlookscheduledsyncs");
            }
            set {
                SetAttributeValue("allowoutlookscheduledsyncs", value);
            }
        }
        
        /// <summary>
        /// <para>Control whether the organization Allow Redirect Legacy Admin Settings To Modern UI</para>
        /// <para>Display Name: Allow Redirect Legacy Admin Settings To Modern UI</para>
        /// </summary>
        [AttributeLogicalName("allowredirectadminsettingstomodernui")]
        [DisplayName("Allow Redirect Legacy Admin Settings To Modern UI")]
        public bool? AllowRedirectAdminSettingsToModernUI {
            get {
                return GetAttributeValue<bool?>("allowredirectadminsettingstomodernui");
            }
            set {
                SetAttributeValue("allowredirectadminsettingstomodernui", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether users are allowed to send email to unresolved parties (parties must still have an email address).</para>
        /// <para>Display Name: Allow Unresolved Address Email Send</para>
        /// </summary>
        [AttributeLogicalName("allowunresolvedpartiesonemailsend")]
        [DisplayName("Allow Unresolved Address Email Send")]
        public bool? AllowUnresolvedPartiesOnEmailSend {
            get {
                return GetAttributeValue<bool?>("allowunresolvedpartiesonemailsend");
            }
            set {
                SetAttributeValue("allowunresolvedpartiesonemailsend", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether individuals can select their form mode preference in their personal options.</para>
        /// <para>Display Name: Allow User Form Mode Preference</para>
        /// </summary>
        [AttributeLogicalName("allowuserformmodepreference")]
        [DisplayName("Allow User Form Mode Preference")]
        public bool? AllowUserFormModePreference {
            get {
                return GetAttributeValue<bool?>("allowuserformmodepreference");
            }
            set {
                SetAttributeValue("allowuserformmodepreference", value);
            }
        }
        
        /// <summary>
        /// <para>Flag to indicate if allow end users to hide system views in model-driven apps is enabled</para>
        /// <para>Display Name: Allow users hiding system views</para>
        /// </summary>
        [AttributeLogicalName("allowusershidingsystemviews")]
        [DisplayName("Allow users hiding system views")]
        public bool? AllowUsersHidingSystemViews {
            get {
                return GetAttributeValue<bool?>("allowusershidingsystemviews");
            }
            set {
                SetAttributeValue("allowusershidingsystemviews", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the showing tablet application notification bars in a browser is allowed.</para>
        /// <para>Display Name: Allow the showing tablet application notification bars in a browser.</para>
        /// </summary>
        [AttributeLogicalName("allowusersseeappdownloadmessage")]
        [DisplayName("Allow the showing tablet application notification bars in a browser.")]
        public bool? AllowUsersSeeAppdownloadMessage {
            get {
                return GetAttributeValue<bool?>("allowusersseeappdownloadmessage");
            }
            set {
                SetAttributeValue("allowusersseeappdownloadmessage", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether Web-based export of grids to Microsoft Office Excel is allowed.</para>
        /// <para>Display Name: Allow Export to Excel</para>
        /// </summary>
        [AttributeLogicalName("allowwebexcelexport")]
        [DisplayName("Allow Export to Excel")]
        public bool? AllowWebExcelExport {
            get {
                return GetAttributeValue<bool?>("allowwebexcelexport");
            }
            set {
                SetAttributeValue("allowwebexcelexport", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the appDesignerExperience is enabled for the organization.</para>
        /// <para>Display Name: Enable App Designer Experience for this Organization</para>
        /// </summary>
        [AttributeLogicalName("appdesignerexperienceenabled")]
        [DisplayName("Enable App Designer Experience for this Organization")]
        public bool? AppDesignerExperienceEnabled {
            get {
                return GetAttributeValue<bool?>("appdesignerexperienceenabled");
            }
            set {
                SetAttributeValue("appdesignerexperienceenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Information on whether rich editing experience for Appointment is enabled.</para>
        /// <para>Display Name: Enable Rich Editing Experience for Appointment</para>
        /// </summary>
        [AttributeLogicalName("appointmentricheditorexperience")]
        [DisplayName("Enable Rich Editing Experience for Appointment")]
        public bool? AppointmentRichEditorExperience {
            get {
                return GetAttributeValue<bool?>("appointmentricheditorexperience");
            }
            set {
                SetAttributeValue("appointmentricheditorexperience", value);
            }
        }
        
        /// <summary>
        /// <para>Audit Retention Period settings stored in Organization Database.</para>
        /// <para>Display Name: Audit Retention Period Settings</para>
        /// </summary>
        [AttributeLogicalName("auditretentionperiod")]
        [DisplayName("Audit Retention Period Settings")]
        [Range(30, 2147483647)]
        public int? AuditRetentionPeriod {
            get {
                return GetAttributeValue<int?>("auditretentionperiod");
            }
            set {
                SetAttributeValue("auditretentionperiod", value);
            }
        }
        
        /// <summary>
        /// <para>Audit Retention Period settings stored in Organization Database.</para>
        /// <para>Display Name: Audit Retention Period Settings</para>
        /// </summary>
        [AttributeLogicalName("auditretentionperiodv2")]
        [DisplayName("Audit Retention Period Settings")]
        [Range(-2147483648, 2147483647)]
        public int? AuditRetentionPeriodV2 {
            get {
                return GetAttributeValue<int?>("auditretentionperiodv2");
            }
            set {
                SetAttributeValue("auditretentionperiodv2", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether to auto apply the default customer entitlement on case creation.</para>
        /// <para>Display Name: Auto Apply Default Entitlement on Case Create</para>
        /// </summary>
        [AttributeLogicalName("autoapplydefaultoncasecreate")]
        [DisplayName("Auto Apply Default Entitlement on Case Create")]
        public bool? AutoApplyDefaultonCaseCreate {
            get {
                return GetAttributeValue<bool?>("autoapplydefaultoncasecreate");
            }
            set {
                SetAttributeValue("autoapplydefaultoncasecreate", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether to auto apply the default customer entitlement on case update.</para>
        /// <para>Display Name: Auto Apply Default Entitlement on Case Update</para>
        /// </summary>
        [AttributeLogicalName("autoapplydefaultoncaseupdate")]
        [DisplayName("Auto Apply Default Entitlement on Case Update")]
        public bool? AutoApplyDefaultonCaseUpdate {
            get {
                return GetAttributeValue<bool?>("autoapplydefaultoncaseupdate");
            }
            set {
                SetAttributeValue("autoapplydefaultoncaseupdate", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether to Auto-apply SLA on case record update after SLA was manually applied.</para>
        /// <para>Display Name: Is Auto-apply SLA After Manually Over-riding</para>
        /// </summary>
        [AttributeLogicalName("autoapplysla")]
        [DisplayName("Is Auto-apply SLA After Manually Over-riding")]
        public bool? AutoApplySLA {
            get {
                return GetAttributeValue<bool?>("autoapplysla");
            }
            set {
                SetAttributeValue("autoapplysla", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: For internal use only.</para>
        /// </summary>
        [AttributeLogicalName("azureschedulerjobcollectionname")]
        [DisplayName("For internal use only.")]
        [MaxLength(100)]
        public string AzureSchedulerJobCollectionName {
            get {
                return GetAttributeValue<string>("azureschedulerjobcollectionname");
            }
            set {
                SetAttributeValue("azureschedulerjobcollectionname", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the base currency of the organization.</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("basecurrencyid")]
        [DisplayName("Currency")]
        public EntityReference BaseCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("basecurrencyid");
            }
            set {
                SetAttributeValue("basecurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>Number of decimal places that can be used for the base currency.</para>
        /// <para>Display Name: Base Currency Precision</para>
        /// </summary>
        [AttributeLogicalName("basecurrencyprecision")]
        [DisplayName("Base Currency Precision")]
        [Range(0, 4)]
        public int? BaseCurrencyPrecision {
            get {
                return GetAttributeValue<int?>("basecurrencyprecision");
            }
        }
        
        /// <summary>
        /// <para>Symbol used for the base currency.</para>
        /// <para>Display Name: Base Currency Symbol</para>
        /// </summary>
        [AttributeLogicalName("basecurrencysymbol")]
        [DisplayName("Base Currency Symbol")]
        [MaxLength(5)]
        public string BaseCurrencySymbol {
            get {
                return GetAttributeValue<string>("basecurrencysymbol");
            }
        }
        
        /// <summary>
        /// <para>Api Key to be used in requests to Bing Maps services.</para>
        /// <para>Display Name: Bing Maps API Key</para>
        /// </summary>
        [AttributeLogicalName("bingmapsapikey")]
        [DisplayName("Bing Maps API Key")]
        [MaxLength(1024)]
        public string BingMapsApiKey {
            get {
                return GetAttributeValue<string>("bingmapsapikey");
            }
            set {
                SetAttributeValue("bingmapsapikey", value);
            }
        }
        
        /// <summary>
        /// <para>Prevent upload or download of certain attachment types that are considered dangerous.</para>
        /// <para>Display Name: Block Attachments</para>
        /// </summary>
        [AttributeLogicalName("blockedattachments")]
        [DisplayName("Block Attachments")]
        [MaxLength(1073741823)]
        public string BlockedAttachments {
            get {
                return GetAttributeValue<string>("blockedattachments");
            }
            set {
                SetAttributeValue("blockedattachments", value);
            }
        }
        
        /// <summary>
        /// <para>Display cards in expanded state for interactive dashboard</para>
        /// <para>Display Name: Display cards in expanded state for Interactive Dashboard</para>
        /// </summary>
        [AttributeLogicalName("bounddashboarddefaultcardexpanded")]
        [DisplayName("Display cards in expanded state for Interactive Dashboard")]
        public bool? BoundDashboardDefaultCardExpanded {
            get {
                return GetAttributeValue<bool?>("bounddashboarddefaultcardexpanded");
            }
            set {
                SetAttributeValue("bounddashboarddefaultcardexpanded", value);
            }
        }
        
        /// <summary>
        /// <para>Prefix used for bulk operation numbering.</para>
        /// <para>Display Name: Bulk Operation Prefix</para>
        /// </summary>
        [AttributeLogicalName("bulkoperationprefix")]
        [DisplayName("Bulk Operation Prefix")]
        [MaxLength(20)]
        public string BulkOperationPrefix {
            get {
                return GetAttributeValue<string>("bulkoperationprefix");
            }
            set {
                SetAttributeValue("bulkoperationprefix", value);
            }
        }
        
        /// <summary>
        /// <para>BusinessCardOptions</para>
        /// <para>Display Name: Enable New BusinessCardOptions</para>
        /// </summary>
        [AttributeLogicalName("businesscardoptions")]
        [DisplayName("Enable New BusinessCardOptions")]
        [MaxLength(1000)]
        public string BusinessCardOptions {
            get {
                return GetAttributeValue<string>("businesscardoptions");
            }
            set {
                SetAttributeValue("businesscardoptions", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the business closure calendar of organization.</para>
        /// <para>Display Name: Business Closure Calendar</para>
        /// </summary>
        [AttributeLogicalName("businessclosurecalendarid")]
        [DisplayName("Business Closure Calendar")]
        public Guid? BusinessClosureCalendarId {
            get {
                return GetAttributeValue<Guid?>("businessclosurecalendarid");
            }
            set {
                SetAttributeValue("businessclosurecalendarid", value);
            }
        }
        
        /// <summary>
        /// <para>Calendar type for the system. Set to Gregorian US by default.</para>
        /// <para>Display Name: Calendar Type</para>
        /// </summary>
        [AttributeLogicalName("calendartype")]
        [DisplayName("Calendar Type")]
        [Range(-2147483648, 2147483647)]
        public int? CalendarType {
            get {
                return GetAttributeValue<int?>("calendartype");
            }
            set {
                SetAttributeValue("calendartype", value);
            }
        }
        
        /// <summary>
        /// <para>Prefix used for campaign numbering.</para>
        /// <para>Display Name: Campaign Prefix</para>
        /// </summary>
        [AttributeLogicalName("campaignprefix")]
        [DisplayName("Campaign Prefix")]
        [MaxLength(20)]
        public string CampaignPrefix {
            get {
                return GetAttributeValue<string>("campaignprefix");
            }
            set {
                SetAttributeValue("campaignprefix", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the organization can opt out of the new Relevance search experience (released in Oct 2020)</para>
        /// <para>Display Name: Can disable Oct 2020 Search</para>
        /// </summary>
        [AttributeLogicalName("canoptoutnewsearchexperience")]
        [DisplayName("Can disable Oct 2020 Search")]
        public bool? CanOptOutNewSearchExperience {
            get {
                return GetAttributeValue<bool?>("canoptoutnewsearchexperience");
            }
            set {
                SetAttributeValue("canoptoutnewsearchexperience", value);
            }
        }
        
        /// <summary>
        /// <para>Flag to cascade Update on incident.</para>
        /// <para>Display Name: Cascade Status Update</para>
        /// </summary>
        [AttributeLogicalName("cascadestatusupdate")]
        [DisplayName("Cascade Status Update")]
        public bool? CascadeStatusUpdate {
            get {
                return GetAttributeValue<bool?>("cascadestatusupdate");
            }
            set {
                SetAttributeValue("cascadestatusupdate", value);
            }
        }
        
        /// <summary>
        /// <para>Prefix to use for all cases throughout Microsoft Dynamics 365.</para>
        /// <para>Display Name: Case Prefix</para>
        /// </summary>
        [AttributeLogicalName("caseprefix")]
        [DisplayName("Case Prefix")]
        [MaxLength(20)]
        public string CasePrefix {
            get {
                return GetAttributeValue<string>("caseprefix");
            }
            set {
                SetAttributeValue("caseprefix", value);
            }
        }
        
        /// <summary>
        /// <para>Type the prefix to use for all categories in Microsoft Dynamics 365.</para>
        /// <para>Display Name: Category Prefix</para>
        /// </summary>
        [AttributeLogicalName("categoryprefix")]
        [DisplayName("Category Prefix")]
        [MaxLength(20)]
        public string CategoryPrefix {
            get {
                return GetAttributeValue<string>("categoryprefix");
            }
            set {
                SetAttributeValue("categoryprefix", value);
            }
        }
        
        /// <summary>
        /// <para>Client Features to be enabled as an XML BLOB.</para>
        /// <para>Display Name: Client Feature Set</para>
        /// </summary>
        [AttributeLogicalName("clientfeatureset")]
        [DisplayName("Client Feature Set")]
        [MaxLength(1073741823)]
        public string ClientFeatureSet {
            get {
                return GetAttributeValue<string>("clientfeatureset");
            }
            set {
                SetAttributeValue("clientfeatureset", value);
            }
        }
        
        /// <summary>
        /// <para>Policy configuration for CSP</para>
        /// <para>Display Name: Content Security Policy Configuration</para>
        /// </summary>
        [AttributeLogicalName("contentsecuritypolicyconfiguration")]
        [DisplayName("Content Security Policy Configuration")]
        [MaxLength(1073741823)]
        public string ContentSecurityPolicyConfiguration {
            get {
                return GetAttributeValue<string>("contentsecuritypolicyconfiguration");
            }
            set {
                SetAttributeValue("contentsecuritypolicyconfiguration", value);
            }
        }
        
        /// <summary>
        /// <para>Prefix to use for all contracts throughout Microsoft Dynamics 365.</para>
        /// <para>Display Name: Contract Prefix</para>
        /// </summary>
        [AttributeLogicalName("contractprefix")]
        [DisplayName("Contract Prefix")]
        [MaxLength(20)]
        public string ContractPrefix {
            get {
                return GetAttributeValue<string>("contractprefix");
            }
            set {
                SetAttributeValue("contractprefix", value);
            }
        }
        
        /// <summary>
        /// <para>Refresh rate for copresence data in seconds.</para>
        /// <para>Display Name: CopresenceRefreshRate</para>
        /// </summary>
        [AttributeLogicalName("copresencerefreshrate")]
        [DisplayName("CopresenceRefreshRate")]
        [Range(30, 2147483647)]
        public int? CopresenceRefreshRate {
            get {
                return GetAttributeValue<int?>("copresencerefreshrate");
            }
            set {
                SetAttributeValue("copresencerefreshrate", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the feature CortanaProactiveExperience Flow processes should be enabled for the organization.</para>
        /// <para>Display Name: Enable Cortana Proactive Experience Flow processes for this Organization</para>
        /// </summary>
        [AttributeLogicalName("cortanaproactiveexperienceenabled")]
        [DisplayName("Enable Cortana Proactive Experience Flow processes for this Organization")]
        public bool? CortanaProactiveExperienceEnabled {
            get {
                return GetAttributeValue<bool?>("cortanaproactiveexperienceenabled");
            }
            set {
                SetAttributeValue("cortanaproactiveexperienceenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Enable Initial state of newly created products to be Active instead of Draft</para>
        /// <para>Display Name: Enable Active Initial Product State</para>
        /// </summary>
        [AttributeLogicalName("createproductswithoutparentinactivestate")]
        [DisplayName("Enable Active Initial Product State")]
        public bool? CreateProductsWithoutParentInActiveState {
            get {
                return GetAttributeValue<bool?>("createproductswithoutparentinactivestate");
            }
            set {
                SetAttributeValue("createproductswithoutparentinactivestate", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the organization.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the organization was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the organization.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Number of decimal places that can be used for currency.</para>
        /// <para>Display Name: Currency Decimal Precision</para>
        /// </summary>
        [AttributeLogicalName("currencydecimalprecision")]
        [DisplayName("Currency Decimal Precision")]
        [Range(-2147483648, 2147483647)]
        public int? CurrencyDecimalPrecision {
            get {
                return GetAttributeValue<int?>("currencydecimalprecision");
            }
            set {
                SetAttributeValue("currencydecimalprecision", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether to display money fields with currency code or currency symbol.</para>
        /// <para>Display Name: Display Currencies Using</para>
        /// </summary>
        [AttributeLogicalName("currencydisplayoption")]
        [DisplayName("Display Currencies Using")]
        public Organization_CurrencyDisplayOption? CurrencyDisplayOption {
            get {
                return GetOptionSetValue<Organization_CurrencyDisplayOption>("currencydisplayoption");
            }
            set {
                SetOptionSetValue("currencydisplayoption", value);
            }
        }
        
        /// <summary>
        /// <para>Information about how currency symbols are placed throughout Microsoft Dynamics CRM.</para>
        /// <para>Display Name: Currency Format Code</para>
        /// </summary>
        [AttributeLogicalName("currencyformatcode")]
        [DisplayName("Currency Format Code")]
        public Organization_CurrencyFormatCode? CurrencyFormatCode {
            get {
                return GetOptionSetValue<Organization_CurrencyFormatCode>("currencyformatcode");
            }
            set {
                SetOptionSetValue("currencyformatcode", value);
            }
        }
        
        /// <summary>
        /// <para>Symbol used for currency throughout Microsoft Dynamics 365.</para>
        /// <para>Display Name: Currency Symbol</para>
        /// </summary>
        [AttributeLogicalName("currencysymbol")]
        [DisplayName("Currency Symbol")]
        [MaxLength(13)]
        public string CurrencySymbol {
            get {
                return GetAttributeValue<string>("currencysymbol");
            }
            set {
                SetAttributeValue("currencysymbol", value);
            }
        }
        
        /// <summary>
        /// <para>Current bulk operation number. Deprecated. Use SetAutoNumberSeed message.</para>
        /// <para>Display Name: Current Bulk Operation Number</para>
        /// </summary>
        [AttributeLogicalName("currentbulkoperationnumber")]
        [DisplayName("Current Bulk Operation Number")]
        [Range(0, 2147483647)]
        public int? CurrentBulkOperationNumber {
            get {
                return GetAttributeValue<int?>("currentbulkoperationnumber");
            }
            set {
                SetAttributeValue("currentbulkoperationnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Current campaign number. Deprecated. Use SetAutoNumberSeed message.</para>
        /// <para>Display Name: Current Campaign Number</para>
        /// </summary>
        [AttributeLogicalName("currentcampaignnumber")]
        [DisplayName("Current Campaign Number")]
        [Range(-2147483648, 2147483647)]
        public int? CurrentCampaignNumber {
            get {
                return GetAttributeValue<int?>("currentcampaignnumber");
            }
            set {
                SetAttributeValue("currentcampaignnumber", value);
            }
        }
        
        /// <summary>
        /// <para>First case number to use. Deprecated. Use SetAutoNumberSeed message.</para>
        /// <para>Display Name: Current Case Number</para>
        /// </summary>
        [AttributeLogicalName("currentcasenumber")]
        [DisplayName("Current Case Number")]
        [Range(-2147483648, 2147483647)]
        public int? CurrentCaseNumber {
            get {
                return GetAttributeValue<int?>("currentcasenumber");
            }
            set {
                SetAttributeValue("currentcasenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the first number to use for Categories. Deprecated. Use SetAutoNumberSeed message.</para>
        /// <para>Display Name: Current Category Number</para>
        /// </summary>
        [AttributeLogicalName("currentcategorynumber")]
        [DisplayName("Current Category Number")]
        [Range(-1, 2147483647)]
        public int? CurrentCategoryNumber {
            get {
                return GetAttributeValue<int?>("currentcategorynumber");
            }
            set {
                SetAttributeValue("currentcategorynumber", value);
            }
        }
        
        /// <summary>
        /// <para>First contract number to use. Deprecated. Use SetAutoNumberSeed message.</para>
        /// <para>Display Name: Current Contract Number</para>
        /// </summary>
        [AttributeLogicalName("currentcontractnumber")]
        [DisplayName("Current Contract Number")]
        [Range(-2147483648, 2147483647)]
        public int? CurrentContractNumber {
            get {
                return GetAttributeValue<int?>("currentcontractnumber");
            }
            set {
                SetAttributeValue("currentcontractnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Import sequence to use.</para>
        /// <para>Display Name: Current Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("currentimportsequencenumber")]
        [DisplayName("Current Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? CurrentImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("currentimportsequencenumber");
            }
        }
        
        /// <summary>
        /// <para>First invoice number to use. Deprecated. Use SetAutoNumberSeed message.</para>
        /// <para>Display Name: Current Invoice Number</para>
        /// </summary>
        [AttributeLogicalName("currentinvoicenumber")]
        [DisplayName("Current Invoice Number")]
        [Range(-2147483648, 2147483647)]
        public int? CurrentInvoiceNumber {
            get {
                return GetAttributeValue<int?>("currentinvoicenumber");
            }
            set {
                SetAttributeValue("currentinvoicenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the first number to use for knowledge articles. Deprecated. Use SetAutoNumberSeed message.</para>
        /// <para>Display Name: Current Knowledge Article Number</para>
        /// </summary>
        [AttributeLogicalName("currentkanumber")]
        [DisplayName("Current Knowledge Article Number")]
        [Range(-1, 2147483647)]
        public int? CurrentKaNumber {
            get {
                return GetAttributeValue<int?>("currentkanumber");
            }
            set {
                SetAttributeValue("currentkanumber", value);
            }
        }
        
        /// <summary>
        /// <para>First article number to use. Deprecated. Use SetAutoNumberSeed message.</para>
        /// <para>Display Name: Current Article Number</para>
        /// </summary>
        [AttributeLogicalName("currentkbnumber")]
        [DisplayName("Current Article Number")]
        [Range(-2147483648, 2147483647)]
        public int? CurrentKbNumber {
            get {
                return GetAttributeValue<int?>("currentkbnumber");
            }
            set {
                SetAttributeValue("currentkbnumber", value);
            }
        }
        
        /// <summary>
        /// <para>First order number to use. Deprecated. Use SetAutoNumberSeed message.</para>
        /// <para>Display Name: Current Order Number</para>
        /// </summary>
        [AttributeLogicalName("currentordernumber")]
        [DisplayName("Current Order Number")]
        [Range(-2147483648, 2147483647)]
        public int? CurrentOrderNumber {
            get {
                return GetAttributeValue<int?>("currentordernumber");
            }
            set {
                SetAttributeValue("currentordernumber", value);
            }
        }
        
        /// <summary>
        /// <para>First parsed table number to use.</para>
        /// <para>Display Name: Current Parsed Table Number</para>
        /// </summary>
        [AttributeLogicalName("currentparsedtablenumber")]
        [DisplayName("Current Parsed Table Number")]
        [Range(-2147483648, 2147483647)]
        public int? CurrentParsedTableNumber {
            get {
                return GetAttributeValue<int?>("currentparsedtablenumber");
            }
        }
        
        /// <summary>
        /// <para>First quote number to use. Deprecated. Use SetAutoNumberSeed message.</para>
        /// <para>Display Name: Current Quote Number</para>
        /// </summary>
        [AttributeLogicalName("currentquotenumber")]
        [DisplayName("Current Quote Number")]
        [Range(-2147483648, 2147483647)]
        public int? CurrentQuoteNumber {
            get {
                return GetAttributeValue<int?>("currentquotenumber");
            }
            set {
                SetAttributeValue("currentquotenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Information about how the date is displayed throughout Microsoft CRM.</para>
        /// <para>Display Name: Date Format Code</para>
        /// </summary>
        [AttributeLogicalName("dateformatcode")]
        [DisplayName("Date Format Code")]
        public Object DateFormatCode {
            get {
                return GetAttributeValue<Object>("dateformatcode");
            }
            set {
                SetAttributeValue("dateformatcode", value);
            }
        }
        
        /// <summary>
        /// <para>String showing how the date is displayed throughout Microsoft CRM.</para>
        /// <para>Display Name: Date Format String</para>
        /// </summary>
        [AttributeLogicalName("dateformatstring")]
        [DisplayName("Date Format String")]
        [MaxLength(255)]
        public string DateFormatString {
            get {
                return GetAttributeValue<string>("dateformatstring");
            }
            set {
                SetAttributeValue("dateformatstring", value);
            }
        }
        
        /// <summary>
        /// <para>Character used to separate the month, the day, and the year in dates throughout Microsoft Dynamics 365.</para>
        /// <para>Display Name: Date Separator</para>
        /// </summary>
        [AttributeLogicalName("dateseparator")]
        [DisplayName("Date Separator")]
        [MaxLength(5)]
        public string DateSeparator {
            get {
                return GetAttributeValue<string>("dateseparator");
            }
            set {
                SetAttributeValue("dateseparator", value);
            }
        }
        
        /// <summary>
        /// <para>The maximum value for the Mobile Offline setting Days since record last modified</para>
        /// <para>Display Name: Max value of Days since record last modified</para>
        /// </summary>
        [AttributeLogicalName("dayssincerecordlastmodifiedmaxvalue")]
        [DisplayName("Max value of Days since record last modified")]
        [Range(0, 2147483647)]
        public int? DaysSinceRecordLastModifiedMaxValue {
            get {
                return GetAttributeValue<int?>("dayssincerecordlastmodifiedmaxvalue");
            }
        }
        
        /// <summary>
        /// <para>Symbol used for decimal in Microsoft Dynamics 365.</para>
        /// <para>Display Name: Decimal Symbol</para>
        /// </summary>
        [AttributeLogicalName("decimalsymbol")]
        [DisplayName("Decimal Symbol")]
        [MaxLength(5)]
        public string DecimalSymbol {
            get {
                return GetAttributeValue<string>("decimalsymbol");
            }
            set {
                SetAttributeValue("decimalsymbol", value);
            }
        }
        
        /// <summary>
        /// <para>Text area to enter default country code.</para>
        /// <para>Display Name: Default Country Code</para>
        /// </summary>
        [AttributeLogicalName("defaultcountrycode")]
        [DisplayName("Default Country Code")]
        [MaxLength(30)]
        public string DefaultCountryCode {
            get {
                return GetAttributeValue<string>("defaultcountrycode");
            }
            set {
                SetAttributeValue("defaultcountrycode", value);
            }
        }
        
        /// <summary>
        /// <para>Name of the default crm custom.</para>
        /// <para>Display Name: Name of the default app</para>
        /// </summary>
        [AttributeLogicalName("defaultcrmcustomname")]
        [DisplayName("Name of the default app")]
        [MaxLength(100)]
        public string DefaultCrmCustomName {
            get {
                return GetAttributeValue<string>("defaultcrmcustomname");
            }
            set {
                SetAttributeValue("defaultcrmcustomname", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the default email server profile.</para>
        /// <para>Display Name: Email Server Profile</para>
        /// </summary>
        [AttributeLogicalName("defaultemailserverprofileid")]
        [DisplayName("Email Server Profile")]
        public EntityReference DefaultEmailServerProfileId {
            get {
                return GetAttributeValue<EntityReference>("defaultemailserverprofileid");
            }
            set {
                SetAttributeValue("defaultemailserverprofileid", value);
            }
        }
        
        /// <summary>
        /// <para>XML string containing the default email settings that are applied when a user or queue is created.</para>
        /// <para>Display Name: Default Email Settings</para>
        /// </summary>
        [AttributeLogicalName("defaultemailsettings")]
        [DisplayName("Default Email Settings")]
        [MaxLength(1073741823)]
        public string DefaultEmailSettings {
            get {
                return GetAttributeValue<string>("defaultemailsettings");
            }
            set {
                SetAttributeValue("defaultemailsettings", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the default mobile offline profile.</para>
        /// <para>Display Name: Default Mobile Offline Profile</para>
        /// </summary>
        [AttributeLogicalName("defaultmobileofflineprofileid")]
        [DisplayName("Default Mobile Offline Profile")]
        public EntityReference DefaultMobileOfflineProfileId {
            get {
                return GetAttributeValue<EntityReference>("defaultmobileofflineprofileid");
            }
            set {
                SetAttributeValue("defaultmobileofflineprofileid", value);
            }
        }
        
        /// <summary>
        /// <para>Type of default recurrence end range date.</para>
        /// <para>Display Name: Default Recurrence End Range Type</para>
        /// </summary>
        [AttributeLogicalName("defaultrecurrenceendrangetype")]
        [DisplayName("Default Recurrence End Range Type")]
        public Organization_DefaultRecurrenceEndRangeType? DefaultRecurrenceEndRangeType {
            get {
                return GetOptionSetValue<Organization_DefaultRecurrenceEndRangeType>("defaultrecurrenceendrangetype");
            }
            set {
                SetOptionSetValue("defaultrecurrenceendrangetype", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the default teams linked chat title is the record name</para>
        /// <para>Display Name: Indicates whether the default teams linked chat title is the record name</para>
        /// </summary>
        [AttributeLogicalName("defaultteamschattitlerecordname")]
        [DisplayName("Indicates whether the default teams linked chat title is the record name")]
        public bool? DefaultTeamsChatTitleRecordName {
            get {
                return GetAttributeValue<bool?>("defaultteamschattitlerecordname");
            }
            set {
                SetAttributeValue("defaultteamschattitlerecordname", value);
            }
        }
        
        /// <summary>
        /// <para>Default theme data for the organization.</para>
        /// <para>Display Name: Default Theme Data</para>
        /// </summary>
        [AttributeLogicalName("defaultthemedata")]
        [DisplayName("Default Theme Data")]
        public string DefaultThemeData {
            get {
                return GetAttributeValue<string>("defaultthemedata");
            }
            set {
                SetAttributeValue("defaultthemedata", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegated admin user for the organization.</para>
        /// <para>Display Name: Delegated Admin</para>
        /// </summary>
        [AttributeLogicalName("delegatedadminuserid")]
        [DisplayName("Delegated Admin")]
        public Guid? DelegatedAdminUserId {
            get {
                return GetAttributeValue<Guid?>("delegatedadminuserid");
            }
            set {
                SetAttributeValue("delegatedadminuserid", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether Social Care is disabled.</para>
        /// <para>Display Name: Is Social Care disabled</para>
        /// </summary>
        [AttributeLogicalName("disablesocialcare")]
        [DisplayName("Is Social Care disabled")]
        public bool? DisableSocialCare {
            get {
                return GetAttributeValue<bool?>("disablesocialcare");
            }
            set {
                SetAttributeValue("disablesocialcare", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for disabling the organization.</para>
        /// <para>Display Name: Disabled Reason</para>
        /// </summary>
        [AttributeLogicalName("disabledreason")]
        [DisplayName("Disabled Reason")]
        [MaxLength(500)]
        public string DisabledReason {
            get {
                return GetAttributeValue<string>("disabledreason");
            }
        }
        
        /// <summary>
        /// <para>Discount calculation method for the QOOI product.</para>
        /// <para>Display Name: Discount calculation method</para>
        /// </summary>
        [AttributeLogicalName("discountcalculationmethod")]
        [DisplayName("Discount calculation method")]
        public Organization_DiscountCalculationMethod? DiscountCalculationMethod {
            get {
                return GetOptionSetValue<Organization_DiscountCalculationMethod>("discountcalculationmethod");
            }
            set {
                SetOptionSetValue("discountcalculationmethod", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether or not navigation tour is displayed.</para>
        /// <para>Display Name: Display Navigation Tour</para>
        /// </summary>
        [AttributeLogicalName("displaynavigationtour")]
        [DisplayName("Display Navigation Tour")]
        public bool? DisplayNavigationTour {
            get {
                return GetAttributeValue<bool?>("displaynavigationtour");
            }
            set {
                SetAttributeValue("displaynavigationtour", value);
            }
        }
        
        /// <summary>
        /// <para>Select if you want to use the Email Router or server-side synchronization for email processing.</para>
        /// <para>Display Name: Email Connection Channel</para>
        /// </summary>
        [AttributeLogicalName("emailconnectionchannel")]
        [DisplayName("Email Connection Channel")]
        public Organization_EmailConnectionChannel? EmailConnectionChannel {
            get {
                return GetOptionSetValue<Organization_EmailConnectionChannel>("emailconnectionchannel");
            }
            set {
                SetOptionSetValue("emailconnectionchannel", value);
            }
        }
        
        /// <summary>
        /// <para>Flag to turn email correlation on or off.</para>
        /// <para>Display Name: Use Email Correlation</para>
        /// </summary>
        [AttributeLogicalName("emailcorrelationenabled")]
        [DisplayName("Use Email Correlation")]
        public bool? EmailCorrelationEnabled {
            get {
                return GetAttributeValue<bool?>("emailcorrelationenabled");
            }
            set {
                SetAttributeValue("emailcorrelationenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Normal polling frequency used for sending email in Microsoft Office Outlook.</para>
        /// <para>Display Name: Email Send Polling Frequency</para>
        /// </summary>
        [AttributeLogicalName("emailsendpollingperiod")]
        [DisplayName("Email Send Polling Frequency")]
        [Range(-2147483648, 2147483647)]
        public int? EmailSendPollingPeriod {
            get {
                return GetAttributeValue<int?>("emailsendpollingperiod");
            }
            set {
                SetAttributeValue("emailsendpollingperiod", value);
            }
        }
        
        /// <summary>
        /// <para>Enable Integration with Bing Maps</para>
        /// <para>Display Name: Enable Integration with Bing Maps</para>
        /// </summary>
        [AttributeLogicalName("enablebingmapsintegration")]
        [DisplayName("Enable Integration with Bing Maps")]
        public bool? EnableBingMapsIntegration {
            get {
                return GetAttributeValue<bool?>("enablebingmapsintegration");
            }
            set {
                SetAttributeValue("enablebingmapsintegration", value);
            }
        }
        
        /// <summary>
        /// <para>Enable Integration with Immersive Skype</para>
        /// <para>Display Name: Enable Integration with Immersive Skype</para>
        /// </summary>
        [AttributeLogicalName("enableimmersiveskypeintegration")]
        [DisplayName("Enable Integration with Immersive Skype")]
        public bool? EnableImmersiveSkypeIntegration {
            get {
                return GetAttributeValue<bool?>("enableimmersiveskypeintegration");
            }
            set {
                SetAttributeValue("enableimmersiveskypeintegration", value);
            }
        }
        
        /// <summary>
        /// <para>Select to enable learning path auhtoring.</para>
        /// <para>Display Name: Enable Learning Path Authoring</para>
        /// </summary>
        [AttributeLogicalName("enablelpauthoring")]
        [DisplayName("Enable Learning Path Authoring")]
        public bool? EnableLPAuthoring {
            get {
                return GetAttributeValue<bool?>("enablelpauthoring");
            }
            set {
                SetAttributeValue("enablelpauthoring", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the user has enabled or disabled LivePersonCardIntegration in Office.</para>
        /// <para>Display Name: Indicates whether the user has enabled or disabled LivePersonCardIntegration in Office.</para>
        /// </summary>
        [AttributeLogicalName("enablelivepersoncardintegrationinoffice")]
        [DisplayName("Indicates whether the user has enabled or disabled LivePersonCardIntegration in O" +
            "ffice.")]
        public bool? EnableLivePersonCardIntegrationInOffice {
            get {
                return GetAttributeValue<bool?>("enablelivepersoncardintegrationinoffice");
            }
            set {
                SetAttributeValue("enablelivepersoncardintegrationinoffice", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the user has enabled or disabled Live Persona Card feature in UCI.</para>
        /// <para>Display Name: Indicates whether the user has enabled or disabled Live Persona Card feature in UCI.</para>
        /// </summary>
        [AttributeLogicalName("enablelivepersonacarduci")]
        [DisplayName("Indicates whether the user has enabled or disabled Live Persona Card feature in U" +
            "CI.")]
        public bool? EnableLivePersonaCardUCI {
            get {
                return GetAttributeValue<bool?>("enablelivepersonacarduci");
            }
            set {
                SetAttributeValue("enablelivepersonacarduci", value);
            }
        }
        
        /// <summary>
        /// <para>Control whether the organization Switch Maker Portal to Classic</para>
        /// <para>Display Name: Switch Maker Portal to Classic</para>
        /// </summary>
        [AttributeLogicalName("enablemakerswitchtoclassic")]
        [DisplayName("Switch Maker Portal to Classic")]
        public bool? EnableMakerSwitchToClassic {
            get {
                return GetAttributeValue<bool?>("enablemakerswitchtoclassic");
            }
            set {
                SetAttributeValue("enablemakerswitchtoclassic", value);
            }
        }
        
        /// <summary>
        /// <para>Enable Integration with Microsoft Flow</para>
        /// <para>Display Name: Enable Integration with Microsoft Flow</para>
        /// </summary>
        [AttributeLogicalName("enablemicrosoftflowintegration")]
        [DisplayName("Enable Integration with Microsoft Flow")]
        public bool? EnableMicrosoftFlowIntegration {
            get {
                return GetAttributeValue<bool?>("enablemicrosoftflowintegration");
            }
            set {
                SetAttributeValue("enablemicrosoftflowintegration", value);
            }
        }
        
        /// <summary>
        /// <para>Enable pricing calculations on a Create call.</para>
        /// <para>Display Name: Enable Pricing On Create</para>
        /// </summary>
        [AttributeLogicalName("enablepricingoncreate")]
        [DisplayName("Enable Pricing On Create")]
        public bool? EnablePricingOnCreate {
            get {
                return GetAttributeValue<bool?>("enablepricingoncreate");
            }
            set {
                SetAttributeValue("enablepricingoncreate", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether privacy and sensitivity attributes for new team creation has been enabled</para>
        /// <para>Display Name: Indicates whether privacy and sensitivity attributes for new team creation has been enabled</para>
        /// </summary>
        [AttributeLogicalName("enablesensitivitylabelsforteamscollab")]
        [DisplayName("Indicates whether privacy and sensitivity attributes for new team creation has be" +
            "en enabled")]
        public bool? EnableSensitivityLabelsForTeamsCollab {
            get {
                return GetAttributeValue<bool?>("enablesensitivitylabelsforteamscollab");
            }
            set {
                SetAttributeValue("enablesensitivitylabelsforteamscollab", value);
            }
        }
        
        /// <summary>
        /// <para>Use Smart Matching.</para>
        /// <para>Display Name: Enable Smart Matching</para>
        /// </summary>
        [AttributeLogicalName("enablesmartmatching")]
        [DisplayName("Enable Smart Matching")]
        public bool? EnableSmartMatching {
            get {
                return GetAttributeValue<bool?>("enablesmartmatching");
            }
            set {
                SetAttributeValue("enablesmartmatching", value);
            }
        }
        
        /// <summary>
        /// <para>Enable site map and commanding update</para>
        /// <para>Display Name: Enable site map and commanding update</para>
        /// </summary>
        [AttributeLogicalName("enableunifiedinterfaceshellrefresh")]
        [DisplayName("Enable site map and commanding update")]
        public bool? EnableUnifiedInterfaceShellRefresh {
            get {
                return GetAttributeValue<bool?>("enableunifiedinterfaceshellrefresh");
            }
            set {
                SetAttributeValue("enableunifiedinterfaceshellrefresh", value);
            }
        }
        
        /// <summary>
        /// <para>Organization setting to enforce read only plugins.</para>
        /// <para>Display Name: Organization setting to enforce read only plugins.</para>
        /// </summary>
        [AttributeLogicalName("enforcereadonlyplugins")]
        [DisplayName("Organization setting to enforce read only plugins.")]
        public bool? EnforceReadOnlyPlugins {
            get {
                return GetAttributeValue<bool?>("enforcereadonlyplugins");
            }
            set {
                SetAttributeValue("enforcereadonlyplugins", value);
            }
        }
        
        /// <summary>
        /// <para>JSON string containing settings for enhanced add products experience in Sales</para>
        /// <para>Display Name: Enhanced Add Products Settings</para>
        /// </summary>
        [AttributeLogicalName("enhancedaddproductssettings")]
        [DisplayName("Enhanced Add Products Settings")]
        [MaxLength(1000)]
        public string EnhancedAddProductsSettings {
            get {
                return GetAttributeValue<string>("enhancedaddproductssettings");
            }
            set {
                SetAttributeValue("enhancedaddproductssettings", value);
            }
        }
        
        /// <summary>
        /// <para>JSON string containing settings for enhanced add products experience in Sales</para>
        /// <para>Display Name: Enhanced Add Products Settings</para>
        /// </summary>
        [AttributeLogicalName("enhancedoqoiaddproductssettings")]
        [DisplayName("Enhanced Add Products Settings")]
        [MaxLength(1000)]
        public string EnhancedOQOIAddProductsSettings {
            get {
                return GetAttributeValue<string>("enhancedoqoiaddproductssettings");
            }
            set {
                SetAttributeValue("enhancedoqoiaddproductssettings", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Entity Image Id</para>
        /// </summary>
        [AttributeLogicalName("entityimageid")]
        [DisplayName("Entity Image Id")]
        public Guid? EntityImageId {
            get {
                return GetAttributeValue<Guid?>("entityimageid");
            }
        }
        
        /// <summary>
        /// <para>Maximum number of days to keep change tracking deleted records</para>
        /// <para>Display Name: Days to Expire Change Tracking Deleted Records</para>
        /// </summary>
        [AttributeLogicalName("expirechangetrackingindays")]
        [DisplayName("Days to Expire Change Tracking Deleted Records")]
        [Range(0, 365)]
        public int? ExpireChangeTrackingInDays {
            get {
                return GetAttributeValue<int?>("expirechangetrackingindays");
            }
            set {
                SetAttributeValue("expirechangetrackingindays", value);
            }
        }
        
        /// <summary>
        /// <para>Maximum number of days before deleting inactive subscriptions.</para>
        /// <para>Display Name: Days to Expire Subscriptions</para>
        /// </summary>
        [AttributeLogicalName("expiresubscriptionsindays")]
        [DisplayName("Days to Expire Subscriptions")]
        [Range(0, 2147483647)]
        public int? ExpireSubscriptionsInDays {
            get {
                return GetAttributeValue<int?>("expiresubscriptionsindays");
            }
            set {
                SetAttributeValue("expiresubscriptionsindays", value);
            }
        }
        
        /// <summary>
        /// <para>Specify the base URL to use to look for external document suggestions.</para>
        /// <para>Display Name: External Base URL</para>
        /// </summary>
        [AttributeLogicalName("externalbaseurl")]
        [DisplayName("External Base URL")]
        [MaxLength(500)]
        public string ExternalBaseUrl {
            get {
                return GetAttributeValue<string>("externalbaseurl");
            }
            set {
                SetAttributeValue("externalbaseurl", value);
            }
        }
        
        /// <summary>
        /// <para>XML string containing the ExternalPartyEnabled entities correlation keys for association of existing External Party instance entities to newly created IsExternalPartyEnabled entities.For internal use only</para>
        /// <para>Display Name: ExternalPartyEnabled Entities correlation Keys</para>
        /// </summary>
        [AttributeLogicalName("externalpartycorrelationkeys")]
        [DisplayName("ExternalPartyEnabled Entities correlation Keys")]
        [MaxLength(1073741823)]
        public string ExternalPartyCorrelationKeys {
            get {
                return GetAttributeValue<string>("externalpartycorrelationkeys");
            }
            set {
                SetAttributeValue("externalpartycorrelationkeys", value);
            }
        }
        
        /// <summary>
        /// <para>XML string containing the ExternalPartyEnabled entities settings.</para>
        /// <para>Display Name: ExternalPartyEnabled Entities Settings.For internal use only</para>
        /// </summary>
        [AttributeLogicalName("externalpartyentitysettings")]
        [DisplayName("ExternalPartyEnabled Entities Settings.For internal use only")]
        [MaxLength(1073741823)]
        public string ExternalPartyEntitySettings {
            get {
                return GetAttributeValue<string>("externalpartyentitysettings");
            }
            set {
                SetAttributeValue("externalpartyentitysettings", value);
            }
        }
        
        /// <summary>
        /// <para>Features to be enabled as an XML BLOB.</para>
        /// <para>Display Name: Feature Set</para>
        /// </summary>
        [AttributeLogicalName("featureset")]
        [DisplayName("Feature Set")]
        [MaxLength(1073741823)]
        public string FeatureSet {
            get {
                return GetAttributeValue<string>("featureset");
            }
            set {
                SetAttributeValue("featureset", value);
            }
        }
        
        /// <summary>
        /// <para>Start date for the fiscal period that is to be used throughout Microsoft CRM.</para>
        /// <para>Display Name: Fiscal Calendar Start</para>
        /// </summary>
        [AttributeLogicalName("fiscalcalendarstart")]
        [DisplayName("Fiscal Calendar Start")]
        public DateTime? FiscalCalendarStart {
            get {
                return GetAttributeValue<DateTime?>("fiscalcalendarstart");
            }
            set {
                SetAttributeValue("fiscalcalendarstart", value);
            }
        }
        
        /// <summary>
        /// <para>Information that specifies how the name of the fiscal period is displayed throughout Microsoft CRM.</para>
        /// <para>Display Name: Fiscal Period Format</para>
        /// </summary>
        [AttributeLogicalName("fiscalperiodformat")]
        [DisplayName("Fiscal Period Format")]
        [MaxLength(25)]
        public string FiscalPeriodFormat {
            get {
                return GetAttributeValue<string>("fiscalperiodformat");
            }
            set {
                SetAttributeValue("fiscalperiodformat", value);
            }
        }
        
        /// <summary>
        /// <para>Format in which the fiscal period will be displayed.</para>
        /// <para>Display Name: Format for Fiscal Period</para>
        /// </summary>
        [AttributeLogicalName("fiscalperiodformatperiod")]
        [DisplayName("Format for Fiscal Period")]
        public Organization_FiscalPeriodFormatPeriod? FiscalPeriodFormatPeriod {
            get {
                return GetOptionSetValue<Organization_FiscalPeriodFormatPeriod>("fiscalperiodformatperiod");
            }
            set {
                SetOptionSetValue("fiscalperiodformatperiod", value);
            }
        }
        
        /// <summary>
        /// <para>Type of fiscal period used throughout Microsoft CRM.</para>
        /// <para>Display Name: Fiscal Period Type</para>
        /// </summary>
        [AttributeLogicalName("fiscalperiodtype")]
        [DisplayName("Fiscal Period Type")]
        [Range(-2147483648, 2147483647)]
        public int? FiscalPeriodType {
            get {
                return GetAttributeValue<int?>("fiscalperiodtype");
            }
            set {
                SetAttributeValue("fiscalperiodtype", value);
            }
        }
        
        /// <summary>
        /// <para>Information that specifies whether the fiscal settings have been updated.</para>
        /// <para>Display Name: Is Fiscal Settings Updated</para>
        /// </summary>
        [AttributeLogicalName("fiscalsettingsupdated")]
        [DisplayName("Is Fiscal Settings Updated")]
        public bool? FiscalSettingsUpdated {
            get {
                return GetAttributeValue<bool?>("fiscalsettingsupdated");
            }
        }
        
        /// <summary>
        /// <para>Information that specifies whether the fiscal year should be displayed based on the start date or the end date of the fiscal year.</para>
        /// <para>Display Name: Fiscal Year Display</para>
        /// </summary>
        [AttributeLogicalName("fiscalyeardisplaycode")]
        [DisplayName("Fiscal Year Display")]
        public int? FiscalYearDisplayCode {
            get {
                return GetAttributeValue<int?>("fiscalyeardisplaycode");
            }
            set {
                SetAttributeValue("fiscalyeardisplaycode", value);
            }
        }
        
        /// <summary>
        /// <para>Information that specifies how the name of the fiscal year is displayed throughout Microsoft CRM.</para>
        /// <para>Display Name: Fiscal Year Format</para>
        /// </summary>
        [AttributeLogicalName("fiscalyearformat")]
        [DisplayName("Fiscal Year Format")]
        [MaxLength(25)]
        public string FiscalYearFormat {
            get {
                return GetAttributeValue<string>("fiscalyearformat");
            }
            set {
                SetAttributeValue("fiscalyearformat", value);
            }
        }
        
        /// <summary>
        /// <para>Prefix for the display of the fiscal year.</para>
        /// <para>Display Name: Prefix for Fiscal Year</para>
        /// </summary>
        [AttributeLogicalName("fiscalyearformatprefix")]
        [DisplayName("Prefix for Fiscal Year")]
        public Organization_FiscalYearFormatPrefix? FiscalYearFormatPrefix {
            get {
                return GetOptionSetValue<Organization_FiscalYearFormatPrefix>("fiscalyearformatprefix");
            }
            set {
                SetOptionSetValue("fiscalyearformatprefix", value);
            }
        }
        
        /// <summary>
        /// <para>Suffix for the display of the fiscal year.</para>
        /// <para>Display Name: Suffix for Fiscal Year</para>
        /// </summary>
        [AttributeLogicalName("fiscalyearformatsuffix")]
        [DisplayName("Suffix for Fiscal Year")]
        public Organization_FiscalYearFormatSuffix? FiscalYearFormatSuffix {
            get {
                return GetOptionSetValue<Organization_FiscalYearFormatSuffix>("fiscalyearformatsuffix");
            }
            set {
                SetOptionSetValue("fiscalyearformatsuffix", value);
            }
        }
        
        /// <summary>
        /// <para>Format for the year.</para>
        /// <para>Display Name: Fiscal Year Format Year</para>
        /// </summary>
        [AttributeLogicalName("fiscalyearformatyear")]
        [DisplayName("Fiscal Year Format Year")]
        public Organization_FiscalYearFormatYear? FiscalYearFormatYear {
            get {
                return GetOptionSetValue<Organization_FiscalYearFormatYear>("fiscalyearformatyear");
            }
            set {
                SetOptionSetValue("fiscalyearformatyear", value);
            }
        }
        
        /// <summary>
        /// <para>Information that specifies how the names of the fiscal year and the fiscal period should be connected when displayed together.</para>
        /// <para>Display Name: Fiscal Year Period Connector</para>
        /// </summary>
        [AttributeLogicalName("fiscalyearperiodconnect")]
        [DisplayName("Fiscal Year Period Connector")]
        [MaxLength(5)]
        public string FiscalYearPeriodConnect {
            get {
                return GetAttributeValue<string>("fiscalyearperiodconnect");
            }
            set {
                SetAttributeValue("fiscalyearperiodconnect", value);
            }
        }
        
        /// <summary>
        /// <para>Order in which names are to be displayed throughout Microsoft CRM.</para>
        /// <para>Display Name: Full Name Display Order</para>
        /// </summary>
        [AttributeLogicalName("fullnameconventioncode")]
        [DisplayName("Full Name Display Order")]
        public Organization_FullNameConventionCode? FullNameConventionCode {
            get {
                return GetOptionSetValue<Organization_FullNameConventionCode>("fullnameconventioncode");
            }
            set {
                SetOptionSetValue("fullnameconventioncode", value);
            }
        }
        
        /// <summary>
        /// <para>Specifies the maximum number of months in future for which the recurring activities can be created.</para>
        /// <para>Display Name: Future Expansion Window</para>
        /// </summary>
        [AttributeLogicalName("futureexpansionwindow")]
        [DisplayName("Future Expansion Window")]
        [Range(1, 140)]
        public int? FutureExpansionWindow {
            get {
                return GetAttributeValue<int?>("futureexpansionwindow");
            }
            set {
                SetAttributeValue("futureexpansionwindow", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether alerts will be generated for errors.</para>
        /// <para>Display Name: Generate Alerts For Errors</para>
        /// </summary>
        [AttributeLogicalName("generatealertsforerrors")]
        [DisplayName("Generate Alerts For Errors")]
        public bool? GenerateAlertsForErrors {
            get {
                return GetAttributeValue<bool?>("generatealertsforerrors");
            }
            set {
                SetAttributeValue("generatealertsforerrors", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether alerts will be generated for information.</para>
        /// <para>Display Name: Generate Alerts For Information</para>
        /// </summary>
        [AttributeLogicalName("generatealertsforinformation")]
        [DisplayName("Generate Alerts For Information")]
        public bool? GenerateAlertsForInformation {
            get {
                return GetAttributeValue<bool?>("generatealertsforinformation");
            }
            set {
                SetAttributeValue("generatealertsforinformation", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether alerts will be generated for warnings.</para>
        /// <para>Display Name: Generate Alerts For Warnings</para>
        /// </summary>
        [AttributeLogicalName("generatealertsforwarnings")]
        [DisplayName("Generate Alerts For Warnings")]
        public bool? GenerateAlertsForWarnings {
            get {
                return GetAttributeValue<bool?>("generatealertsforwarnings");
            }
            set {
                SetAttributeValue("generatealertsforwarnings", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether Get Started content is enabled for this organization.</para>
        /// <para>Display Name: Is Get Started Pane Content Enabled</para>
        /// </summary>
        [AttributeLogicalName("getstartedpanecontentenabled")]
        [DisplayName("Is Get Started Pane Content Enabled")]
        public bool? GetStartedPaneContentEnabled {
            get {
                return GetAttributeValue<bool?>("getstartedpanecontentenabled");
            }
            set {
                SetAttributeValue("getstartedpanecontentenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the append URL parameters is enabled.</para>
        /// <para>Display Name: Is AppendUrl Parameters enabled</para>
        /// </summary>
        [AttributeLogicalName("globalappendurlparametersenabled")]
        [DisplayName("Is AppendUrl Parameters enabled")]
        public bool? GlobalAppendUrlParametersEnabled {
            get {
                return GetAttributeValue<bool?>("globalappendurlparametersenabled");
            }
            set {
                SetAttributeValue("globalappendurlparametersenabled", value);
            }
        }
        
        /// <summary>
        /// <para>URL for the web page global help.</para>
        /// <para>Display Name: Global Help URL.</para>
        /// </summary>
        [AttributeLogicalName("globalhelpurl")]
        [DisplayName("Global Help URL.")]
        [MaxLength(500)]
        public string GlobalHelpUrl {
            get {
                return GetAttributeValue<string>("globalhelpurl");
            }
            set {
                SetAttributeValue("globalhelpurl", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the customizable global help is enabled.</para>
        /// <para>Display Name: Is Customizable Global Help enabled</para>
        /// </summary>
        [AttributeLogicalName("globalhelpurlenabled")]
        [DisplayName("Is Customizable Global Help enabled")]
        public bool? GlobalHelpUrlEnabled {
            get {
                return GetAttributeValue<bool?>("globalhelpurlenabled");
            }
            set {
                SetAttributeValue("globalhelpurlenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Number of days after the goal's end date after which the rollup of the goal stops automatically.</para>
        /// <para>Display Name: Rollup Expiration Time for Goal</para>
        /// </summary>
        [AttributeLogicalName("goalrollupexpirytime")]
        [DisplayName("Rollup Expiration Time for Goal")]
        [Range(0, 400)]
        public int? GoalRollupExpiryTime {
            get {
                return GetAttributeValue<int?>("goalrollupexpirytime");
            }
            set {
                SetAttributeValue("goalrollupexpirytime", value);
            }
        }
        
        /// <summary>
        /// <para>Number of hours between automatic rollup jobs .</para>
        /// <para>Display Name: Automatic Rollup Frequency for Goal</para>
        /// </summary>
        [AttributeLogicalName("goalrollupfrequency")]
        [DisplayName("Automatic Rollup Frequency for Goal")]
        [Range(1, 2147483647)]
        public int? GoalRollupFrequency {
            get {
                return GetAttributeValue<int?>("goalrollupfrequency");
            }
            set {
                SetAttributeValue("goalrollupfrequency", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Grant Access To Network Service</para>
        /// </summary>
        [AttributeLogicalName("grantaccesstonetworkservice")]
        [DisplayName("Grant Access To Network Service")]
        public bool? GrantAccessToNetworkService {
            get {
                return GetAttributeValue<bool?>("grantaccesstonetworkservice");
            }
            set {
                SetAttributeValue("grantaccesstonetworkservice", value);
            }
        }
        
        /// <summary>
        /// <para>Maximum difference allowed between subject keywords count of the email messaged to be correlated</para>
        /// <para>Display Name: Hash Delta Subject Count</para>
        /// </summary>
        [AttributeLogicalName("hashdeltasubjectcount")]
        [DisplayName("Hash Delta Subject Count")]
        [Range(0, 2147483647)]
        public int? HashDeltaSubjectCount {
            get {
                return GetAttributeValue<int?>("hashdeltasubjectcount");
            }
            set {
                SetAttributeValue("hashdeltasubjectcount", value);
            }
        }
        
        /// <summary>
        /// <para>Filter Subject Keywords</para>
        /// <para>Display Name: Hash Filter Keywords</para>
        /// </summary>
        [AttributeLogicalName("hashfilterkeywords")]
        [DisplayName("Hash Filter Keywords")]
        [MaxLength(1073741823)]
        public string HashFilterKeywords {
            get {
                return GetAttributeValue<string>("hashfilterkeywords");
            }
            set {
                SetAttributeValue("hashfilterkeywords", value);
            }
        }
        
        /// <summary>
        /// <para>Maximum number of subject keywords or recipients used for correlation</para>
        /// <para>Display Name: Hash Max Count</para>
        /// </summary>
        [AttributeLogicalName("hashmaxcount")]
        [DisplayName("Hash Max Count")]
        [Range(0, 2147483647)]
        public int? HashMaxCount {
            get {
                return GetAttributeValue<int?>("hashmaxcount");
            }
            set {
                SetAttributeValue("hashmaxcount", value);
            }
        }
        
        /// <summary>
        /// <para>Minimum number of recipients required to match for email messaged to be correlated</para>
        /// <para>Display Name: Hash Min Address Count</para>
        /// </summary>
        [AttributeLogicalName("hashminaddresscount")]
        [DisplayName("Hash Min Address Count")]
        [Range(0, 2147483647)]
        public int? HashMinAddressCount {
            get {
                return GetAttributeValue<int?>("hashminaddresscount");
            }
            set {
                SetAttributeValue("hashminaddresscount", value);
            }
        }
        
        /// <summary>
        /// <para>High contrast theme data for the organization.</para>
        /// <para>Display Name: High contrast Theme Data</para>
        /// </summary>
        [AttributeLogicalName("highcontrastthemedata")]
        [DisplayName("High contrast Theme Data")]
        public string HighContrastThemeData {
            get {
                return GetAttributeValue<string>("highcontrastthemedata");
            }
            set {
                SetAttributeValue("highcontrastthemedata", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether loading of Microsoft Dynamics 365 in a browser window that does not have address, tool, and menu bars is enabled.</para>
        /// <para>Display Name: ISV Integration Mode</para>
        /// </summary>
        [AttributeLogicalName("isvintegrationcode")]
        [DisplayName("ISV Integration Mode")]
        public Organization_ISVIntegrationCode? ISVIntegrationCode {
            get {
                return GetOptionSetValue<Organization_ISVIntegrationCode>("isvintegrationcode");
            }
            set {
                SetOptionSetValue("isvintegrationcode", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether incoming email sent by internal Microsoft Dynamics 365 users or queues should be tracked.</para>
        /// <para>Display Name: Ignore Internal Email</para>
        /// </summary>
        [AttributeLogicalName("ignoreinternalemail")]
        [DisplayName("Ignore Internal Email")]
        public bool? IgnoreInternalEmail {
            get {
                return GetAttributeValue<bool?>("ignoreinternalemail");
            }
            set {
                SetAttributeValue("ignoreinternalemail", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether an organization has consented to sharing search query data to help improve search results</para>
        /// <para>Display Name: Share search query data</para>
        /// </summary>
        [AttributeLogicalName("improvesearchloggingenabled")]
        [DisplayName("Share search query data")]
        public bool? ImproveSearchLoggingEnabled {
            get {
                return GetAttributeValue<bool?>("improvesearchloggingenabled");
            }
            set {
                SetAttributeValue("improvesearchloggingenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Information that specifies whether Inactivity timeout is enabled</para>
        /// <para>Display Name: Inactivity timeout enabled</para>
        /// </summary>
        [AttributeLogicalName("inactivitytimeoutenabled")]
        [DisplayName("Inactivity timeout enabled")]
        public bool? InactivityTimeoutEnabled {
            get {
                return GetAttributeValue<bool?>("inactivitytimeoutenabled");
            }
            set {
                SetAttributeValue("inactivitytimeoutenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Inactivity timeout in minutes</para>
        /// <para>Display Name: Inactivity timeout in minutes</para>
        /// </summary>
        [AttributeLogicalName("inactivitytimeoutinmins")]
        [DisplayName("Inactivity timeout in minutes")]
        [Range(0, 2147483647)]
        public int? InactivityTimeoutInMins {
            get {
                return GetAttributeValue<int?>("inactivitytimeoutinmins");
            }
            set {
                SetAttributeValue("inactivitytimeoutinmins", value);
            }
        }
        
        /// <summary>
        /// <para>Inactivity timeout reminder in minutes</para>
        /// <para>Display Name: Inactivity timeout reminder in minutes</para>
        /// </summary>
        [AttributeLogicalName("inactivitytimeoutreminderinmins")]
        [DisplayName("Inactivity timeout reminder in minutes")]
        [Range(0, 2147483647)]
        public int? InactivityTimeoutReminderInMins {
            get {
                return GetAttributeValue<int?>("inactivitytimeoutreminderinmins");
            }
            set {
                SetAttributeValue("inactivitytimeoutreminderinmins", value);
            }
        }
        
        /// <summary>
        /// <para>Setting for the Async Service Mailbox Queue. Defines the retrieval batch size of exchange server.</para>
        /// <para>Display Name: Exchange Email Retrieval Batch Size</para>
        /// </summary>
        [AttributeLogicalName("incomingemailexchangeemailretrievalbatchsize")]
        [DisplayName("Exchange Email Retrieval Batch Size")]
        [Range(1, 2147483647)]
        public int? IncomingEmailExchangeEmailRetrievalBatchSize {
            get {
                return GetAttributeValue<int?>("incomingemailexchangeemailretrievalbatchsize");
            }
            set {
                SetAttributeValue("incomingemailexchangeemailretrievalbatchsize", value);
            }
        }
        
        /// <summary>
        /// <para>Initial version of the organization.</para>
        /// <para>Display Name: Initial Version</para>
        /// </summary>
        [AttributeLogicalName("initialversion")]
        [DisplayName("Initial Version")]
        [MaxLength(20)]
        public string InitialVersion {
            get {
                return GetAttributeValue<string>("initialversion");
            }
            set {
                SetAttributeValue("initialversion", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the integration user for the organization.</para>
        /// <para>Display Name: Integration User</para>
        /// </summary>
        [AttributeLogicalName("integrationuserid")]
        [DisplayName("Integration User")]
        public Guid? IntegrationUserId {
            get {
                return GetAttributeValue<Guid?>("integrationuserid");
            }
            set {
                SetAttributeValue("integrationuserid", value);
            }
        }
        
        /// <summary>
        /// <para>Prefix to use for all invoice numbers throughout Microsoft Dynamics 365.</para>
        /// <para>Display Name: Invoice Prefix</para>
        /// </summary>
        [AttributeLogicalName("invoiceprefix")]
        [DisplayName("Invoice Prefix")]
        [MaxLength(20)]
        public string InvoicePrefix {
            get {
                return GetAttributeValue<string>("invoiceprefix");
            }
            set {
                SetAttributeValue("invoiceprefix", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the feature Action Card should be enabled for the organization.</para>
        /// <para>Display Name: Enable Action Card for this Organization</para>
        /// </summary>
        [AttributeLogicalName("isactioncardenabled")]
        [DisplayName("Enable Action Card for this Organization")]
        public bool? IsActionCardEnabled {
            get {
                return GetAttributeValue<bool?>("isactioncardenabled");
            }
            set {
                SetAttributeValue("isactioncardenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Information that specifies whether Action Support Feature is enabled</para>
        /// <para>Display Name: Action Support Feature enabled</para>
        /// </summary>
        [AttributeLogicalName("isactionsupportfeatureenabled")]
        [DisplayName("Action Support Feature enabled")]
        public bool? IsActionSupportFeatureEnabled {
            get {
                return GetAttributeValue<bool?>("isactionsupportfeatureenabled");
            }
            set {
                SetAttributeValue("isactionsupportfeatureenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the feature Relationship Analytics should be enabled for the organization.</para>
        /// <para>Display Name: Enable Relationship Analytics for this Organization</para>
        /// </summary>
        [AttributeLogicalName("isactivityanalysisenabled")]
        [DisplayName("Enable Relationship Analytics for this Organization")]
        public bool? IsActivityAnalysisEnabled {
            get {
                return GetAttributeValue<bool?>("isactivityanalysisenabled");
            }
            set {
                SetAttributeValue("isactivityanalysisenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether all money attributes are converted to decimal.</para>
        /// <para>Display Name: Set if all money attributes are converted to decimal</para>
        /// </summary>
        [AttributeLogicalName("isallmoneydecimal")]
        [DisplayName("Set if all money attributes are converted to decimal")]
        public bool? IsAllMoneyDecimal {
            get {
                return GetAttributeValue<bool?>("isallmoneydecimal");
            }
        }
        
        /// <summary>
        /// <para>Indicates whether loading of Microsoft Dynamics 365 in a browser window that does not have address, tool, and menu bars is enabled.</para>
        /// <para>Display Name: Is Application Mode Enabled</para>
        /// </summary>
        [AttributeLogicalName("isappmode")]
        [DisplayName("Is Application Mode Enabled")]
        public bool? IsAppMode {
            get {
                return GetAttributeValue<bool?>("isappmode");
            }
            set {
                SetAttributeValue("isappmode", value);
            }
        }
        
        /// <summary>
        /// <para>Enable or disable attachments sync for outlook and exchange.</para>
        /// <para>Display Name: Is Attachment Sync Enabled</para>
        /// </summary>
        [AttributeLogicalName("isappointmentattachmentsyncenabled")]
        [DisplayName("Is Attachment Sync Enabled")]
        public bool? IsAppointmentAttachmentSyncEnabled {
            get {
                return GetAttributeValue<bool?>("isappointmentattachmentsyncenabled");
            }
            set {
                SetAttributeValue("isappointmentattachmentsyncenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Enable or disable assigned tasks sync for outlook and exchange.</para>
        /// <para>Display Name: Is Assigned Tasks Sync Enabled</para>
        /// </summary>
        [AttributeLogicalName("isassignedtaskssyncenabled")]
        [DisplayName("Is Assigned Tasks Sync Enabled")]
        public bool? IsAssignedTasksSyncEnabled {
            get {
                return GetAttributeValue<bool?>("isassignedtaskssyncenabled");
            }
            set {
                SetAttributeValue("isassignedtaskssyncenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Enable or disable auditing of changes.</para>
        /// <para>Display Name: Is Auditing Enabled</para>
        /// </summary>
        [AttributeLogicalName("isauditenabled")]
        [DisplayName("Is Auditing Enabled")]
        public bool? IsAuditEnabled {
            get {
                return GetAttributeValue<bool?>("isauditenabled");
            }
            set {
                SetAttributeValue("isauditenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the feature Auto Capture should be enabled for the organization.</para>
        /// <para>Display Name: Enable Auto Capture for this Organization</para>
        /// </summary>
        [AttributeLogicalName("isautodatacaptureenabled")]
        [DisplayName("Enable Auto Capture for this Organization")]
        public bool? IsAutoDataCaptureEnabled {
            get {
                return GetAttributeValue<bool?>("isautodatacaptureenabled");
            }
            set {
                SetAttributeValue("isautodatacaptureenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the V2 feature of Auto Capture should be enabled for the organization.</para>
        /// <para>Display Name: Enable Auto Capture V2 for this Organization</para>
        /// </summary>
        [AttributeLogicalName("isautodatacapturev2enabled")]
        [DisplayName("Enable Auto Capture V2 for this Organization")]
        public bool? IsAutoDataCaptureV2Enabled {
            get {
                return GetAttributeValue<bool?>("isautodatacapturev2enabled");
            }
            set {
                SetAttributeValue("isautodatacapturev2enabled", value);
            }
        }
        
        /// <summary>
        /// <para>Information on whether auto save is enabled.</para>
        /// <para>Display Name: Auto Save Enabled</para>
        /// </summary>
        [AttributeLogicalName("isautosaveenabled")]
        [DisplayName("Auto Save Enabled")]
        public bool? IsAutoSaveEnabled {
            get {
                return GetAttributeValue<bool?>("isautosaveenabled");
            }
            set {
                SetAttributeValue("isautosaveenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Information that specifies whether BPF Entity Customization Feature is enabled</para>
        /// <para>Display Name: BPF Entity Customization Feature enabled</para>
        /// </summary>
        [AttributeLogicalName("isbpfentitycustomizationfeatureenabled")]
        [DisplayName("BPF Entity Customization Feature enabled")]
        public bool? IsBPFEntityCustomizationFeatureEnabled {
            get {
                return GetAttributeValue<bool?>("isbpfentitycustomizationfeatureenabled");
            }
            set {
                SetAttributeValue("isbpfentitycustomizationfeatureenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: IsCollaborationExperienceEnabled</para>
        /// </summary>
        [AttributeLogicalName("iscollaborationexperienceenabled")]
        [DisplayName("IsCollaborationExperienceEnabled")]
        public bool? IsCollaborationExperienceEnabled {
            get {
                return GetAttributeValue<bool?>("iscollaborationexperienceenabled");
            }
            set {
                SetAttributeValue("iscollaborationexperienceenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Information that specifies whether conflict detection for mobile client is enabled.</para>
        /// <para>Display Name: Is Conflict Detection for Mobile Client enabled</para>
        /// </summary>
        [AttributeLogicalName("isconflictdetectionenabledformobileclient")]
        [DisplayName("Is Conflict Detection for Mobile Client enabled")]
        public bool? IsConflictDetectionEnabledForMobileClient {
            get {
                return GetAttributeValue<bool?>("isconflictdetectionenabledformobileclient");
            }
            set {
                SetAttributeValue("isconflictdetectionenabledformobileclient", value);
            }
        }
        
        /// <summary>
        /// <para>Enable or disable mailing address sync for outlook and exchange.</para>
        /// <para>Display Name: Is Mailing Address Sync Enabled</para>
        /// </summary>
        [AttributeLogicalName("iscontactmailingaddresssyncenabled")]
        [DisplayName("Is Mailing Address Sync Enabled")]
        public bool? IsContactMailingAddressSyncEnabled {
            get {
                return GetAttributeValue<bool?>("iscontactmailingaddresssyncenabled");
            }
            set {
                SetAttributeValue("iscontactmailingaddresssyncenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether Content Security Policy has been enabled for the organization.</para>
        /// <para>Display Name: Enable Content Security Policy for this organization</para>
        /// </summary>
        [AttributeLogicalName("iscontentsecuritypolicyenabled")]
        [DisplayName("Enable Content Security Policy for this organization")]
        public bool? IsContentSecurityPolicyEnabled {
            get {
                return GetAttributeValue<bool?>("iscontentsecuritypolicyenabled");
            }
            set {
                SetAttributeValue("iscontentsecuritypolicyenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether Contextual email experience is enabled on this organization</para>
        /// <para>Display Name: Indicates whether Contextual email experience is enabled on this organization</para>
        /// </summary>
        [AttributeLogicalName("iscontextualemailenabled")]
        [DisplayName("Indicates whether Contextual email experience is enabled on this organization")]
        public bool? IsContextualEmailEnabled {
            get {
                return GetAttributeValue<bool?>("iscontextualemailenabled");
            }
            set {
                SetAttributeValue("iscontextualemailenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Select to enable Contextual Help in UCI.</para>
        /// <para>Display Name: Enables Contextual Help in UCI</para>
        /// </summary>
        [AttributeLogicalName("iscontextualhelpenabled")]
        [DisplayName("Enables Contextual Help in UCI")]
        public bool? IsContextualHelpEnabled {
            get {
                return GetAttributeValue<bool?>("iscontextualhelpenabled");
            }
            set {
                SetAttributeValue("iscontextualhelpenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether Custom Controls in canvas PowerApps feature has been enabled for the organization.</para>
        /// <para>Display Name: Enable Custom Controls in canvas PowerApps feature for this organization</para>
        /// </summary>
        [AttributeLogicalName("iscustomcontrolsincanvasappsenabled")]
        [DisplayName("Enable Custom Controls in canvas PowerApps feature for this organization")]
        public bool? IsCustomControlsInCanvasAppsEnabled {
            get {
                return GetAttributeValue<bool?>("iscustomcontrolsincanvasappsenabled");
            }
            set {
                SetAttributeValue("iscustomcontrolsincanvasappsenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Enable or disable country code selection.</para>
        /// <para>Display Name: Enable or disable country code selection</para>
        /// </summary>
        [AttributeLogicalName("isdefaultcountrycodecheckenabled")]
        [DisplayName("Enable or disable country code selection")]
        public bool? IsDefaultCountryCodeCheckEnabled {
            get {
                return GetAttributeValue<bool?>("isdefaultcountrycodecheckenabled");
            }
            set {
                SetAttributeValue("isdefaultcountrycodecheckenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Enable Delegation Access content</para>
        /// <para>Display Name: Is Delegation Access Enabled</para>
        /// </summary>
        [AttributeLogicalName("isdelegateaccessenabled")]
        [DisplayName("Is Delegation Access Enabled")]
        public bool? IsDelegateAccessEnabled {
            get {
                return GetAttributeValue<bool?>("isdelegateaccessenabled");
            }
            set {
                SetAttributeValue("isdelegateaccessenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the feature Action Hub should be enabled for the organization.</para>
        /// <para>Display Name: Enable Action Hub for this Organization</para>
        /// </summary>
        [AttributeLogicalName("isdelveactionhubintegrationenabled")]
        [DisplayName("Enable Action Hub for this Organization")]
        public bool? IsDelveActionHubIntegrationEnabled {
            get {
                return GetAttributeValue<bool?>("isdelveactionhubintegrationenabled");
            }
            set {
                SetAttributeValue("isdelveactionhubintegrationenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Information that specifies whether the organization is disabled.</para>
        /// <para>Display Name: Is Organization Disabled</para>
        /// </summary>
        [AttributeLogicalName("isdisabled")]
        [DisplayName("Is Organization Disabled")]
        public bool? IsDisabled {
            get {
                return GetAttributeValue<bool?>("isdisabled");
            }
        }
        
        /// <summary>
        /// <para>Indicates whether duplicate detection of records is enabled.</para>
        /// <para>Display Name: Is Duplicate Detection Enabled</para>
        /// </summary>
        [AttributeLogicalName("isduplicatedetectionenabled")]
        [DisplayName("Is Duplicate Detection Enabled")]
        public bool? IsDuplicateDetectionEnabled {
            get {
                return GetAttributeValue<bool?>("isduplicatedetectionenabled");
            }
            set {
                SetAttributeValue("isduplicatedetectionenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether duplicate detection of records during import is enabled.</para>
        /// <para>Display Name: Is Duplicate Detection Enabled For Import</para>
        /// </summary>
        [AttributeLogicalName("isduplicatedetectionenabledforimport")]
        [DisplayName("Is Duplicate Detection Enabled For Import")]
        public bool? IsDuplicateDetectionEnabledForImport {
            get {
                return GetAttributeValue<bool?>("isduplicatedetectionenabledforimport");
            }
            set {
                SetAttributeValue("isduplicatedetectionenabledforimport", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether duplicate detection of records during offline synchronization is enabled.</para>
        /// <para>Display Name: Is Duplicate Detection Enabled For Offline Synchronization</para>
        /// </summary>
        [AttributeLogicalName("isduplicatedetectionenabledforofflinesync")]
        [DisplayName("Is Duplicate Detection Enabled For Offline Synchronization")]
        public bool? IsDuplicateDetectionEnabledForOfflineSync {
            get {
                return GetAttributeValue<bool?>("isduplicatedetectionenabledforofflinesync");
            }
            set {
                SetAttributeValue("isduplicatedetectionenabledforofflinesync", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether duplicate detection during online create or update is enabled.</para>
        /// <para>Display Name: Is Duplicate Detection Enabled for Online Create/Update</para>
        /// </summary>
        [AttributeLogicalName("isduplicatedetectionenabledforonlinecreateupdate")]
        [DisplayName("Is Duplicate Detection Enabled for Online Create/Update")]
        public bool? IsDuplicateDetectionEnabledForOnlineCreateUpdate {
            get {
                return GetAttributeValue<bool?>("isduplicatedetectionenabledforonlinecreateupdate");
            }
            set {
                SetAttributeValue("isduplicatedetectionenabledforonlinecreateupdate", value);
            }
        }
        
        /// <summary>
        /// <para>Allow tracking recipient activity on sent emails.</para>
        /// <para>Display Name: Allow tracking recipient activity on sent emails</para>
        /// </summary>
        [AttributeLogicalName("isemailmonitoringallowed")]
        [DisplayName("Allow tracking recipient activity on sent emails")]
        public bool? IsEmailMonitoringAllowed {
            get {
                return GetAttributeValue<bool?>("isemailmonitoringallowed");
            }
            set {
                SetAttributeValue("isemailmonitoringallowed", value);
            }
        }
        
        /// <summary>
        /// <para>Enable Email Server Profile content filtering</para>
        /// <para>Display Name: Is Email Server Profile Content Filtering Enabled</para>
        /// </summary>
        [AttributeLogicalName("isemailserverprofilecontentfilteringenabled")]
        [DisplayName("Is Email Server Profile Content Filtering Enabled")]
        public bool? IsEmailServerProfileContentFilteringEnabled {
            get {
                return GetAttributeValue<bool?>("isemailserverprofilecontentfilteringenabled");
            }
            set {
                SetAttributeValue("isemailserverprofilecontentfilteringenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether embed Teams collaboration has been enabled for the organization</para>
        /// <para>Display Name: Indicates whether embed Teams collaboration has been enabled for the organization</para>
        /// </summary>
        [AttributeLogicalName("isembedteamscollabenabled")]
        [DisplayName("Indicates whether embed Teams collaboration has been enabled for the organization" +
            "")]
        public bool? IsEmbedTeamsCollabEnabled {
            get {
                return GetAttributeValue<bool?>("isembedteamscollabenabled");
            }
            set {
                SetAttributeValue("isembedteamscollabenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether appmodule is enabled for all roles</para>
        /// <para>Display Name: option set values for isenabledforallroles</para>
        /// </summary>
        [AttributeLogicalName("isenabledforallroles")]
        [DisplayName("option set values for isenabledforallroles")]
        public bool? IsEnabledForAllRoles {
            get {
                return GetAttributeValue<bool?>("isenabledforallroles");
            }
            set {
                SetAttributeValue("isenabledforallroles", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the organization's files are being stored in Azure.</para>
        /// <para>Display Name: Enable external file storage</para>
        /// </summary>
        [AttributeLogicalName("isexternalfilestorageenabled")]
        [DisplayName("Enable external file storage")]
        public bool? IsExternalFileStorageEnabled {
            get {
                return GetAttributeValue<bool?>("isexternalfilestorageenabled");
            }
            set {
                SetAttributeValue("isexternalfilestorageenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether data can be synchronized with an external search index.</para>
        /// <para>Display Name: Enable external search data syncing</para>
        /// </summary>
        [AttributeLogicalName("isexternalsearchindexenabled")]
        [DisplayName("Enable external search data syncing")]
        public bool? IsExternalSearchIndexEnabled {
            get {
                return GetAttributeValue<bool?>("isexternalsearchindexenabled");
            }
            set {
                SetAttributeValue("isexternalsearchindexenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the fiscal period is displayed as the month number.</para>
        /// <para>Display Name: Is Fiscal Period Monthly</para>
        /// </summary>
        [AttributeLogicalName("isfiscalperiodmonthbased")]
        [DisplayName("Is Fiscal Period Monthly")]
        public bool? IsFiscalPeriodMonthBased {
            get {
                return GetAttributeValue<bool?>("isfiscalperiodmonthbased");
            }
            set {
                SetAttributeValue("isfiscalperiodmonthbased", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether folders should be automatically created on SharePoint.</para>
        /// <para>Display Name: Automatically create folders</para>
        /// </summary>
        [AttributeLogicalName("isfolderautocreatedonsp")]
        [DisplayName("Automatically create folders")]
        public bool? IsFolderAutoCreatedonSP {
            get {
                return GetAttributeValue<bool?>("isfolderautocreatedonsp");
            }
            set {
                SetAttributeValue("isfolderautocreatedonsp", value);
            }
        }
        
        /// <summary>
        /// <para>Enable or disable folder based tracking for Server Side Sync.</para>
        /// <para>Display Name: Is Folder Based Tracking Enabled</para>
        /// </summary>
        [AttributeLogicalName("isfolderbasedtrackingenabled")]
        [DisplayName("Is Folder Based Tracking Enabled")]
        public bool? IsFolderBasedTrackingEnabled {
            get {
                return GetAttributeValue<bool?>("isfolderbasedtrackingenabled");
            }
            set {
                SetAttributeValue("isfolderbasedtrackingenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether full-text search for Quick Find entities should be enabled for the organization.</para>
        /// <para>Display Name: Enable Full-text search for Quick Find</para>
        /// </summary>
        [AttributeLogicalName("isfulltextsearchenabled")]
        [DisplayName("Enable Full-text search for Quick Find")]
        public bool? IsFullTextSearchEnabled {
            get {
                return GetAttributeValue<bool?>("isfulltextsearchenabled");
            }
            set {
                SetAttributeValue("isfulltextsearchenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether geospatial capabilities leveraging Azure Maps are enabled.</para>
        /// <para>Display Name: Enable geospatial Azure Maps integration.</para>
        /// </summary>
        [AttributeLogicalName("isgeospatialazuremapsintegrationenabled")]
        [DisplayName("Enable geospatial Azure Maps integration.")]
        public bool? IsGeospatialAzureMapsIntegrationEnabled {
            get {
                return GetAttributeValue<bool?>("isgeospatialazuremapsintegrationenabled");
            }
            set {
                SetAttributeValue("isgeospatialazuremapsintegrationenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Enable Hierarchical Security Model</para>
        /// <para>Display Name: Enable Hierarchical Security Model</para>
        /// </summary>
        [AttributeLogicalName("ishierarchicalsecuritymodelenabled")]
        [DisplayName("Enable Hierarchical Security Model")]
        public bool? IsHierarchicalSecurityModelEnabled {
            get {
                return GetAttributeValue<bool?>("ishierarchicalsecuritymodelenabled");
            }
            set {
                SetAttributeValue("ishierarchicalsecuritymodelenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Give Consent to use LUIS in Dynamics 365 Bot</para>
        /// <para>Display Name: LUIS Consent for Dynamics 365 Bot</para>
        /// </summary>
        [AttributeLogicalName("isluisenabledford365bot")]
        [DisplayName("LUIS Consent for Dynamics 365 Bot")]
        public bool? IsLUISEnabledforD365Bot {
            get {
                return GetAttributeValue<bool?>("isluisenabledford365bot");
            }
            set {
                SetAttributeValue("isluisenabledford365bot", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether Microsoft Teams Collaboration feature has been enabled for the organization.</para>
        /// <para>Display Name: Enable Microsoft Teams Collaboration for this organization</para>
        /// </summary>
        [AttributeLogicalName("ismsteamscollaborationenabled")]
        [DisplayName("Enable Microsoft Teams Collaboration for this organization")]
        public bool? IsMSTeamsCollaborationEnabled {
            get {
                return GetAttributeValue<bool?>("ismsteamscollaborationenabled");
            }
            set {
                SetAttributeValue("ismsteamscollaborationenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether Microsoft Teams integration has been enabled for the organization.</para>
        /// <para>Display Name: Enable Microsoft Teams integration</para>
        /// </summary>
        [AttributeLogicalName("ismsteamsenabled")]
        [DisplayName("Enable Microsoft Teams integration")]
        public bool? IsMSTeamsEnabled {
            get {
                return GetAttributeValue<bool?>("ismsteamsenabled");
            }
            set {
                SetAttributeValue("ismsteamsenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the user has enabled or disabled Microsoft Teams integration.</para>
        /// <para>Display Name: Microsoft Teams integration changed by user</para>
        /// </summary>
        [AttributeLogicalName("ismsteamssettingchangedbyuser")]
        [DisplayName("Microsoft Teams integration changed by user")]
        public bool? IsMSTeamsSettingChangedByUser {
            get {
                return GetAttributeValue<bool?>("ismsteamssettingchangedbyuser");
            }
            set {
                SetAttributeValue("ismsteamssettingchangedbyuser", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether Microsoft Teams User Sync feature has been enabled for the organization.</para>
        /// <para>Display Name: Enable Microsoft Teams User Sync for this organization</para>
        /// </summary>
        [AttributeLogicalName("ismsteamsusersyncenabled")]
        [DisplayName("Enable Microsoft Teams User Sync for this organization")]
        public bool? IsMSTeamsUserSyncEnabled {
            get {
                return GetAttributeValue<bool?>("ismsteamsusersyncenabled");
            }
            set {
                SetAttributeValue("ismsteamsusersyncenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Enable or disable forced unlocking for Server Side Sync mailboxes.</para>
        /// <para>Display Name: Is Mailbox Forced Unlocking Enabled</para>
        /// </summary>
        [AttributeLogicalName("ismailboxforcedunlockingenabled")]
        [DisplayName("Is Mailbox Forced Unlocking Enabled")]
        public bool? IsMailboxForcedUnlockingEnabled {
            get {
                return GetAttributeValue<bool?>("ismailboxforcedunlockingenabled");
            }
            set {
                SetAttributeValue("ismailboxforcedunlockingenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Enable or disable mailbox keep alive for Server Side Sync.</para>
        /// <para>Display Name: Is Mailbox Keep Alive Enabled</para>
        /// </summary>
        [AttributeLogicalName("ismailboxinactivebackoffenabled")]
        [DisplayName("Is Mailbox Keep Alive Enabled")]
        public bool? IsMailboxInactiveBackoffEnabled {
            get {
                return GetAttributeValue<bool?>("ismailboxinactivebackoffenabled");
            }
            set {
                SetAttributeValue("ismailboxinactivebackoffenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether Manual Sales Forecasting feature has been enabled for the organization.</para>
        /// <para>Display Name: Enable Manual Sales Forecasting feature for this organization</para>
        /// </summary>
        [AttributeLogicalName("ismanualsalesforecastingenabled")]
        [DisplayName("Enable Manual Sales Forecasting feature for this organization")]
        public bool? IsManualSalesForecastingEnabled {
            get {
                return GetAttributeValue<bool?>("ismanualsalesforecastingenabled");
            }
            set {
                SetAttributeValue("ismanualsalesforecastingenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Information that specifies whether mobile client on demand sync is enabled.</para>
        /// <para>Display Name: Is Mobile Client On Demand Sync enabled</para>
        /// </summary>
        [AttributeLogicalName("ismobileclientondemandsyncenabled")]
        [DisplayName("Is Mobile Client On Demand Sync enabled")]
        public bool? IsMobileClientOnDemandSyncEnabled {
            get {
                return GetAttributeValue<bool?>("ismobileclientondemandsyncenabled");
            }
            set {
                SetAttributeValue("ismobileclientondemandsyncenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the feature MobileOffline should be enabled for the organization.</para>
        /// <para>Display Name: Enable MobileOffline for this Organization</para>
        /// </summary>
        [AttributeLogicalName("ismobileofflineenabled")]
        [DisplayName("Enable MobileOffline for this Organization")]
        public bool? IsMobileOfflineEnabled {
            get {
                return GetAttributeValue<bool?>("ismobileofflineenabled");
            }
            set {
                SetAttributeValue("ismobileofflineenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether Model Apps can be embedded within Microsoft Teams. This is a tenant admin controlled preview/experimental feature.</para>
        /// <para>Display Name: Enable embedding Model Apps in Microsoft Teams</para>
        /// </summary>
        [AttributeLogicalName("ismodeldrivenappsinmsteamsenabled")]
        [DisplayName("Enable embedding Model Apps in Microsoft Teams")]
        public bool? IsModelDrivenAppsInMSTeamsEnabled {
            get {
                return GetAttributeValue<bool?>("ismodeldrivenappsinmsteamsenabled");
            }
            set {
                SetAttributeValue("ismodeldrivenappsinmsteamsenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether new add product experience is enabled.</para>
        /// <para>Display Name: Indicates whether new add product experience is enabled in opportunity form</para>
        /// </summary>
        [AttributeLogicalName("isnewaddproductexperienceenabled")]
        [DisplayName("Indicates whether new add product experience is enabled in opportunity form")]
        public bool? IsNewAddProductExperienceEnabled {
            get {
                return GetAttributeValue<bool?>("isnewaddproductexperienceenabled");
            }
            set {
                SetAttributeValue("isnewaddproductexperienceenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the feature Notes Analysis should be enabled for the organization.</para>
        /// <para>Display Name: Enable Notes Analysis for this Organization</para>
        /// </summary>
        [AttributeLogicalName("isnotesanalysisenabled")]
        [DisplayName("Enable Notes Analysis for this Organization")]
        public bool? IsNotesAnalysisEnabled {
            get {
                return GetAttributeValue<bool?>("isnotesanalysisenabled");
            }
            set {
                SetAttributeValue("isnotesanalysisenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the feature OfficeGraph should be enabled for the organization.</para>
        /// <para>Display Name: Enable OfficeGraph for this Organization</para>
        /// </summary>
        [AttributeLogicalName("isofficegraphenabled")]
        [DisplayName("Enable OfficeGraph for this Organization")]
        public bool? IsOfficeGraphEnabled {
            get {
                return GetAttributeValue<bool?>("isofficegraphenabled");
            }
            set {
                SetAttributeValue("isofficegraphenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the feature One Drive should be enabled for the organization.</para>
        /// <para>Display Name: Enable One Drive for this Organization</para>
        /// </summary>
        [AttributeLogicalName("isonedriveenabled")]
        [DisplayName("Enable One Drive for this Organization")]
        public bool? IsOneDriveEnabled {
            get {
                return GetAttributeValue<bool?>("isonedriveenabled");
            }
            set {
                SetAttributeValue("isonedriveenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether PAI feature has been enabled for the organization.</para>
        /// <para>Display Name: Enable PAI feature for this organization</para>
        /// </summary>
        [AttributeLogicalName("ispaienabled")]
        [DisplayName("Enable PAI feature for this organization")]
        public bool? IsPAIEnabled {
            get {
                return GetAttributeValue<bool?>("ispaienabled");
            }
            set {
                SetAttributeValue("ispaienabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether PDF Generation feature has been enabled for the organization.</para>
        /// <para>Display Name: Enable PDF Generation feature for this organization</para>
        /// </summary>
        [AttributeLogicalName("ispdfgenerationenabled")]
        [DisplayName("Enable PDF Generation feature for this organization")]
        [MaxLength(1000)]
        public string IsPDFGenerationEnabled {
            get {
                return GetAttributeValue<string>("ispdfgenerationenabled");
            }
            set {
                SetAttributeValue("ispdfgenerationenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether playbook feature has been enabled for the organization.</para>
        /// <para>Display Name: Enable playbook feature for this organization</para>
        /// </summary>
        [AttributeLogicalName("isplaybookenabled")]
        [DisplayName("Enable playbook feature for this organization")]
        public bool? IsPlaybookEnabled {
            get {
                return GetAttributeValue<bool?>("isplaybookenabled");
            }
            set {
                SetAttributeValue("isplaybookenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Information on whether IM presence is enabled.</para>
        /// <para>Display Name: Presence Enabled</para>
        /// </summary>
        [AttributeLogicalName("ispresenceenabled")]
        [DisplayName("Presence Enabled")]
        public bool? IsPresenceEnabled {
            get {
                return GetAttributeValue<bool?>("ispresenceenabled");
            }
            set {
                SetAttributeValue("ispresenceenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the Preview feature for Action Card should be enabled for the organization.</para>
        /// <para>Display Name: Enable Preview Action Card feature for this Organization</para>
        /// </summary>
        [AttributeLogicalName("ispreviewenabledforactioncard")]
        [DisplayName("Enable Preview Action Card feature for this Organization")]
        public bool? IsPreviewEnabledForActionCard {
            get {
                return GetAttributeValue<bool?>("ispreviewenabledforactioncard");
            }
            set {
                SetAttributeValue("ispreviewenabledforactioncard", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the feature Auto Capture should be enabled for the organization at Preview Settings.</para>
        /// <para>Display Name: Enable Auto Capture for this Organization at Preview Settings</para>
        /// </summary>
        [AttributeLogicalName("ispreviewforautocaptureenabled")]
        [DisplayName("Enable Auto Capture for this Organization at Preview Settings")]
        public bool? IsPreviewForAutoCaptureEnabled {
            get {
                return GetAttributeValue<bool?>("ispreviewforautocaptureenabled");
            }
            set {
                SetAttributeValue("ispreviewforautocaptureenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Is Preview For Email Monitoring Allowed.</para>
        /// <para>Display Name: Allows Preview For Email Monitoring</para>
        /// </summary>
        [AttributeLogicalName("ispreviewforemailmonitoringallowed")]
        [DisplayName("Allows Preview For Email Monitoring")]
        public bool? IsPreviewForEmailMonitoringAllowed {
            get {
                return GetAttributeValue<bool?>("ispreviewforemailmonitoringallowed");
            }
            set {
                SetAttributeValue("ispreviewforemailmonitoringallowed", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether PriceList is mandatory for adding existing products to sales entities.</para>
        /// <para>Display Name: Indicates whether PriceList is mandatory for adding existing products to sales entities</para>
        /// </summary>
        [AttributeLogicalName("ispricelistmandatory")]
        [DisplayName("Indicates whether PriceList is mandatory for adding existing products to sales en" +
            "tities")]
        public bool? IsPriceListMandatory {
            get {
                return GetAttributeValue<bool?>("ispricelistmandatory");
            }
            set {
                SetAttributeValue("ispricelistmandatory", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether to use the standard Out-of-box Opportunity Close experience or opt to for a customized experience.</para>
        /// <para>Display Name: Enable quick create form for opportunity close feature for this organization</para>
        /// </summary>
        [AttributeLogicalName("isquickcreateenabledforopportunityclose")]
        [DisplayName("Enable quick create form for opportunity close feature for this organization")]
        public bool? IsQuickCreateEnabledForOpportunityClose {
            get {
                return GetAttributeValue<bool?>("isquickcreateenabledforopportunityclose");
            }
            set {
                SetAttributeValue("isquickcreateenabledforopportunityclose", value);
            }
        }
        
        /// <summary>
        /// <para>Enable or disable auditing of read operations.</para>
        /// <para>Display Name: Is Read Auditing Enabled</para>
        /// </summary>
        [AttributeLogicalName("isreadauditenabled")]
        [DisplayName("Is Read Auditing Enabled")]
        public bool? IsReadAuditEnabled {
            get {
                return GetAttributeValue<bool?>("isreadauditenabled");
            }
            set {
                SetAttributeValue("isreadauditenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the feature Relationship Insights should be enabled for the organization.</para>
        /// <para>Display Name: Enable Relationship Insights for this Organization</para>
        /// </summary>
        [AttributeLogicalName("isrelationshipinsightsenabled")]
        [DisplayName("Enable Relationship Insights for this Organization")]
        public bool? IsRelationshipInsightsEnabled {
            get {
                return GetAttributeValue<bool?>("isrelationshipinsightsenabled");
            }
            set {
                SetAttributeValue("isrelationshipinsightsenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates if the synchronization of user resource booking with Exchange is enabled at organization level.</para>
        /// <para>Display Name: Resource booking synchronization enabled</para>
        /// </summary>
        [AttributeLogicalName("isresourcebookingexchangesyncenabled")]
        [DisplayName("Resource booking synchronization enabled")]
        public bool? IsResourceBookingExchangeSyncEnabled {
            get {
                return GetAttributeValue<bool?>("isresourcebookingexchangesyncenabled");
            }
            set {
                SetAttributeValue("isresourcebookingexchangesyncenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether rich text editor for notes experience is enabled on this organization</para>
        /// <para>Display Name: Indicates whether rich text editor for notes experience is enabled on this organization</para>
        /// </summary>
        [AttributeLogicalName("isrichtextnotesenabled")]
        [DisplayName("Indicates whether rich text editor for notes experience is enabled on this organi" +
            "zation")]
        public bool? IsRichTextNotesEnabled {
            get {
                return GetAttributeValue<bool?>("isrichtextnotesenabled");
            }
            set {
                SetAttributeValue("isrichtextnotesenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Enable sales order processing integration.</para>
        /// <para>Display Name: Is Sales Order Integration Enabled</para>
        /// </summary>
        [AttributeLogicalName("issopintegrationenabled")]
        [DisplayName("Is Sales Order Integration Enabled")]
        public bool? IsSOPIntegrationEnabled {
            get {
                return GetAttributeValue<bool?>("issopintegrationenabled");
            }
            set {
                SetAttributeValue("issopintegrationenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether Sales Assistant mobile app has been enabled for the organization.</para>
        /// <para>Display Name: Enable Sales Assistant mobile app</para>
        /// </summary>
        [AttributeLogicalName("issalesassistantenabled")]
        [DisplayName("Enable Sales Assistant mobile app")]
        public bool? IsSalesAssistantEnabled {
            get {
                return GetAttributeValue<bool?>("issalesassistantenabled");
            }
            set {
                SetAttributeValue("issalesassistantenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether Sales Mobile Preview has been enabled for the organization</para>
        /// <para>Display Name: Indicates whether Sales Mobile Preview has been enabled for the organization</para>
        /// </summary>
        [AttributeLogicalName("issalesmobilepreviewenabled")]
        [DisplayName("Indicates whether Sales Mobile Preview has been enabled for the organization")]
        public bool? IsSalesMobilePreviewEnabled {
            get {
                return GetAttributeValue<bool?>("issalesmobilepreviewenabled");
            }
            set {
                SetAttributeValue("issalesmobilepreviewenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: IsSharingInOrgAllowed</para>
        /// </summary>
        [AttributeLogicalName("issharinginorgallowed")]
        [DisplayName("IsSharingInOrgAllowed")]
        public bool? IsSharingInOrgAllowed {
            get {
                return GetAttributeValue<bool?>("issharinginorgallowed");
            }
            set {
                SetAttributeValue("issharinginorgallowed", value);
            }
        }
        
        /// <summary>
        /// <para>Information on whether text wrap is enabled.</para>
        /// <para>Display Name: Enable Text Wrap</para>
        /// </summary>
        [AttributeLogicalName("istextwrapenabled")]
        [DisplayName("Enable Text Wrap")]
        public bool? IsTextWrapEnabled {
            get {
                return GetAttributeValue<bool?>("istextwrapenabled");
            }
            set {
                SetAttributeValue("istextwrapenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Enable or disable auditing of user access.</para>
        /// <para>Display Name: Is User Access Auditing Enabled</para>
        /// </summary>
        [AttributeLogicalName("isuseraccessauditenabled")]
        [DisplayName("Is User Access Auditing Enabled")]
        public bool? IsUserAccessAuditEnabled {
            get {
                return GetAttributeValue<bool?>("isuseraccessauditenabled");
            }
            set {
                SetAttributeValue("isuseraccessauditenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether Write-in Products can be added to Opportunity/Quote/Order/Invoice or not.</para>
        /// <para>Display Name: Indicates whether Write-in Products can be added to Opportunity/Quote/Order/Invoice or not</para>
        /// </summary>
        [AttributeLogicalName("iswriteinproductsallowed")]
        [DisplayName("Indicates whether Write-in Products can be added to Opportunity/Quote/Order/Invoi" +
            "ce or not")]
        public bool? IsWriteInProductsAllowed {
            get {
                return GetAttributeValue<bool?>("iswriteinproductsallowed");
            }
            set {
                SetAttributeValue("iswriteinproductsallowed", value);
            }
        }
        
        /// <summary>
        /// <para>XML string containing the Knowledge Management settings that are applied in Knowledge Management Wizard.</para>
        /// <para>Display Name: Knowledge Management Settings</para>
        /// </summary>
        [AttributeLogicalName("kmsettings")]
        [DisplayName("Knowledge Management Settings")]
        [MaxLength(1073741823)]
        public string KMSettings {
            get {
                return GetAttributeValue<string>("kmsettings");
            }
            set {
                SetAttributeValue("kmsettings", value);
            }
        }
        
        /// <summary>
        /// <para>Type the prefix to use for all knowledge articles in Microsoft Dynamics 365.</para>
        /// <para>Display Name: Knowledge Article Prefix</para>
        /// </summary>
        [AttributeLogicalName("kaprefix")]
        [DisplayName("Knowledge Article Prefix")]
        [MaxLength(20)]
        public string KaPrefix {
            get {
                return GetAttributeValue<string>("kaprefix");
            }
            set {
                SetAttributeValue("kaprefix", value);
            }
        }
        
        /// <summary>
        /// <para>Prefix to use for all articles in Microsoft Dynamics 365.</para>
        /// <para>Display Name: Article Prefix</para>
        /// </summary>
        [AttributeLogicalName("kbprefix")]
        [DisplayName("Article Prefix")]
        [MaxLength(20)]
        public string KbPrefix {
            get {
                return GetAttributeValue<string>("kbprefix");
            }
            set {
                SetAttributeValue("kbprefix", value);
            }
        }
        
        /// <summary>
        /// <para>Preferred language for the organization.</para>
        /// <para>Display Name: Language</para>
        /// </summary>
        [AttributeLogicalName("languagecode")]
        [DisplayName("Language")]
        [Range(0, 2147483647)]
        public int? LanguageCode {
            get {
                return GetAttributeValue<int?>("languagecode");
            }
            set {
                SetAttributeValue("languagecode", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the locale of the organization.</para>
        /// <para>Display Name: Locale</para>
        /// </summary>
        [AttributeLogicalName("localeid")]
        [DisplayName("Locale")]
        [Range(-2147483648, 2147483647)]
        public int? LocaleId {
            get {
                return GetAttributeValue<int?>("localeid");
            }
            set {
                SetAttributeValue("localeid", value);
            }
        }
        
        /// <summary>
        /// <para>Information that specifies how the Long Date format is displayed in Microsoft Dynamics 365.</para>
        /// <para>Display Name: Long Date Format</para>
        /// </summary>
        [AttributeLogicalName("longdateformatcode")]
        [DisplayName("Long Date Format")]
        [Range(-2147483648, 2147483647)]
        public int? LongDateFormatCode {
            get {
                return GetAttributeValue<int?>("longdateformatcode");
            }
            set {
                SetAttributeValue("longdateformatcode", value);
            }
        }
        
        /// <summary>
        /// <para>Minimum number of characters that should be entered in the lookup control before resolving for suggestions</para>
        /// <para>Display Name: Minimum number of characters before resolving suggestions in lookup</para>
        /// </summary>
        [AttributeLogicalName("lookupcharactercountbeforeresolve")]
        [DisplayName("Minimum number of characters before resolving suggestions in lookup")]
        [Range(0, 2147483647)]
        public int? LookupCharacterCountBeforeResolve {
            get {
                return GetAttributeValue<int?>("lookupcharactercountbeforeresolve");
            }
            set {
                SetAttributeValue("lookupcharactercountbeforeresolve", value);
            }
        }
        
        /// <summary>
        /// <para>Minimum delay (in milliseconds) between consecutive inputs in a lookup control that will trigger a search for suggestions</para>
        /// <para>Display Name: Minimum delay (in milliseconds) for debouncing lookup control input</para>
        /// </summary>
        [AttributeLogicalName("lookupresolvedelayms")]
        [DisplayName("Minimum delay (in milliseconds) for debouncing lookup control input")]
        [Range(250, 2147483647)]
        public int? LookupResolveDelayMS {
            get {
                return GetAttributeValue<int?>("lookupresolvedelayms");
            }
            set {
                SetAttributeValue("lookupresolvedelayms", value);
            }
        }
        
        /// <summary>
        /// <para>Lower Threshold For Mailbox Intermittent Issue.</para>
        /// <para>Display Name: Lower Threshold For Mailbox Intermittent Issue</para>
        /// </summary>
        [AttributeLogicalName("mailboxintermittentissueminrange")]
        [DisplayName("Lower Threshold For Mailbox Intermittent Issue")]
        [Range(-2147483648, 2147483647)]
        public int? MailboxIntermittentIssueMinRange {
            get {
                return GetAttributeValue<int?>("mailboxintermittentissueminrange");
            }
            set {
                SetAttributeValue("mailboxintermittentissueminrange", value);
            }
        }
        
        /// <summary>
        /// <para>Lower Threshold For Mailbox Permanent Issue.</para>
        /// <para>Display Name: Lower Threshold For Mailbox Permanent Issue.</para>
        /// </summary>
        [AttributeLogicalName("mailboxpermanentissueminrange")]
        [DisplayName("Lower Threshold For Mailbox Permanent Issue.")]
        [Range(-2147483648, 2147483647)]
        public int? MailboxPermanentIssueMinRange {
            get {
                return GetAttributeValue<int?>("mailboxpermanentissueminrange");
            }
            set {
                SetAttributeValue("mailboxpermanentissueminrange", value);
            }
        }
        
        /// <summary>
        /// <para>Maximum number of actionsteps allowed in a BPF</para>
        /// <para>Display Name: Maximum number of actionsteps allowed in a BPF</para>
        /// </summary>
        [AttributeLogicalName("maxactionstepsinbpf")]
        [DisplayName("Maximum number of actionsteps allowed in a BPF")]
        [Range(0, 100)]
        public int? MaxActionStepsInBPF {
            get {
                return GetAttributeValue<int?>("maxactionstepsinbpf");
            }
            set {
                SetAttributeValue("maxactionstepsinbpf", value);
            }
        }
        
        /// <summary>
        /// <para>Maximum Allowed Pending Rollup Job Count</para>
        /// <para>Display Name: MaxAllowedPendingRollupJobCount</para>
        /// </summary>
        [AttributeLogicalName("maxallowedpendingrollupjobcount")]
        [DisplayName("MaxAllowedPendingRollupJobCount")]
        [Range(0, 2147483647)]
        public int? MaxAllowedPendingRollupJobCount {
            get {
                return GetAttributeValue<int?>("maxallowedpendingrollupjobcount");
            }
            set {
                SetAttributeValue("maxallowedpendingrollupjobcount", value);
            }
        }
        
        /// <summary>
        /// <para>Percentage Of Entity Table Size For Kicking Off Bootstrap Job</para>
        /// <para>Display Name: MaxAllowedPendingRollupJobPercentage</para>
        /// </summary>
        [AttributeLogicalName("maxallowedpendingrollupjobpercentage")]
        [DisplayName("MaxAllowedPendingRollupJobPercentage")]
        [Range(0, 100)]
        public int? MaxAllowedPendingRollupJobPercentage {
            get {
                return GetAttributeValue<int?>("maxallowedpendingrollupjobpercentage");
            }
            set {
                SetAttributeValue("maxallowedpendingrollupjobpercentage", value);
            }
        }
        
        /// <summary>
        /// <para>Maximum number of days an appointment can last.</para>
        /// <para>Display Name: Max Appointment Duration</para>
        /// </summary>
        [AttributeLogicalName("maxappointmentdurationdays")]
        [DisplayName("Max Appointment Duration")]
        [Range(0, 2147483647)]
        public int? MaxAppointmentDurationDays {
            get {
                return GetAttributeValue<int?>("maxappointmentdurationdays");
            }
            set {
                SetAttributeValue("maxappointmentdurationdays", value);
            }
        }
        
        /// <summary>
        /// <para>Maximum number of conditions allowed for mobile offline filters</para>
        /// <para>Display Name: Maximum number of conditions allowed for mobile offline filters</para>
        /// </summary>
        [AttributeLogicalName("maxconditionsformobileofflinefilters")]
        [DisplayName("Maximum number of conditions allowed for mobile offline filters")]
        [Range(0, 2147483647)]
        public int? MaxConditionsForMobileOfflineFilters {
            get {
                return GetAttributeValue<int?>("maxconditionsformobileofflinefilters");
            }
            set {
                SetAttributeValue("maxconditionsformobileofflinefilters", value);
            }
        }
        
        /// <summary>
        /// <para>Maximum depth for hierarchy security propagation.</para>
        /// <para>Display Name: Maximum depth for hierarchy security propagation.</para>
        /// </summary>
        [AttributeLogicalName("maxdepthforhierarchicalsecuritymodel")]
        [DisplayName("Maximum depth for hierarchy security propagation.")]
        [Range(-2147483648, 2147483647)]
        public int? MaxDepthForHierarchicalSecurityModel {
            get {
                return GetAttributeValue<int?>("maxdepthforhierarchicalsecuritymodel");
            }
            set {
                SetAttributeValue("maxdepthforhierarchicalsecuritymodel", value);
            }
        }
        
        /// <summary>
        /// <para>Maximum number of Folder Based Tracking mappings user can add</para>
        /// <para>Display Name: Max Folder Based Tracking Mappings</para>
        /// </summary>
        [AttributeLogicalName("maxfolderbasedtrackingmappings")]
        [DisplayName("Max Folder Based Tracking Mappings")]
        [Range(1, 25)]
        public int? MaxFolderBasedTrackingMappings {
            get {
                return GetAttributeValue<int?>("maxfolderbasedtrackingmappings");
            }
            set {
                SetAttributeValue("maxfolderbasedtrackingmappings", value);
            }
        }
        
        /// <summary>
        /// <para>Restrict the maximum no of items in a bundle</para>
        /// <para>Display Name: Bundle Item Limit</para>
        /// </summary>
        [AttributeLogicalName("maxproductsinbundle")]
        [DisplayName("Bundle Item Limit")]
        [Range(0, 2147483647)]
        public int? MaxProductsInBundle {
            get {
                return GetAttributeValue<int?>("maxproductsinbundle");
            }
            set {
                SetAttributeValue("maxproductsinbundle", value);
            }
        }
        
        /// <summary>
        /// <para>Maximum number of records that will be exported to a static Microsoft Office Excel worksheet when exporting from the grid.</para>
        /// <para>Display Name: Max Records For Excel Export</para>
        /// </summary>
        [AttributeLogicalName("maxrecordsforexporttoexcel")]
        [DisplayName("Max Records For Excel Export")]
        [Range(0, 2147483647)]
        public int? MaxRecordsForExportToExcel {
            get {
                return GetAttributeValue<int?>("maxrecordsforexporttoexcel");
            }
            set {
                SetAttributeValue("maxrecordsforexporttoexcel", value);
            }
        }
        
        /// <summary>
        /// <para>Maximum number of lookup and picklist records that can be selected by user for filtering.</para>
        /// <para>Display Name: Max Records Filter Selection</para>
        /// </summary>
        [AttributeLogicalName("maxrecordsforlookupfilters")]
        [DisplayName("Max Records Filter Selection")]
        [Range(0, 2147483647)]
        public int? MaxRecordsForLookupFilters {
            get {
                return GetAttributeValue<int?>("maxrecordsforlookupfilters");
            }
            set {
                SetAttributeValue("maxrecordsforlookupfilters", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Max SLA Items Per SLA</para>
        /// </summary>
        [AttributeLogicalName("maxslaitemspersla")]
        [DisplayName("Max SLA Items Per SLA")]
        [Range(0, 2147483647)]
        public int? MaxSLAItemsPerSLA {
            get {
                return GetAttributeValue<int?>("maxslaitemspersla");
            }
            set {
                SetAttributeValue("maxslaitemspersla", value);
            }
        }
        
        /// <summary>
        /// <para>The maximum version of IE to run browser emulation for in Outlook client</para>
        /// <para>Display Name: Max supported IE version</para>
        /// </summary>
        [AttributeLogicalName("maxsupportedinternetexplorerversion")]
        [DisplayName("Max supported IE version")]
        [Range(0, 2147483647)]
        public int? MaxSupportedInternetExplorerVersion {
            get {
                return GetAttributeValue<int?>("maxsupportedinternetexplorerversion");
            }
        }
        
        /// <summary>
        /// <para>Maximum allowed size of an attachment.</para>
        /// <para>Display Name: Max Upload File Size</para>
        /// </summary>
        [AttributeLogicalName("maxuploadfilesize")]
        [DisplayName("Max Upload File Size")]
        [Range(0, 2147483647)]
        public int? MaxUploadFileSize {
            get {
                return GetAttributeValue<int?>("maxuploadfilesize");
            }
            set {
                SetAttributeValue("maxuploadfilesize", value);
            }
        }
        
        /// <summary>
        /// <para>Maximum number of mailboxes that can be toggled for verbose logging</para>
        /// <para>Display Name: Max No Of Mailboxes To Enable For Verbose Logging</para>
        /// </summary>
        [AttributeLogicalName("maxverboseloggingmailbox")]
        [DisplayName("Max No Of Mailboxes To Enable For Verbose Logging")]
        [Range(-2147483648, 2147483647)]
        public int? MaxVerboseLoggingMailbox {
            get {
                return GetAttributeValue<int?>("maxverboseloggingmailbox");
            }
        }
        
        /// <summary>
        /// <para>Maximum number of sync cycles for which verbose logging will be enabled by default</para>
        /// <para>Display Name: Maximum number of sync cycles for which verbose logging will be enabled by default</para>
        /// </summary>
        [AttributeLogicalName("maxverboseloggingsynccycles")]
        [DisplayName("Maximum number of sync cycles for which verbose logging will be enabled by defaul" +
            "t")]
        [Range(-2147483648, 2147483647)]
        public int? MaxVerboseLoggingSyncCycles {
            get {
                return GetAttributeValue<int?>("maxverboseloggingsynccycles");
            }
        }
        
        /// <summary>
        /// <para>Maximum number of active business process flows allowed per entity</para>
        /// <para>Display Name: Maximum active business process flows per entity</para>
        /// </summary>
        [AttributeLogicalName("maximumactivebusinessprocessflowsallowedperentity")]
        [DisplayName("Maximum active business process flows per entity")]
        [Range(1, 2147483647)]
        public int? MaximumActiveBusinessProcessFlowsAllowedPerEntity {
            get {
                return GetAttributeValue<int?>("maximumactivebusinessprocessflowsallowedperentity");
            }
            set {
                SetAttributeValue("maximumactivebusinessprocessflowsallowedperentity", value);
            }
        }
        
        /// <summary>
        /// <para>Restrict the maximum number of product properties for a product family/bundle</para>
        /// <para>Display Name: Product Properties Item Limit</para>
        /// </summary>
        [AttributeLogicalName("maximumdynamicpropertiesallowed")]
        [DisplayName("Product Properties Item Limit")]
        [Range(0, 2147483647)]
        public int? MaximumDynamicPropertiesAllowed {
            get {
                return GetAttributeValue<int?>("maximumdynamicpropertiesallowed");
            }
            set {
                SetAttributeValue("maximumdynamicpropertiesallowed", value);
            }
        }
        
        /// <summary>
        /// <para>Maximum number of active SLA allowed per entity in online</para>
        /// <para>Display Name: Maximum number of active SLA allowed per entity in online</para>
        /// </summary>
        [AttributeLogicalName("maximumentitieswithactivesla")]
        [DisplayName("Maximum number of active SLA allowed per entity in online")]
        [Range(0, 2147483647)]
        public int? MaximumEntitiesWithActiveSLA {
            get {
                return GetAttributeValue<int?>("maximumentitieswithactivesla");
            }
            set {
                SetAttributeValue("maximumentitieswithactivesla", value);
            }
        }
        
        /// <summary>
        /// <para>Maximum number of SLA KPI per active SLA allowed for entity in online</para>
        /// <para>Display Name: Maximum number of active SLA KPI allowed per entity in online</para>
        /// </summary>
        [AttributeLogicalName("maximumslakpiperentitywithactivesla")]
        [DisplayName("Maximum number of active SLA KPI allowed per entity in online")]
        [Range(0, 2147483647)]
        public int? MaximumSLAKPIPerEntityWithActiveSLA {
            get {
                return GetAttributeValue<int?>("maximumslakpiperentitywithactivesla");
            }
            set {
                SetAttributeValue("maximumslakpiperentitywithactivesla", value);
            }
        }
        
        /// <summary>
        /// <para>Maximum tracking number before recycling takes place.</para>
        /// <para>Display Name: Max Tracking Number</para>
        /// </summary>
        [AttributeLogicalName("maximumtrackingnumber")]
        [DisplayName("Max Tracking Number")]
        [Range(0, 2147483647)]
        public int? MaximumTrackingNumber {
            get {
                return GetAttributeValue<int?>("maximumtrackingnumber");
            }
            set {
                SetAttributeValue("maximumtrackingnumber", value);
            }
        }
        
        /// <summary>
        /// <para>(Deprecated) Environment selected for Integration with Microsoft Flow</para>
        /// <para>Display Name: (Deprecated) Environment selected for Integration with Microsoft Flow</para>
        /// </summary>
        [AttributeLogicalName("microsoftflowenvironment")]
        [DisplayName("(Deprecated) Environment selected for Integration with Microsoft Flow")]
        [MaxLength(1024)]
        public string MicrosoftFlowEnvironment {
            get {
                return GetAttributeValue<string>("microsoftflowenvironment");
            }
            set {
                SetAttributeValue("microsoftflowenvironment", value);
            }
        }
        
        /// <summary>
        /// <para>Normal polling frequency used for address book synchronization in Microsoft Office Outlook.</para>
        /// <para>Display Name: Min Address Synchronization Frequency</para>
        /// </summary>
        [AttributeLogicalName("minaddressbooksyncinterval")]
        [DisplayName("Min Address Synchronization Frequency")]
        [Range(-2147483648, 2147483647)]
        public int? MinAddressBookSyncInterval {
            get {
                return GetAttributeValue<int?>("minaddressbooksyncinterval");
            }
            set {
                SetAttributeValue("minaddressbooksyncinterval", value);
            }
        }
        
        /// <summary>
        /// <para>Normal polling frequency used for background offline synchronization in Microsoft Office Outlook.</para>
        /// <para>Display Name: Min Offline Synchronization Frequency</para>
        /// </summary>
        [AttributeLogicalName("minofflinesyncinterval")]
        [DisplayName("Min Offline Synchronization Frequency")]
        [Range(-2147483648, 2147483647)]
        public int? MinOfflineSyncInterval {
            get {
                return GetAttributeValue<int?>("minofflinesyncinterval");
            }
            set {
                SetAttributeValue("minofflinesyncinterval", value);
            }
        }
        
        /// <summary>
        /// <para>Minimum allowed time between scheduled Outlook synchronizations.</para>
        /// <para>Display Name: Min Synchronization Frequency</para>
        /// </summary>
        [AttributeLogicalName("minoutlooksyncinterval")]
        [DisplayName("Min Synchronization Frequency")]
        [Range(0, 2147483647)]
        public int? MinOutlookSyncInterval {
            get {
                return GetAttributeValue<int?>("minoutlooksyncinterval");
            }
            set {
                SetAttributeValue("minoutlooksyncinterval", value);
            }
        }
        
        /// <summary>
        /// <para>Minimum number of user license required for mobile offline service by production/preview organization</para>
        /// <para>Display Name: Minimum number of user license required for mobile offline service by production/preview organization</para>
        /// </summary>
        [AttributeLogicalName("mobileofflineminlicenseprod")]
        [DisplayName("Minimum number of user license required for mobile offline service by production/" +
            "preview organization")]
        [Range(-2147483648, 2147483647)]
        public int? MobileOfflineMinLicenseProd {
            get {
                return GetAttributeValue<int?>("mobileofflineminlicenseprod");
            }
        }
        
        /// <summary>
        /// <para>Minimum number of user license required for mobile offline service by trial organization</para>
        /// <para>Display Name: Minimum number of user license required for mobile offline service by trial organization</para>
        /// </summary>
        [AttributeLogicalName("mobileofflineminlicensetrial")]
        [DisplayName("Minimum number of user license required for mobile offline service by trial organ" +
            "ization")]
        [Range(-2147483648, 2147483647)]
        public int? MobileOfflineMinLicenseTrial {
            get {
                return GetAttributeValue<int?>("mobileofflineminlicensetrial");
            }
        }
        
        /// <summary>
        /// <para>Sync interval for mobile offline.</para>
        /// <para>Display Name: Sync interval for mobile offline.</para>
        /// </summary>
        [AttributeLogicalName("mobileofflinesyncinterval")]
        [DisplayName("Sync interval for mobile offline.")]
        [Range(0, 2147483647)]
        public int? MobileOfflineSyncInterval {
            get {
                return GetAttributeValue<int?>("mobileofflinesyncinterval");
            }
            set {
                SetAttributeValue("mobileofflinesyncinterval", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who last modified the organization.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the organization was last modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who last modified the organization.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Name of the organization. The name is set when Microsoft CRM is installed and should not be changed.</para>
        /// <para>Display Name: Organization Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Organization Name")]
        [MaxLength(160)]
        public string Name {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Information that specifies how negative currency numbers are displayed throughout Microsoft Dynamics 365.</para>
        /// <para>Display Name: Negative Currency Format</para>
        /// </summary>
        [AttributeLogicalName("negativecurrencyformatcode")]
        [DisplayName("Negative Currency Format")]
        [Range(-2147483648, 2147483647)]
        public int? NegativeCurrencyFormatCode {
            get {
                return GetAttributeValue<int?>("negativecurrencyformatcode");
            }
            set {
                SetAttributeValue("negativecurrencyformatcode", value);
            }
        }
        
        /// <summary>
        /// <para>Information that specifies how negative numbers are displayed throughout Microsoft CRM.</para>
        /// <para>Display Name: Negative Format</para>
        /// </summary>
        [AttributeLogicalName("negativeformatcode")]
        [DisplayName("Negative Format")]
        public Organization_NegativeFormatCode? NegativeFormatCode {
            get {
                return GetOptionSetValue<Organization_NegativeFormatCode>("negativeformatcode");
            }
            set {
                SetOptionSetValue("negativeformatcode", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether an organization has enabled the new Relevance search experience (released in Oct 2020) for the organization</para>
        /// <para>Display Name: Oct 2020 Search enabled</para>
        /// </summary>
        [AttributeLogicalName("newsearchexperienceenabled")]
        [DisplayName("Oct 2020 Search enabled")]
        public bool? NewSearchExperienceEnabled {
            get {
                return GetAttributeValue<bool?>("newsearchexperienceenabled");
            }
            set {
                SetAttributeValue("newsearchexperienceenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Next token to be placed on the subject line of an email message.</para>
        /// <para>Display Name: Next Tracking Number</para>
        /// </summary>
        [AttributeLogicalName("nexttrackingnumber")]
        [DisplayName("Next Tracking Number")]
        [Range(-2147483648, 2147483647)]
        public int? NextTrackingNumber {
            get {
                return GetAttributeValue<int?>("nexttrackingnumber");
            }
            set {
                SetAttributeValue("nexttrackingnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether mailbox owners will be notified of email server profile level alerts.</para>
        /// <para>Display Name: Notify Mailbox Owner Of Email Server Level Alerts</para>
        /// </summary>
        [AttributeLogicalName("notifymailboxownerofemailserverlevelalerts")]
        [DisplayName("Notify Mailbox Owner Of Email Server Level Alerts")]
        public bool? NotifyMailboxOwnerOfEmailServerLevelAlerts {
            get {
                return GetAttributeValue<bool?>("notifymailboxownerofemailserverlevelalerts");
            }
            set {
                SetAttributeValue("notifymailboxownerofemailserverlevelalerts", value);
            }
        }
        
        /// <summary>
        /// <para>Specification of how numbers are displayed throughout Microsoft CRM.</para>
        /// <para>Display Name: Number Format</para>
        /// </summary>
        [AttributeLogicalName("numberformat")]
        [DisplayName("Number Format")]
        [MaxLength(2)]
        public string NumberFormat {
            get {
                return GetAttributeValue<string>("numberformat");
            }
            set {
                SetAttributeValue("numberformat", value);
            }
        }
        
        /// <summary>
        /// <para>Specifies how numbers are grouped in Microsoft Dynamics 365.</para>
        /// <para>Display Name: Number Grouping Format</para>
        /// </summary>
        [AttributeLogicalName("numbergroupformat")]
        [DisplayName("Number Grouping Format")]
        [MaxLength(50)]
        public string NumberGroupFormat {
            get {
                return GetAttributeValue<string>("numbergroupformat");
            }
            set {
                SetAttributeValue("numbergroupformat", value);
            }
        }
        
        /// <summary>
        /// <para>Symbol used for number separation in Microsoft Dynamics 365.</para>
        /// <para>Display Name: Number Separator</para>
        /// </summary>
        [AttributeLogicalName("numberseparator")]
        [DisplayName("Number Separator")]
        [MaxLength(5)]
        public string NumberSeparator {
            get {
                return GetAttributeValue<string>("numberseparator");
            }
            set {
                SetAttributeValue("numberseparator", value);
            }
        }
        
        /// <summary>
        /// <para>Enable OOB pricing calculation logic for Opportunity, Quote, Order and Invoice entities.</para>
        /// <para>Display Name: Enable OOB Price calculation</para>
        /// </summary>
        [AttributeLogicalName("oobpricecalculationenabled")]
        [DisplayName("Enable OOB Price calculation")]
        public bool? OOBPriceCalculationEnabled {
            get {
                return GetAttributeValue<bool?>("oobpricecalculationenabled");
            }
            set {
                SetAttributeValue("oobpricecalculationenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the Office Apps auto deployment is enabled for the organization.</para>
        /// <para>Display Name: Enable Office Apps Auto Deployment for this Organization</para>
        /// </summary>
        [AttributeLogicalName("officeappsautodeploymentenabled")]
        [DisplayName("Enable Office Apps Auto Deployment for this Organization")]
        public bool? OfficeAppsAutoDeploymentEnabled {
            get {
                return GetAttributeValue<bool?>("officeappsautodeploymentenabled");
            }
            set {
                SetAttributeValue("officeappsautodeploymentenabled", value);
            }
        }
        
        /// <summary>
        /// <para>The url to open the Delve for the organization.</para>
        /// <para>Display Name: The url to open the Delve</para>
        /// </summary>
        [AttributeLogicalName("officegraphdelveurl")]
        [DisplayName("The url to open the Delve")]
        [MaxLength(1000)]
        public string OfficeGraphDelveUrl {
            get {
                return GetAttributeValue<string>("officegraphdelveurl");
            }
            set {
                SetAttributeValue("officegraphdelveurl", value);
            }
        }
        
        /// <summary>
        /// <para>Prefix to use for all orders throughout Microsoft Dynamics 365.</para>
        /// <para>Display Name: Order Prefix</para>
        /// </summary>
        [AttributeLogicalName("orderprefix")]
        [DisplayName("Order Prefix")]
        [MaxLength(20)]
        public string OrderPrefix {
            get {
                return GetAttributeValue<string>("orderprefix");
            }
            set {
                SetAttributeValue("orderprefix", value);
            }
        }
        
        /// <summary>
        /// <para>Organization settings stored in Organization Database.</para>
        /// <para>Display Name: Organization Database Organization Settings</para>
        /// </summary>
        [AttributeLogicalName("orgdborgsettings")]
        [DisplayName("Organization Database Organization Settings")]
        [MaxLength(1073741823)]
        public string OrgDbOrgSettings {
            get {
                return GetAttributeValue<string>("orgdborgsettings");
            }
            set {
                SetAttributeValue("orgdborgsettings", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether to turn on OrgInsights for the organization.</para>
        /// <para>Display Name: Enable OrgInsights for this Organization</para>
        /// </summary>
        [AttributeLogicalName("orginsightsenabled")]
        [DisplayName("Enable OrgInsights for this Organization")]
        public bool? OrgInsightsEnabled {
            get {
                return GetAttributeValue<bool?>("orginsightsenabled");
            }
            set {
                SetAttributeValue("orginsightsenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates the organization lifecycle state</para>
        /// <para>Display Name: Organization State</para>
        /// </summary>
        [AttributeLogicalName("organizationstate")]
        [DisplayName("Organization State")]
        public Organization_OrganizationState? OrganizationState {
            get {
                return GetOptionSetValue<Organization_OrganizationState>("organizationstate");
            }
        }
        
        /// <summary>
        /// <para>PM designator to use throughout Microsoft Dynamics 365.</para>
        /// <para>Display Name: PM Designator</para>
        /// </summary>
        [AttributeLogicalName("pmdesignator")]
        [DisplayName("PM Designator")]
        [MaxLength(25)]
        public string PMDesignator {
            get {
                return GetAttributeValue<string>("pmdesignator");
            }
            set {
                SetAttributeValue("pmdesignator", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether Preview feature has been enabled for the organization.</para>
        /// <para>Display Name: Display Preview Feature for this organization</para>
        /// </summary>
        [AttributeLogicalName("paipreviewscenarioenabled")]
        [DisplayName("Display Preview Feature for this organization")]
        public bool? PaiPreviewScenarioEnabled {
            get {
                return GetAttributeValue<bool?>("paipreviewscenarioenabled");
            }
            set {
                SetAttributeValue("paipreviewscenarioenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Prefix used for parsed table columns.</para>
        /// <para>Display Name: Parsed Table Column Prefix</para>
        /// </summary>
        [AttributeLogicalName("parsedtablecolumnprefix")]
        [DisplayName("Parsed Table Column Prefix")]
        [MaxLength(20)]
        public string ParsedTableColumnPrefix {
            get {
                return GetAttributeValue<string>("parsedtablecolumnprefix");
            }
        }
        
        /// <summary>
        /// <para>Prefix used for parsed tables.</para>
        /// <para>Display Name: Parsed Table Prefix</para>
        /// </summary>
        [AttributeLogicalName("parsedtableprefix")]
        [DisplayName("Parsed Table Prefix")]
        [MaxLength(20)]
        public string ParsedTablePrefix {
            get {
                return GetAttributeValue<string>("parsedtableprefix");
            }
        }
        
        /// <summary>
        /// <para>Specifies the maximum number of months in past for which the recurring activities can be created.</para>
        /// <para>Display Name: Past Expansion Window</para>
        /// </summary>
        [AttributeLogicalName("pastexpansionwindow")]
        [DisplayName("Past Expansion Window")]
        [Range(1, 120)]
        public int? PastExpansionWindow {
            get {
                return GetAttributeValue<int?>("pastexpansionwindow");
            }
            set {
                SetAttributeValue("pastexpansionwindow", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Picture</para>
        /// </summary>
        [AttributeLogicalName("picture")]
        [DisplayName("Picture")]
        public string Picture {
            get {
                return GetAttributeValue<string>("picture");
            }
            set {
                SetAttributeValue("picture", value);
            }
        }
        
        [AttributeLogicalName("pinpointlanguagecode")]
        [Range(-2147483648, 2147483647)]
        public int? PinpointLanguageCode {
            get {
                return GetAttributeValue<int?>("pinpointlanguagecode");
            }
            set {
                SetAttributeValue("pinpointlanguagecode", value);
            }
        }
        
        /// <summary>
        /// <para>Plug-in Trace Log Setting for the Organization.</para>
        /// <para>Display Name: Plug-in Trace Log Setting</para>
        /// </summary>
        [AttributeLogicalName("plugintracelogsetting")]
        [DisplayName("Plug-in Trace Log Setting")]
        public Organization_PluginTraceLogSetting? PluginTraceLogSetting {
            get {
                return GetOptionSetValue<Organization_PluginTraceLogSetting>("plugintracelogsetting");
            }
            set {
                SetOptionSetValue("plugintracelogsetting", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: For internal use only.</para>
        /// </summary>
        [AttributeLogicalName("postmessagewhitelistdomains")]
        [DisplayName("For internal use only.")]
        [MaxLength(500)]
        public string PostMessageWhitelistDomains {
            get {
                return GetAttributeValue<string>("postmessagewhitelistdomains");
            }
            set {
                SetAttributeValue("postmessagewhitelistdomains", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the Power BI feature should be enabled for the organization.</para>
        /// <para>Display Name: Enable Power BI feature for this Organization</para>
        /// </summary>
        [AttributeLogicalName("powerbifeatureenabled")]
        [DisplayName("Enable Power BI feature for this Organization")]
        public bool? PowerBiFeatureEnabled {
            get {
                return GetAttributeValue<bool?>("powerbifeatureenabled");
            }
            set {
                SetAttributeValue("powerbifeatureenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Number of decimal places that can be used for prices.</para>
        /// <para>Display Name: Pricing Decimal Precision</para>
        /// </summary>
        [AttributeLogicalName("pricingdecimalprecision")]
        [DisplayName("Pricing Decimal Precision")]
        [Range(0, 4)]
        public int? PricingDecimalPrecision {
            get {
                return GetAttributeValue<int?>("pricingdecimalprecision");
            }
            set {
                SetAttributeValue("pricingdecimalprecision", value);
            }
        }
        
        /// <summary>
        /// <para>Name of the organization. The name is set when Microsoft CRM is installed and should not be changed.</para>
        /// <para>Display Name: Organization Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Organization Name")]
        [MaxLength(160)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Privilege Reporting Group</para>
        /// </summary>
        [AttributeLogicalName("privreportinggroupid")]
        [DisplayName("Privilege Reporting Group")]
        public Guid? PrivReportingGroupId {
            get {
                return GetAttributeValue<Guid?>("privreportinggroupid");
            }
            set {
                SetAttributeValue("privreportinggroupid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Privilege Reporting Group Name</para>
        /// </summary>
        [AttributeLogicalName("privreportinggroupname")]
        [DisplayName("Privilege Reporting Group Name")]
        [MaxLength(256)]
        public string PrivReportingGroupName {
            get {
                return GetAttributeValue<string>("privreportinggroupname");
            }
            set {
                SetAttributeValue("privreportinggroupname", value);
            }
        }
        
        /// <summary>
        /// <para>Privacy Statement URL</para>
        /// <para>Display Name: Privacy Statement URL</para>
        /// </summary>
        [AttributeLogicalName("privacystatementurl")]
        [DisplayName("Privacy Statement URL")]
        [MaxLength(500)]
        public string PrivacyStatementUrl {
            get {
                return GetAttributeValue<string>("privacystatementurl");
            }
            set {
                SetAttributeValue("privacystatementurl", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the default privilege for users in the organization.</para>
        /// <para>Display Name: Privilege User Group</para>
        /// </summary>
        [AttributeLogicalName("privilegeusergroupid")]
        [DisplayName("Privilege User Group")]
        public Guid? PrivilegeUserGroupId {
            get {
                return GetAttributeValue<Guid?>("privilegeusergroupid");
            }
            set {
                SetAttributeValue("privilegeusergroupid", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether to turn on product recommendations for the organization.</para>
        /// <para>Display Name: Enable Product Recommendations for this Organization</para>
        /// </summary>
        [AttributeLogicalName("productrecommendationsenabled")]
        [DisplayName("Enable Product Recommendations for this Organization")]
        public bool? ProductRecommendationsEnabled {
            get {
                return GetAttributeValue<bool?>("productrecommendationsenabled");
            }
            set {
                SetAttributeValue("productrecommendationsenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether prompt should be shown for new Qualify Lead Experience</para>
        /// <para>Display Name: Enable New Qualify Lead Experience with configuration MDD</para>
        /// </summary>
        [AttributeLogicalName("qualifyleadadditionaloptions")]
        [DisplayName("Enable New Qualify Lead Experience with configuration MDD")]
        [MaxLength(1000)]
        public string QualifyLeadAdditionalOptions {
            get {
                return GetAttributeValue<string>("qualifyleadadditionaloptions");
            }
            set {
                SetAttributeValue("qualifyleadadditionaloptions", value);
            }
        }
        
        /// <summary>
        /// <para>Flag to indicate if the feature to use quick action to open records in search side pane is enabled</para>
        /// <para>Display Name: Enable quick actions to open records in search side pane</para>
        /// </summary>
        [AttributeLogicalName("quickactiontoopenrecordsinsidepaneenabled")]
        [DisplayName("Enable quick actions to open records in search side pane")]
        public bool? QuickActionToOpenRecordsInSidePaneEnabled {
            get {
                return GetAttributeValue<bool?>("quickactiontoopenrecordsinsidepaneenabled");
            }
            set {
                SetAttributeValue("quickactiontoopenrecordsinsidepaneenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether a quick find record limit should be enabled for this organization (allows for faster Quick Find queries but prevents overly broad searches).</para>
        /// <para>Display Name: Quick Find Record Limit Enabled</para>
        /// </summary>
        [AttributeLogicalName("quickfindrecordlimitenabled")]
        [DisplayName("Quick Find Record Limit Enabled")]
        public bool? QuickFindRecordLimitEnabled {
            get {
                return GetAttributeValue<bool?>("quickfindrecordlimitenabled");
            }
            set {
                SetAttributeValue("quickfindrecordlimitenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Prefix to use for all quotes throughout Microsoft Dynamics 365.</para>
        /// <para>Display Name: Quote Prefix</para>
        /// </summary>
        [AttributeLogicalName("quoteprefix")]
        [DisplayName("Quote Prefix")]
        [MaxLength(20)]
        public string QuotePrefix {
            get {
                return GetAttributeValue<string>("quoteprefix");
            }
            set {
                SetAttributeValue("quoteprefix", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether SLA Recalculation has been enabled for the organization</para>
        /// <para>Display Name: Indicates whether SLA Recalculation has been enabled for the organization</para>
        /// </summary>
        [AttributeLogicalName("recalculatesla")]
        [DisplayName("Indicates whether SLA Recalculation has been enabled for the organization")]
        public bool? RecalculateSLA {
            get {
                return GetAttributeValue<bool?>("recalculatesla");
            }
            set {
                SetAttributeValue("recalculatesla", value);
            }
        }
        
        /// <summary>
        /// <para>Specifies the default value for number of occurrences field in the recurrence dialog.</para>
        /// <para>Display Name: Recurrence Default Number of Occurrences</para>
        /// </summary>
        [AttributeLogicalName("recurrencedefaultnumberofoccurrences")]
        [DisplayName("Recurrence Default Number of Occurrences")]
        [Range(1, 999)]
        public int? RecurrenceDefaultNumberOfOccurrences {
            get {
                return GetAttributeValue<int?>("recurrencedefaultnumberofoccurrences");
            }
            set {
                SetAttributeValue("recurrencedefaultnumberofoccurrences", value);
            }
        }
        
        /// <summary>
        /// <para>Specifies the interval (in seconds) for pausing expansion job.</para>
        /// <para>Display Name: Recurrence Expansion Job Batch Interval</para>
        /// </summary>
        [AttributeLogicalName("recurrenceexpansionjobbatchinterval")]
        [DisplayName("Recurrence Expansion Job Batch Interval")]
        [Range(0, 2147483647)]
        public int? RecurrenceExpansionJobBatchInterval {
            get {
                return GetAttributeValue<int?>("recurrenceexpansionjobbatchinterval");
            }
            set {
                SetAttributeValue("recurrenceexpansionjobbatchinterval", value);
            }
        }
        
        /// <summary>
        /// <para>Specifies the value for number of instances created in on demand job in one shot.</para>
        /// <para>Display Name: Recurrence Expansion On Demand Job Batch Size</para>
        /// </summary>
        [AttributeLogicalName("recurrenceexpansionjobbatchsize")]
        [DisplayName("Recurrence Expansion On Demand Job Batch Size")]
        [Range(0, 2147483647)]
        public int? RecurrenceExpansionJobBatchSize {
            get {
                return GetAttributeValue<int?>("recurrenceexpansionjobbatchsize");
            }
            set {
                SetAttributeValue("recurrenceexpansionjobbatchsize", value);
            }
        }
        
        /// <summary>
        /// <para>Specifies the maximum number of instances to be created synchronously after creating a recurring appointment.</para>
        /// <para>Display Name: Recurrence Expansion Synchronization Create Maximum</para>
        /// </summary>
        [AttributeLogicalName("recurrenceexpansionsynchcreatemax")]
        [DisplayName("Recurrence Expansion Synchronization Create Maximum")]
        [Range(1, 1000)]
        public int? RecurrenceExpansionSynchCreateMax {
            get {
                return GetAttributeValue<int?>("recurrenceexpansionsynchcreatemax");
            }
            set {
                SetAttributeValue("recurrenceexpansionsynchcreatemax", value);
            }
        }
        
        /// <summary>
        /// <para>XML string that defines the navigation structure for the application. This is the site map from the previously upgraded build and is used in a 3-way merge during upgrade.</para>
        /// <para>Display Name: Reference SiteMap XML</para>
        /// </summary>
        [AttributeLogicalName("referencesitemapxml")]
        [DisplayName("Reference SiteMap XML")]
        [MaxLength(1073741823)]
        public string ReferenceSiteMapXml {
            get {
                return GetAttributeValue<string>("referencesitemapxml");
            }
            set {
                SetAttributeValue("referencesitemapxml", value);
            }
        }
        
        /// <summary>
        /// <para>Release Wave Applied to Environment.</para>
        /// <para>Display Name: Release Wave</para>
        /// </summary>
        [AttributeLogicalName("releasewavename")]
        [DisplayName("Release Wave")]
        [MaxLength(200)]
        public string ReleaseWaveName {
            get {
                return GetAttributeValue<string>("releasewavename");
            }
            set {
                SetAttributeValue("releasewavename", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether relevance search was enabled for the environment as part of Dataverse's relevance search on-by-default sweep</para>
        /// <para>Display Name: Relevance search enabled automatically by Dataverse</para>
        /// </summary>
        [AttributeLogicalName("relevancesearchenabledbyplatform")]
        [DisplayName("Relevance search enabled automatically by Dataverse")]
        public bool? RelevanceSearchEnabledByPlatform {
            get {
                return GetAttributeValue<bool?>("relevancesearchenabledbyplatform");
            }
            set {
                SetAttributeValue("relevancesearchenabledbyplatform", value);
            }
        }
        
        /// <summary>
        /// <para>This setting contains the last modified date for relevance search setting that appears as a toggle in PPAC.</para>
        /// <para>Display Name: RelevanceSearchModifiedOnDate</para>
        /// </summary>
        [AttributeLogicalName("relevancesearchmodifiedon")]
        [DisplayName("RelevanceSearchModifiedOnDate")]
        public DateTime? RelevanceSearchModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("relevancesearchmodifiedon");
            }
            set {
                SetAttributeValue("relevancesearchmodifiedon", value);
            }
        }
        
        /// <summary>
        /// <para>Flag to render the body of email in the Web form in an IFRAME with the security='restricted' attribute set. This is additional security but can cause a credentials prompt.</para>
        /// <para>Display Name: Render Secure Frame For Email</para>
        /// </summary>
        [AttributeLogicalName("rendersecureiframeforemail")]
        [DisplayName("Render Secure Frame For Email")]
        public bool? RenderSecureIFrameForEmail {
            get {
                return GetAttributeValue<bool?>("rendersecureiframeforemail");
            }
            set {
                SetAttributeValue("rendersecureiframeforemail", value);
            }
        }
        
        /// <summary>
        /// <para>Picklist for selecting the organization preference for reporting scripting errors.</para>
        /// <para>Display Name: Report Script Errors</para>
        /// </summary>
        [AttributeLogicalName("reportscripterrors")]
        [DisplayName("Report Script Errors")]
        public Organization_ReportScriptErrors? ReportScriptErrors {
            get {
                return GetOptionSetValue<Organization_ReportScriptErrors>("reportscripterrors");
            }
            set {
                SetOptionSetValue("reportscripterrors", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Reporting Group</para>
        /// </summary>
        [AttributeLogicalName("reportinggroupid")]
        [DisplayName("Reporting Group")]
        public Guid? ReportingGroupId {
            get {
                return GetAttributeValue<Guid?>("reportinggroupid");
            }
            set {
                SetAttributeValue("reportinggroupid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Reporting Group Name</para>
        /// </summary>
        [AttributeLogicalName("reportinggroupname")]
        [DisplayName("Reporting Group Name")]
        [MaxLength(256)]
        public string ReportingGroupName {
            get {
                return GetAttributeValue<string>("reportinggroupname");
            }
            set {
                SetAttributeValue("reportinggroupname", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether Send As Other User privilege is enabled.</para>
        /// <para>Display Name: Is Approval For Queue Email Required</para>
        /// </summary>
        [AttributeLogicalName("requireapprovalforqueueemail")]
        [DisplayName("Is Approval For Queue Email Required")]
        public bool? RequireApprovalForQueueEmail {
            get {
                return GetAttributeValue<bool?>("requireapprovalforqueueemail");
            }
            set {
                SetAttributeValue("requireapprovalforqueueemail", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether Send As Other User privilege is enabled.</para>
        /// <para>Display Name: Is Approval For User Email Required</para>
        /// </summary>
        [AttributeLogicalName("requireapprovalforuseremail")]
        [DisplayName("Is Approval For User Email Required")]
        public bool? RequireApprovalForUserEmail {
            get {
                return GetAttributeValue<bool?>("requireapprovalforuseremail");
            }
            set {
                SetAttributeValue("requireapprovalforuseremail", value);
            }
        }
        
        /// <summary>
        /// <para>Apply same email address to all unresolved matches when you manually resolve it for one</para>
        /// <para>Display Name: Apply same email address to all unresolved matches when you manually resolve it for one</para>
        /// </summary>
        [AttributeLogicalName("resolvesimilarunresolvedemailaddress")]
        [DisplayName("Apply same email address to all unresolved matches when you manually resolve it f" +
            "or one")]
        public bool? ResolveSimilarUnresolvedEmailAddress {
            get {
                return GetAttributeValue<bool?>("resolvesimilarunresolvedemailaddress");
            }
            set {
                SetAttributeValue("resolvesimilarunresolvedemailaddress", value);
            }
        }
        
        /// <summary>
        /// <para>Flag to restrict Update on incident.</para>
        /// <para>Display Name: Restrict Status Update</para>
        /// </summary>
        [AttributeLogicalName("restrictstatusupdate")]
        [DisplayName("Restrict Status Update")]
        public bool? RestrictStatusUpdate {
            get {
                return GetAttributeValue<bool?>("restrictstatusupdate");
            }
            set {
                SetAttributeValue("restrictstatusupdate", value);
            }
        }
        
        /// <summary>
        /// <para>Error status of Relationship Insights provisioning.</para>
        /// <para>Display Name: Error status of Relationship Insights provisioning.</para>
        /// </summary>
        [AttributeLogicalName("rierrorstatus")]
        [DisplayName("Error status of Relationship Insights provisioning.")]
        [Range(0, 2147483647)]
        public int? RiErrorStatus {
            get {
                return GetAttributeValue<int?>("rierrorstatus");
            }
            set {
                SetAttributeValue("rierrorstatus", value);
            }
        }
        
        /// <summary>
        /// <para>Setting for SQM data collection, 0 no, 1 yes enabled</para>
        /// <para>Display Name: Is SQM Enabled</para>
        /// </summary>
        [AttributeLogicalName("sqmenabled")]
        [DisplayName("Is SQM Enabled")]
        public bool? SQMEnabled {
            get {
                return GetAttributeValue<bool?>("sqmenabled");
            }
            set {
                SetAttributeValue("sqmenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the sample data import job.</para>
        /// <para>Display Name: Sample Data Import</para>
        /// </summary>
        [AttributeLogicalName("sampledataimportid")]
        [DisplayName("Sample Data Import")]
        public Guid? SampleDataImportId {
            get {
                return GetAttributeValue<Guid?>("sampledataimportid");
            }
            set {
                SetAttributeValue("sampledataimportid", value);
            }
        }
        
        /// <summary>
        /// <para>Scheduling engine for Appointments and Service Activities</para>
        /// <para>Display Name: Scheduling engine for Appointments and Service Activities</para>
        /// </summary>
        [AttributeLogicalName("schedulingengine")]
        [DisplayName("Scheduling engine for Appointments and Service Activities")]
        public Organization_SchedulingEngine? SchedulingEngine {
            get {
                return GetOptionSetValue<Organization_SchedulingEngine>("schedulingengine");
            }
            set {
                SetOptionSetValue("schedulingengine", value);
            }
        }
        
        /// <summary>
        /// <para>Prefix used for custom entities and attributes.</para>
        /// <para>Display Name: Customization Name Prefix</para>
        /// </summary>
        [AttributeLogicalName("schemanameprefix")]
        [DisplayName("Customization Name Prefix")]
        [MaxLength(8)]
        public string SchemaNamePrefix {
            get {
                return GetAttributeValue<string>("schemanameprefix");
            }
            set {
                SetAttributeValue("schemanameprefix", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether Send Bulk Email in UCI is enabled for the org.</para>
        /// <para>Display Name: Send Bulk Email in UCI</para>
        /// </summary>
        [AttributeLogicalName("sendbulkemailinuci")]
        [DisplayName("Send Bulk Email in UCI")]
        public bool? SendBulkEmailInUCI {
            get {
                return GetAttributeValue<bool?>("sendbulkemailinuci");
            }
            set {
                SetAttributeValue("sendbulkemailinuci", value);
            }
        }
        
        /// <summary>
        /// <para>Serve Static Content From CDN</para>
        /// <para>Display Name: Serve Static Content From CDN</para>
        /// </summary>
        [AttributeLogicalName("servestaticresourcesfromazurecdn")]
        [DisplayName("Serve Static Content From CDN")]
        public bool? ServeStaticResourcesFromAzureCDN {
            get {
                return GetAttributeValue<bool?>("servestaticresourcesfromazurecdn");
            }
            set {
                SetAttributeValue("servestaticresourcesfromazurecdn", value);
            }
        }
        
        /// <summary>
        /// <para>Enable the session recording feature to record user sessions in UCI</para>
        /// <para>Display Name: Enable the session recording feature</para>
        /// </summary>
        [AttributeLogicalName("sessionrecordingenabled")]
        [DisplayName("Enable the session recording feature")]
        public bool? SessionRecordingEnabled {
            get {
                return GetAttributeValue<bool?>("sessionrecordingenabled");
            }
            set {
                SetAttributeValue("sessionrecordingenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Information that specifies whether session timeout is enabled</para>
        /// <para>Display Name: Session timeout enabled</para>
        /// </summary>
        [AttributeLogicalName("sessiontimeoutenabled")]
        [DisplayName("Session timeout enabled")]
        public bool? SessionTimeoutEnabled {
            get {
                return GetAttributeValue<bool?>("sessiontimeoutenabled");
            }
            set {
                SetAttributeValue("sessiontimeoutenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Session timeout in minutes</para>
        /// <para>Display Name: Session timeout in minutes</para>
        /// </summary>
        [AttributeLogicalName("sessiontimeoutinmins")]
        [DisplayName("Session timeout in minutes")]
        [Range(0, 2147483647)]
        public int? SessionTimeoutInMins {
            get {
                return GetAttributeValue<int?>("sessiontimeoutinmins");
            }
            set {
                SetAttributeValue("sessiontimeoutinmins", value);
            }
        }
        
        /// <summary>
        /// <para>Session timeout reminder in minutes</para>
        /// <para>Display Name: Session timeout reminder in minutes</para>
        /// </summary>
        [AttributeLogicalName("sessiontimeoutreminderinmins")]
        [DisplayName("Session timeout reminder in minutes")]
        [Range(0, 2147483647)]
        public int? SessionTimeoutReminderInMins {
            get {
                return GetAttributeValue<int?>("sessiontimeoutreminderinmins");
            }
            set {
                SetAttributeValue("sessiontimeoutreminderinmins", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates which SharePoint deployment type is configured for Server to Server. (Online or On-Premises)</para>
        /// <para>Display Name: Choose SharePoint Deployment Type</para>
        /// </summary>
        [AttributeLogicalName("sharepointdeploymenttype")]
        [DisplayName("Choose SharePoint Deployment Type")]
        public Organization_SharePointDeploymentType? SharePointDeploymentType {
            get {
                return GetOptionSetValue<Organization_SharePointDeploymentType>("sharepointdeploymenttype");
            }
            set {
                SetOptionSetValue("sharepointdeploymenttype", value);
            }
        }
        
        /// <summary>
        /// <para>Information that specifies whether to share to previous owner on assign.</para>
        /// <para>Display Name: Share To Previous Owner On Assign</para>
        /// </summary>
        [AttributeLogicalName("sharetopreviousowneronassign")]
        [DisplayName("Share To Previous Owner On Assign")]
        public bool? ShareToPreviousOwnerOnAssign {
            get {
                return GetAttributeValue<bool?>("sharetopreviousowneronassign");
            }
            set {
                SetAttributeValue("sharetopreviousowneronassign", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether to display a KB article deprecation notification to the user.</para>
        /// <para>Display Name: Show KBArticle deprecation message to user</para>
        /// </summary>
        [AttributeLogicalName("showkbarticledeprecationnotification")]
        [DisplayName("Show KBArticle deprecation message to user")]
        public bool? ShowKBArticleDeprecationNotification {
            get {
                return GetAttributeValue<bool?>("showkbarticledeprecationnotification");
            }
            set {
                SetAttributeValue("showkbarticledeprecationnotification", value);
            }
        }
        
        /// <summary>
        /// <para>Information that specifies whether to display the week number in calendar displays throughout Microsoft CRM.</para>
        /// <para>Display Name: Show Week Number</para>
        /// </summary>
        [AttributeLogicalName("showweeknumber")]
        [DisplayName("Show Week Number")]
        public bool? ShowWeekNumber {
            get {
                return GetAttributeValue<bool?>("showweeknumber");
            }
            set {
                SetAttributeValue("showweeknumber", value);
            }
        }
        
        /// <summary>
        /// <para>CRM for Outlook Download URL</para>
        /// <para>Display Name: CRMForOutlookDownloadURL</para>
        /// </summary>
        [AttributeLogicalName("signupoutlookdownloadfwlink")]
        [DisplayName("CRMForOutlookDownloadURL")]
        [MaxLength(200)]
        public string SignupOutlookDownloadFWLink {
            get {
                return GetAttributeValue<string>("signupoutlookdownloadfwlink");
            }
            set {
                SetAttributeValue("signupoutlookdownloadfwlink", value);
            }
        }
        
        /// <summary>
        /// <para>XML string that defines the navigation structure for the application.</para>
        /// <para>Display Name: SiteMap XML</para>
        /// </summary>
        [AttributeLogicalName("sitemapxml")]
        [DisplayName("SiteMap XML")]
        public string SiteMapXml {
            get {
                return GetAttributeValue<string>("sitemapxml");
            }
            set {
                SetAttributeValue("sitemapxml", value);
            }
        }
        
        /// <summary>
        /// <para>Contains the on hold case status values.</para>
        /// <para>Display Name: SLA pause states</para>
        /// </summary>
        [AttributeLogicalName("slapausestates")]
        [DisplayName("SLA pause states")]
        [MaxLength(1073741823)]
        public string SlaPauseStates {
            get {
                return GetAttributeValue<string>("slapausestates");
            }
            set {
                SetAttributeValue("slapausestates", value);
            }
        }
        
        /// <summary>
        /// <para>Flag for whether the organization is using Social Insights.</para>
        /// <para>Display Name: Social Insights Enabled</para>
        /// </summary>
        [AttributeLogicalName("socialinsightsenabled")]
        [DisplayName("Social Insights Enabled")]
        public bool? SocialInsightsEnabled {
            get {
                return GetAttributeValue<bool?>("socialinsightsenabled");
            }
            set {
                SetAttributeValue("socialinsightsenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Identifier for the Social Insights instance for the organization.</para>
        /// <para>Display Name: Social Insights instance identifier</para>
        /// </summary>
        [AttributeLogicalName("socialinsightsinstance")]
        [DisplayName("Social Insights instance identifier")]
        [MaxLength(2048)]
        public string SocialInsightsInstance {
            get {
                return GetAttributeValue<string>("socialinsightsinstance");
            }
            set {
                SetAttributeValue("socialinsightsinstance", value);
            }
        }
        
        /// <summary>
        /// <para>Flag for whether the organization has accepted the Social Insights terms of use.</para>
        /// <para>Display Name: Social Insights Terms of Use</para>
        /// </summary>
        [AttributeLogicalName("socialinsightstermsaccepted")]
        [DisplayName("Social Insights Terms of Use")]
        public bool? SocialInsightsTermsAccepted {
            get {
                return GetAttributeValue<bool?>("socialinsightstermsaccepted");
            }
            set {
                SetAttributeValue("socialinsightstermsaccepted", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Sort</para>
        /// </summary>
        [AttributeLogicalName("sortid")]
        [DisplayName("Sort")]
        [Range(-2147483648, 2147483647)]
        public int? SortId {
            get {
                return GetAttributeValue<int?>("sortid");
            }
            set {
                SetAttributeValue("sortid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: SQL Access Group</para>
        /// </summary>
        [AttributeLogicalName("sqlaccessgroupid")]
        [DisplayName("SQL Access Group")]
        public Guid? SqlAccessGroupId {
            get {
                return GetAttributeValue<Guid?>("sqlaccessgroupid");
            }
            set {
                SetAttributeValue("sqlaccessgroupid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: SQL Access Group Name</para>
        /// </summary>
        [AttributeLogicalName("sqlaccessgroupname")]
        [DisplayName("SQL Access Group Name")]
        [MaxLength(256)]
        public string SqlAccessGroupName {
            get {
                return GetAttributeValue<string>("sqlaccessgroupname");
            }
            set {
                SetAttributeValue("sqlaccessgroupname", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the support user for the organization.</para>
        /// <para>Display Name: Support User</para>
        /// </summary>
        [AttributeLogicalName("supportuserid")]
        [DisplayName("Support User")]
        public Guid? SupportUserId {
            get {
                return GetAttributeValue<Guid?>("supportuserid");
            }
            set {
                SetAttributeValue("supportuserid", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether SLA is suppressed.</para>
        /// <para>Display Name: Is SLA suppressed</para>
        /// </summary>
        [AttributeLogicalName("suppresssla")]
        [DisplayName("Is SLA suppressed")]
        public bool? SuppressSLA {
            get {
                return GetAttributeValue<bool?>("suppresssla");
            }
            set {
                SetAttributeValue("suppresssla", value);
            }
        }
        
        /// <summary>
        /// <para>Number of records to update per operation in Sync Bulk Pause/Resume/Cancel</para>
        /// <para>Display Name: Number of records to update per operation in Sync Bulk Pause/Resume/Cancel</para>
        /// </summary>
        [AttributeLogicalName("syncbulkoperationbatchsize")]
        [DisplayName("Number of records to update per operation in Sync Bulk Pause/Resume/Cancel")]
        [Range(1, 1000)]
        public int? SyncBulkOperationBatchSize {
            get {
                return GetAttributeValue<int?>("syncbulkoperationbatchsize");
            }
            set {
                SetAttributeValue("syncbulkoperationbatchsize", value);
            }
        }
        
        /// <summary>
        /// <para>Max total number of records to update in database for Sync Bulk Pause/Resume/Cancel</para>
        /// <para>Display Name: Max total number of records to update in database for Sync Bulk Pause/Resume/Cancel</para>
        /// </summary>
        [AttributeLogicalName("syncbulkoperationmaxlimit")]
        [DisplayName("Max total number of records to update in database for Sync Bulk Pause/Resume/Canc" +
            "el")]
        [Range(1, 500000)]
        public int? SyncBulkOperationMaxLimit {
            get {
                return GetAttributeValue<int?>("syncbulkoperationmaxlimit");
            }
            set {
                SetAttributeValue("syncbulkoperationmaxlimit", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates the selection to use the dynamics 365 azure sync framework or server side sync.</para>
        /// <para>Display Name: Enable dynamics 365 azure sync framework for this organization.</para>
        /// </summary>
        [AttributeLogicalName("syncoptinselection")]
        [DisplayName("Enable dynamics 365 azure sync framework for this organization.")]
        public bool? SyncOptInSelection {
            get {
                return GetAttributeValue<bool?>("syncoptinselection");
            }
            set {
                SetAttributeValue("syncoptinselection", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates the status of the opt-in or opt-out operation for dynamics 365 azure sync.</para>
        /// <para>Display Name: Status of opt-in or opt-out operation for dynamics 365 azure sync.</para>
        /// </summary>
        [AttributeLogicalName("syncoptinselectionstatus")]
        [DisplayName("Status of opt-in or opt-out operation for dynamics 365 azure sync.")]
        public Organization_SyncOptInSelectionStatus? SyncOptInSelectionStatus {
            get {
                return GetOptionSetValue<Organization_SyncOptInSelectionStatus>("syncoptinselectionstatus");
            }
            set {
                SetOptionSetValue("syncoptinselectionstatus", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the system user for the organization.</para>
        /// <para>Display Name: System User</para>
        /// </summary>
        [AttributeLogicalName("systemuserid")]
        [DisplayName("System User")]
        public Guid? SystemUserId {
            get {
                return GetAttributeValue<Guid?>("systemuserid");
            }
            set {
                SetAttributeValue("systemuserid", value);
            }
        }
        
        /// <summary>
        /// <para>Maximum number of aggressive polling cycles executed for email auto-tagging when a new email is received.</para>
        /// <para>Display Name: Auto-Tag Max Cycles</para>
        /// </summary>
        [AttributeLogicalName("tagmaxaggressivecycles")]
        [DisplayName("Auto-Tag Max Cycles")]
        public int? TagMaxAggressiveCycles {
            get {
                return GetAttributeValue<int?>("tagmaxaggressivecycles");
            }
            set {
                SetAttributeValue("tagmaxaggressivecycles", value);
            }
        }
        
        /// <summary>
        /// <para>Normal polling frequency used for email receive auto-tagging in outlook.</para>
        /// <para>Display Name: Auto-Tag Interval</para>
        /// </summary>
        [AttributeLogicalName("tagpollingperiod")]
        [DisplayName("Auto-Tag Interval")]
        [Range(0, 2147483647)]
        public int? TagPollingPeriod {
            get {
                return GetAttributeValue<int?>("tagpollingperiod");
            }
            set {
                SetAttributeValue("tagpollingperiod", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether to turn on task flows for the organization.</para>
        /// <para>Display Name: Enable Task Flow processes for this Organization</para>
        /// </summary>
        [AttributeLogicalName("taskbasedflowenabled")]
        [DisplayName("Enable Task Flow processes for this Organization")]
        public bool? TaskBasedFlowEnabled {
            get {
                return GetAttributeValue<bool?>("taskbasedflowenabled");
            }
            set {
                SetAttributeValue("taskbasedflowenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Instrumentation key for Application Insights used to log plugins telemetry.</para>
        /// <para>Display Name: Telemetry Instrumentation Key</para>
        /// </summary>
        [AttributeLogicalName("telemetryinstrumentationkey")]
        [DisplayName("Telemetry Instrumentation Key")]
        [MaxLength(100)]
        public string TelemetryInstrumentationKey {
            get {
                return GetAttributeValue<string>("telemetryinstrumentationkey");
            }
            set {
                SetAttributeValue("telemetryinstrumentationkey", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether to turn on text analytics for the organization.</para>
        /// <para>Display Name: Enable Text Analytics for this Organization</para>
        /// </summary>
        [AttributeLogicalName("textanalyticsenabled")]
        [DisplayName("Enable Text Analytics for this Organization")]
        public bool? TextAnalyticsEnabled {
            get {
                return GetAttributeValue<bool?>("textanalyticsenabled");
            }
            set {
                SetAttributeValue("textanalyticsenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Information that specifies how the time is displayed throughout Microsoft CRM.</para>
        /// <para>Display Name: Time Format Code</para>
        /// </summary>
        [AttributeLogicalName("timeformatcode")]
        [DisplayName("Time Format Code")]
        public Object TimeFormatCode {
            get {
                return GetAttributeValue<Object>("timeformatcode");
            }
            set {
                SetAttributeValue("timeformatcode", value);
            }
        }
        
        /// <summary>
        /// <para>Text for how time is displayed in Microsoft Dynamics 365.</para>
        /// <para>Display Name: Time Format String</para>
        /// </summary>
        [AttributeLogicalName("timeformatstring")]
        [DisplayName("Time Format String")]
        [MaxLength(255)]
        public string TimeFormatString {
            get {
                return GetAttributeValue<string>("timeformatstring");
            }
            set {
                SetAttributeValue("timeformatstring", value);
            }
        }
        
        /// <summary>
        /// <para>Text for how the time separator is displayed throughout Microsoft Dynamics 365.</para>
        /// <para>Display Name: Time Separator</para>
        /// </summary>
        [AttributeLogicalName("timeseparator")]
        [DisplayName("Time Separator")]
        [MaxLength(5)]
        public string TimeSeparator {
            get {
                return GetAttributeValue<string>("timeseparator");
            }
            set {
                SetAttributeValue("timeseparator", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Duration used for token expiration.</para>
        /// <para>Display Name: Token Expiration Duration</para>
        /// </summary>
        [AttributeLogicalName("tokenexpiry")]
        [DisplayName("Token Expiration Duration")]
        public int? TokenExpiry {
            get {
                return GetAttributeValue<int?>("tokenexpiry");
            }
            set {
                SetAttributeValue("tokenexpiry", value);
            }
        }
        
        /// <summary>
        /// <para>Token key.</para>
        /// <para>Display Name: Token Key</para>
        /// </summary>
        [AttributeLogicalName("tokenkey")]
        [DisplayName("Token Key")]
        [MaxLength(90)]
        public string TokenKey {
            get {
                return GetAttributeValue<string>("tokenkey");
            }
            set {
                SetAttributeValue("tokenkey", value);
            }
        }
        
        /// <summary>
        /// <para>Tracelog record maximum age in days</para>
        /// <para>Display Name: Tracelog record maximum age in days</para>
        /// </summary>
        [AttributeLogicalName("tracelogmaximumageindays")]
        [DisplayName("Tracelog record maximum age in days")]
        [Range(0, 2147483647)]
        public int? TraceLogMaximumAgeInDays {
            get {
                return GetAttributeValue<int?>("tracelogmaximumageindays");
            }
            set {
                SetAttributeValue("tracelogmaximumageindays", value);
            }
        }
        
        /// <summary>
        /// <para>History list of tracking token prefixes.</para>
        /// <para>Display Name: Tracking Prefix</para>
        /// </summary>
        [AttributeLogicalName("trackingprefix")]
        [DisplayName("Tracking Prefix")]
        [MaxLength(256)]
        public string TrackingPrefix {
            get {
                return GetAttributeValue<string>("trackingprefix");
            }
            set {
                SetAttributeValue("trackingprefix", value);
            }
        }
        
        /// <summary>
        /// <para>Base number used to provide separate tracking token identifiers to users belonging to different deployments.</para>
        /// <para>Display Name: Tracking Token Base</para>
        /// </summary>
        [AttributeLogicalName("trackingtokenidbase")]
        [DisplayName("Tracking Token Base")]
        [Range(0, 2147483647)]
        public int? TrackingTokenIdBase {
            get {
                return GetAttributeValue<int?>("trackingtokenidbase");
            }
            set {
                SetAttributeValue("trackingtokenidbase", value);
            }
        }
        
        /// <summary>
        /// <para>Number of digits used to represent a tracking token identifier.</para>
        /// <para>Display Name: Tracking Token Digits</para>
        /// </summary>
        [AttributeLogicalName("trackingtokeniddigits")]
        [DisplayName("Tracking Token Digits")]
        public int? TrackingTokenIdDigits {
            get {
                return GetAttributeValue<int?>("trackingtokeniddigits");
            }
            set {
                SetAttributeValue("trackingtokeniddigits", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Number of characters appended to invoice, quote, and order numbers.</para>
        /// <para>Display Name: Unique String Length</para>
        /// </summary>
        [AttributeLogicalName("uniquespecifierlength")]
        [DisplayName("Unique String Length")]
        [Range(4, 6)]
        public int? UniqueSpecifierLength {
            get {
                return GetAttributeValue<int?>("uniquespecifierlength");
            }
            set {
                SetAttributeValue("uniquespecifierlength", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether email address should be unresolved if multiple matches are found</para>
        /// <para>Display Name: Set To,cc,bcc fields as unresolved if multiple matches are found</para>
        /// </summary>
        [AttributeLogicalName("unresolveemailaddressifmultiplematch")]
        [DisplayName("Set To,cc,bcc fields as unresolved if multiple matches are found")]
        public bool? UnresolveEmailAddressIfMultipleMatch {
            get {
                return GetAttributeValue<bool?>("unresolveemailaddressifmultiplematch");
            }
            set {
                SetAttributeValue("unresolveemailaddressifmultiplematch", value);
            }
        }
        
        /// <summary>
        /// <para>Flag indicates whether to Use Inbuilt Rule For DefaultPricelist.</para>
        /// <para>Display Name: Use Inbuilt Rule For Default Pricelist Selection</para>
        /// </summary>
        [AttributeLogicalName("useinbuiltrulefordefaultpricelistselection")]
        [DisplayName("Use Inbuilt Rule For Default Pricelist Selection")]
        public bool? UseInbuiltRuleForDefaultPricelistSelection {
            get {
                return GetAttributeValue<bool?>("useinbuiltrulefordefaultpricelistselection");
            }
            set {
                SetAttributeValue("useinbuiltrulefordefaultpricelistselection", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether to use legacy form rendering.</para>
        /// <para>Display Name: Legacy Form Rendering</para>
        /// </summary>
        [AttributeLogicalName("uselegacyrendering")]
        [DisplayName("Legacy Form Rendering")]
        public bool? UseLegacyRendering {
            get {
                return GetAttributeValue<bool?>("uselegacyrendering");
            }
            set {
                SetAttributeValue("uselegacyrendering", value);
            }
        }
        
        /// <summary>
        /// <para>Use position hierarchy</para>
        /// <para>Display Name: Use position hierarchy</para>
        /// </summary>
        [AttributeLogicalName("usepositionhierarchy")]
        [DisplayName("Use position hierarchy")]
        public bool? UsePositionHierarchy {
            get {
                return GetAttributeValue<bool?>("usepositionhierarchy");
            }
            set {
                SetAttributeValue("usepositionhierarchy", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether searching in a grid should use the Quick Find view for the entity.</para>
        /// <para>Display Name: Use Quick Find view when searching in grids</para>
        /// </summary>
        [AttributeLogicalName("usequickfindviewforgridsearch")]
        [DisplayName("Use Quick Find view when searching in grids")]
        public bool? UseQuickFindViewForGridSearch {
            get {
                return GetAttributeValue<bool?>("usequickfindviewforgridsearch");
            }
            set {
                SetAttributeValue("usequickfindviewforgridsearch", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the read-optimized form should be enabled for this organization.</para>
        /// <para>Display Name: Use Read-Optimized Form</para>
        /// </summary>
        [AttributeLogicalName("usereadform")]
        [DisplayName("Use Read-Optimized Form")]
        public bool? UseReadForm {
            get {
                return GetAttributeValue<bool?>("usereadform");
            }
            set {
                SetAttributeValue("usereadform", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates default protocol selected for organization.</para>
        /// <para>Display Name: User Skype Protocol</para>
        /// </summary>
        [AttributeLogicalName("useskypeprotocol")]
        [DisplayName("User Skype Protocol")]
        public bool? UseSkypeProtocol {
            get {
                return GetAttributeValue<bool?>("useskypeprotocol");
            }
            set {
                SetAttributeValue("useskypeprotocol", value);
            }
        }
        
        /// <summary>
        /// <para>The interval at which user access is checked for auditing.</para>
        /// <para>Display Name: User Authentication Auditing Interval</para>
        /// </summary>
        [AttributeLogicalName("useraccessauditinginterval")]
        [DisplayName("User Authentication Auditing Interval")]
        [Range(0, 2147483647)]
        public int? UserAccessAuditingInterval {
            get {
                return GetAttributeValue<int?>("useraccessauditinginterval");
            }
            set {
                SetAttributeValue("useraccessauditinginterval", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the default group of users in the organization.</para>
        /// <para>Display Name: User Group</para>
        /// </summary>
        [AttributeLogicalName("usergroupid")]
        [DisplayName("User Group")]
        public Guid? UserGroupId {
            get {
                return GetAttributeValue<Guid?>("usergroupid");
            }
            set {
                SetAttributeValue("usergroupid", value);
            }
        }
        
        /// <summary>
        /// <para>Hash of the V3 callout configuration file.</para>
        /// <para>Display Name: V3 Callout Hash</para>
        /// </summary>
        [AttributeLogicalName("v3calloutconfighash")]
        [DisplayName("V3 Callout Hash")]
        [MaxLength(256)]
        public string V3CalloutConfigHash {
            get {
                return GetAttributeValue<string>("v3calloutconfighash");
            }
        }
        
        /// <summary>
        /// <para>Version number of the organization.</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Hash value of web resources.</para>
        /// <para>Display Name: Web resource hash</para>
        /// </summary>
        [AttributeLogicalName("webresourcehash")]
        [DisplayName("Web resource hash")]
        [MaxLength(100)]
        public string WebResourceHash {
            get {
                return GetAttributeValue<string>("webresourcehash");
            }
            set {
                SetAttributeValue("webresourcehash", value);
            }
        }
        
        /// <summary>
        /// <para>Designated first day of the week throughout Microsoft Dynamics 365.</para>
        /// <para>Display Name: Week Start Day Code</para>
        /// </summary>
        [AttributeLogicalName("weekstartdaycode")]
        [DisplayName("Week Start Day Code")]
        public Object WeekStartDayCode {
            get {
                return GetAttributeValue<Object>("weekstartdaycode");
            }
            set {
                SetAttributeValue("weekstartdaycode", value);
            }
        }
        
        /// <summary>
        /// <para>For Internal use only.</para>
        /// <para>Display Name: For Internal use only.</para>
        /// </summary>
        [AttributeLogicalName("widgetproperties")]
        [DisplayName("For Internal use only.")]
        [MaxLength(100)]
        public string WidgetProperties {
            get {
                return GetAttributeValue<string>("widgetproperties");
            }
            set {
                SetAttributeValue("widgetproperties", value);
            }
        }
        
        /// <summary>
        /// <para>Denotes the Yammer group ID</para>
        /// <para>Display Name: Yammer Group Id</para>
        /// </summary>
        [AttributeLogicalName("yammergroupid")]
        [DisplayName("Yammer Group Id")]
        [Range(0, 2147483647)]
        public int? YammerGroupId {
            get {
                return GetAttributeValue<int?>("yammergroupid");
            }
            set {
                SetAttributeValue("yammergroupid", value);
            }
        }
        
        /// <summary>
        /// <para>Denotes the Yammer network permalink</para>
        /// <para>Display Name: Yammer Network Permalink</para>
        /// </summary>
        [AttributeLogicalName("yammernetworkpermalink")]
        [DisplayName("Yammer Network Permalink")]
        [MaxLength(100)]
        public string YammerNetworkPermalink {
            get {
                return GetAttributeValue<string>("yammernetworkpermalink");
            }
            set {
                SetAttributeValue("yammernetworkpermalink", value);
            }
        }
        
        /// <summary>
        /// <para>Denotes whether the OAuth access token for Yammer network has expired</para>
        /// <para>Display Name: Yammer OAuth Access Token Expired</para>
        /// </summary>
        [AttributeLogicalName("yammeroauthaccesstokenexpired")]
        [DisplayName("Yammer OAuth Access Token Expired")]
        public bool? YammerOAuthAccessTokenExpired {
            get {
                return GetAttributeValue<bool?>("yammeroauthaccesstokenexpired");
            }
            set {
                SetAttributeValue("yammeroauthaccesstokenexpired", value);
            }
        }
        
        /// <summary>
        /// <para>Internal Use Only</para>
        /// <para>Display Name: Internal Use Only</para>
        /// </summary>
        [AttributeLogicalName("yammerpostmethod")]
        [DisplayName("Internal Use Only")]
        public Organization_YammerPostMethod? YammerPostMethod {
            get {
                return GetOptionSetValue<Organization_YammerPostMethod>("yammerpostmethod");
            }
            set {
                SetOptionSetValue("yammerpostmethod", value);
            }
        }
        
        /// <summary>
        /// <para>Information that specifies how the first week of the year is specified in Microsoft Dynamics 365.</para>
        /// <para>Display Name: Year Start Week Code</para>
        /// </summary>
        [AttributeLogicalName("yearstartweekcode")]
        [DisplayName("Year Start Week Code")]
        [Range(-2147483648, 2147483647)]
        public int? YearStartWeekCode {
            get {
                return GetAttributeValue<int?>("yearstartweekcode");
            }
            set {
                SetAttributeValue("yearstartweekcode", value);
            }
        }
        
        [AttributeLogicalName("defaultemailserverprofileid")]
        [RelationshipSchemaName("EmailServerProfile_Organization")]
        public EmailServerProfile EmailServerProfile_Organization {
            get {
                return GetRelatedEntity<EmailServerProfile>("EmailServerProfile_Organization", null);
            }
            set {
                SetRelatedEntity("EmailServerProfile_Organization", null, value);
            }
        }
        
        [RelationshipSchemaName("Organization_SyncErrors")]
        public IEnumerable<SyncError> Organization_SyncErrors {
            get {
                return GetRelatedEntities<SyncError>("Organization_SyncErrors", null);
            }
            set {
                SetRelatedEntities("Organization_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("basecurrencyid")]
        [RelationshipSchemaName("basecurrency_organization")]
        public TransactionCurrency basecurrency_organization {
            get {
                return GetRelatedEntity<TransactionCurrency>("basecurrency_organization", null);
            }
            set {
                SetRelatedEntity("basecurrency_organization", null, value);
            }
        }
        
        [AttributeLogicalName("businessclosurecalendarid")]
        [RelationshipSchemaName("calendar_organization")]
        public Calendar calendar_organization {
            get {
                return GetRelatedEntity<Calendar>("calendar_organization", null);
            }
            set {
                SetRelatedEntity("calendar_organization", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_organization_createdonbehalfby")]
        public SystemUser lk_organization_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_organization_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_organization_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_organization_modifiedonbehalfby")]
        public SystemUser lk_organization_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_organization_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_organization_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_organizationbase_createdby")]
        public SystemUser lk_organizationbase_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_organizationbase_createdby", null);
            }
            set {
                SetRelatedEntity("lk_organizationbase_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_organizationbase_modifiedby")]
        public SystemUser lk_organizationbase_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_organizationbase_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_organizationbase_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("organization_business_units")]
        public IEnumerable<BusinessUnit> organization_business_units {
            get {
                return GetRelatedEntities<BusinessUnit>("organization_business_units", null);
            }
            set {
                SetRelatedEntities("organization_business_units", null, value);
            }
        }
        
        [RelationshipSchemaName("organization_calendars")]
        public IEnumerable<Calendar> organization_calendars {
            get {
                return GetRelatedEntities<Calendar>("organization_calendars", null);
            }
            set {
                SetRelatedEntities("organization_calendars", null, value);
            }
        }
        
        [RelationshipSchemaName("organization_emailserverprofile")]
        public IEnumerable<EmailServerProfile> organization_emailserverprofile {
            get {
                return GetRelatedEntities<EmailServerProfile>("organization_emailserverprofile", null);
            }
            set {
                SetRelatedEntities("organization_emailserverprofile", null, value);
            }
        }
        
        [RelationshipSchemaName("organization_mailbox")]
        public IEnumerable<Mailbox> organization_mailbox {
            get {
                return GetRelatedEntities<Mailbox>("organization_mailbox", null);
            }
            set {
                SetRelatedEntities("organization_mailbox", null, value);
            }
        }
        
        [RelationshipSchemaName("organization_opportunitysalesprocess")]
        public IEnumerable<OpportunitySalesProcess> organization_opportunitysalesprocess {
            get {
                return GetRelatedEntities<OpportunitySalesProcess>("organization_opportunitysalesprocess", null);
            }
            set {
                SetRelatedEntities("organization_opportunitysalesprocess", null, value);
            }
        }
        
        [RelationshipSchemaName("organization_queueitems")]
        public IEnumerable<QueueItem> organization_queueitems {
            get {
                return GetRelatedEntities<QueueItem>("organization_queueitems", null);
            }
            set {
                SetRelatedEntities("organization_queueitems", null, value);
            }
        }
        
        [RelationshipSchemaName("organization_system_users")]
        public IEnumerable<SystemUser> organization_system_users {
            get {
                return GetRelatedEntities<SystemUser>("organization_system_users", null);
            }
            set {
                SetRelatedEntities("organization_system_users", null, value);
            }
        }
        
        [RelationshipSchemaName("organization_teams")]
        public IEnumerable<Team> organization_teams {
            get {
                return GetRelatedEntities<Team>("organization_teams", null);
            }
            set {
                SetRelatedEntities("organization_teams", null, value);
            }
        }
        
        [RelationshipSchemaName("organization_transactioncurrencies")]
        public IEnumerable<TransactionCurrency> organization_transactioncurrencies {
            get {
                return GetRelatedEntities<TransactionCurrency>("organization_transactioncurrencies", null);
            }
            set {
                SetRelatedEntities("organization_transactioncurrencies", null, value);
            }
        }
        
        public static Organization Retrieve(IOrganizationService service, Guid id, params Expression<Func<Organization,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Activity to track a telephone call.</para>
    /// <para>Display Name: Phone Call</para>
    /// </summary>
    [EntityLogicalName("phonecall")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class PhoneCall : ExtendedEntity<PhoneCallState, PhoneCall_StatusCode> {
        
        public const string EntityLogicalName = "phonecall";
        
        public const int EntityTypeCode = 4210;
        
        public PhoneCall() : 
                base(EntityLogicalName) {
        }
        
        public PhoneCall(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("subject");
            }
        }
        
        [AttributeLogicalName("activityid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("activityid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the phone call activity.</para>
        /// <para>Display Name: Phone Call</para>
        /// </summary>
        [AttributeLogicalName("activityid")]
        [DisplayName("Phone Call")]
        public Guid? ActivityId {
            get {
                return GetAttributeValue<Guid?>("activityid");
            }
            set {
                SetId("activityid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Additional Parameters</para>
        /// </summary>
        [AttributeLogicalName("activityadditionalparams")]
        [DisplayName("Additional Parameters")]
        public string ActivityAdditionalParams {
            get {
                return GetAttributeValue<string>("activityadditionalparams");
            }
            set {
                SetAttributeValue("activityadditionalparams", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the type of activity.</para>
        /// <para>Display Name: Activity Type</para>
        /// </summary>
        [AttributeLogicalName("activitytypecode")]
        [DisplayName("Activity Type")]
        public string ActivityTypeCode {
            get {
                return GetAttributeValue<string>("activitytypecode");
            }
        }
        
        /// <summary>
        /// <para>Type the number of minutes spent on the phone call. The duration is used in reporting.</para>
        /// <para>Display Name: Duration</para>
        /// </summary>
        [AttributeLogicalName("actualdurationminutes")]
        [DisplayName("Duration")]
        [Range(0, 2147483647)]
        public int? ActualDurationMinutes {
            get {
                return GetAttributeValue<int?>("actualdurationminutes");
            }
            set {
                SetAttributeValue("actualdurationminutes", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the actual end date and time of the phone call. By default, it displays the date and time when the activity was completed or canceled, but can be edited to capture the actual duration of the phone call.</para>
        /// <para>Display Name: Actual End</para>
        /// </summary>
        [AttributeLogicalName("actualend")]
        [DisplayName("Actual End")]
        public DateTime? ActualEnd {
            get {
                return GetAttributeValue<DateTime?>("actualend");
            }
            set {
                SetAttributeValue("actualend", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the actual start date and time for the phone call. By default, it displays the date and time when the activity was created, but can be edited to capture the actual duration of the phone call.</para>
        /// <para>Display Name: Actual Start</para>
        /// </summary>
        [AttributeLogicalName("actualstart")]
        [DisplayName("Actual Start")]
        public DateTime? ActualStart {
            get {
                return GetAttributeValue<DateTime?>("actualstart");
            }
            set {
                SetAttributeValue("actualstart", value);
            }
        }
        
        /// <summary>
        /// <para>Type a category to identify the phone call type, such as lead gathering or customer follow-up, to tie the phone call to a business group or function.</para>
        /// <para>Display Name: Category</para>
        /// </summary>
        [AttributeLogicalName("category")]
        [DisplayName("Category")]
        [MaxLength(250)]
        public string Category {
            get {
                return GetAttributeValue<string>("category");
            }
            set {
                SetAttributeValue("category", value);
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record on behalf of another user.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Type additional information to describe the phone call, such as the primary message or the products and services discussed.</para>
        /// <para>Display Name: Description</para>
        /// </summary>
        [AttributeLogicalName("description")]
        [DisplayName("Description")]
        public string Description {
            get {
                return GetAttributeValue<string>("description");
            }
            set {
                SetAttributeValue("description", value);
            }
        }
        
        /// <summary>
        /// <para>Select the direction of the phone call as incoming or outbound.</para>
        /// <para>Display Name: Direction</para>
        /// </summary>
        [AttributeLogicalName("directioncode")]
        [DisplayName("Direction")]
        public bool? DirectionCode {
            get {
                return GetAttributeValue<bool?>("directioncode");
            }
            set {
                SetAttributeValue("directioncode", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("Exchange Rate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Enter the account, contact, lead, or user who made the phone call.</para>
        /// <para>Display Name: Call From</para>
        /// </summary>
        [AttributeLogicalName("from")]
        [DisplayName("Call From")]
        public IEnumerable<ActivityParty> From {
            get {
                return GetEntityCollection<ActivityParty>("from");
            }
            set {
                SetEntityCollection("from", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the data import or data migration that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Information which specifies whether the phone call activity was billed as part of resolving a case.</para>
        /// <para>Display Name: Is Billed</para>
        /// </summary>
        [AttributeLogicalName("isbilled")]
        [DisplayName("Is Billed")]
        public bool? IsBilled {
            get {
                return GetAttributeValue<bool?>("isbilled");
            }
            set {
                SetAttributeValue("isbilled", value);
            }
        }
        
        /// <summary>
        /// <para>Information regarding whether the activity is a regular activity type or event type.</para>
        /// <para>Display Name: Is Regular Activity</para>
        /// </summary>
        [AttributeLogicalName("isregularactivity")]
        [DisplayName("Is Regular Activity")]
        public bool? IsRegularActivity {
            get {
                return GetAttributeValue<bool?>("isregularactivity");
            }
        }
        
        /// <summary>
        /// <para>Indication which specifies if the phone call activity was created by a workflow rule.</para>
        /// <para>Display Name: Is Workflow Created</para>
        /// </summary>
        [AttributeLogicalName("isworkflowcreated")]
        [DisplayName("Is Workflow Created")]
        public bool? IsWorkflowCreated {
            get {
                return GetAttributeValue<bool?>("isworkflowcreated");
            }
            set {
                SetAttributeValue("isworkflowcreated", value);
            }
        }
        
        /// <summary>
        /// <para>Contains the date and time stamp of the last on hold time.</para>
        /// <para>Display Name: Last On Hold Time</para>
        /// </summary>
        [AttributeLogicalName("lastonholdtime")]
        [DisplayName("Last On Hold Time")]
        public DateTime? LastOnHoldTime {
            get {
                return GetAttributeValue<DateTime?>("lastonholdtime");
            }
            set {
                SetAttributeValue("lastonholdtime", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether a voice mail was left for the person.</para>
        /// <para>Display Name: Left Voice Mail</para>
        /// </summary>
        [AttributeLogicalName("leftvoicemail")]
        [DisplayName("Left Voice Mail")]
        public bool? LeftVoiceMail {
            get {
                return GetAttributeValue<bool?>("leftvoicemail");
            }
            set {
                SetAttributeValue("leftvoicemail", value);
            }
        }
        
        /// <summary>
        /// <para>Shows who last updated the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Shows who last updated the record on behalf of another user.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Shows how long, in minutes, that the record was on hold.</para>
        /// <para>Display Name: On Hold Time (Minutes)</para>
        /// </summary>
        [AttributeLogicalName("onholdtime")]
        [DisplayName("On Hold Time (Minutes)")]
        [Range(-2147483648, 2147483647)]
        public int? OnHoldTime {
            get {
                return GetAttributeValue<int?>("onholdtime");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the user or team who is assigned to manage the record. This field is updated every time the record is assigned to a different user.</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the business unit that owns the phone call activity.</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the team that owns the phone call activity.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user that owns the phone call activity.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Type the phone number.</para>
        /// <para>Display Name: Phone Number</para>
        /// </summary>
        [AttributeLogicalName("phonenumber")]
        [DisplayName("Phone Number")]
        [MaxLength(200)]
        public string PhoneNumber {
            get {
                return GetAttributeValue<string>("phonenumber");
            }
            set {
                SetAttributeValue("phonenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Type a short description about the objective or primary topic of the phone call.</para>
        /// <para>Display Name: Subject</para>
        /// </summary>
        [AttributeLogicalName("subject")]
        [DisplayName("Subject")]
        [MaxLength(200)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("subject");
            }
            set {
                SetAttributeValue("subject", value);
            }
        }
        
        /// <summary>
        /// <para>Select the priority so that preferred customers or critical issues are handled quickly.</para>
        /// <para>Display Name: Priority</para>
        /// </summary>
        [AttributeLogicalName("prioritycode")]
        [DisplayName("Priority")]
        public PhoneCall_PriorityCode? PriorityCode {
            get {
                return GetOptionSetValue<PhoneCall_PriorityCode>("prioritycode");
            }
            set {
                SetOptionSetValue("prioritycode", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the process.</para>
        /// <para>Display Name: Process</para>
        /// </summary>
        [AttributeLogicalName("processid")]
        [DisplayName("Process")]
        public Guid? ProcessId {
            get {
                return GetAttributeValue<Guid?>("processid");
            }
            set {
                SetAttributeValue("processid", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the record that the phone call relates to.</para>
        /// <para>Display Name: Regarding</para>
        /// </summary>
        [AttributeLogicalName("regardingobjectid")]
        [DisplayName("Regarding")]
        public EntityReference RegardingObjectId {
            get {
                return GetAttributeValue<EntityReference>("regardingobjectid");
            }
            set {
                SetAttributeValue("regardingobjectid", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the service level agreement (SLA) that you want to apply to the Phone Call record.</para>
        /// <para>Display Name: SLA</para>
        /// </summary>
        [AttributeLogicalName("slaid")]
        [DisplayName("SLA")]
        public EntityReference SLAId {
            get {
                return GetAttributeValue<EntityReference>("slaid");
            }
            set {
                SetAttributeValue("slaid", value);
            }
        }
        
        /// <summary>
        /// <para>Last SLA that was applied to this Phone Call. This field is for internal use only.</para>
        /// <para>Display Name: Last SLA applied</para>
        /// </summary>
        [AttributeLogicalName("slainvokedid")]
        [DisplayName("Last SLA applied")]
        public EntityReference SLAInvokedId {
            get {
                return GetAttributeValue<EntityReference>("slainvokedid");
            }
        }
        
        /// <summary>
        /// <para>Scheduled duration of the phone call activity, specified in minutes.</para>
        /// <para>Display Name: Scheduled Duration</para>
        /// </summary>
        [AttributeLogicalName("scheduleddurationminutes")]
        [DisplayName("Scheduled Duration")]
        [Range(0, 2147483647)]
        public int? ScheduledDurationMinutes {
            get {
                return GetAttributeValue<int?>("scheduleddurationminutes");
            }
        }
        
        /// <summary>
        /// <para>Enter the expected due date and time.</para>
        /// <para>Display Name: Due</para>
        /// </summary>
        [AttributeLogicalName("scheduledend")]
        [DisplayName("Due")]
        public DateTime? ScheduledEnd {
            get {
                return GetAttributeValue<DateTime?>("scheduledend");
            }
            set {
                SetAttributeValue("scheduledend", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the expected due date and time.</para>
        /// <para>Display Name: Start Date</para>
        /// </summary>
        [AttributeLogicalName("scheduledstart")]
        [DisplayName("Start Date")]
        public DateTime? ScheduledStart {
            get {
                return GetAttributeValue<DateTime?>("scheduledstart");
            }
            set {
                SetAttributeValue("scheduledstart", value);
            }
        }
        
        /// <summary>
        /// <para>service_phonecalls</para>
        /// <para>Display Name: Service</para>
        /// </summary>
        [AttributeLogicalName("serviceid")]
        [DisplayName("Service")]
        public EntityReference ServiceId {
            get {
                return GetAttributeValue<EntityReference>("serviceid");
            }
            set {
                SetAttributeValue("serviceid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time by which the activities are sorted.</para>
        /// <para>Display Name: Sort Date</para>
        /// </summary>
        [AttributeLogicalName("sortdate")]
        [DisplayName("Sort Date")]
        public DateTime? SortDate {
            get {
                return GetAttributeValue<DateTime?>("sortdate");
            }
            set {
                SetAttributeValue("sortdate", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the stage.</para>
        /// <para>Display Name: (Deprecated) Process Stage</para>
        /// </summary>
        [AttributeLogicalName("stageid")]
        [DisplayName("(Deprecated) Process Stage")]
        public Guid? StageId {
            get {
                return GetAttributeValue<Guid?>("stageid");
            }
            set {
                SetAttributeValue("stageid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows whether the phone call is open, completed, or canceled. Completed and canceled phone calls are read-only and can't be edited.</para>
        /// <para>Display Name: Activity Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Activity Status")]
        public PhoneCallState? StateCode {
            get {
                return GetOptionSetValue<PhoneCallState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the phone call's status.</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public PhoneCall_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<PhoneCall_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>Type a subcategory to identify the phone call type and relate the activity to a specific product, sales region, business group, or other function.</para>
        /// <para>Display Name: Sub-Category</para>
        /// </summary>
        [AttributeLogicalName("subcategory")]
        [DisplayName("Sub-Category")]
        [MaxLength(250)]
        public string Subcategory {
            get {
                return GetAttributeValue<string>("subcategory");
            }
            set {
                SetAttributeValue("subcategory", value);
            }
        }
        
        /// <summary>
        /// <para>Type a short description about the objective or primary topic of the phone call.</para>
        /// <para>Display Name: Subject</para>
        /// </summary>
        [AttributeLogicalName("subject")]
        [DisplayName("Subject")]
        [MaxLength(200)]
        public string Subject {
            get {
                return GetAttributeValue<string>("subject");
            }
            set {
                SetAttributeValue("subject", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Subscription</para>
        /// </summary>
        [AttributeLogicalName("subscriptionid")]
        [DisplayName("Subscription")]
        public Guid? SubscriptionId {
            get {
                return GetAttributeValue<Guid?>("subscriptionid");
            }
            set {
                SetAttributeValue("subscriptionid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the account, contact, lead, or user recipients of the phone call.</para>
        /// <para>Display Name: Call To</para>
        /// </summary>
        [AttributeLogicalName("to")]
        [DisplayName("Call To")]
        public IEnumerable<ActivityParty> To {
            get {
                return GetEntityCollection<ActivityParty>("to");
            }
            set {
                SetEntityCollection("to", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the local currency for the record to make sure budgets are reported in the correct currency.</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: (Deprecated) Traversed Path</para>
        /// </summary>
        [AttributeLogicalName("traversedpath")]
        [DisplayName("(Deprecated) Traversed Path")]
        [MaxLength(1250)]
        public string TraversedPath {
            get {
                return GetAttributeValue<string>("traversedpath");
            }
            set {
                SetAttributeValue("traversedpath", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version number of the phone call activity.</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Display Name: ci_call_summary_control_field</para>
        /// </summary>
        [AttributeLogicalName("msdyn_ci_call_summary_control_field")]
        [DisplayName("ci_call_summary_control_field")]
        [Range(-2147483648, 2147483647)]
        public int? msdyn_ci_call_summary_control_field {
            get {
                return GetAttributeValue<int?>("msdyn_ci_call_summary_control_field");
            }
            set {
                SetAttributeValue("msdyn_ci_call_summary_control_field", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Conversation Id</para>
        /// </summary>
        [AttributeLogicalName("msdyn_ci_id")]
        [DisplayName("Conversation Id")]
        [MaxLength(100)]
        public string msdyn_ci_id {
            get {
                return GetAttributeValue<string>("msdyn_ci_id");
            }
            set {
                SetAttributeValue("msdyn_ci_id", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Insights Json</para>
        /// </summary>
        [AttributeLogicalName("msdyn_ci_insights_json")]
        [DisplayName("Insights Json")]
        public string msdyn_ci_insights_json {
            get {
                return GetAttributeValue<string>("msdyn_ci_insights_json");
            }
            set {
                SetAttributeValue("msdyn_ci_insights_json", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Conversation Keywords</para>
        /// </summary>
        [AttributeLogicalName("msdyn_ci_keywords")]
        [DisplayName("Conversation Keywords")]
        [MaxLength(4000)]
        public string msdyn_ci_keywords {
            get {
                return GetAttributeValue<string>("msdyn_ci_keywords");
            }
            set {
                SetAttributeValue("msdyn_ci_keywords", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Media Reference Id</para>
        /// </summary>
        [AttributeLogicalName("msdyn_ci_media_reference_id")]
        [DisplayName("Media Reference Id")]
        [MaxLength(1024)]
        public string msdyn_ci_media_reference_id {
            get {
                return GetAttributeValue<string>("msdyn_ci_media_reference_id");
            }
            set {
                SetAttributeValue("msdyn_ci_media_reference_id", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: CI Transcript</para>
        /// </summary>
        [AttributeLogicalName("msdyn_ci_transcript")]
        [DisplayName("CI Transcript")]
        public string msdyn_ci_transcript {
            get {
                return GetAttributeValue<string>("msdyn_ci_transcript");
            }
            set {
                SetAttributeValue("msdyn_ci_transcript", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Transcript Json</para>
        /// </summary>
        [AttributeLogicalName("msdyn_ci_transcript_json")]
        [DisplayName("Transcript Json")]
        public string msdyn_ci_transcript_json {
            get {
                return GetAttributeValue<string>("msdyn_ci_transcript_json");
            }
            set {
                SetAttributeValue("msdyn_ci_transcript_json", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: CI Translated Transcript</para>
        /// </summary>
        [AttributeLogicalName("msdyn_ci_translated_transcript")]
        [DisplayName("CI Translated Transcript")]
        public string msdyn_ci_translated_transcript {
            get {
                return GetAttributeValue<string>("msdyn_ci_translated_transcript");
            }
            set {
                SetAttributeValue("msdyn_ci_translated_transcript", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Translated Transcript Json</para>
        /// </summary>
        [AttributeLogicalName("msdyn_ci_translated_transcript_json")]
        [DisplayName("Translated Transcript Json")]
        public string msdyn_ci_translated_transcript_json {
            get {
                return GetAttributeValue<string>("msdyn_ci_translated_transcript_json");
            }
            set {
                SetAttributeValue("msdyn_ci_translated_transcript_json", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Conversation Url</para>
        /// </summary>
        [AttributeLogicalName("msdyn_ci_url")]
        [DisplayName("Conversation Url")]
        [MaxLength(1024)]
        public string msdyn_ci_url {
            get {
                return GetAttributeValue<string>("msdyn_ci_url");
            }
            set {
                SetAttributeValue("msdyn_ci_url", value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Account_Phonecalls")]
        public Account Account_Phonecalls {
            get {
                return GetRelatedEntity<Account>("Account_Phonecalls", null);
            }
            set {
                SetRelatedEntity("Account_Phonecalls", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("CampaignActivity_Phonecalls")]
        public CampaignActivity CampaignActivity_Phonecalls {
            get {
                return GetRelatedEntity<CampaignActivity>("CampaignActivity_Phonecalls", null);
            }
            set {
                SetRelatedEntity("CampaignActivity_Phonecalls", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Campaign_Phonecalls")]
        public Campaign Campaign_Phonecalls {
            get {
                return GetRelatedEntity<Campaign>("Campaign_Phonecalls", null);
            }
            set {
                SetRelatedEntity("Campaign_Phonecalls", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Contact_Phonecalls")]
        public Contact Contact_Phonecalls {
            get {
                return GetRelatedEntity<Contact>("Contact_Phonecalls", null);
            }
            set {
                SetRelatedEntity("Contact_Phonecalls", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Contract_Phonecalls")]
        public Contract Contract_Phonecalls {
            get {
                return GetRelatedEntity<Contract>("Contract_Phonecalls", null);
            }
            set {
                SetRelatedEntity("Contract_Phonecalls", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Incident_Phonecalls")]
        public Incident Incident_Phonecalls {
            get {
                return GetRelatedEntity<Incident>("Incident_Phonecalls", null);
            }
            set {
                SetRelatedEntity("Incident_Phonecalls", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Invoice_Phonecalls")]
        public Invoice Invoice_Phonecalls {
            get {
                return GetRelatedEntity<Invoice>("Invoice_Phonecalls", null);
            }
            set {
                SetRelatedEntity("Invoice_Phonecalls", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("KnowledgeArticle_Phonecalls")]
        public KnowledgeArticle KnowledgeArticle_Phonecalls {
            get {
                return GetRelatedEntity<KnowledgeArticle>("KnowledgeArticle_Phonecalls", null);
            }
            set {
                SetRelatedEntity("KnowledgeArticle_Phonecalls", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Lead_Phonecalls")]
        public Lead Lead_Phonecalls {
            get {
                return GetRelatedEntity<Lead>("Lead_Phonecalls", null);
            }
            set {
                SetRelatedEntity("Lead_Phonecalls", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Opportunity_Phonecalls")]
        public Opportunity Opportunity_Phonecalls {
            get {
                return GetRelatedEntity<Opportunity>("Opportunity_Phonecalls", null);
            }
            set {
                SetRelatedEntity("Opportunity_Phonecalls", null, value);
            }
        }
        
        [RelationshipSchemaName("PhoneCall_QueueItem")]
        public IEnumerable<QueueItem> PhoneCall_QueueItem {
            get {
                return GetRelatedEntities<QueueItem>("PhoneCall_QueueItem", null);
            }
            set {
                SetRelatedEntities("PhoneCall_QueueItem", null, value);
            }
        }
        
        [RelationshipSchemaName("PhoneCall_SyncErrors")]
        public IEnumerable<SyncError> PhoneCall_SyncErrors {
            get {
                return GetRelatedEntities<SyncError>("PhoneCall_SyncErrors", null);
            }
            set {
                SetRelatedEntities("PhoneCall_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Quote_Phonecalls")]
        public Quote Quote_Phonecalls {
            get {
                return GetRelatedEntity<Quote>("Quote_Phonecalls", null);
            }
            set {
                SetRelatedEntity("Quote_Phonecalls", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("SalesOrder_Phonecalls")]
        public SalesOrder SalesOrder_Phonecalls {
            get {
                return GetRelatedEntity<SalesOrder>("SalesOrder_Phonecalls", null);
            }
            set {
                SetRelatedEntity("SalesOrder_Phonecalls", null, value);
            }
        }
        
        [AttributeLogicalName("transactioncurrencyid")]
        [RelationshipSchemaName("TransactionCurrency_PhoneCall")]
        public TransactionCurrency TransactionCurrency_PhoneCall {
            get {
                return GetRelatedEntity<TransactionCurrency>("TransactionCurrency_PhoneCall", null);
            }
            set {
                SetRelatedEntity("TransactionCurrency_PhoneCall", null, value);
            }
        }
        
        [AttributeLogicalName("activityid")]
        [RelationshipSchemaName("activity_pointer_phonecall")]
        public ActivityPointer activity_pointer_phonecall {
            get {
                return GetRelatedEntity<ActivityPointer>("activity_pointer_phonecall", null);
            }
            set {
                SetRelatedEntity("activity_pointer_phonecall", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("bookableresourcebooking_PhoneCalls")]
        public BookableResourceBooking bookableresourcebooking_PhoneCalls {
            get {
                return GetRelatedEntity<BookableResourceBooking>("bookableresourcebooking_PhoneCalls", null);
            }
            set {
                SetRelatedEntity("bookableresourcebooking_PhoneCalls", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("bookableresourcebookingheader_PhoneCalls")]
        public BookableResourceBookingHeader bookableresourcebookingheader_PhoneCalls {
            get {
                return GetRelatedEntity<BookableResourceBookingHeader>("bookableresourcebookingheader_PhoneCalls", null);
            }
            set {
                SetRelatedEntity("bookableresourcebookingheader_PhoneCalls", null, value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_phone_call_activities")]
        public BusinessUnit business_unit_phone_call_activities {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_phone_call_activities", null);
            }
            set {
                SetRelatedEntity("business_unit_phone_call_activities", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("dg_event_PhoneCalls")]
        public dg_event dg_event_PhoneCalls {
            get {
                return GetRelatedEntity<dg_event>("dg_event_PhoneCalls", null);
            }
            set {
                SetRelatedEntity("dg_event_PhoneCalls", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("dg_participant_PhoneCalls")]
        public dg_participant dg_participant_PhoneCalls {
            get {
                return GetRelatedEntity<dg_participant>("dg_participant_PhoneCalls", null);
            }
            set {
                SetRelatedEntity("dg_participant_PhoneCalls", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("entitlement_PhoneCalls")]
        public Entitlement entitlement_PhoneCalls {
            get {
                return GetRelatedEntity<Entitlement>("entitlement_PhoneCalls", null);
            }
            set {
                SetRelatedEntity("entitlement_PhoneCalls", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_phonecall_createdby")]
        public SystemUser lk_phonecall_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_phonecall_createdby", null);
            }
            set {
                SetRelatedEntity("lk_phonecall_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_phonecall_createdonbehalfby")]
        public SystemUser lk_phonecall_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_phonecall_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_phonecall_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_phonecall_modifiedby")]
        public SystemUser lk_phonecall_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_phonecall_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_phonecall_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_phonecall_modifiedonbehalfby")]
        public SystemUser lk_phonecall_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_phonecall_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_phonecall_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("slaid")]
        [RelationshipSchemaName("manualsla_phonecall")]
        public SLA manualsla_phonecall {
            get {
                return GetRelatedEntity<SLA>("manualsla_phonecall", null);
            }
            set {
                SetRelatedEntity("manualsla_phonecall", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("msdyn_agreement_PhoneCalls")]
        public msdyn_agreement msdyn_agreement_PhoneCalls {
            get {
                return GetRelatedEntity<msdyn_agreement>("msdyn_agreement_PhoneCalls", null);
            }
            set {
                SetRelatedEntity("msdyn_agreement_PhoneCalls", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("msdyn_postalbum_PhoneCalls")]
        public msdyn_PostAlbum msdyn_postalbum_PhoneCalls {
            get {
                return GetRelatedEntity<msdyn_PostAlbum>("msdyn_postalbum_PhoneCalls", null);
            }
            set {
                SetRelatedEntity("msdyn_postalbum_PhoneCalls", null, value);
            }
        }
        
        [RelationshipSchemaName("phonecall_activity_parties")]
        public IEnumerable<ActivityParty> phonecall_activity_parties {
            get {
                return GetRelatedEntities<ActivityParty>("phonecall_activity_parties", null);
            }
            set {
                SetRelatedEntities("phonecall_activity_parties", null, value);
            }
        }
        
        [RelationshipSchemaName("phonecall_campaignresponse")]
        public IEnumerable<CampaignResponse> phonecall_campaignresponse {
            get {
                return GetRelatedEntities<CampaignResponse>("phonecall_campaignresponse", null);
            }
            set {
                SetRelatedEntities("phonecall_campaignresponse", null, value);
            }
        }
        
        [RelationshipSchemaName("phonecall_connections1")]
        public IEnumerable<Connection> phonecall_connections1 {
            get {
                return GetRelatedEntities<Connection>("phonecall_connections1", null);
            }
            set {
                SetRelatedEntities("phonecall_connections1", null, value);
            }
        }
        
        [RelationshipSchemaName("phonecall_connections2")]
        public IEnumerable<Connection> phonecall_connections2 {
            get {
                return GetRelatedEntities<Connection>("phonecall_connections2", null);
            }
            set {
                SetRelatedEntities("phonecall_connections2", null, value);
            }
        }
        
        [AttributeLogicalName("slainvokedid")]
        [RelationshipSchemaName("sla_phonecall")]
        public SLA sla_phonecall {
            get {
                return GetRelatedEntity<SLA>("sla_phonecall", null);
            }
            set {
                SetRelatedEntity("sla_phonecall", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_phonecall")]
        public Team team_phonecall {
            get {
                return GetRelatedEntity<Team>("team_phonecall", null);
            }
            set {
                SetRelatedEntity("team_phonecall", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_phonecall")]
        public SystemUser user_phonecall {
            get {
                return GetRelatedEntity<SystemUser>("user_phonecall", null);
            }
            set {
                SetRelatedEntity("user_phonecall", null, value);
            }
        }
        
        public static PhoneCall Retrieve(IOrganizationService service, Guid id, params Expression<Func<PhoneCall,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>A specific item in a queue, such as a case record or an activity record.</para>
    /// <para>Display Name: Queue Item</para>
    /// </summary>
    [EntityLogicalName("queueitem")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class QueueItem : ExtendedEntity<QueueItemState, QueueItem_StatusCode> {
        
        public const string EntityLogicalName = "queueitem";
        
        public const int EntityTypeCode = 2029;
        
        public QueueItem() : 
                base(EntityLogicalName) {
        }
        
        public QueueItem(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("title");
            }
        }
        
        [AttributeLogicalName("queueitemid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("queueitemid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the queue item.</para>
        /// <para>Display Name: Queue Item</para>
        /// </summary>
        [AttributeLogicalName("queueitemid")]
        [DisplayName("Queue Item")]
        public Guid? QueueItemId {
            get {
                return GetAttributeValue<Guid?>("queueitemid");
            }
            set {
                SetId("queueitemid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record on behalf of another user.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Shows the date the record was assigned to the queue.</para>
        /// <para>Display Name: Entered Queue</para>
        /// </summary>
        [AttributeLogicalName("enteredon")]
        [DisplayName("Entered Queue")]
        public DateTime? EnteredOn {
            get {
                return GetAttributeValue<DateTime?>("enteredon");
            }
        }
        
        /// <summary>
        /// <para>Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("Exchange Rate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the data import or data migration that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Shows who last updated the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who last modified the queueitem.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>ServiceAppointment_QueueItem</para>
        /// <para>Display Name: Object</para>
        /// </summary>
        [AttributeLogicalName("objectid")]
        [DisplayName("Object")]
        public EntityReference ObjectId {
            get {
                return GetAttributeValue<EntityReference>("objectid");
            }
            set {
                SetAttributeValue("objectid", value);
            }
        }
        
        /// <summary>
        /// <para>Select the type of the queue item, such as activity, case, or appointment.</para>
        /// <para>Display Name: Type</para>
        /// </summary>
        [AttributeLogicalName("objecttypecode")]
        [DisplayName("Type")]
        public QueueItem_ObjectTypeCode? ObjectTypeCode {
            get {
                return GetOptionSetValue<QueueItem_ObjectTypeCode>("objecttypecode");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the organization with which the queue item is associated.</para>
        /// <para>Display Name: Organization</para>
        /// </summary>
        [AttributeLogicalName("organizationid")]
        [DisplayName("Organization")]
        public EntityReference OrganizationId {
            get {
                return GetAttributeValue<EntityReference>("organizationid");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user or team who owns the queue item.</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the business unit that owns the queue item.</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who owns the queue item.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Shows the title or name that describes the queue record. This value is copied from the record that was assigned to the queue.</para>
        /// <para>Display Name: Title</para>
        /// </summary>
        [AttributeLogicalName("title")]
        [DisplayName("Title")]
        [MaxLength(300)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("title");
            }
        }
        
        /// <summary>
        /// <para>Priority of the queue item.</para>
        /// <para>Display Name: Priority</para>
        /// </summary>
        [AttributeLogicalName("priority")]
        [DisplayName("Priority")]
        [Range(0, 1000000000)]
        public int? Priority {
            get {
                return GetAttributeValue<int?>("priority");
            }
            set {
                SetAttributeValue("priority", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the queue that the item is assigned to.</para>
        /// <para>Display Name: Queue</para>
        /// </summary>
        [AttributeLogicalName("queueid")]
        [DisplayName("Queue")]
        public EntityReference QueueId {
            get {
                return GetAttributeValue<EntityReference>("queueid");
            }
            set {
                SetAttributeValue("queueid", value);
            }
        }
        
        /// <summary>
        /// <para>Sender who created the queue item.</para>
        /// <para>Display Name: From</para>
        /// </summary>
        [AttributeLogicalName("sender")]
        [DisplayName("From")]
        [MaxLength(250)]
        public string Sender {
            get {
                return GetAttributeValue<string>("sender");
            }
            set {
                SetAttributeValue("sender", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the queue item.</para>
        /// <para>Display Name: Status (deprecated)</para>
        /// </summary>
        [AttributeLogicalName("state")]
        [DisplayName("Status (deprecated)")]
        [Range(0, 1000000000)]
        public int? State {
            get {
                return GetAttributeValue<int?>("state");
            }
            set {
                SetAttributeValue("state", value);
            }
        }
        
        /// <summary>
        /// <para>Shows whether the queue record is active or inactive. Inactive queue records are read-only and can't be edited unless they are reactivated.</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public QueueItemState? StateCode {
            get {
                return GetOptionSetValue<QueueItemState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the queue item.</para>
        /// <para>Display Name: Status Reason (deprecated)</para>
        /// </summary>
        [AttributeLogicalName("status")]
        [DisplayName("Status Reason (deprecated)")]
        [Range(0, 1000000000)]
        public int? Status {
            get {
                return GetAttributeValue<int?>("status");
            }
            set {
                SetAttributeValue("status", value);
            }
        }
        
        /// <summary>
        /// <para>Select the item's status.</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public QueueItem_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<QueueItem_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the title or name that describes the queue record. This value is copied from the record that was assigned to the queue.</para>
        /// <para>Display Name: Title</para>
        /// </summary>
        [AttributeLogicalName("title")]
        [DisplayName("Title")]
        [MaxLength(300)]
        public string Title {
            get {
                return GetAttributeValue<string>("title");
            }
        }
        
        /// <summary>
        /// <para>Recipients listed on the To line of the message for email queue items.</para>
        /// <para>Display Name: To</para>
        /// </summary>
        [AttributeLogicalName("torecipients")]
        [DisplayName("To")]
        [MaxLength(500)]
        public string ToRecipients {
            get {
                return GetAttributeValue<string>("torecipients");
            }
            set {
                SetAttributeValue("torecipients", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the local currency for the record to make sure budgets are reported in the correct currency.</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version number of the queue item.</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Shows who is working on the queue item.</para>
        /// <para>Display Name: Worked By</para>
        /// </summary>
        [AttributeLogicalName("workerid")]
        [DisplayName("Worked By")]
        public EntityReference WorkerId {
            get {
                return GetAttributeValue<EntityReference>("workerid");
            }
            set {
                SetAttributeValue("workerid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the queue item was last assigned to a user.</para>
        /// <para>Display Name: Worked On</para>
        /// </summary>
        [AttributeLogicalName("workeridmodifiedon")]
        [DisplayName("Worked On")]
        public DateTime? WorkerIdModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("workeridmodifiedon");
            }
        }
        
        [AttributeLogicalName("objectid")]
        [RelationshipSchemaName("ActivityPointer_QueueItem")]
        public ActivityPointer ActivityPointer_QueueItem {
            get {
                return GetRelatedEntity<ActivityPointer>("ActivityPointer_QueueItem", null);
            }
            set {
                SetRelatedEntity("ActivityPointer_QueueItem", null, value);
            }
        }
        
        [AttributeLogicalName("objectid")]
        [RelationshipSchemaName("Appointment_QueueItem")]
        public Appointment Appointment_QueueItem {
            get {
                return GetRelatedEntity<Appointment>("Appointment_QueueItem", null);
            }
            set {
                SetRelatedEntity("Appointment_QueueItem", null, value);
            }
        }
        
        [AttributeLogicalName("objectid")]
        [RelationshipSchemaName("CampaignActivity_QueueItem")]
        public CampaignActivity CampaignActivity_QueueItem {
            get {
                return GetRelatedEntity<CampaignActivity>("CampaignActivity_QueueItem", null);
            }
            set {
                SetRelatedEntity("CampaignActivity_QueueItem", null, value);
            }
        }
        
        [AttributeLogicalName("objectid")]
        [RelationshipSchemaName("CampaignResponse_QueueItem")]
        public CampaignResponse CampaignResponse_QueueItem {
            get {
                return GetRelatedEntity<CampaignResponse>("CampaignResponse_QueueItem", null);
            }
            set {
                SetRelatedEntity("CampaignResponse_QueueItem", null, value);
            }
        }
        
        [AttributeLogicalName("objectid")]
        [RelationshipSchemaName("Email_QueueItem")]
        public Email Email_QueueItem {
            get {
                return GetRelatedEntity<Email>("Email_QueueItem", null);
            }
            set {
                SetRelatedEntity("Email_QueueItem", null, value);
            }
        }
        
        [AttributeLogicalName("objectid")]
        [RelationshipSchemaName("Fax_QueueItem")]
        public Fax Fax_QueueItem {
            get {
                return GetRelatedEntity<Fax>("Fax_QueueItem", null);
            }
            set {
                SetRelatedEntity("Fax_QueueItem", null, value);
            }
        }
        
        [AttributeLogicalName("objectid")]
        [RelationshipSchemaName("Incident_QueueItem")]
        public Incident Incident_QueueItem {
            get {
                return GetRelatedEntity<Incident>("Incident_QueueItem", null);
            }
            set {
                SetRelatedEntity("Incident_QueueItem", null, value);
            }
        }
        
        [AttributeLogicalName("objectid")]
        [RelationshipSchemaName("Letter_QueueItem")]
        public Letter Letter_QueueItem {
            get {
                return GetRelatedEntity<Letter>("Letter_QueueItem", null);
            }
            set {
                SetRelatedEntity("Letter_QueueItem", null, value);
            }
        }
        
        [AttributeLogicalName("objectid")]
        [RelationshipSchemaName("PhoneCall_QueueItem")]
        public PhoneCall PhoneCall_QueueItem {
            get {
                return GetRelatedEntity<PhoneCall>("PhoneCall_QueueItem", null);
            }
            set {
                SetRelatedEntity("PhoneCall_QueueItem", null, value);
            }
        }
        
        [RelationshipSchemaName("QueueItem_SyncErrors")]
        public IEnumerable<SyncError> QueueItem_SyncErrors {
            get {
                return GetRelatedEntities<SyncError>("QueueItem_SyncErrors", null);
            }
            set {
                SetRelatedEntities("QueueItem_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("objectid")]
        [RelationshipSchemaName("RecurringAppointmentMaster_QueueItem")]
        public RecurringAppointmentMaster RecurringAppointmentMaster_QueueItem {
            get {
                return GetRelatedEntity<RecurringAppointmentMaster>("RecurringAppointmentMaster_QueueItem", null);
            }
            set {
                SetRelatedEntity("RecurringAppointmentMaster_QueueItem", null, value);
            }
        }
        
        [AttributeLogicalName("objectid")]
        [RelationshipSchemaName("ServiceAppointment_QueueItem")]
        public ServiceAppointment ServiceAppointment_QueueItem {
            get {
                return GetRelatedEntity<ServiceAppointment>("ServiceAppointment_QueueItem", null);
            }
            set {
                SetRelatedEntity("ServiceAppointment_QueueItem", null, value);
            }
        }
        
        [AttributeLogicalName("objectid")]
        [RelationshipSchemaName("SocialActivity_QueueItem")]
        public SocialActivity SocialActivity_QueueItem {
            get {
                return GetRelatedEntity<SocialActivity>("SocialActivity_QueueItem", null);
            }
            set {
                SetRelatedEntity("SocialActivity_QueueItem", null, value);
            }
        }
        
        [AttributeLogicalName("objectid")]
        [RelationshipSchemaName("Task_QueueItem")]
        public Task Task_QueueItem {
            get {
                return GetRelatedEntity<Task>("Task_QueueItem", null);
            }
            set {
                SetRelatedEntity("Task_QueueItem", null, value);
            }
        }
        
        [AttributeLogicalName("transactioncurrencyid")]
        [RelationshipSchemaName("TransactionCurrency_QueueItem")]
        public TransactionCurrency TransactionCurrency_QueueItem {
            get {
                return GetRelatedEntity<TransactionCurrency>("TransactionCurrency_QueueItem", null);
            }
            set {
                SetRelatedEntity("TransactionCurrency_QueueItem", null, value);
            }
        }
        
        [AttributeLogicalName("objectid")]
        [RelationshipSchemaName("knowledgearticle_QueueItems")]
        public KnowledgeArticle knowledgearticle_QueueItems {
            get {
                return GetRelatedEntity<KnowledgeArticle>("knowledgearticle_QueueItems", null);
            }
            set {
                SetRelatedEntity("knowledgearticle_QueueItems", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_queueitem_createdonbehalfby")]
        public SystemUser lk_queueitem_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_queueitem_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_queueitem_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_queueitem_modifiedonbehalfby")]
        public SystemUser lk_queueitem_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_queueitem_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_queueitem_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_queueitembase_createdby")]
        public SystemUser lk_queueitembase_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_queueitembase_createdby", null);
            }
            set {
                SetRelatedEntity("lk_queueitembase_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_queueitembase_modifiedby")]
        public SystemUser lk_queueitembase_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_queueitembase_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_queueitembase_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("workerid")]
        [RelationshipSchemaName("lk_queueitembase_workerid")]
        public SystemUser lk_queueitembase_workerid {
            get {
                return GetRelatedEntity<SystemUser>("lk_queueitembase_workerid", null);
            }
            set {
                SetRelatedEntity("lk_queueitembase_workerid", null, value);
            }
        }
        
        [AttributeLogicalName("organizationid")]
        [RelationshipSchemaName("organization_queueitems")]
        public Organization organization_queueitems {
            get {
                return GetRelatedEntity<Organization>("organization_queueitems", null);
            }
            set {
                SetRelatedEntity("organization_queueitems", null, value);
            }
        }
        
        [AttributeLogicalName("workerid")]
        [RelationshipSchemaName("team_queueitembase_workerid")]
        public Team team_queueitembase_workerid {
            get {
                return GetRelatedEntity<Team>("team_queueitembase_workerid", null);
            }
            set {
                SetRelatedEntity("team_queueitembase_workerid", null, value);
            }
        }
        
        public static QueueItem Retrieve(IOrganizationService service, Guid id, params Expression<Func<QueueItem,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Formal offer for products and/or services, proposed at specific prices and related payment terms, which is sent to a prospective customer.</para>
    /// <para>Display Name: Quote</para>
    /// </summary>
    [EntityLogicalName("quote")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class Quote : ExtendedEntity<QuoteState, Quote_StatusCode> {
        
        public const string EntityLogicalName = "quote";
        
        public const int EntityTypeCode = 1084;
        
        public Quote() : 
                base(EntityLogicalName) {
        }
        
        public Quote(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("name");
            }
        }
        
        [AttributeLogicalName("quoteid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("quoteid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the quote.</para>
        /// <para>Display Name: Quote</para>
        /// </summary>
        [AttributeLogicalName("quoteid")]
        [DisplayName("Quote")]
        public Guid? QuoteId {
            get {
                return GetAttributeValue<Guid?>("quoteid");
            }
            set {
                SetId("quoteid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the account with which the quote is associated.</para>
        /// <para>Display Name: Account</para>
        /// </summary>
        [AttributeLogicalName("accountid")]
        [DisplayName("Account")]
        public EntityReference AccountId {
            get {
                return GetAttributeValue<EntityReference>("accountid");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the billing address.</para>
        /// <para>Display Name: Bill To Address ID</para>
        /// </summary>
        [AttributeLogicalName("billto_addressid")]
        [DisplayName("Bill To Address ID")]
        public Guid? BillTo_AddressId {
            get {
                return GetAttributeValue<Guid?>("billto_addressid");
            }
            set {
                SetAttributeValue("billto_addressid", value);
            }
        }
        
        /// <summary>
        /// <para>Type the city for the customer's billing address.</para>
        /// <para>Display Name: Bill To City</para>
        /// </summary>
        [AttributeLogicalName("billto_city")]
        [DisplayName("Bill To City")]
        [MaxLength(80)]
        public string BillTo_City {
            get {
                return GetAttributeValue<string>("billto_city");
            }
            set {
                SetAttributeValue("billto_city", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the complete Bill To address.</para>
        /// <para>Display Name: Bill To Address</para>
        /// </summary>
        [AttributeLogicalName("billto_composite")]
        [DisplayName("Bill To Address")]
        public string BillTo_Composite {
            get {
                return GetAttributeValue<string>("billto_composite");
            }
        }
        
        /// <summary>
        /// <para>Type the primary contact name at the customer's billing address.</para>
        /// <para>Display Name: Bill To Contact Name</para>
        /// </summary>
        [AttributeLogicalName("billto_contactname")]
        [DisplayName("Bill To Contact Name")]
        [MaxLength(150)]
        public string BillTo_ContactName {
            get {
                return GetAttributeValue<string>("billto_contactname");
            }
            set {
                SetAttributeValue("billto_contactname", value);
            }
        }
        
        /// <summary>
        /// <para>Type the country or region for the customer's billing address.</para>
        /// <para>Display Name: Bill To Country/Region</para>
        /// </summary>
        [AttributeLogicalName("billto_country")]
        [DisplayName("Bill To Country/Region")]
        [MaxLength(80)]
        public string BillTo_Country {
            get {
                return GetAttributeValue<string>("billto_country");
            }
            set {
                SetAttributeValue("billto_country", value);
            }
        }
        
        /// <summary>
        /// <para>Type the fax number for the customer's billing address.</para>
        /// <para>Display Name: Bill To Fax</para>
        /// </summary>
        [AttributeLogicalName("billto_fax")]
        [DisplayName("Bill To Fax")]
        [MaxLength(50)]
        public string BillTo_Fax {
            get {
                return GetAttributeValue<string>("billto_fax");
            }
            set {
                SetAttributeValue("billto_fax", value);
            }
        }
        
        /// <summary>
        /// <para>Type the first line of the customer's billing address.</para>
        /// <para>Display Name: Bill To Street 1</para>
        /// </summary>
        [AttributeLogicalName("billto_line1")]
        [DisplayName("Bill To Street 1")]
        [MaxLength(250)]
        public string BillTo_Line1 {
            get {
                return GetAttributeValue<string>("billto_line1");
            }
            set {
                SetAttributeValue("billto_line1", value);
            }
        }
        
        /// <summary>
        /// <para>Type the second line of the customer's billing address.</para>
        /// <para>Display Name: Bill To Street 2</para>
        /// </summary>
        [AttributeLogicalName("billto_line2")]
        [DisplayName("Bill To Street 2")]
        [MaxLength(250)]
        public string BillTo_Line2 {
            get {
                return GetAttributeValue<string>("billto_line2");
            }
            set {
                SetAttributeValue("billto_line2", value);
            }
        }
        
        /// <summary>
        /// <para>Type the third line of the billing address.</para>
        /// <para>Display Name: Bill To Street 3</para>
        /// </summary>
        [AttributeLogicalName("billto_line3")]
        [DisplayName("Bill To Street 3")]
        [MaxLength(250)]
        public string BillTo_Line3 {
            get {
                return GetAttributeValue<string>("billto_line3");
            }
            set {
                SetAttributeValue("billto_line3", value);
            }
        }
        
        /// <summary>
        /// <para>Type a name for the customer's billing address, such as "Headquarters" or "Field office", to identify the address.</para>
        /// <para>Display Name: Bill To Name</para>
        /// </summary>
        [AttributeLogicalName("billto_name")]
        [DisplayName("Bill To Name")]
        [MaxLength(200)]
        public string BillTo_Name {
            get {
                return GetAttributeValue<string>("billto_name");
            }
            set {
                SetAttributeValue("billto_name", value);
            }
        }
        
        /// <summary>
        /// <para>Type the ZIP Code or postal code for the billing address.</para>
        /// <para>Display Name: Bill To ZIP/Postal Code</para>
        /// </summary>
        [AttributeLogicalName("billto_postalcode")]
        [DisplayName("Bill To ZIP/Postal Code")]
        [MaxLength(20)]
        public string BillTo_PostalCode {
            get {
                return GetAttributeValue<string>("billto_postalcode");
            }
            set {
                SetAttributeValue("billto_postalcode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the state or province for the billing address.</para>
        /// <para>Display Name: Bill To State/Province</para>
        /// </summary>
        [AttributeLogicalName("billto_stateorprovince")]
        [DisplayName("Bill To State/Province")]
        [MaxLength(50)]
        public string BillTo_StateOrProvince {
            get {
                return GetAttributeValue<string>("billto_stateorprovince");
            }
            set {
                SetAttributeValue("billto_stateorprovince", value);
            }
        }
        
        /// <summary>
        /// <para>Type the phone number for the customer's billing address.</para>
        /// <para>Display Name: Bill To Phone</para>
        /// </summary>
        [AttributeLogicalName("billto_telephone")]
        [DisplayName("Bill To Phone")]
        [MaxLength(50)]
        public string BillTo_Telephone {
            get {
                return GetAttributeValue<string>("billto_telephone");
            }
            set {
                SetAttributeValue("billto_telephone", value);
            }
        }
        
        /// <summary>
        /// <para>campaign_quotes</para>
        /// <para>Display Name: Source Campaign</para>
        /// </summary>
        [AttributeLogicalName("campaignid")]
        [DisplayName("Source Campaign")]
        public EntityReference CampaignId {
            get {
                return GetAttributeValue<EntityReference>("campaignid");
            }
            set {
                SetAttributeValue("campaignid", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the date when the quote was closed to indicate the expiration, revision, or cancellation date.</para>
        /// <para>Display Name: Closed On</para>
        /// </summary>
        [AttributeLogicalName("closedon")]
        [DisplayName("Closed On")]
        public DateTime? ClosedOn {
            get {
                return GetAttributeValue<DateTime?>("closedon");
            }
            set {
                SetAttributeValue("closedon", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the contact associated with the quote.</para>
        /// <para>Display Name: Contact</para>
        /// </summary>
        [AttributeLogicalName("contactid")]
        [DisplayName("Contact")]
        public EntityReference ContactId {
            get {
                return GetAttributeValue<EntityReference>("contactid");
            }
        }
        
        /// <summary>
        /// <para>lk_quotebase_createdby</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics CRM options.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>lk_quote_createdonbehalfby</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>quote_customer_contacts</para>
        /// <para>Display Name: Potential Customer</para>
        /// </summary>
        [AttributeLogicalName("customerid")]
        [DisplayName("Potential Customer")]
        public EntityReference CustomerId {
            get {
                return GetAttributeValue<EntityReference>("customerid");
            }
            set {
                SetAttributeValue("customerid", value);
            }
        }
        
        /// <summary>
        /// <para>Type additional information to describe the quote, such as the products or services offered or details about the customer's product preferences.</para>
        /// <para>Display Name: Description</para>
        /// </summary>
        [AttributeLogicalName("description")]
        [DisplayName("Description")]
        public string Description {
            get {
                return GetAttributeValue<string>("description");
            }
            set {
                SetAttributeValue("description", value);
            }
        }
        
        /// <summary>
        /// <para>Type the discount amount for the quote if the customer is eligible for special savings.</para>
        /// <para>Display Name: Quote Discount Amount</para>
        /// </summary>
        [AttributeLogicalName("discountamount")]
        [DisplayName("Quote Discount Amount")]
        public decimal? DiscountAmount {
            get {
                return GetMoneyValue("discountamount");
            }
            set {
                SetMoneyValue("discountamount", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the Discount Amount field converted to the system's default base currency for reporting purposes. The calculation uses the exchange rate specified in the Currencies area.</para>
        /// <para>Display Name: Quote Discount Amount (Base)</para>
        /// </summary>
        [AttributeLogicalName("discountamount_base")]
        [DisplayName("Quote Discount Amount (Base)")]
        public decimal? DiscountAmount_Base {
            get {
                return GetMoneyValue("discountamount_base");
            }
        }
        
        /// <summary>
        /// <para>Type the discount rate that should be applied to the Detail Amount field to include additional savings for the customer in the quote.</para>
        /// <para>Display Name: Quote Discount (%)</para>
        /// </summary>
        [AttributeLogicalName("discountpercentage")]
        [DisplayName("Quote Discount (%)")]
        public decimal? DiscountPercentage {
            get {
                return GetAttributeValue<decimal?>("discountpercentage");
            }
            set {
                SetAttributeValue("discountpercentage", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the date when the quote pricing is effective or was first communicated to the customer.</para>
        /// <para>Display Name: Effective From</para>
        /// </summary>
        [AttributeLogicalName("effectivefrom")]
        [DisplayName("Effective From")]
        public DateTime? EffectiveFrom {
            get {
                return GetAttributeValue<DateTime?>("effectivefrom");
            }
            set {
                SetAttributeValue("effectivefrom", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the expiration date or last day the quote pricing is effective for the customer.</para>
        /// <para>Display Name: Effective To</para>
        /// </summary>
        [AttributeLogicalName("effectiveto")]
        [DisplayName("Effective To")]
        public DateTime? EffectiveTo {
            get {
                return GetAttributeValue<DateTime?>("effectiveto");
            }
            set {
                SetAttributeValue("effectiveto", value);
            }
        }
        
        /// <summary>
        /// <para>The primary email address for the entity.</para>
        /// <para>Display Name: Email Address</para>
        /// </summary>
        [AttributeLogicalName("emailaddress")]
        [DisplayName("Email Address")]
        [MaxLength(100)]
        public string EmailAddress {
            get {
                return GetAttributeValue<string>("emailaddress");
            }
            set {
                SetAttributeValue("emailaddress", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("Exchange Rate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Enter the date a decision or order is due from the customer to indicate the expiration date of the quote.</para>
        /// <para>Display Name: Due By</para>
        /// </summary>
        [AttributeLogicalName("expireson")]
        [DisplayName("Due By")]
        public DateTime? ExpiresOn {
            get {
                return GetAttributeValue<DateTime?>("expireson");
            }
            set {
                SetAttributeValue("expireson", value);
            }
        }
        
        /// <summary>
        /// <para>Type the cost of freight or shipping for the products included in the quote for use in calculating the Total Amount field.</para>
        /// <para>Display Name: Freight Amount</para>
        /// </summary>
        [AttributeLogicalName("freightamount")]
        [DisplayName("Freight Amount")]
        public decimal? FreightAmount {
            get {
                return GetMoneyValue("freightamount");
            }
            set {
                SetMoneyValue("freightamount", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the Freight Amount field converted to the system's default base currency for reporting purposes. The calculation uses the exchange rate specified in the Currencies area.</para>
        /// <para>Display Name: Freight Amount (Base)</para>
        /// </summary>
        [AttributeLogicalName("freightamount_base")]
        [DisplayName("Freight Amount (Base)")]
        public decimal? FreightAmount_Base {
            get {
                return GetMoneyValue("freightamount_base");
            }
        }
        
        /// <summary>
        /// <para>Select the freight terms to make sure shipping charges are processed correctly.</para>
        /// <para>Display Name: Freight Terms</para>
        /// </summary>
        [AttributeLogicalName("freighttermscode")]
        [DisplayName("Freight Terms")]
        public Quote_FreightTermsCode? FreightTermsCode {
            get {
                return GetOptionSetValue<Quote_FreightTermsCode>("freighttermscode");
            }
            set {
                SetOptionSetValue("freighttermscode", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the data import or data migration that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Contains the date time stamp of the last on hold time.</para>
        /// <para>Display Name: Last On Hold Time</para>
        /// </summary>
        [AttributeLogicalName("lastonholdtime")]
        [DisplayName("Last On Hold Time")]
        public DateTime? LastOnHoldTime {
            get {
                return GetAttributeValue<DateTime?>("lastonholdtime");
            }
            set {
                SetAttributeValue("lastonholdtime", value);
            }
        }
        
        /// <summary>
        /// <para>lk_quotebase_modifiedby</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics CRM options.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>lk_quote_modifiedonbehalfby</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Type a descriptive name for the quote.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Name")]
        [MaxLength(300)]
        public string Name {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the duration in minutes for which the quote was on hold.</para>
        /// <para>Display Name: On Hold Time (Minutes)</para>
        /// </summary>
        [AttributeLogicalName("onholdtime")]
        [DisplayName("On Hold Time (Minutes)")]
        [Range(-2147483648, 2147483647)]
        public int? OnHoldTime {
            get {
                return GetAttributeValue<int?>("onholdtime");
            }
        }
        
        /// <summary>
        /// <para>opportunity_quotes</para>
        /// <para>Display Name: Opportunity</para>
        /// </summary>
        [AttributeLogicalName("opportunityid")]
        [DisplayName("Opportunity")]
        public EntityReference OpportunityId {
            get {
                return GetAttributeValue<EntityReference>("opportunityid");
            }
            set {
                SetAttributeValue("opportunityid", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>owner_quotes</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>business_unit_quotes</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>team_quotes</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>system_user_quotes</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Select the payment terms to indicate when the customer needs to pay the total amount.</para>
        /// <para>Display Name: Payment Terms</para>
        /// </summary>
        [AttributeLogicalName("paymenttermscode")]
        [DisplayName("Payment Terms")]
        public Quote_PaymentTermsCode? PaymentTermsCode {
            get {
                return GetOptionSetValue<Quote_PaymentTermsCode>("paymenttermscode");
            }
            set {
                SetOptionSetValue("paymenttermscode", value);
            }
        }
        
        /// <summary>
        /// <para>price_level_quotes</para>
        /// <para>Display Name: Price List</para>
        /// </summary>
        [AttributeLogicalName("pricelevelid")]
        [DisplayName("Price List")]
        public EntityReference PriceLevelId {
            get {
                return GetAttributeValue<EntityReference>("pricelevelid");
            }
            set {
                SetAttributeValue("pricelevelid", value);
            }
        }
        
        /// <summary>
        /// <para>Pricing error for the quote.</para>
        /// <para>Display Name: Pricing Error </para>
        /// </summary>
        [AttributeLogicalName("pricingerrorcode")]
        [DisplayName("Pricing Error ")]
        public qooi_pricingerrorcode? PricingErrorCode {
            get {
                return GetOptionSetValue<qooi_pricingerrorcode>("pricingerrorcode");
            }
            set {
                SetOptionSetValue("pricingerrorcode", value);
            }
        }
        
        /// <summary>
        /// <para>Type a descriptive name for the quote.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Name")]
        [MaxLength(300)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the process.</para>
        /// <para>Display Name: Process</para>
        /// </summary>
        [AttributeLogicalName("processid")]
        [DisplayName("Process")]
        public Guid? ProcessId {
            get {
                return GetAttributeValue<Guid?>("processid");
            }
            set {
                SetAttributeValue("processid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the quote number for customer reference and searching capabilities. The number cannot be modified.</para>
        /// <para>Display Name: Quote ID</para>
        /// </summary>
        [AttributeLogicalName("quotenumber")]
        [DisplayName("Quote ID")]
        [MaxLength(100)]
        public string QuoteNumber {
            get {
                return GetAttributeValue<string>("quotenumber");
            }
            set {
                SetAttributeValue("quotenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the delivery date requested by the customer for all products in the quote.</para>
        /// <para>Display Name: Requested Delivery Date</para>
        /// </summary>
        [AttributeLogicalName("requestdeliveryby")]
        [DisplayName("Requested Delivery Date")]
        public DateTime? RequestDeliveryBy {
            get {
                return GetAttributeValue<DateTime?>("requestdeliveryby");
            }
            set {
                SetAttributeValue("requestdeliveryby", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the version number of the quote for revision history tracking.</para>
        /// <para>Display Name: Revision ID</para>
        /// </summary>
        [AttributeLogicalName("revisionnumber")]
        [DisplayName("Revision ID")]
        [Range(0, 2147483647)]
        public int? RevisionNumber {
            get {
                return GetAttributeValue<int?>("revisionnumber");
            }
        }
        
        /// <summary>
        /// <para>manualsla_quote</para>
        /// <para>Display Name: SLA</para>
        /// </summary>
        [AttributeLogicalName("slaid")]
        [DisplayName("SLA")]
        public EntityReference SLAId {
            get {
                return GetAttributeValue<EntityReference>("slaid");
            }
            set {
                SetAttributeValue("slaid", value);
            }
        }
        
        /// <summary>
        /// <para>sla_quote</para>
        /// <para>Display Name: Last SLA applied</para>
        /// </summary>
        [AttributeLogicalName("slainvokedid")]
        [DisplayName("Last SLA applied")]
        public EntityReference SLAInvokedId {
            get {
                return GetAttributeValue<EntityReference>("slainvokedid");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the shipping address.</para>
        /// <para>Display Name: Ship To Address ID</para>
        /// </summary>
        [AttributeLogicalName("shipto_addressid")]
        [DisplayName("Ship To Address ID")]
        public Guid? ShipTo_AddressId {
            get {
                return GetAttributeValue<Guid?>("shipto_addressid");
            }
            set {
                SetAttributeValue("shipto_addressid", value);
            }
        }
        
        /// <summary>
        /// <para>Type the city for the customer's shipping address.</para>
        /// <para>Display Name: Ship To City</para>
        /// </summary>
        [AttributeLogicalName("shipto_city")]
        [DisplayName("Ship To City")]
        [MaxLength(80)]
        public string ShipTo_City {
            get {
                return GetAttributeValue<string>("shipto_city");
            }
            set {
                SetAttributeValue("shipto_city", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the complete Ship To address.</para>
        /// <para>Display Name: Ship To Address</para>
        /// </summary>
        [AttributeLogicalName("shipto_composite")]
        [DisplayName("Ship To Address")]
        public string ShipTo_Composite {
            get {
                return GetAttributeValue<string>("shipto_composite");
            }
        }
        
        /// <summary>
        /// <para>Type the primary contact name at the customer's shipping address.</para>
        /// <para>Display Name: Ship To Contact Name</para>
        /// </summary>
        [AttributeLogicalName("shipto_contactname")]
        [DisplayName("Ship To Contact Name")]
        [MaxLength(150)]
        public string ShipTo_ContactName {
            get {
                return GetAttributeValue<string>("shipto_contactname");
            }
            set {
                SetAttributeValue("shipto_contactname", value);
            }
        }
        
        /// <summary>
        /// <para>Type the country or region for the customer's shipping address.</para>
        /// <para>Display Name: Ship To Country/Region</para>
        /// </summary>
        [AttributeLogicalName("shipto_country")]
        [DisplayName("Ship To Country/Region")]
        [MaxLength(80)]
        public string ShipTo_Country {
            get {
                return GetAttributeValue<string>("shipto_country");
            }
            set {
                SetAttributeValue("shipto_country", value);
            }
        }
        
        /// <summary>
        /// <para>Type the fax number for the customer's shipping address.</para>
        /// <para>Display Name: Ship To Fax</para>
        /// </summary>
        [AttributeLogicalName("shipto_fax")]
        [DisplayName("Ship To Fax")]
        [MaxLength(50)]
        public string ShipTo_Fax {
            get {
                return GetAttributeValue<string>("shipto_fax");
            }
            set {
                SetAttributeValue("shipto_fax", value);
            }
        }
        
        /// <summary>
        /// <para>Select the freight terms to make sure shipping orders are processed correctly.</para>
        /// <para>Display Name: Ship To Freight Terms</para>
        /// </summary>
        [AttributeLogicalName("shipto_freighttermscode")]
        [DisplayName("Ship To Freight Terms")]
        public Quote_ShipTo_FreightTermsCode? ShipTo_FreightTermsCode {
            get {
                return GetOptionSetValue<Quote_ShipTo_FreightTermsCode>("shipto_freighttermscode");
            }
            set {
                SetOptionSetValue("shipto_freighttermscode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the first line of the customer's shipping address.</para>
        /// <para>Display Name: Ship To Street 1</para>
        /// </summary>
        [AttributeLogicalName("shipto_line1")]
        [DisplayName("Ship To Street 1")]
        [MaxLength(250)]
        public string ShipTo_Line1 {
            get {
                return GetAttributeValue<string>("shipto_line1");
            }
            set {
                SetAttributeValue("shipto_line1", value);
            }
        }
        
        /// <summary>
        /// <para>Type the second line of the customer's shipping address.</para>
        /// <para>Display Name: Ship To Street 2</para>
        /// </summary>
        [AttributeLogicalName("shipto_line2")]
        [DisplayName("Ship To Street 2")]
        [MaxLength(250)]
        public string ShipTo_Line2 {
            get {
                return GetAttributeValue<string>("shipto_line2");
            }
            set {
                SetAttributeValue("shipto_line2", value);
            }
        }
        
        /// <summary>
        /// <para>Type the third line of the shipping address.</para>
        /// <para>Display Name: Ship To Street 3</para>
        /// </summary>
        [AttributeLogicalName("shipto_line3")]
        [DisplayName("Ship To Street 3")]
        [MaxLength(250)]
        public string ShipTo_Line3 {
            get {
                return GetAttributeValue<string>("shipto_line3");
            }
            set {
                SetAttributeValue("shipto_line3", value);
            }
        }
        
        /// <summary>
        /// <para>Type a name for the customer's shipping address, such as "Headquarters" or "Field office",  to identify the address.</para>
        /// <para>Display Name: Ship To Name</para>
        /// </summary>
        [AttributeLogicalName("shipto_name")]
        [DisplayName("Ship To Name")]
        [MaxLength(200)]
        public string ShipTo_Name {
            get {
                return GetAttributeValue<string>("shipto_name");
            }
            set {
                SetAttributeValue("shipto_name", value);
            }
        }
        
        /// <summary>
        /// <para>Type the ZIP Code or postal code for the shipping address.</para>
        /// <para>Display Name: Ship To ZIP/Postal Code</para>
        /// </summary>
        [AttributeLogicalName("shipto_postalcode")]
        [DisplayName("Ship To ZIP/Postal Code")]
        [MaxLength(20)]
        public string ShipTo_PostalCode {
            get {
                return GetAttributeValue<string>("shipto_postalcode");
            }
            set {
                SetAttributeValue("shipto_postalcode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the state or province for the shipping address.</para>
        /// <para>Display Name: Ship To State/Province</para>
        /// </summary>
        [AttributeLogicalName("shipto_stateorprovince")]
        [DisplayName("Ship To State/Province")]
        [MaxLength(50)]
        public string ShipTo_StateOrProvince {
            get {
                return GetAttributeValue<string>("shipto_stateorprovince");
            }
            set {
                SetAttributeValue("shipto_stateorprovince", value);
            }
        }
        
        /// <summary>
        /// <para>Type the phone number for the customer's shipping address.</para>
        /// <para>Display Name: Ship To Phone</para>
        /// </summary>
        [AttributeLogicalName("shipto_telephone")]
        [DisplayName("Ship To Phone")]
        [MaxLength(50)]
        public string ShipTo_Telephone {
            get {
                return GetAttributeValue<string>("shipto_telephone");
            }
            set {
                SetAttributeValue("shipto_telephone", value);
            }
        }
        
        /// <summary>
        /// <para>Select a shipping method for deliveries sent to this address.</para>
        /// <para>Display Name: Shipping Method</para>
        /// </summary>
        [AttributeLogicalName("shippingmethodcode")]
        [DisplayName("Shipping Method")]
        public Quote_ShippingMethodCode? ShippingMethodCode {
            get {
                return GetOptionSetValue<Quote_ShippingMethodCode>("shippingmethodcode");
            }
            set {
                SetOptionSetValue("shippingmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>Skip Price Calculation (For Internal use)</para>
        /// <para>Display Name: Skip Price Calculation</para>
        /// </summary>
        [AttributeLogicalName("skippricecalculation")]
        [DisplayName("Skip Price Calculation")]
        public qooi_skippricecalculation? SkipPriceCalculation {
            get {
                return GetOptionSetValue<qooi_skippricecalculation>("skippricecalculation");
            }
            set {
                SetOptionSetValue("skippricecalculation", value);
            }
        }
        
        /// <summary>
        /// <para>processstage_quotes</para>
        /// <para>Display Name: Process Stage</para>
        /// </summary>
        [AttributeLogicalName("stageid")]
        [DisplayName("Process Stage")]
        public Guid? StageId {
            get {
                return GetAttributeValue<Guid?>("stageid");
            }
            set {
                SetAttributeValue("stageid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows whether the quote is draft, active, won, or closed. Only draft quotes can be edited.</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public QuoteState? StateCode {
            get {
                return GetOptionSetValue<QuoteState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the quote's status.</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public Quote_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<Quote_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the total amount due, calculated as the sum of the products, discounts, freight, and taxes for the quote.</para>
        /// <para>Display Name: Total Amount</para>
        /// </summary>
        [AttributeLogicalName("totalamount")]
        [DisplayName("Total Amount")]
        public decimal? TotalAmount {
            get {
                return GetMoneyValue("totalamount");
            }
            set {
                SetMoneyValue("totalamount", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the total product amount for the quote, minus any discounts. This value is added to freight and tax amounts in the calculation for the total amount due for the quote.</para>
        /// <para>Display Name: Total Pre-Freight Amount</para>
        /// </summary>
        [AttributeLogicalName("totalamountlessfreight")]
        [DisplayName("Total Pre-Freight Amount")]
        public decimal? TotalAmountLessFreight {
            get {
                return GetMoneyValue("totalamountlessfreight");
            }
            set {
                SetMoneyValue("totalamountlessfreight", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the Pre-Freight Amount converted field to the system's default base currency for reporting purposes. The calculation uses the exchange rate specified in the Currencies area.</para>
        /// <para>Display Name: Total Pre-Freight Amount (Base)</para>
        /// </summary>
        [AttributeLogicalName("totalamountlessfreight_base")]
        [DisplayName("Total Pre-Freight Amount (Base)")]
        public decimal? TotalAmountLessFreight_Base {
            get {
                return GetMoneyValue("totalamountlessfreight_base");
            }
        }
        
        /// <summary>
        /// <para>Shows the Total Amount field converted to the system's default base currency for reporting purposes. The calculation uses the exchange rate specified in the Currencies area.</para>
        /// <para>Display Name: Total Amount (Base)</para>
        /// </summary>
        [AttributeLogicalName("totalamount_base")]
        [DisplayName("Total Amount (Base)")]
        public decimal? TotalAmount_Base {
            get {
                return GetMoneyValue("totalamount_base");
            }
        }
        
        /// <summary>
        /// <para>Shows the total discount amount, based on the discount price and rate entered on the quote.</para>
        /// <para>Display Name: Total Discount Amount</para>
        /// </summary>
        [AttributeLogicalName("totaldiscountamount")]
        [DisplayName("Total Discount Amount")]
        public decimal? TotalDiscountAmount {
            get {
                return GetMoneyValue("totaldiscountamount");
            }
            set {
                SetMoneyValue("totaldiscountamount", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the Total Discount Amount converted field to the system's default base currency for reporting purposes. The calculation uses the exchange rate specified in the Currencies area.</para>
        /// <para>Display Name: Total Discount Amount (Base)</para>
        /// </summary>
        [AttributeLogicalName("totaldiscountamount_base")]
        [DisplayName("Total Discount Amount (Base)")]
        public decimal? TotalDiscountAmount_Base {
            get {
                return GetMoneyValue("totaldiscountamount_base");
            }
        }
        
        /// <summary>
        /// <para>Shows the sum of all existing and write-in products included on the quote, based on the specified price list and quantities.</para>
        /// <para>Display Name: Total Detail Amount</para>
        /// </summary>
        [AttributeLogicalName("totallineitemamount")]
        [DisplayName("Total Detail Amount")]
        public decimal? TotalLineItemAmount {
            get {
                return GetMoneyValue("totallineitemamount");
            }
            set {
                SetMoneyValue("totallineitemamount", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the Detail Amount field converted to the system's default base currency. The calculation uses the exchange rate specified in the Currencies area.</para>
        /// <para>Display Name: Total Detail Amount (Base)</para>
        /// </summary>
        [AttributeLogicalName("totallineitemamount_base")]
        [DisplayName("Total Detail Amount (Base)")]
        public decimal? TotalLineItemAmount_Base {
            get {
                return GetMoneyValue("totallineitemamount_base");
            }
        }
        
        /// <summary>
        /// <para>Shows the total of the Manual Discount amounts specified on all products included in the quote. This value is reflected in the Detail Amount field on the quote and is added to any discount amount or rate specified on the quote</para>
        /// <para>Display Name: Total Line Item Discount Amount</para>
        /// </summary>
        [AttributeLogicalName("totallineitemdiscountamount")]
        [DisplayName("Total Line Item Discount Amount")]
        public decimal? TotalLineItemDiscountAmount {
            get {
                return GetMoneyValue("totallineitemdiscountamount");
            }
            set {
                SetMoneyValue("totallineitemdiscountamount", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the Total Line Item Discount Amount field converted to the system's default base currency for reporting purposes. The calculation uses the exchange rate specified in the Currencies area.</para>
        /// <para>Display Name: Total Line Item Discount Amount (Base)</para>
        /// </summary>
        [AttributeLogicalName("totallineitemdiscountamount_base")]
        [DisplayName("Total Line Item Discount Amount (Base)")]
        public decimal? TotalLineItemDiscountAmount_Base {
            get {
                return GetMoneyValue("totallineitemdiscountamount_base");
            }
        }
        
        /// <summary>
        /// <para>Shows the total of the Tax amounts specified on all products included in the quote, included in the Total Amount due calculation for the quote.</para>
        /// <para>Display Name: Total Tax</para>
        /// </summary>
        [AttributeLogicalName("totaltax")]
        [DisplayName("Total Tax")]
        public decimal? TotalTax {
            get {
                return GetMoneyValue("totaltax");
            }
            set {
                SetMoneyValue("totaltax", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the Total Tax field converted to the system's default base currency for reporting purposes. The calculation uses the exchange rate specified in the Currencies area.</para>
        /// <para>Display Name: Total Tax (Base)</para>
        /// </summary>
        [AttributeLogicalName("totaltax_base")]
        [DisplayName("Total Tax (Base)")]
        public decimal? TotalTax_Base {
            get {
                return GetMoneyValue("totaltax_base");
            }
        }
        
        /// <summary>
        /// <para>transactioncurrency_quote</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Traversed Path</para>
        /// </summary>
        [AttributeLogicalName("traversedpath")]
        [DisplayName("Traversed Path")]
        [MaxLength(1250)]
        public string TraversedPath {
            get {
                return GetAttributeValue<string>("traversedpath");
            }
            set {
                SetAttributeValue("traversedpath", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version number of the quote.</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Select whether the products included in the quote should be shipped to the specified address or held until the customer calls with further pick up or delivery instructions.</para>
        /// <para>Display Name: Ship To</para>
        /// </summary>
        [AttributeLogicalName("willcall")]
        [DisplayName("Ship To")]
        public bool? WillCall {
            get {
                return GetAttributeValue<bool?>("willcall");
            }
            set {
                SetAttributeValue("willcall", value);
            }
        }
        
        /// <summary>
        /// <para>Customer Account associated with this Quote</para>
        /// <para>Display Name: Potential Customer</para>
        /// </summary>
        [AttributeLogicalName("msdyn_account")]
        [DisplayName("Potential Customer")]
        public EntityReference msdyn_Account {
            get {
                return GetAttributeValue<EntityReference>("msdyn_account");
            }
            set {
                SetAttributeValue("msdyn_account", value);
            }
        }
        
        /// <summary>
        /// <para>The estimated cost of this quote</para>
        /// <para>Display Name: Estimated Cost</para>
        /// </summary>
        [AttributeLogicalName("msdyn_estimatedcost")]
        [DisplayName("Estimated Cost")]
        public decimal? msdyn_EstimatedCost {
            get {
                return GetMoneyValue("msdyn_estimatedcost");
            }
            set {
                SetMoneyValue("msdyn_estimatedcost", value);
            }
        }
        
        /// <summary>
        /// <para>Estimated Margin of this quote</para>
        /// <para>Display Name: Estimated Margin</para>
        /// </summary>
        [AttributeLogicalName("msdyn_estimatedquotemargin")]
        [DisplayName("Estimated Margin")]
        public decimal? msdyn_EstimatedQuoteMargin {
            get {
                return GetAttributeValue<decimal?>("msdyn_estimatedquotemargin");
            }
        }
        
        /// <summary>
        /// <para>The totals of all assigned Invoice Setups</para>
        /// <para>Display Name: Invoice Setup Totals</para>
        /// </summary>
        [AttributeLogicalName("msdyn_invoicesetuptotals")]
        [DisplayName("Invoice Setup Totals")]
        public decimal? msdyn_InvoiceSetupTotals {
            get {
                return GetMoneyValue("msdyn_invoicesetuptotals");
            }
            set {
                SetMoneyValue("msdyn_invoicesetuptotals", value);
            }
        }
        
        /// <summary>
        /// <para>Internal use only.</para>
        /// <para>Display Name: Order Type</para>
        /// </summary>
        [AttributeLogicalName("msdyn_ordertype")]
        [DisplayName("Order Type")]
        public Quote_msdyn_OrderType? msdyn_OrderType {
            get {
                return GetOptionSetValue<Quote_msdyn_OrderType>("msdyn_ordertype");
            }
            set {
                SetOptionSetValue("msdyn_ordertype", value);
            }
        }
        
        /// <summary>
        /// <para>The latest end date of all associated quote lines</para>
        /// <para>Display Name: Latest Quote Line End Date</para>
        /// </summary>
        [AttributeLogicalName("msdyn_quotelineenddate")]
        [DisplayName("Latest Quote Line End Date")]
        public DateTime? msdyn_QuoteLineEndDate {
            get {
                return GetAttributeValue<DateTime?>("msdyn_quotelineenddate");
            }
            set {
                SetAttributeValue("msdyn_quotelineenddate", value);
            }
        }
        
        /// <summary>
        /// <para>The earliest Start Date of all Quote Lines that are associated to this quote</para>
        /// <para>Display Name: Earliest Quote Line Start Date</para>
        /// </summary>
        [AttributeLogicalName("msdyn_quotelinestartdate")]
        [DisplayName("Earliest Quote Line Start Date")]
        public DateTime? msdyn_QuoteLineStartDate {
            get {
                return GetAttributeValue<DateTime?>("msdyn_quotelinestartdate");
            }
            set {
                SetAttributeValue("msdyn_quotelinestartdate", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: TotalAmount</para>
        /// </summary>
        [AttributeLogicalName("msdyn_totalamount")]
        [DisplayName("TotalAmount")]
        public decimal? msdyn_TotalAmount {
            get {
                return GetMoneyValue("msdyn_totalamount");
            }
        }
        
        /// <summary>
        /// <para>Value of the Estimated Cost in base currency.</para>
        /// <para>Display Name: Estimated Cost (Base)</para>
        /// </summary>
        [AttributeLogicalName("msdyn_estimatedcost_base")]
        [DisplayName("Estimated Cost (Base)")]
        public decimal? msdyn_estimatedcost_Base {
            get {
                return GetMoneyValue("msdyn_estimatedcost_base");
            }
        }
        
        /// <summary>
        /// <para>Value of the Invoice Setup Totals in base currency.</para>
        /// <para>Display Name: Invoice Setup Totals (Base)</para>
        /// </summary>
        [AttributeLogicalName("msdyn_invoicesetuptotals_base")]
        [DisplayName("Invoice Setup Totals (Base)")]
        public decimal? msdyn_invoicesetuptotals_Base {
            get {
                return GetMoneyValue("msdyn_invoicesetuptotals_base");
            }
        }
        
        /// <summary>
        /// <para>Value of the TotalAmount in base currency.</para>
        /// <para>Display Name: TotalAmount (Base)</para>
        /// </summary>
        [AttributeLogicalName("msdyn_totalamount_base")]
        [DisplayName("TotalAmount (Base)")]
        public decimal? msdyn_totalamount_Base {
            get {
                return GetMoneyValue("msdyn_totalamount_base");
            }
        }
        
        [RelationshipSchemaName("Quote_ActivityPointers")]
        public IEnumerable<ActivityPointer> Quote_ActivityPointers {
            get {
                return GetRelatedEntities<ActivityPointer>("Quote_ActivityPointers", null);
            }
            set {
                SetRelatedEntities("Quote_ActivityPointers", null, value);
            }
        }
        
        [RelationshipSchemaName("Quote_Appointments")]
        public IEnumerable<Appointment> Quote_Appointments {
            get {
                return GetRelatedEntities<Appointment>("Quote_Appointments", null);
            }
            set {
                SetRelatedEntities("Quote_Appointments", null, value);
            }
        }
        
        [RelationshipSchemaName("Quote_Emails")]
        public IEnumerable<Email> Quote_Emails {
            get {
                return GetRelatedEntities<Email>("Quote_Emails", null);
            }
            set {
                SetRelatedEntities("Quote_Emails", null, value);
            }
        }
        
        [RelationshipSchemaName("Quote_Faxes")]
        public IEnumerable<Fax> Quote_Faxes {
            get {
                return GetRelatedEntities<Fax>("Quote_Faxes", null);
            }
            set {
                SetRelatedEntities("Quote_Faxes", null, value);
            }
        }
        
        [RelationshipSchemaName("Quote_Letters")]
        public IEnumerable<Letter> Quote_Letters {
            get {
                return GetRelatedEntities<Letter>("Quote_Letters", null);
            }
            set {
                SetRelatedEntities("Quote_Letters", null, value);
            }
        }
        
        [RelationshipSchemaName("Quote_Phonecalls")]
        public IEnumerable<PhoneCall> Quote_Phonecalls {
            get {
                return GetRelatedEntities<PhoneCall>("Quote_Phonecalls", null);
            }
            set {
                SetRelatedEntities("Quote_Phonecalls", null, value);
            }
        }
        
        [RelationshipSchemaName("Quote_RecurringAppointmentMasters")]
        public IEnumerable<RecurringAppointmentMaster> Quote_RecurringAppointmentMasters {
            get {
                return GetRelatedEntities<RecurringAppointmentMaster>("Quote_RecurringAppointmentMasters", null);
            }
            set {
                SetRelatedEntities("Quote_RecurringAppointmentMasters", null, value);
            }
        }
        
        [RelationshipSchemaName("Quote_ServiceAppointments")]
        public IEnumerable<ServiceAppointment> Quote_ServiceAppointments {
            get {
                return GetRelatedEntities<ServiceAppointment>("Quote_ServiceAppointments", null);
            }
            set {
                SetRelatedEntities("Quote_ServiceAppointments", null, value);
            }
        }
        
        [RelationshipSchemaName("Quote_SharepointDocumentLocation")]
        public IEnumerable<SharePointDocumentLocation> Quote_SharepointDocumentLocation {
            get {
                return GetRelatedEntities<SharePointDocumentLocation>("Quote_SharepointDocumentLocation", null);
            }
            set {
                SetRelatedEntities("Quote_SharepointDocumentLocation", null, value);
            }
        }
        
        [RelationshipSchemaName("Quote_SocialActivities")]
        public IEnumerable<SocialActivity> Quote_SocialActivities {
            get {
                return GetRelatedEntities<SocialActivity>("Quote_SocialActivities", null);
            }
            set {
                SetRelatedEntities("Quote_SocialActivities", null, value);
            }
        }
        
        [RelationshipSchemaName("Quote_SyncErrors")]
        public IEnumerable<SyncError> Quote_SyncErrors {
            get {
                return GetRelatedEntities<SyncError>("Quote_SyncErrors", null);
            }
            set {
                SetRelatedEntities("Quote_SyncErrors", null, value);
            }
        }
        
        [RelationshipSchemaName("Quote_Tasks")]
        public IEnumerable<Task> Quote_Tasks {
            get {
                return GetRelatedEntities<Task>("Quote_Tasks", null);
            }
            set {
                SetRelatedEntities("Quote_Tasks", null, value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_quotes")]
        public BusinessUnit business_unit_quotes {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_quotes", null);
            }
            set {
                SetRelatedEntity("business_unit_quotes", null, value);
            }
        }
        
        [AttributeLogicalName("campaignid")]
        [RelationshipSchemaName("campaign_quotes")]
        public Campaign campaign_quotes {
            get {
                return GetRelatedEntity<Campaign>("campaign_quotes", null);
            }
            set {
                SetRelatedEntity("campaign_quotes", null, value);
            }
        }
        
        [RelationshipSchemaName("contactquotes_association")]
        public IEnumerable<Contact> contactquotes_association {
            get {
                return GetRelatedEntities<Contact>("contactquotes_association", null);
            }
            set {
                SetRelatedEntities("contactquotes_association", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_opportunitysalesprocess_quoteid")]
        public IEnumerable<OpportunitySalesProcess> lk_opportunitysalesprocess_quoteid {
            get {
                return GetRelatedEntities<OpportunitySalesProcess>("lk_opportunitysalesprocess_quoteid", null);
            }
            set {
                SetRelatedEntities("lk_opportunitysalesprocess_quoteid", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_quote_createdonbehalfby")]
        public SystemUser lk_quote_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_quote_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_quote_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_quote_modifiedonbehalfby")]
        public SystemUser lk_quote_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_quote_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_quote_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_quotebase_createdby")]
        public SystemUser lk_quotebase_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_quotebase_createdby", null);
            }
            set {
                SetRelatedEntity("lk_quotebase_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_quotebase_modifiedby")]
        public SystemUser lk_quotebase_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_quotebase_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_quotebase_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("slaid")]
        [RelationshipSchemaName("manualsla_quote")]
        public SLA manualsla_quote {
            get {
                return GetRelatedEntity<SLA>("manualsla_quote", null);
            }
            set {
                SetRelatedEntity("manualsla_quote", null, value);
            }
        }
        
        [AttributeLogicalName("msdyn_account")]
        [RelationshipSchemaName("msdyn_account_quote_Account")]
        public Account msdyn_account_quote_Account {
            get {
                return GetRelatedEntity<Account>("msdyn_account_quote_Account", null);
            }
            set {
                SetRelatedEntity("msdyn_account_quote_Account", null, value);
            }
        }
        
        [AttributeLogicalName("opportunityid")]
        [RelationshipSchemaName("opportunity_quotes")]
        public Opportunity opportunity_quotes {
            get {
                return GetRelatedEntity<Opportunity>("opportunity_quotes", null);
            }
            set {
                SetRelatedEntity("opportunity_quotes", null, value);
            }
        }
        
        [RelationshipSchemaName("quote_Teams")]
        public IEnumerable<Team> quote_Teams {
            get {
                return GetRelatedEntities<Team>("quote_Teams", null);
            }
            set {
                SetRelatedEntities("quote_Teams", null, value);
            }
        }
        
        [RelationshipSchemaName("quote_activity_parties")]
        public IEnumerable<ActivityParty> quote_activity_parties {
            get {
                return GetRelatedEntities<ActivityParty>("quote_activity_parties", null);
            }
            set {
                SetRelatedEntities("quote_activity_parties", null, value);
            }
        }
        
        [RelationshipSchemaName("quote_connections1")]
        public IEnumerable<Connection> quote_connections1 {
            get {
                return GetRelatedEntities<Connection>("quote_connections1", null);
            }
            set {
                SetRelatedEntities("quote_connections1", null, value);
            }
        }
        
        [RelationshipSchemaName("quote_connections2")]
        public IEnumerable<Connection> quote_connections2 {
            get {
                return GetRelatedEntities<Connection>("quote_connections2", null);
            }
            set {
                SetRelatedEntities("quote_connections2", null, value);
            }
        }
        
        [AttributeLogicalName("customerid")]
        [RelationshipSchemaName("quote_customer_accounts")]
        public Account quote_customer_accounts {
            get {
                return GetRelatedEntity<Account>("quote_customer_accounts", null);
            }
            set {
                SetRelatedEntity("quote_customer_accounts", null, value);
            }
        }
        
        [AttributeLogicalName("customerid")]
        [RelationshipSchemaName("quote_customer_contacts")]
        public Contact quote_customer_contacts {
            get {
                return GetRelatedEntity<Contact>("quote_customer_contacts", null);
            }
            set {
                SetRelatedEntity("quote_customer_contacts", null, value);
            }
        }
        
        [RelationshipSchemaName("quote_orders")]
        public IEnumerable<SalesOrder> quote_orders {
            get {
                return GetRelatedEntities<SalesOrder>("quote_orders", null);
            }
            set {
                SetRelatedEntities("quote_orders", null, value);
            }
        }
        
        [AttributeLogicalName("slainvokedid")]
        [RelationshipSchemaName("sla_quote")]
        public SLA sla_quote {
            get {
                return GetRelatedEntity<SLA>("sla_quote", null);
            }
            set {
                SetRelatedEntity("sla_quote", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("system_user_quotes")]
        public SystemUser system_user_quotes {
            get {
                return GetRelatedEntity<SystemUser>("system_user_quotes", null);
            }
            set {
                SetRelatedEntity("system_user_quotes", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_quotes")]
        public Team team_quotes {
            get {
                return GetRelatedEntity<Team>("team_quotes", null);
            }
            set {
                SetRelatedEntity("team_quotes", null, value);
            }
        }
        
        [AttributeLogicalName("transactioncurrencyid")]
        [RelationshipSchemaName("transactioncurrency_quote")]
        public TransactionCurrency transactioncurrency_quote {
            get {
                return GetRelatedEntity<TransactionCurrency>("transactioncurrency_quote", null);
            }
            set {
                SetRelatedEntity("transactioncurrency_quote", null, value);
            }
        }
        
        public static Quote Retrieve(IOrganizationService service, Guid id, params Expression<Func<Quote,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Represents a model to evaluate skills or other related entities.</para>
    /// <para>Display Name: Rating Model</para>
    /// </summary>
    [EntityLogicalName("ratingmodel")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class RatingModel : ExtendedEntity<RatingModelState, RatingModel_StatusCode> {
        
        public const string EntityLogicalName = "ratingmodel";
        
        public const int EntityTypeCode = 1144;
        
        public RatingModel() : 
                base(EntityLogicalName) {
        }
        
        public RatingModel(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("name");
            }
        }
        
        [AttributeLogicalName("ratingmodelid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("ratingmodelid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the rating model.</para>
        /// <para>Display Name: Rating Model</para>
        /// </summary>
        [AttributeLogicalName("ratingmodelid")]
        [DisplayName("Rating Model")]
        public Guid? RatingModelId {
            get {
                return GetAttributeValue<Guid?>("ratingmodelid");
            }
            set {
                SetId("ratingmodelid", value);
            }
        }
        
        /// <summary>
        /// <para>lk_ratingmodel_createdby</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>lk_ratingmodel_createdonbehalfby</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Exchange rate for the currency associated with the ratingmodel with respect to the base currency.</para>
        /// <para>Display Name: ExchangeRate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("ExchangeRate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the maximum rating value.</para>
        /// <para>Display Name: Max Rating Value</para>
        /// </summary>
        [AttributeLogicalName("maxratingvalue")]
        [DisplayName("Max Rating Value")]
        [Range(-200, 200)]
        public int? MaxRatingValue {
            get {
                return GetAttributeValue<int?>("maxratingvalue");
            }
            set {
                SetAttributeValue("maxratingvalue", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the minimum rating value.</para>
        /// <para>Display Name: Min Rating Value</para>
        /// </summary>
        [AttributeLogicalName("minratingvalue")]
        [DisplayName("Min Rating Value")]
        [Range(-200, 200)]
        public int? MinRatingValue {
            get {
                return GetAttributeValue<int?>("minratingvalue");
            }
            set {
                SetAttributeValue("minratingvalue", value);
            }
        }
        
        /// <summary>
        /// <para>lk_ratingmodel_modifiedby</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>lk_ratingmodel_modifiedonbehalfby</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Type the name of the rating model.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string Name {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>owner_ratingmodel</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>business_unit_ratingmodel</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>team_ratingmodel</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>user_ratingmodel</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Type the name of the rating model.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the Rating Model</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public RatingModelState? StateCode {
            get {
                return GetOptionSetValue<RatingModelState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the Rating Model</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public RatingModel_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<RatingModel_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>TransactionCurrency_ratingmodel</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        [RelationshipSchemaName("RatingModel_SyncErrors")]
        public IEnumerable<SyncError> RatingModel_SyncErrors {
            get {
                return GetRelatedEntities<SyncError>("RatingModel_SyncErrors", null);
            }
            set {
                SetRelatedEntities("RatingModel_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("transactioncurrencyid")]
        [RelationshipSchemaName("TransactionCurrency_ratingmodel")]
        public TransactionCurrency TransactionCurrency_ratingmodel {
            get {
                return GetRelatedEntity<TransactionCurrency>("TransactionCurrency_ratingmodel", null);
            }
            set {
                SetRelatedEntity("TransactionCurrency_ratingmodel", null, value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_ratingmodel")]
        public BusinessUnit business_unit_ratingmodel {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_ratingmodel", null);
            }
            set {
                SetRelatedEntity("business_unit_ratingmodel", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_ratingmodel_createdby")]
        public SystemUser lk_ratingmodel_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_ratingmodel_createdby", null);
            }
            set {
                SetRelatedEntity("lk_ratingmodel_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_ratingmodel_createdonbehalfby")]
        public SystemUser lk_ratingmodel_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_ratingmodel_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_ratingmodel_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_ratingmodel_modifiedby")]
        public SystemUser lk_ratingmodel_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_ratingmodel_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_ratingmodel_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_ratingmodel_modifiedonbehalfby")]
        public SystemUser lk_ratingmodel_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_ratingmodel_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_ratingmodel_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("ratingmodel_Teams")]
        public IEnumerable<Team> ratingmodel_Teams {
            get {
                return GetRelatedEntities<Team>("ratingmodel_Teams", null);
            }
            set {
                SetRelatedEntities("ratingmodel_Teams", null, value);
            }
        }
        
        [RelationshipSchemaName("ratingmodel_ratingvalue_RatingModel")]
        public IEnumerable<RatingValue> ratingmodel_ratingvalue_RatingModel {
            get {
                return GetRelatedEntities<RatingValue>("ratingmodel_ratingvalue_RatingModel", null);
            }
            set {
                SetRelatedEntities("ratingmodel_ratingvalue_RatingModel", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_ratingmodel")]
        public Team team_ratingmodel {
            get {
                return GetRelatedEntity<Team>("team_ratingmodel", null);
            }
            set {
                SetRelatedEntity("team_ratingmodel", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_ratingmodel")]
        public SystemUser user_ratingmodel {
            get {
                return GetRelatedEntity<SystemUser>("user_ratingmodel", null);
            }
            set {
                SetRelatedEntity("user_ratingmodel", null, value);
            }
        }
        
        public static RatingModel Retrieve(IOrganizationService service, Guid id, params Expression<Func<RatingModel,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>A unique value associated with a rating model that allows providing a user friendly rating value.</para>
    /// <para>Display Name: Rating Value</para>
    /// </summary>
    [EntityLogicalName("ratingvalue")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class RatingValue : ExtendedEntity<RatingValueState, RatingValue_StatusCode> {
        
        public const string EntityLogicalName = "ratingvalue";
        
        public const int EntityTypeCode = 1142;
        
        public RatingValue() : 
                base(EntityLogicalName) {
        }
        
        public RatingValue(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("name");
            }
        }
        
        [AttributeLogicalName("ratingvalueid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("ratingvalueid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the rating value.</para>
        /// <para>Display Name: Rating Value</para>
        /// </summary>
        [AttributeLogicalName("ratingvalueid")]
        [DisplayName("Rating Value")]
        public Guid? RatingValueId {
            get {
                return GetAttributeValue<Guid?>("ratingvalueid");
            }
            set {
                SetId("ratingvalueid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the record.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Exchange rate for the currency associated with the ratingvalue with respect to the base currency.</para>
        /// <para>Display Name: ExchangeRate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("ExchangeRate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who modified the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who modified the record.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Type a name that represents a rating value such as familiar, good, proficient etc.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string Name {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Owner Id</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the business unit that owns the record</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the team that owns the record.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the user that owns the record.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Type a name that represents a rating value such as familiar, good, proficient etc.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>ratingmodel_ratingvalue_RatingModel</para>
        /// <para>Display Name: Rating Model</para>
        /// </summary>
        [AttributeLogicalName("ratingmodel")]
        [DisplayName("Rating Model")]
        public EntityReference RatingModel {
            get {
                return GetAttributeValue<EntityReference>("ratingmodel");
            }
            set {
                SetAttributeValue("ratingmodel", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the Rating Value</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public RatingValueState? StateCode {
            get {
                return GetOptionSetValue<RatingValueState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the Rating Value</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public RatingValue_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<RatingValue_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>TransactionCurrency_ratingvalue</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Type a rating value which is unique to the rating model it is associated with and lies within the range specified on the model.</para>
        /// <para>Display Name: Value</para>
        /// </summary>
        [AttributeLogicalName("value")]
        [DisplayName("Value")]
        [Range(-200, 200)]
        public int? Value {
            get {
                return GetAttributeValue<int?>("value");
            }
            set {
                SetAttributeValue("value", value);
            }
        }
        
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        [RelationshipSchemaName("RatingValue_SyncErrors")]
        public IEnumerable<SyncError> RatingValue_SyncErrors {
            get {
                return GetRelatedEntities<SyncError>("RatingValue_SyncErrors", null);
            }
            set {
                SetRelatedEntities("RatingValue_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("transactioncurrencyid")]
        [RelationshipSchemaName("TransactionCurrency_ratingvalue")]
        public TransactionCurrency TransactionCurrency_ratingvalue {
            get {
                return GetRelatedEntity<TransactionCurrency>("TransactionCurrency_ratingvalue", null);
            }
            set {
                SetRelatedEntity("TransactionCurrency_ratingvalue", null, value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_ratingvalue")]
        public BusinessUnit business_unit_ratingvalue {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_ratingvalue", null);
            }
            set {
                SetRelatedEntity("business_unit_ratingvalue", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_ratingvalue_createdby")]
        public SystemUser lk_ratingvalue_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_ratingvalue_createdby", null);
            }
            set {
                SetRelatedEntity("lk_ratingvalue_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_ratingvalue_createdonbehalfby")]
        public SystemUser lk_ratingvalue_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_ratingvalue_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_ratingvalue_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_ratingvalue_modifiedby")]
        public SystemUser lk_ratingvalue_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_ratingvalue_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_ratingvalue_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_ratingvalue_modifiedonbehalfby")]
        public SystemUser lk_ratingvalue_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_ratingvalue_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_ratingvalue_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("ratingmodel")]
        [RelationshipSchemaName("ratingmodel_ratingvalue_RatingModel")]
        public RatingModel ratingmodel_ratingvalue_RatingModel {
            get {
                return GetRelatedEntity<RatingModel>("ratingmodel_ratingvalue_RatingModel", null);
            }
            set {
                SetRelatedEntity("ratingmodel_ratingvalue_RatingModel", null, value);
            }
        }
        
        [RelationshipSchemaName("ratingvalue_Teams")]
        public IEnumerable<Team> ratingvalue_Teams {
            get {
                return GetRelatedEntities<Team>("ratingvalue_Teams", null);
            }
            set {
                SetRelatedEntities("ratingvalue_Teams", null, value);
            }
        }
        
        [RelationshipSchemaName("ratingvalue_bookableresourcecharacteristic_RatingValue")]
        public IEnumerable<BookableResourceCharacteristic> ratingvalue_bookableresourcecharacteristic_RatingValue {
            get {
                return GetRelatedEntities<BookableResourceCharacteristic>("ratingvalue_bookableresourcecharacteristic_RatingValue", null);
            }
            set {
                SetRelatedEntities("ratingvalue_bookableresourcecharacteristic_RatingValue", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_ratingvalue")]
        public Team team_ratingvalue {
            get {
                return GetRelatedEntity<Team>("team_ratingvalue", null);
            }
            set {
                SetRelatedEntity("team_ratingvalue", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_ratingvalue")]
        public SystemUser user_ratingvalue {
            get {
                return GetRelatedEntity<SystemUser>("user_ratingvalue", null);
            }
            set {
                SetRelatedEntity("user_ratingvalue", null, value);
            }
        }
        
        public static RatingValue Retrieve(IOrganizationService service, Guid id, params Expression<Func<RatingValue,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>The Master appointment of a recurring appointment series.</para>
    /// <para>Display Name: Recurring Appointment</para>
    /// </summary>
    [EntityLogicalName("recurringappointmentmaster")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class RecurringAppointmentMaster : ExtendedEntity<RecurringAppointmentMasterState, RecurringAppointmentMaster_StatusCode> {
        
        public const string EntityLogicalName = "recurringappointmentmaster";
        
        public const int EntityTypeCode = 4251;
        
        public RecurringAppointmentMaster() : 
                base(EntityLogicalName) {
        }
        
        public RecurringAppointmentMaster(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("subject");
            }
        }
        
        [AttributeLogicalName("activityid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("activityid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the recurring appointment series.</para>
        /// <para>Display Name: Recurring Appointment</para>
        /// </summary>
        [AttributeLogicalName("activityid")]
        [DisplayName("Recurring Appointment")]
        public Guid? ActivityId {
            get {
                return GetAttributeValue<Guid?>("activityid");
            }
            set {
                SetId("activityid", value);
            }
        }
        
        /// <summary>
        /// <para>Type of activity.</para>
        /// <para>Display Name: Activity Type</para>
        /// </summary>
        [AttributeLogicalName("activitytypecode")]
        [DisplayName("Activity Type")]
        public string ActivityTypeCode {
            get {
                return GetAttributeValue<string>("activitytypecode");
            }
        }
        
        /// <summary>
        /// <para>Type a category to identify the recurring appointment type, such as status meeting or service call, to tie the appointment to a business group or function.</para>
        /// <para>Display Name: Category</para>
        /// </summary>
        [AttributeLogicalName("category")]
        [DisplayName("Category")]
        [MaxLength(250)]
        public string Category {
            get {
                return GetAttributeValue<string>("category");
            }
            set {
                SetAttributeValue("category", value);
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record on behalf of another user.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>The day of the month on which the recurring appointment occurs.</para>
        /// <para>Display Name: Day Of Month</para>
        /// </summary>
        [AttributeLogicalName("dayofmonth")]
        [DisplayName("Day Of Month")]
        [Range(1, 31)]
        public int? DayOfMonth {
            get {
                return GetAttributeValue<int?>("dayofmonth");
            }
            set {
                SetAttributeValue("dayofmonth", value);
            }
        }
        
        /// <summary>
        /// <para>Bitmask that represents the days of the week on which the recurring appointment occurs.</para>
        /// <para>Display Name: Days Of Week Mask</para>
        /// </summary>
        [AttributeLogicalName("daysofweekmask")]
        [DisplayName("Days Of Week Mask")]
        [Range(1, 127)]
        public int? DaysOfWeekMask {
            get {
                return GetAttributeValue<int?>("daysofweekmask");
            }
            set {
                SetAttributeValue("daysofweekmask", value);
            }
        }
        
        /// <summary>
        /// <para>List of deleted instances of the recurring appointment series.</para>
        /// <para>Display Name: Deleted Appointments</para>
        /// </summary>
        [AttributeLogicalName("deletedexceptionslist")]
        [DisplayName("Deleted Appointments")]
        public string DeletedExceptionsList {
            get {
                return GetAttributeValue<string>("deletedexceptionslist");
            }
        }
        
        /// <summary>
        /// <para>Type additional information to describe the recurring appointment, such as key talking points or objectives.</para>
        /// <para>Display Name: Description</para>
        /// </summary>
        [AttributeLogicalName("description")]
        [DisplayName("Description")]
        public string Description {
            get {
                return GetAttributeValue<string>("description");
            }
            set {
                SetAttributeValue("description", value);
            }
        }
        
        /// <summary>
        /// <para>Duration of the recurring appointment series in minutes.</para>
        /// <para>Display Name: Duration</para>
        /// </summary>
        [AttributeLogicalName("duration")]
        [DisplayName("Duration")]
        [Range(0, 2147483647)]
        public int? Duration {
            get {
                return GetAttributeValue<int?>("duration");
            }
            set {
                SetAttributeValue("duration", value);
            }
        }
        
        /// <summary>
        /// <para>Actual end date of the recurring appointment series based on the specified end date and recurrence pattern.</para>
        /// <para>Display Name: Effective End Date</para>
        /// </summary>
        [AttributeLogicalName("effectiveenddate")]
        [DisplayName("Effective End Date")]
        public DateTime? EffectiveEndDate {
            get {
                return GetAttributeValue<DateTime?>("effectiveenddate");
            }
            set {
                SetAttributeValue("effectiveenddate", value);
            }
        }
        
        /// <summary>
        /// <para>Actual start date of the recurring appointment series based on the specified start date and recurrence pattern.</para>
        /// <para>Display Name: Effective Start Date</para>
        /// </summary>
        [AttributeLogicalName("effectivestartdate")]
        [DisplayName("Effective Start Date")]
        public DateTime? EffectiveStartDate {
            get {
                return GetAttributeValue<DateTime?>("effectivestartdate");
            }
            set {
                SetAttributeValue("effectivestartdate", value);
            }
        }
        
        /// <summary>
        /// <para>End time of the associated activity.</para>
        /// <para>Display Name: Pattern End Time</para>
        /// </summary>
        [AttributeLogicalName("endtime")]
        [DisplayName("Pattern End Time")]
        public DateTime? EndTime {
            get {
                return GetAttributeValue<DateTime?>("endtime");
            }
            set {
                SetAttributeValue("endtime", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("Exchange Rate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>State code to indicate whether the recurring appointment series is expanded fully or partially.</para>
        /// <para>Display Name: Expansion State Code</para>
        /// </summary>
        [AttributeLogicalName("expansionstatecode")]
        [DisplayName("Expansion State Code")]
        public RecurringAppointmentMaster_ExpansionStateCode? ExpansionStateCode {
            get {
                return GetOptionSetValue<RecurringAppointmentMaster_ExpansionStateCode>("expansionstatecode");
            }
        }
        
        /// <summary>
        /// <para>First day of week for the recurrence pattern.</para>
        /// <para>Display Name: First Day Of Week</para>
        /// </summary>
        [AttributeLogicalName("firstdayofweek")]
        [DisplayName("First Day Of Week")]
        [Range(0, 6)]
        public int? FirstDayOfWeek {
            get {
                return GetAttributeValue<int?>("firstdayofweek");
            }
            set {
                SetAttributeValue("firstdayofweek", value);
            }
        }
        
        /// <summary>
        /// <para>Unique Outlook identifier to correlate recurring appointment series across Exchange mailboxes.</para>
        /// <para>Display Name: Outlook Recurring Appointment Master</para>
        /// </summary>
        [AttributeLogicalName("globalobjectid")]
        [DisplayName("Outlook Recurring Appointment Master")]
        [MaxLength(300)]
        public string GlobalObjectId {
            get {
                return GetAttributeValue<string>("globalobjectid");
            }
            set {
                SetAttributeValue("globalobjectid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the recurring appointment series for which the recurrence information was updated. </para>
        /// <para>Display Name: Group Id</para>
        /// </summary>
        [AttributeLogicalName("groupid")]
        [DisplayName("Group Id")]
        public EntityReference GroupId {
            get {
                return GetAttributeValue<EntityReference>("groupid");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the data import or data migration that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Specifies the recurring appointment series to occur on every Nth day of a month. Valid for monthly and yearly recurrence patterns only.</para>
        /// <para>Display Name: Instance</para>
        /// </summary>
        [AttributeLogicalName("instance")]
        [DisplayName("Instance")]
        public RecurringAppointmentMaster_Instance? Instance {
            get {
                return GetOptionSetValue<RecurringAppointmentMaster_Instance>("instance");
            }
            set {
                SetOptionSetValue("instance", value);
            }
        }
        
        /// <summary>
        /// <para>Type of instance of a recurring appointment series.</para>
        /// <para>Display Name: Appointment Type</para>
        /// </summary>
        [AttributeLogicalName("instancetypecode")]
        [DisplayName("Appointment Type")]
        public RecurringAppointmentMaster_InstanceTypeCode? InstanceTypeCode {
            get {
                return GetOptionSetValue<RecurringAppointmentMaster_InstanceTypeCode>("instancetypecode");
            }
        }
        
        /// <summary>
        /// <para>Number of units of a given recurrence type between occurrences.</para>
        /// <para>Display Name: Interval</para>
        /// </summary>
        [AttributeLogicalName("interval")]
        [DisplayName("Interval")]
        [Range(1, 1000)]
        public int? Interval {
            get {
                return GetAttributeValue<int?>("interval");
            }
            set {
                SetAttributeValue("interval", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the recurring appointment is an all-day event to make sure that the required resources are scheduled for the full day.</para>
        /// <para>Display Name: All Day Event</para>
        /// </summary>
        [AttributeLogicalName("isalldayevent")]
        [DisplayName("All Day Event")]
        public bool? IsAllDayEvent {
            get {
                return GetAttributeValue<bool?>("isalldayevent");
            }
            set {
                SetAttributeValue("isalldayevent", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the recurring appointment series was billed as part of resolving a case.</para>
        /// <para>Display Name: Is Billed</para>
        /// </summary>
        [AttributeLogicalName("isbilled")]
        [DisplayName("Is Billed")]
        public bool? IsBilled {
            get {
                return GetAttributeValue<bool?>("isbilled");
            }
            set {
                SetAttributeValue("isbilled", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Is Private</para>
        /// </summary>
        [AttributeLogicalName("ismapiprivate")]
        [DisplayName("Is Private")]
        public bool? IsMapiPrivate {
            get {
                return GetAttributeValue<bool?>("ismapiprivate");
            }
            set {
                SetAttributeValue("ismapiprivate", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the recurring appointment series should occur after every N months. Valid for monthly recurrence pattern only.</para>
        /// <para>Display Name: Nth Monthly</para>
        /// </summary>
        [AttributeLogicalName("isnthmonthly")]
        [DisplayName("Nth Monthly")]
        public bool? IsNthMonthly {
            get {
                return GetAttributeValue<bool?>("isnthmonthly");
            }
            set {
                SetAttributeValue("isnthmonthly", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the recurring appointment series should occur after every N years. Valid for yearly recurrence pattern only.</para>
        /// <para>Display Name: Nth Yearly</para>
        /// </summary>
        [AttributeLogicalName("isnthyearly")]
        [DisplayName("Nth Yearly")]
        public bool? IsNthYearly {
            get {
                return GetAttributeValue<bool?>("isnthyearly");
            }
            set {
                SetAttributeValue("isnthyearly", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Regenerate</para>
        /// </summary>
        [AttributeLogicalName("isregenerate")]
        [DisplayName("Regenerate")]
        public bool? IsRegenerate {
            get {
                return GetAttributeValue<bool?>("isregenerate");
            }
            set {
                SetAttributeValue("isregenerate", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the activity is a regular activity type or event type.</para>
        /// <para>Display Name: Is Regular Activity</para>
        /// </summary>
        [AttributeLogicalName("isregularactivity")]
        [DisplayName("Is Regular Activity")]
        public bool? IsRegularActivity {
            get {
                return GetAttributeValue<bool?>("isregularactivity");
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: IsUnsafe</para>
        /// </summary>
        [AttributeLogicalName("isunsafe")]
        [DisplayName("IsUnsafe")]
        [Range(0, 2147483647)]
        public int? IsUnsafe {
            get {
                return GetAttributeValue<int?>("isunsafe");
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the weekly recurrence pattern is a daily weekday pattern. Valid for weekly recurrence pattern only.</para>
        /// <para>Display Name: Every Weekday</para>
        /// </summary>
        [AttributeLogicalName("isweekdaypattern")]
        [DisplayName("Every Weekday")]
        public bool? IsWeekDayPattern {
            get {
                return GetAttributeValue<bool?>("isweekdaypattern");
            }
            set {
                SetAttributeValue("isweekdaypattern", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the recurring appointment series was created from a workflow rule.</para>
        /// <para>Display Name: Is Workflow Created</para>
        /// </summary>
        [AttributeLogicalName("isworkflowcreated")]
        [DisplayName("Is Workflow Created")]
        public bool? IsWorkflowCreated {
            get {
                return GetAttributeValue<bool?>("isworkflowcreated");
            }
            set {
                SetAttributeValue("isworkflowcreated", value);
            }
        }
        
        /// <summary>
        /// <para>Date of last expanded instance of a recurring appointment series.</para>
        /// <para>Display Name: Last Expanded Instance Date</para>
        /// </summary>
        [AttributeLogicalName("lastexpandedinstancedate")]
        [DisplayName("Last Expanded Instance Date")]
        public DateTime? LastExpandedInstanceDate {
            get {
                return GetAttributeValue<DateTime?>("lastexpandedinstancedate");
            }
        }
        
        /// <summary>
        /// <para>Type the location where the recurring appointment will take place, such as a conference room or customer office.</para>
        /// <para>Display Name: Location</para>
        /// </summary>
        [AttributeLogicalName("location")]
        [DisplayName("Location")]
        [MaxLength(200)]
        public string Location {
            get {
                return GetAttributeValue<string>("location");
            }
            set {
                SetAttributeValue("location", value);
            }
        }
        
        /// <summary>
        /// <para>Shows who last updated the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Shows who last updated the record on behalf of another user.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Indicates the month of the year for the recurrence pattern.</para>
        /// <para>Display Name: Month Of Year</para>
        /// </summary>
        [AttributeLogicalName("monthofyear")]
        [DisplayName("Month Of Year")]
        public recurrencerule_monthofyear? MonthOfYear {
            get {
                return GetOptionSetValue<recurrencerule_monthofyear>("monthofyear");
            }
            set {
                SetOptionSetValue("monthofyear", value);
            }
        }
        
        /// <summary>
        /// <para>Date of the next expanded instance of a recurring appointment series.</para>
        /// <para>Display Name: Next Expanded Instance Date</para>
        /// </summary>
        [AttributeLogicalName("nextexpansioninstancedate")]
        [DisplayName("Next Expanded Instance Date")]
        public DateTime? NextExpansionInstanceDate {
            get {
                return GetAttributeValue<DateTime?>("nextexpansioninstancedate");
            }
        }
        
        /// <summary>
        /// <para>Number of appointment occurrences in a recurring appointment series.</para>
        /// <para>Display Name: Occurrences</para>
        /// </summary>
        [AttributeLogicalName("occurrences")]
        [DisplayName("Occurrences")]
        [Range(1, 999)]
        public int? Occurrences {
            get {
                return GetAttributeValue<int?>("occurrences");
            }
            set {
                SetAttributeValue("occurrences", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the account, contact, lead, user, or other equipment resources that are not needed at the recurring appointment, but can optionally attend.</para>
        /// <para>Display Name: Optional Attendees</para>
        /// </summary>
        [AttributeLogicalName("optionalattendees")]
        [DisplayName("Optional Attendees")]
        public IEnumerable<ActivityParty> OptionalAttendees {
            get {
                return GetEntityCollection<ActivityParty>("optionalattendees");
            }
            set {
                SetEntityCollection("optionalattendees", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the user who is in charge of coordinating or leading the recurring appointment to make sure the appointment is displayed in the user's My Activities view.</para>
        /// <para>Display Name: Organizer</para>
        /// </summary>
        [AttributeLogicalName("organizer")]
        [DisplayName("Organizer")]
        public IEnumerable<ActivityParty> Organizer {
            get {
                return GetEntityCollection<ActivityParty>("organizer");
            }
            set {
                SetEntityCollection("organizer", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the Microsoft Office Outlook recurring appointment series owner that correlates to the PR_OWNER_APPT_ID MAPI property.</para>
        /// <para>Display Name: Outlook Recurring Appointment Master Owner</para>
        /// </summary>
        [AttributeLogicalName("outlookownerapptid")]
        [DisplayName("Outlook Recurring Appointment Master Owner")]
        [Range(-2147483648, 2147483647)]
        public int? OutlookOwnerApptId {
            get {
                return GetAttributeValue<int?>("outlookownerapptid");
            }
            set {
                SetAttributeValue("outlookownerapptid", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the user or team who is assigned to manage the record. This field is updated every time the record is assigned to a different user.</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the business unit that owns the recurring appointment series.</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the team who owns the recurring appointment series.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who owns the recurring appointment series.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>End date of the recurrence range.</para>
        /// <para>Display Name: Recurrence Range End</para>
        /// </summary>
        [AttributeLogicalName("patternenddate")]
        [DisplayName("Recurrence Range End")]
        public DateTime? PatternEndDate {
            get {
                return GetAttributeValue<DateTime?>("patternenddate");
            }
            set {
                SetAttributeValue("patternenddate", value);
            }
        }
        
        /// <summary>
        /// <para>Select the type of end date for the recurring appointment, such as no end date or the number of occurrences.</para>
        /// <para>Display Name: Pattern End Type</para>
        /// </summary>
        [AttributeLogicalName("patternendtype")]
        [DisplayName("Pattern End Type")]
        public RecurringAppointmentMaster_PatternEndType? PatternEndType {
            get {
                return GetOptionSetValue<RecurringAppointmentMaster_PatternEndType>("patternendtype");
            }
            set {
                SetOptionSetValue("patternendtype", value);
            }
        }
        
        /// <summary>
        /// <para>Start date of the recurrence range.</para>
        /// <para>Display Name: Recurrence Range Start</para>
        /// </summary>
        [AttributeLogicalName("patternstartdate")]
        [DisplayName("Recurrence Range Start")]
        public DateTime? PatternStartDate {
            get {
                return GetAttributeValue<DateTime?>("patternstartdate");
            }
            set {
                SetAttributeValue("patternstartdate", value);
            }
        }
        
        /// <summary>
        /// <para>Type a short description about the objective or primary topic of the recurring appointment.</para>
        /// <para>Display Name: Subject</para>
        /// </summary>
        [AttributeLogicalName("subject")]
        [DisplayName("Subject")]
        [MaxLength(800)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("subject");
            }
            set {
                SetAttributeValue("subject", value);
            }
        }
        
        /// <summary>
        /// <para>Select the priority so that preferred customers or critical issues are handled quickly.</para>
        /// <para>Display Name: Priority</para>
        /// </summary>
        [AttributeLogicalName("prioritycode")]
        [DisplayName("Priority")]
        public RecurringAppointmentMaster_PriorityCode? PriorityCode {
            get {
                return GetOptionSetValue<RecurringAppointmentMaster_PriorityCode>("prioritycode");
            }
            set {
                SetOptionSetValue("prioritycode", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the process.</para>
        /// <para>Display Name: Process</para>
        /// </summary>
        [AttributeLogicalName("processid")]
        [DisplayName("Process")]
        public Guid? ProcessId {
            get {
                return GetAttributeValue<Guid?>("processid");
            }
            set {
                SetAttributeValue("processid", value);
            }
        }
        
        /// <summary>
        /// <para>Select the pattern type for the recurring appointment to indicate whether the appointment occurs daily, weekly, monthly, or yearly.</para>
        /// <para>Display Name: Recurrence Frequency</para>
        /// </summary>
        [AttributeLogicalName("recurrencepatterntype")]
        [DisplayName("Recurrence Frequency")]
        public RecurringAppointmentMaster_RecurrencePatternType? RecurrencePatternType {
            get {
                return GetOptionSetValue<RecurringAppointmentMaster_RecurrencePatternType>("recurrencepatterntype");
            }
            set {
                SetOptionSetValue("recurrencepatterntype", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the object with which the recurring appointment series is associated.</para>
        /// <para>Display Name: Regarding</para>
        /// </summary>
        [AttributeLogicalName("regardingobjectid")]
        [DisplayName("Regarding")]
        public EntityReference RegardingObjectId {
            get {
                return GetAttributeValue<EntityReference>("regardingobjectid");
            }
            set {
                SetAttributeValue("regardingobjectid", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the account, contact, lead, user, or other equipment resources that are required to attend the recurring appointment.</para>
        /// <para>Display Name: Required Attendees</para>
        /// </summary>
        [AttributeLogicalName("requiredattendees")]
        [DisplayName("Required Attendees")]
        public IEnumerable<ActivityParty> RequiredAttendees {
            get {
                return GetEntityCollection<ActivityParty>("requiredattendees");
            }
            set {
                SetEntityCollection("requiredattendees", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the recurrence rule that is associated with the recurring appointment series.</para>
        /// <para>Display Name: Recurrence Rule</para>
        /// </summary>
        [AttributeLogicalName("ruleid")]
        [DisplayName("Recurrence Rule")]
        public EntityReference RuleId {
            get {
                return GetAttributeValue<EntityReference>("ruleid");
            }
        }
        
        /// <summary>
        /// <para>Scheduled end time of the recurring appointment series.</para>
        /// <para>Display Name: End Time</para>
        /// </summary>
        [AttributeLogicalName("scheduledend")]
        [DisplayName("End Time")]
        public DateTime? ScheduledEnd {
            get {
                return GetAttributeValue<DateTime?>("scheduledend");
            }
        }
        
        /// <summary>
        /// <para>Scheduled start time of the recurring appointment series.</para>
        /// <para>Display Name: Start Time</para>
        /// </summary>
        [AttributeLogicalName("scheduledstart")]
        [DisplayName("Start Time")]
        public DateTime? ScheduledStart {
            get {
                return GetAttributeValue<DateTime?>("scheduledstart");
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the recurring appointment series is active or inactive.</para>
        /// <para>Display Name: Series Status</para>
        /// </summary>
        [AttributeLogicalName("seriesstatus")]
        [DisplayName("Series Status")]
        public bool? SeriesStatus {
            get {
                return GetAttributeValue<bool?>("seriesstatus");
            }
            set {
                SetAttributeValue("seriesstatus", value);
            }
        }
        
        /// <summary>
        /// <para>service_recurringappointmentmasters</para>
        /// <para>Display Name: Service</para>
        /// </summary>
        [AttributeLogicalName("serviceid")]
        [DisplayName("Service")]
        public EntityReference ServiceId {
            get {
                return GetAttributeValue<EntityReference>("serviceid");
            }
            set {
                SetAttributeValue("serviceid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time by which the activities are sorted.</para>
        /// <para>Display Name: Sort Date</para>
        /// </summary>
        [AttributeLogicalName("sortdate")]
        [DisplayName("Sort Date")]
        public DateTime? SortDate {
            get {
                return GetAttributeValue<DateTime?>("sortdate");
            }
            set {
                SetAttributeValue("sortdate", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the stage.</para>
        /// <para>Display Name: (Deprecated) Process Stage</para>
        /// </summary>
        [AttributeLogicalName("stageid")]
        [DisplayName("(Deprecated) Process Stage")]
        public Guid? StageId {
            get {
                return GetAttributeValue<Guid?>("stageid");
            }
            set {
                SetAttributeValue("stageid", value);
            }
        }
        
        /// <summary>
        /// <para>Start time of the recurring appointment series.</para>
        /// <para>Display Name: Pattern Start Time</para>
        /// </summary>
        [AttributeLogicalName("starttime")]
        [DisplayName("Pattern Start Time")]
        public DateTime? StartTime {
            get {
                return GetAttributeValue<DateTime?>("starttime");
            }
            set {
                SetAttributeValue("starttime", value);
            }
        }
        
        /// <summary>
        /// <para>Shows whether the recurring appointment is open, scheduled, completed, or canceled. Completed and canceled appointments are read-only and can't be edited.</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public RecurringAppointmentMasterState? StateCode {
            get {
                return GetOptionSetValue<RecurringAppointmentMasterState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the recurring appointment's status.</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public RecurringAppointmentMaster_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<RecurringAppointmentMaster_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>Type a subcategory to identify the recurring appointment type and relate the activity to a specific product, sales region, business group, or other function.</para>
        /// <para>Display Name: Sub-Category</para>
        /// </summary>
        [AttributeLogicalName("subcategory")]
        [DisplayName("Sub-Category")]
        [MaxLength(250)]
        public string Subcategory {
            get {
                return GetAttributeValue<string>("subcategory");
            }
            set {
                SetAttributeValue("subcategory", value);
            }
        }
        
        /// <summary>
        /// <para>Type a short description about the objective or primary topic of the recurring appointment.</para>
        /// <para>Display Name: Subject</para>
        /// </summary>
        [AttributeLogicalName("subject")]
        [DisplayName("Subject")]
        [MaxLength(800)]
        public string Subject {
            get {
                return GetAttributeValue<string>("subject");
            }
            set {
                SetAttributeValue("subject", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// </summary>
        [AttributeLogicalName("subscriptionid")]
        public Guid? SubscriptionId {
            get {
                return GetAttributeValue<Guid?>("subscriptionid");
            }
            set {
                SetAttributeValue("subscriptionid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the local currency for the record to make sure budgets are reported in the correct currency.</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: (Deprecated) Traversed Path</para>
        /// </summary>
        [AttributeLogicalName("traversedpath")]
        [DisplayName("(Deprecated) Traversed Path")]
        [MaxLength(1250)]
        public string TraversedPath {
            get {
                return GetAttributeValue<string>("traversedpath");
            }
            set {
                SetAttributeValue("traversedpath", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Account_RecurringAppointmentMasters")]
        public Account Account_RecurringAppointmentMasters {
            get {
                return GetRelatedEntity<Account>("Account_RecurringAppointmentMasters", null);
            }
            set {
                SetRelatedEntity("Account_RecurringAppointmentMasters", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("CampaignActivity_RecurringAppointmentMasters")]
        public CampaignActivity CampaignActivity_RecurringAppointmentMasters {
            get {
                return GetRelatedEntity<CampaignActivity>("CampaignActivity_RecurringAppointmentMasters", null);
            }
            set {
                SetRelatedEntity("CampaignActivity_RecurringAppointmentMasters", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Campaign_RecurringAppointmentMasters")]
        public Campaign Campaign_RecurringAppointmentMasters {
            get {
                return GetRelatedEntity<Campaign>("Campaign_RecurringAppointmentMasters", null);
            }
            set {
                SetRelatedEntity("Campaign_RecurringAppointmentMasters", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Contact_RecurringAppointmentMasters")]
        public Contact Contact_RecurringAppointmentMasters {
            get {
                return GetRelatedEntity<Contact>("Contact_RecurringAppointmentMasters", null);
            }
            set {
                SetRelatedEntity("Contact_RecurringAppointmentMasters", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Contract_RecurringAppointmentMasters")]
        public Contract Contract_RecurringAppointmentMasters {
            get {
                return GetRelatedEntity<Contract>("Contract_RecurringAppointmentMasters", null);
            }
            set {
                SetRelatedEntity("Contract_RecurringAppointmentMasters", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Incident_RecurringAppointmentMasters")]
        public Incident Incident_RecurringAppointmentMasters {
            get {
                return GetRelatedEntity<Incident>("Incident_RecurringAppointmentMasters", null);
            }
            set {
                SetRelatedEntity("Incident_RecurringAppointmentMasters", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Invoice_RecurringAppointmentMasters")]
        public Invoice Invoice_RecurringAppointmentMasters {
            get {
                return GetRelatedEntity<Invoice>("Invoice_RecurringAppointmentMasters", null);
            }
            set {
                SetRelatedEntity("Invoice_RecurringAppointmentMasters", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("KnowledgeArticle_RecurringAppointmentMasters")]
        public KnowledgeArticle KnowledgeArticle_RecurringAppointmentMasters {
            get {
                return GetRelatedEntity<KnowledgeArticle>("KnowledgeArticle_RecurringAppointmentMasters", null);
            }
            set {
                SetRelatedEntity("KnowledgeArticle_RecurringAppointmentMasters", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Lead_RecurringAppointmentMasters")]
        public Lead Lead_RecurringAppointmentMasters {
            get {
                return GetRelatedEntity<Lead>("Lead_RecurringAppointmentMasters", null);
            }
            set {
                SetRelatedEntity("Lead_RecurringAppointmentMasters", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Opportunity_RecurringAppointmentMasters")]
        public Opportunity Opportunity_RecurringAppointmentMasters {
            get {
                return GetRelatedEntity<Opportunity>("Opportunity_RecurringAppointmentMasters", null);
            }
            set {
                SetRelatedEntity("Opportunity_RecurringAppointmentMasters", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Quote_RecurringAppointmentMasters")]
        public Quote Quote_RecurringAppointmentMasters {
            get {
                return GetRelatedEntity<Quote>("Quote_RecurringAppointmentMasters", null);
            }
            set {
                SetRelatedEntity("Quote_RecurringAppointmentMasters", null, value);
            }
        }
        
        [RelationshipSchemaName("RecurringAppointmentMaster_QueueItem")]
        public IEnumerable<QueueItem> RecurringAppointmentMaster_QueueItem {
            get {
                return GetRelatedEntities<QueueItem>("RecurringAppointmentMaster_QueueItem", null);
            }
            set {
                SetRelatedEntities("RecurringAppointmentMaster_QueueItem", null, value);
            }
        }
        
        [RelationshipSchemaName("RecurringAppointmentMaster_SyncErrors")]
        public IEnumerable<SyncError> RecurringAppointmentMaster_SyncErrors {
            get {
                return GetRelatedEntities<SyncError>("RecurringAppointmentMaster_SyncErrors", null);
            }
            set {
                SetRelatedEntities("RecurringAppointmentMaster_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("SalesOrder_RecurringAppointmentMasters")]
        public SalesOrder SalesOrder_RecurringAppointmentMasters {
            get {
                return GetRelatedEntity<SalesOrder>("SalesOrder_RecurringAppointmentMasters", null);
            }
            set {
                SetRelatedEntity("SalesOrder_RecurringAppointmentMasters", null, value);
            }
        }
        
        [AttributeLogicalName("transactioncurrencyid")]
        [RelationshipSchemaName("TransactionCurrency_RecurringAppointmentMaster")]
        public TransactionCurrency TransactionCurrency_RecurringAppointmentMaster {
            get {
                return GetRelatedEntity<TransactionCurrency>("TransactionCurrency_RecurringAppointmentMaster", null);
            }
            set {
                SetRelatedEntity("TransactionCurrency_RecurringAppointmentMaster", null, value);
            }
        }
        
        [AttributeLogicalName("activityid")]
        [RelationshipSchemaName("activity_pointer_recurringappointmentmaster")]
        public ActivityPointer activity_pointer_recurringappointmentmaster {
            get {
                return GetRelatedEntity<ActivityPointer>("activity_pointer_recurringappointmentmaster", null);
            }
            set {
                SetRelatedEntity("activity_pointer_recurringappointmentmaster", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("bookableresourcebooking_RecurringAppointmentMasters")]
        public BookableResourceBooking bookableresourcebooking_RecurringAppointmentMasters {
            get {
                return GetRelatedEntity<BookableResourceBooking>("bookableresourcebooking_RecurringAppointmentMasters", null);
            }
            set {
                SetRelatedEntity("bookableresourcebooking_RecurringAppointmentMasters", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("bookableresourcebookingheader_RecurringAppointmentMasters")]
        public BookableResourceBookingHeader bookableresourcebookingheader_RecurringAppointmentMasters {
            get {
                return GetRelatedEntity<BookableResourceBookingHeader>("bookableresourcebookingheader_RecurringAppointmentMasters", null);
            }
            set {
                SetRelatedEntity("bookableresourcebookingheader_RecurringAppointmentMasters", null, value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_recurringappointmentmaster_activities")]
        public BusinessUnit business_unit_recurringappointmentmaster_activities {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_recurringappointmentmaster_activities", null);
            }
            set {
                SetRelatedEntity("business_unit_recurringappointmentmaster_activities", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("dg_event_RecurringAppointmentMasters")]
        public dg_event dg_event_RecurringAppointmentMasters {
            get {
                return GetRelatedEntity<dg_event>("dg_event_RecurringAppointmentMasters", null);
            }
            set {
                SetRelatedEntity("dg_event_RecurringAppointmentMasters", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("dg_participant_RecurringAppointmentMasters")]
        public dg_participant dg_participant_RecurringAppointmentMasters {
            get {
                return GetRelatedEntity<dg_participant>("dg_participant_RecurringAppointmentMasters", null);
            }
            set {
                SetRelatedEntity("dg_participant_RecurringAppointmentMasters", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("entitlement_RecurringAppointmentMasters")]
        public Entitlement entitlement_RecurringAppointmentMasters {
            get {
                return GetRelatedEntity<Entitlement>("entitlement_RecurringAppointmentMasters", null);
            }
            set {
                SetRelatedEntity("entitlement_RecurringAppointmentMasters", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_recurringappointmentmaster_createdby")]
        public SystemUser lk_recurringappointmentmaster_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_recurringappointmentmaster_createdby", null);
            }
            set {
                SetRelatedEntity("lk_recurringappointmentmaster_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_recurringappointmentmaster_createdonbehalfby")]
        public SystemUser lk_recurringappointmentmaster_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_recurringappointmentmaster_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_recurringappointmentmaster_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_recurringappointmentmaster_modifiedby")]
        public SystemUser lk_recurringappointmentmaster_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_recurringappointmentmaster_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_recurringappointmentmaster_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_recurringappointmentmaster_modifiedonbehalfby")]
        public SystemUser lk_recurringappointmentmaster_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_recurringappointmentmaster_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_recurringappointmentmaster_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("msdyn_agreement_RecurringAppointmentMasters")]
        public msdyn_agreement msdyn_agreement_RecurringAppointmentMasters {
            get {
                return GetRelatedEntity<msdyn_agreement>("msdyn_agreement_RecurringAppointmentMasters", null);
            }
            set {
                SetRelatedEntity("msdyn_agreement_RecurringAppointmentMasters", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("msdyn_postalbum_RecurringAppointmentMasters")]
        public msdyn_PostAlbum msdyn_postalbum_RecurringAppointmentMasters {
            get {
                return GetRelatedEntity<msdyn_PostAlbum>("msdyn_postalbum_RecurringAppointmentMasters", null);
            }
            set {
                SetRelatedEntity("msdyn_postalbum_RecurringAppointmentMasters", null, value);
            }
        }
        
        [RelationshipSchemaName("recurringappointmentmaster_activity_parties")]
        public IEnumerable<ActivityParty> recurringappointmentmaster_activity_parties {
            get {
                return GetRelatedEntities<ActivityParty>("recurringappointmentmaster_activity_parties", null);
            }
            set {
                SetRelatedEntities("recurringappointmentmaster_activity_parties", null, value);
            }
        }
        
        [RelationshipSchemaName("recurringappointmentmaster_appointment")]
        public IEnumerable<Appointment> recurringappointmentmaster_appointment {
            get {
                return GetRelatedEntities<Appointment>("recurringappointmentmaster_appointment", null);
            }
            set {
                SetRelatedEntities("recurringappointmentmaster_appointment", null, value);
            }
        }
        
        [RelationshipSchemaName("recurringappointmentmaster_campaignresponse")]
        public IEnumerable<CampaignResponse> recurringappointmentmaster_campaignresponse {
            get {
                return GetRelatedEntities<CampaignResponse>("recurringappointmentmaster_campaignresponse", null);
            }
            set {
                SetRelatedEntities("recurringappointmentmaster_campaignresponse", null, value);
            }
        }
        
        [RelationshipSchemaName("recurringappointmentmaster_connections1")]
        public IEnumerable<Connection> recurringappointmentmaster_connections1 {
            get {
                return GetRelatedEntities<Connection>("recurringappointmentmaster_connections1", null);
            }
            set {
                SetRelatedEntities("recurringappointmentmaster_connections1", null, value);
            }
        }
        
        [RelationshipSchemaName("recurringappointmentmaster_connections2")]
        public IEnumerable<Connection> recurringappointmentmaster_connections2 {
            get {
                return GetRelatedEntities<Connection>("recurringappointmentmaster_connections2", null);
            }
            set {
                SetRelatedEntities("recurringappointmentmaster_connections2", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_recurringappointmentmaster")]
        public Team team_recurringappointmentmaster {
            get {
                return GetRelatedEntity<Team>("team_recurringappointmentmaster", null);
            }
            set {
                SetRelatedEntity("team_recurringappointmentmaster", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_recurringappointmentmaster")]
        public SystemUser user_recurringappointmentmaster {
            get {
                return GetRelatedEntity<SystemUser>("user_recurringappointmentmaster", null);
            }
            set {
                SetRelatedEntity("user_recurringappointmentmaster", null, value);
            }
        }
        
        public static RecurringAppointmentMaster Retrieve(IOrganizationService service, Guid id, params Expression<Func<RecurringAppointmentMaster,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Contains information about the tracked service-level KPIs for cases that belong to different customers.</para>
    /// <para>Display Name: SLA</para>
    /// </summary>
    [EntityLogicalName("sla")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class SLA : ExtendedEntity<SLAState, SLA_StatusCode> {
        
        public const string EntityLogicalName = "sla";
        
        public const int EntityTypeCode = 9750;
        
        public SLA() : 
                base(EntityLogicalName) {
        }
        
        public SLA(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("name");
            }
        }
        
        [AttributeLogicalName("slaid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("slaid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the SLA.</para>
        /// <para>Display Name: SLA</para>
        /// </summary>
        [AttributeLogicalName("slaid")]
        [DisplayName("SLA")]
        public Guid? SLAId {
            get {
                return GetAttributeValue<Guid?>("slaid");
            }
            set {
                SetId("slaid", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether this SLA will allow pausing and resuming during the time calculation.</para>
        /// <para>Display Name: Allow Pause and Resume</para>
        /// </summary>
        [AttributeLogicalName("allowpauseresume")]
        [DisplayName("Allow Pause and Resume")]
        public bool? AllowPauseResume {
            get {
                return GetAttributeValue<bool?>("allowpauseresume");
            }
            set {
                SetAttributeValue("allowpauseresume", value);
            }
        }
        
        /// <summary>
        /// <para>Select the field that specifies the date and time from which the SLA items will be calculated for the case record. For example, if you select the Case Created On field, SLA calculation will begin from the time the case is created. </para>
        /// <para>Display Name: Applicable From</para>
        /// </summary>
        [AttributeLogicalName("applicablefrom")]
        [DisplayName("Applicable From")]
        [MaxLength(100)]
        public string ApplicableFrom {
            get {
                return GetAttributeValue<string>("applicablefrom");
            }
            set {
                SetAttributeValue("applicablefrom", value);
            }
        }
        
        /// <summary>
        /// <para>Select the field that specifies the date and time from which the SLA items will be calculated. For example, if you select the Case Created On field, SLA calculation will begin from the time the case is created.</para>
        /// <para>Display Name: Applicable From</para>
        /// </summary>
        [AttributeLogicalName("applicablefrompicklist")]
        [DisplayName("Applicable From")]
        public SLA_ApplicableFromPickList? ApplicableFromPickList {
            get {
                return GetOptionSetValue<SLA_ApplicableFromPickList>("applicablefrompicklist");
            }
            set {
                SetOptionSetValue("applicablefrompicklist", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the business hours for calculating SLA item timelines.</para>
        /// <para>Display Name: Business Hours</para>
        /// </summary>
        [AttributeLogicalName("businesshoursid")]
        [DisplayName("Business Hours")]
        public EntityReference BusinessHoursId {
            get {
                return GetAttributeValue<EntityReference>("businesshoursid");
            }
            set {
                SetAttributeValue("businesshoursid", value);
            }
        }
        
        /// <summary>
        /// <para>Type additional information to describe the SLA</para>
        /// <para>Display Name: ChangedAttributeList</para>
        /// </summary>
        [AttributeLogicalName("changedattributelist")]
        [DisplayName("ChangedAttributeList")]
        [MaxLength(4000)]
        public string ChangedAttributeList {
            get {
                return GetAttributeValue<string>("changedattributelist");
            }
            set {
                SetAttributeValue("changedattributelist", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Component State</para>
        /// </summary>
        [AttributeLogicalName("componentstate")]
        [DisplayName("Component State")]
        public componentstate? ComponentState {
            get {
                return GetOptionSetValue<componentstate>("componentstate");
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record on behalf of another user.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Type additional information to describe the SLA</para>
        /// <para>Display Name: Description</para>
        /// </summary>
        [AttributeLogicalName("description")]
        [DisplayName("Description")]
        [MaxLength(100)]
        public string Description {
            get {
                return GetAttributeValue<string>("description");
            }
            set {
                SetAttributeValue("description", value);
            }
        }
        
        /// <summary>
        /// <para>Exchange rate between the currency associated with the SLA record and the base currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("Exchange Rate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Tells whether this SLA is the default one.</para>
        /// <para>Display Name: Is Default</para>
        /// </summary>
        [AttributeLogicalName("isdefault")]
        [DisplayName("Is Default")]
        public bool? IsDefault {
            get {
                return GetAttributeValue<bool?>("isdefault");
            }
            set {
                SetAttributeValue("isdefault", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Is Managed</para>
        /// </summary>
        [AttributeLogicalName("ismanaged")]
        [DisplayName("Is Managed")]
        public bool? IsManaged {
            get {
                return GetAttributeValue<bool?>("ismanaged");
            }
        }
        
        /// <summary>
        /// <para>Shows who last updated the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record on behalf of another user.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Type a descriptive name of the service level agreement (SLA).</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string Name {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the entity type that the SLA is defined.</para>
        /// <para>Display Name: Object Type Code</para>
        /// </summary>
        [AttributeLogicalName("objecttypecode")]
        [DisplayName("Object Type Code")]
        public SLA_ObjectTypeCode? ObjectTypeCode {
            get {
                return GetOptionSetValue<SLA_ObjectTypeCode>("objecttypecode");
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Record Overwrite Time</para>
        /// </summary>
        [AttributeLogicalName("overwritetime")]
        [DisplayName("Record Overwrite Time")]
        public DateTime? OverwriteTime {
            get {
                return GetAttributeValue<DateTime?>("overwritetime");
            }
        }
        
        /// <summary>
        /// <para>Enter the user or team who owns the SLA. This field is updated every time the item is assigned to a different user.</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the business unit that owns the record</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
            set {
                SetAttributeValue("owningbusinessunit", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the team that owns the record.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
            set {
                SetAttributeValue("owningteam", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the user that owns the record.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
            set {
                SetAttributeValue("owninguser", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the primary entity that the SLA has been created for.</para>
        /// <para>Display Name: Primary Entity</para>
        /// </summary>
        [AttributeLogicalName("primaryentityotc")]
        [DisplayName("Primary Entity")]
        [Range(-2147483648, 2147483647)]
        public int? PrimaryEntityOTC {
            get {
                return GetAttributeValue<int?>("primaryentityotc");
            }
            set {
                SetAttributeValue("primaryentityotc", value);
            }
        }
        
        /// <summary>
        /// <para>Type a descriptive name of the service level agreement (SLA).</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Unique Id</para>
        /// </summary>
        [AttributeLogicalName("slaidunique")]
        [DisplayName("Unique Id")]
        public Guid? SLAIdUnique {
            get {
                return GetAttributeValue<Guid?>("slaidunique");
            }
        }
        
        /// <summary>
        /// <para>Select the type of service level agreement (SLA).</para>
        /// <para>Display Name: SLA Type</para>
        /// </summary>
        [AttributeLogicalName("slatype")]
        [DisplayName("SLA Type")]
        public SLA_SLAType? SLAType {
            get {
                return GetOptionSetValue<SLA_SLAType>("slatype");
            }
            set {
                SetOptionSetValue("slatype", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the associated solution.</para>
        /// <para>Display Name: Solution</para>
        /// </summary>
        [AttributeLogicalName("solutionid")]
        [DisplayName("Solution")]
        public Guid? SolutionId {
            get {
                return GetAttributeValue<Guid?>("solutionid");
            }
        }
        
        /// <summary>
        /// <para>Shows whether the Service Level Agreement (SLA) is active or inactive.</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public SLAState? StateCode {
            get {
                return GetOptionSetValue<SLAState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the status of the service level agreement (SLA).</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public SLA_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<SLA_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the currency associated with the SLA record.</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
        }
        
        /// <summary>
        /// <para>Version number of the SLA.</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Workflow associated with the SLA.</para>
        /// <para>Display Name: Workflow ID</para>
        /// </summary>
        [AttributeLogicalName("workflowid")]
        [DisplayName("Workflow ID")]
        public EntityReference WorkflowId {
            get {
                return GetAttributeValue<EntityReference>("workflowid");
            }
            set {
                SetAttributeValue("workflowid", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Record version</para>
        /// </summary>
        [AttributeLogicalName("slaversion")]
        [DisplayName("Record version")]
        public SLA_slaversion? slaversion {
            get {
                return GetOptionSetValue<SLA_slaversion>("slaversion");
            }
            set {
                SetOptionSetValue("slaversion", value);
            }
        }
        
        [RelationshipSchemaName("SLA_SyncErrors")]
        public IEnumerable<SyncError> SLA_SyncErrors {
            get {
                return GetRelatedEntities<SyncError>("SLA_SyncErrors", null);
            }
            set {
                SetRelatedEntities("SLA_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("transactioncurrencyid")]
        [RelationshipSchemaName("TransactionCurrency_SLA")]
        public TransactionCurrency TransactionCurrency_SLA {
            get {
                return GetRelatedEntity<TransactionCurrency>("TransactionCurrency_SLA", null);
            }
            set {
                SetRelatedEntity("TransactionCurrency_SLA", null, value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_slabase")]
        public BusinessUnit business_unit_slabase {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_slabase", null);
            }
            set {
                SetRelatedEntity("business_unit_slabase", null, value);
            }
        }
        
        [RelationshipSchemaName("campaignactivity_sla_slaid")]
        public IEnumerable<CampaignActivity> campaignactivity_sla_slaid {
            get {
                return GetRelatedEntities<CampaignActivity>("campaignactivity_sla_slaid", null);
            }
            set {
                SetRelatedEntities("campaignactivity_sla_slaid", null, value);
            }
        }
        
        [RelationshipSchemaName("campaignactivity_sla_slainvokedid")]
        public IEnumerable<CampaignActivity> campaignactivity_sla_slainvokedid {
            get {
                return GetRelatedEntities<CampaignActivity>("campaignactivity_sla_slainvokedid", null);
            }
            set {
                SetRelatedEntities("campaignactivity_sla_slainvokedid", null, value);
            }
        }
        
        [RelationshipSchemaName("campaignresponse_sla_slaid")]
        public IEnumerable<CampaignResponse> campaignresponse_sla_slaid {
            get {
                return GetRelatedEntities<CampaignResponse>("campaignresponse_sla_slaid", null);
            }
            set {
                SetRelatedEntities("campaignresponse_sla_slaid", null, value);
            }
        }
        
        [RelationshipSchemaName("campaignresponse_sla_slainvokedid")]
        public IEnumerable<CampaignResponse> campaignresponse_sla_slainvokedid {
            get {
                return GetRelatedEntities<CampaignResponse>("campaignresponse_sla_slainvokedid", null);
            }
            set {
                SetRelatedEntities("campaignresponse_sla_slainvokedid", null, value);
            }
        }
        
        [RelationshipSchemaName("incidentresolution_sla_slaid")]
        public IEnumerable<IncidentResolution> incidentresolution_sla_slaid {
            get {
                return GetRelatedEntities<IncidentResolution>("incidentresolution_sla_slaid", null);
            }
            set {
                SetRelatedEntities("incidentresolution_sla_slaid", null, value);
            }
        }
        
        [RelationshipSchemaName("incidentresolution_sla_slainvokedid")]
        public IEnumerable<IncidentResolution> incidentresolution_sla_slainvokedid {
            get {
                return GetRelatedEntities<IncidentResolution>("incidentresolution_sla_slainvokedid", null);
            }
            set {
                SetRelatedEntities("incidentresolution_sla_slainvokedid", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_slabase_createdby")]
        public SystemUser lk_slabase_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_slabase_createdby", null);
            }
            set {
                SetRelatedEntity("lk_slabase_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_slabase_createdonbehalfby")]
        public SystemUser lk_slabase_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_slabase_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_slabase_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_slabase_modifiedby")]
        public SystemUser lk_slabase_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_slabase_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_slabase_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_slabase_modifiedonbehalfby")]
        public SystemUser lk_slabase_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_slabase_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_slabase_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("manualsla_account")]
        public IEnumerable<Account> manualsla_account {
            get {
                return GetRelatedEntities<Account>("manualsla_account", null);
            }
            set {
                SetRelatedEntities("manualsla_account", null, value);
            }
        }
        
        [RelationshipSchemaName("manualsla_activitypointer")]
        public IEnumerable<ActivityPointer> manualsla_activitypointer {
            get {
                return GetRelatedEntities<ActivityPointer>("manualsla_activitypointer", null);
            }
            set {
                SetRelatedEntities("manualsla_activitypointer", null, value);
            }
        }
        
        [RelationshipSchemaName("manualsla_appointment")]
        public IEnumerable<Appointment> manualsla_appointment {
            get {
                return GetRelatedEntities<Appointment>("manualsla_appointment", null);
            }
            set {
                SetRelatedEntities("manualsla_appointment", null, value);
            }
        }
        
        [RelationshipSchemaName("manualsla_cases")]
        public IEnumerable<Incident> manualsla_cases {
            get {
                return GetRelatedEntities<Incident>("manualsla_cases", null);
            }
            set {
                SetRelatedEntities("manualsla_cases", null, value);
            }
        }
        
        [RelationshipSchemaName("manualsla_contact")]
        public IEnumerable<Contact> manualsla_contact {
            get {
                return GetRelatedEntities<Contact>("manualsla_contact", null);
            }
            set {
                SetRelatedEntities("manualsla_contact", null, value);
            }
        }
        
        [RelationshipSchemaName("manualsla_email")]
        public IEnumerable<Email> manualsla_email {
            get {
                return GetRelatedEntities<Email>("manualsla_email", null);
            }
            set {
                SetRelatedEntities("manualsla_email", null, value);
            }
        }
        
        [RelationshipSchemaName("manualsla_fax")]
        public IEnumerable<Fax> manualsla_fax {
            get {
                return GetRelatedEntities<Fax>("manualsla_fax", null);
            }
            set {
                SetRelatedEntities("manualsla_fax", null, value);
            }
        }
        
        [RelationshipSchemaName("manualsla_invoice")]
        public IEnumerable<Invoice> manualsla_invoice {
            get {
                return GetRelatedEntities<Invoice>("manualsla_invoice", null);
            }
            set {
                SetRelatedEntities("manualsla_invoice", null, value);
            }
        }
        
        [RelationshipSchemaName("manualsla_lead")]
        public IEnumerable<Lead> manualsla_lead {
            get {
                return GetRelatedEntities<Lead>("manualsla_lead", null);
            }
            set {
                SetRelatedEntities("manualsla_lead", null, value);
            }
        }
        
        [RelationshipSchemaName("manualsla_letter")]
        public IEnumerable<Letter> manualsla_letter {
            get {
                return GetRelatedEntities<Letter>("manualsla_letter", null);
            }
            set {
                SetRelatedEntities("manualsla_letter", null, value);
            }
        }
        
        [RelationshipSchemaName("manualsla_opportunity")]
        public IEnumerable<Opportunity> manualsla_opportunity {
            get {
                return GetRelatedEntities<Opportunity>("manualsla_opportunity", null);
            }
            set {
                SetRelatedEntities("manualsla_opportunity", null, value);
            }
        }
        
        [RelationshipSchemaName("manualsla_phonecall")]
        public IEnumerable<PhoneCall> manualsla_phonecall {
            get {
                return GetRelatedEntities<PhoneCall>("manualsla_phonecall", null);
            }
            set {
                SetRelatedEntities("manualsla_phonecall", null, value);
            }
        }
        
        [RelationshipSchemaName("manualsla_quote")]
        public IEnumerable<Quote> manualsla_quote {
            get {
                return GetRelatedEntities<Quote>("manualsla_quote", null);
            }
            set {
                SetRelatedEntities("manualsla_quote", null, value);
            }
        }
        
        [RelationshipSchemaName("manualsla_salesorder")]
        public IEnumerable<SalesOrder> manualsla_salesorder {
            get {
                return GetRelatedEntities<SalesOrder>("manualsla_salesorder", null);
            }
            set {
                SetRelatedEntities("manualsla_salesorder", null, value);
            }
        }
        
        [RelationshipSchemaName("manualsla_serviceappointment")]
        public IEnumerable<ServiceAppointment> manualsla_serviceappointment {
            get {
                return GetRelatedEntities<ServiceAppointment>("manualsla_serviceappointment", null);
            }
            set {
                SetRelatedEntities("manualsla_serviceappointment", null, value);
            }
        }
        
        [RelationshipSchemaName("manualsla_socialactivity")]
        public IEnumerable<SocialActivity> manualsla_socialactivity {
            get {
                return GetRelatedEntities<SocialActivity>("manualsla_socialactivity", null);
            }
            set {
                SetRelatedEntities("manualsla_socialactivity", null, value);
            }
        }
        
        [RelationshipSchemaName("manualsla_task")]
        public IEnumerable<Task> manualsla_task {
            get {
                return GetRelatedEntities<Task>("manualsla_task", null);
            }
            set {
                SetRelatedEntities("manualsla_task", null, value);
            }
        }
        
        [RelationshipSchemaName("opportunityclose_sla_slaid")]
        public IEnumerable<OpportunityClose> opportunityclose_sla_slaid {
            get {
                return GetRelatedEntities<OpportunityClose>("opportunityclose_sla_slaid", null);
            }
            set {
                SetRelatedEntities("opportunityclose_sla_slaid", null, value);
            }
        }
        
        [RelationshipSchemaName("opportunityclose_sla_slainvokedid")]
        public IEnumerable<OpportunityClose> opportunityclose_sla_slainvokedid {
            get {
                return GetRelatedEntities<OpportunityClose>("opportunityclose_sla_slainvokedid", null);
            }
            set {
                SetRelatedEntities("opportunityclose_sla_slainvokedid", null, value);
            }
        }
        
        [RelationshipSchemaName("sla_account")]
        public IEnumerable<Account> sla_account {
            get {
                return GetRelatedEntities<Account>("sla_account", null);
            }
            set {
                SetRelatedEntities("sla_account", null, value);
            }
        }
        
        [RelationshipSchemaName("sla_activitypointer")]
        public IEnumerable<ActivityPointer> sla_activitypointer {
            get {
                return GetRelatedEntities<ActivityPointer>("sla_activitypointer", null);
            }
            set {
                SetRelatedEntities("sla_activitypointer", null, value);
            }
        }
        
        [RelationshipSchemaName("sla_appointment")]
        public IEnumerable<Appointment> sla_appointment {
            get {
                return GetRelatedEntities<Appointment>("sla_appointment", null);
            }
            set {
                SetRelatedEntities("sla_appointment", null, value);
            }
        }
        
        [RelationshipSchemaName("sla_cases")]
        public IEnumerable<Incident> sla_cases {
            get {
                return GetRelatedEntities<Incident>("sla_cases", null);
            }
            set {
                SetRelatedEntities("sla_cases", null, value);
            }
        }
        
        [RelationshipSchemaName("sla_contact")]
        public IEnumerable<Contact> sla_contact {
            get {
                return GetRelatedEntities<Contact>("sla_contact", null);
            }
            set {
                SetRelatedEntities("sla_contact", null, value);
            }
        }
        
        [RelationshipSchemaName("sla_email")]
        public IEnumerable<Email> sla_email {
            get {
                return GetRelatedEntities<Email>("sla_email", null);
            }
            set {
                SetRelatedEntities("sla_email", null, value);
            }
        }
        
        [RelationshipSchemaName("sla_entitlement")]
        public IEnumerable<Entitlement> sla_entitlement {
            get {
                return GetRelatedEntities<Entitlement>("sla_entitlement", null);
            }
            set {
                SetRelatedEntities("sla_entitlement", null, value);
            }
        }
        
        [RelationshipSchemaName("sla_fax")]
        public IEnumerable<Fax> sla_fax {
            get {
                return GetRelatedEntities<Fax>("sla_fax", null);
            }
            set {
                SetRelatedEntities("sla_fax", null, value);
            }
        }
        
        [RelationshipSchemaName("sla_invoice")]
        public IEnumerable<Invoice> sla_invoice {
            get {
                return GetRelatedEntities<Invoice>("sla_invoice", null);
            }
            set {
                SetRelatedEntities("sla_invoice", null, value);
            }
        }
        
        [RelationshipSchemaName("sla_lead")]
        public IEnumerable<Lead> sla_lead {
            get {
                return GetRelatedEntities<Lead>("sla_lead", null);
            }
            set {
                SetRelatedEntities("sla_lead", null, value);
            }
        }
        
        [RelationshipSchemaName("sla_letter")]
        public IEnumerable<Letter> sla_letter {
            get {
                return GetRelatedEntities<Letter>("sla_letter", null);
            }
            set {
                SetRelatedEntities("sla_letter", null, value);
            }
        }
        
        [RelationshipSchemaName("sla_opportunity")]
        public IEnumerable<Opportunity> sla_opportunity {
            get {
                return GetRelatedEntities<Opportunity>("sla_opportunity", null);
            }
            set {
                SetRelatedEntities("sla_opportunity", null, value);
            }
        }
        
        [RelationshipSchemaName("sla_phonecall")]
        public IEnumerable<PhoneCall> sla_phonecall {
            get {
                return GetRelatedEntities<PhoneCall>("sla_phonecall", null);
            }
            set {
                SetRelatedEntities("sla_phonecall", null, value);
            }
        }
        
        [RelationshipSchemaName("sla_quote")]
        public IEnumerable<Quote> sla_quote {
            get {
                return GetRelatedEntities<Quote>("sla_quote", null);
            }
            set {
                SetRelatedEntities("sla_quote", null, value);
            }
        }
        
        [RelationshipSchemaName("sla_salesorder")]
        public IEnumerable<SalesOrder> sla_salesorder {
            get {
                return GetRelatedEntities<SalesOrder>("sla_salesorder", null);
            }
            set {
                SetRelatedEntities("sla_salesorder", null, value);
            }
        }
        
        [RelationshipSchemaName("sla_serviceappointment")]
        public IEnumerable<ServiceAppointment> sla_serviceappointment {
            get {
                return GetRelatedEntities<ServiceAppointment>("sla_serviceappointment", null);
            }
            set {
                SetRelatedEntities("sla_serviceappointment", null, value);
            }
        }
        
        [RelationshipSchemaName("sla_socialactivity")]
        public IEnumerable<SocialActivity> sla_socialactivity {
            get {
                return GetRelatedEntities<SocialActivity>("sla_socialactivity", null);
            }
            set {
                SetRelatedEntities("sla_socialactivity", null, value);
            }
        }
        
        [RelationshipSchemaName("sla_task")]
        public IEnumerable<Task> sla_task {
            get {
                return GetRelatedEntities<Task>("sla_task", null);
            }
            set {
                SetRelatedEntities("sla_task", null, value);
            }
        }
        
        [AttributeLogicalName("businesshoursid")]
        [RelationshipSchemaName("slabase_businesshoursid")]
        public Calendar slabase_businesshoursid {
            get {
                return GetRelatedEntity<Calendar>("slabase_businesshoursid", null);
            }
            set {
                SetRelatedEntity("slabase_businesshoursid", null, value);
            }
        }
        
        [AttributeLogicalName("workflowid")]
        [RelationshipSchemaName("slabase_workflowid")]
        public Workflow slabase_workflowid {
            get {
                return GetRelatedEntity<Workflow>("slabase_workflowid", null);
            }
            set {
                SetRelatedEntity("slabase_workflowid", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_slaBase")]
        public Team team_slaBase {
            get {
                return GetRelatedEntity<Team>("team_slaBase", null);
            }
            set {
                SetRelatedEntity("team_slaBase", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_slabase")]
        public SystemUser user_slabase {
            get {
                return GetRelatedEntity<SystemUser>("user_slabase", null);
            }
            set {
                SetRelatedEntity("user_slabase", null, value);
            }
        }
        
        public static SLA Retrieve(IOrganizationService service, Guid id, params Expression<Func<SLA,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Quote that has been accepted.</para>
    /// <para>Display Name: Order</para>
    /// </summary>
    [EntityLogicalName("salesorder")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class SalesOrder : ExtendedEntity<SalesOrderState, SalesOrder_StatusCode> {
        
        public const string EntityLogicalName = "salesorder";
        
        public const int EntityTypeCode = 1088;
        
        public SalesOrder() : 
                base(EntityLogicalName) {
        }
        
        public SalesOrder(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("name");
            }
        }
        
        [AttributeLogicalName("salesorderid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("salesorderid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the order.</para>
        /// <para>Display Name: Order</para>
        /// </summary>
        [AttributeLogicalName("salesorderid")]
        [DisplayName("Order")]
        public Guid? SalesOrderId {
            get {
                return GetAttributeValue<Guid?>("salesorderid");
            }
            set {
                SetId("salesorderid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the parent account related to the record. This information is used to link the sales order to the account selected in the Customer field for reporting and analytics.</para>
        /// <para>Display Name: Account</para>
        /// </summary>
        [AttributeLogicalName("accountid")]
        [DisplayName("Account")]
        public EntityReference AccountId {
            get {
                return GetAttributeValue<EntityReference>("accountid");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the billing address.</para>
        /// <para>Display Name: Bill To Address ID</para>
        /// </summary>
        [AttributeLogicalName("billto_addressid")]
        [DisplayName("Bill To Address ID")]
        public Guid? BillTo_AddressId {
            get {
                return GetAttributeValue<Guid?>("billto_addressid");
            }
            set {
                SetAttributeValue("billto_addressid", value);
            }
        }
        
        /// <summary>
        /// <para>Type the city for the customer's billing address.</para>
        /// <para>Display Name: Bill To City</para>
        /// </summary>
        [AttributeLogicalName("billto_city")]
        [DisplayName("Bill To City")]
        [MaxLength(80)]
        public string BillTo_City {
            get {
                return GetAttributeValue<string>("billto_city");
            }
            set {
                SetAttributeValue("billto_city", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the complete Bill To address.</para>
        /// <para>Display Name: Bill To Address</para>
        /// </summary>
        [AttributeLogicalName("billto_composite")]
        [DisplayName("Bill To Address")]
        public string BillTo_Composite {
            get {
                return GetAttributeValue<string>("billto_composite");
            }
        }
        
        /// <summary>
        /// <para>Type the primary contact name at the customer's billing address.</para>
        /// <para>Display Name: Bill To Contact Name</para>
        /// </summary>
        [AttributeLogicalName("billto_contactname")]
        [DisplayName("Bill To Contact Name")]
        [MaxLength(150)]
        public string BillTo_ContactName {
            get {
                return GetAttributeValue<string>("billto_contactname");
            }
            set {
                SetAttributeValue("billto_contactname", value);
            }
        }
        
        /// <summary>
        /// <para>Type the country or region for the customer's billing address.</para>
        /// <para>Display Name: Bill To Country/Region</para>
        /// </summary>
        [AttributeLogicalName("billto_country")]
        [DisplayName("Bill To Country/Region")]
        [MaxLength(80)]
        public string BillTo_Country {
            get {
                return GetAttributeValue<string>("billto_country");
            }
            set {
                SetAttributeValue("billto_country", value);
            }
        }
        
        /// <summary>
        /// <para>Type the fax number for the customer's billing address.</para>
        /// <para>Display Name: Bill To Fax</para>
        /// </summary>
        [AttributeLogicalName("billto_fax")]
        [DisplayName("Bill To Fax")]
        [MaxLength(50)]
        public string BillTo_Fax {
            get {
                return GetAttributeValue<string>("billto_fax");
            }
            set {
                SetAttributeValue("billto_fax", value);
            }
        }
        
        /// <summary>
        /// <para>Type the first line of the customer's billing address.</para>
        /// <para>Display Name: Bill To Street 1</para>
        /// </summary>
        [AttributeLogicalName("billto_line1")]
        [DisplayName("Bill To Street 1")]
        [MaxLength(250)]
        public string BillTo_Line1 {
            get {
                return GetAttributeValue<string>("billto_line1");
            }
            set {
                SetAttributeValue("billto_line1", value);
            }
        }
        
        /// <summary>
        /// <para>Type the second line of the customer's billing address.</para>
        /// <para>Display Name: Bill To Street 2</para>
        /// </summary>
        [AttributeLogicalName("billto_line2")]
        [DisplayName("Bill To Street 2")]
        [MaxLength(250)]
        public string BillTo_Line2 {
            get {
                return GetAttributeValue<string>("billto_line2");
            }
            set {
                SetAttributeValue("billto_line2", value);
            }
        }
        
        /// <summary>
        /// <para>Type the third line of the billing address.</para>
        /// <para>Display Name: Bill To Street 3</para>
        /// </summary>
        [AttributeLogicalName("billto_line3")]
        [DisplayName("Bill To Street 3")]
        [MaxLength(250)]
        public string BillTo_Line3 {
            get {
                return GetAttributeValue<string>("billto_line3");
            }
            set {
                SetAttributeValue("billto_line3", value);
            }
        }
        
        /// <summary>
        /// <para>Type a name for the customer's billing address, such as "Headquarters" or "Field office", to identify the address.</para>
        /// <para>Display Name: Bill To Name</para>
        /// </summary>
        [AttributeLogicalName("billto_name")]
        [DisplayName("Bill To Name")]
        [MaxLength(200)]
        public string BillTo_Name {
            get {
                return GetAttributeValue<string>("billto_name");
            }
            set {
                SetAttributeValue("billto_name", value);
            }
        }
        
        /// <summary>
        /// <para>Type the ZIP Code or postal code for the billing address.</para>
        /// <para>Display Name: Bill To ZIP/Postal Code</para>
        /// </summary>
        [AttributeLogicalName("billto_postalcode")]
        [DisplayName("Bill To ZIP/Postal Code")]
        [MaxLength(20)]
        public string BillTo_PostalCode {
            get {
                return GetAttributeValue<string>("billto_postalcode");
            }
            set {
                SetAttributeValue("billto_postalcode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the state or province for the billing address.</para>
        /// <para>Display Name: Bill To State/Province</para>
        /// </summary>
        [AttributeLogicalName("billto_stateorprovince")]
        [DisplayName("Bill To State/Province")]
        [MaxLength(50)]
        public string BillTo_StateOrProvince {
            get {
                return GetAttributeValue<string>("billto_stateorprovince");
            }
            set {
                SetAttributeValue("billto_stateorprovince", value);
            }
        }
        
        /// <summary>
        /// <para>Type the phone number for the customer's billing address.</para>
        /// <para>Display Name: Bill To Phone</para>
        /// </summary>
        [AttributeLogicalName("billto_telephone")]
        [DisplayName("Bill To Phone")]
        [MaxLength(50)]
        public string BillTo_Telephone {
            get {
                return GetAttributeValue<string>("billto_telephone");
            }
            set {
                SetAttributeValue("billto_telephone", value);
            }
        }
        
        /// <summary>
        /// <para>campaign_orders</para>
        /// <para>Display Name: Source Campaign</para>
        /// </summary>
        [AttributeLogicalName("campaignid")]
        [DisplayName("Source Campaign")]
        public EntityReference CampaignId {
            get {
                return GetAttributeValue<EntityReference>("campaignid");
            }
            set {
                SetAttributeValue("campaignid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the parent contact related to the record. This information is used to link the contract to the contact selected in the Customer field for reporting and analytics.</para>
        /// <para>Display Name: Contact</para>
        /// </summary>
        [AttributeLogicalName("contactid")]
        [DisplayName("Contact")]
        public EntityReference ContactId {
            get {
                return GetAttributeValue<EntityReference>("contactid");
            }
        }
        
        /// <summary>
        /// <para>lk_salesorderbase_createdby</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics CRM options.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>lk_salesorder_createdonbehalfby</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>order_customer_contacts</para>
        /// <para>Display Name: Customer</para>
        /// </summary>
        [AttributeLogicalName("customerid")]
        [DisplayName("Customer")]
        public EntityReference CustomerId {
            get {
                return GetAttributeValue<EntityReference>("customerid");
            }
            set {
                SetAttributeValue("customerid", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the date that all or part of the order was shipped to the customer.</para>
        /// <para>Display Name: Date Fulfilled</para>
        /// </summary>
        [AttributeLogicalName("datefulfilled")]
        [DisplayName("Date Fulfilled")]
        public DateTime? DateFulfilled {
            get {
                return GetAttributeValue<DateTime?>("datefulfilled");
            }
            set {
                SetAttributeValue("datefulfilled", value);
            }
        }
        
        /// <summary>
        /// <para>Type additional information to describe the order, such as the products or services offered or details about the customer's product preferences.</para>
        /// <para>Display Name: Description</para>
        /// </summary>
        [AttributeLogicalName("description")]
        [DisplayName("Description")]
        public string Description {
            get {
                return GetAttributeValue<string>("description");
            }
            set {
                SetAttributeValue("description", value);
            }
        }
        
        /// <summary>
        /// <para>Type the discount amount for the order if the customer is eligible for special savings.</para>
        /// <para>Display Name: Order Discount Amount</para>
        /// </summary>
        [AttributeLogicalName("discountamount")]
        [DisplayName("Order Discount Amount")]
        public decimal? DiscountAmount {
            get {
                return GetMoneyValue("discountamount");
            }
            set {
                SetMoneyValue("discountamount", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the Order Discount field converted to the system's default base currency for reporting purposes. The calculation uses the exchange rate specified in the Currencies area.</para>
        /// <para>Display Name: Order Discount Amount (Base)</para>
        /// </summary>
        [AttributeLogicalName("discountamount_base")]
        [DisplayName("Order Discount Amount (Base)")]
        public decimal? DiscountAmount_Base {
            get {
                return GetMoneyValue("discountamount_base");
            }
        }
        
        /// <summary>
        /// <para>Type the discount rate that should be applied to the Detail Amount field to include additional savings for the customer in the order.</para>
        /// <para>Display Name: Order Discount (%)</para>
        /// </summary>
        [AttributeLogicalName("discountpercentage")]
        [DisplayName("Order Discount (%)")]
        public decimal? DiscountPercentage {
            get {
                return GetAttributeValue<decimal?>("discountpercentage");
            }
            set {
                SetAttributeValue("discountpercentage", value);
            }
        }
        
        /// <summary>
        /// <para>The primary email address for the entity.</para>
        /// <para>Display Name: Email Address</para>
        /// </summary>
        [AttributeLogicalName("emailaddress")]
        [DisplayName("Email Address")]
        [MaxLength(100)]
        public string EmailAddress {
            get {
                return GetAttributeValue<string>("emailaddress");
            }
            set {
                SetAttributeValue("emailaddress", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Entity Image Id</para>
        /// </summary>
        [AttributeLogicalName("entityimageid")]
        [DisplayName("Entity Image Id")]
        public Guid? EntityImageId {
            get {
                return GetAttributeValue<Guid?>("entityimageid");
            }
        }
        
        /// <summary>
        /// <para>Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("Exchange Rate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Type the cost of freight or shipping for the products included in the order for use in calculating the Total Amount field.</para>
        /// <para>Display Name: Freight Amount</para>
        /// </summary>
        [AttributeLogicalName("freightamount")]
        [DisplayName("Freight Amount")]
        public decimal? FreightAmount {
            get {
                return GetMoneyValue("freightamount");
            }
            set {
                SetMoneyValue("freightamount", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the Freight Amount field converted to the system's default base currency for reporting purposes. The calculation uses the exchange rate specified in the Currencies area.</para>
        /// <para>Display Name: Freight Amount (Base)</para>
        /// </summary>
        [AttributeLogicalName("freightamount_base")]
        [DisplayName("Freight Amount (Base)")]
        public decimal? FreightAmount_Base {
            get {
                return GetMoneyValue("freightamount_base");
            }
        }
        
        /// <summary>
        /// <para>Select the freight terms to make sure shipping charges are processed correctly.</para>
        /// <para>Display Name: Freight Terms</para>
        /// </summary>
        [AttributeLogicalName("freighttermscode")]
        [DisplayName("Freight Terms")]
        public SalesOrder_FreightTermsCode? FreightTermsCode {
            get {
                return GetOptionSetValue<SalesOrder_FreightTermsCode>("freighttermscode");
            }
            set {
                SetOptionSetValue("freighttermscode", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the data import or data migration that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether prices specified on the invoice are locked from any further updates.</para>
        /// <para>Display Name: Prices Locked</para>
        /// </summary>
        [AttributeLogicalName("ispricelocked")]
        [DisplayName("Prices Locked")]
        public bool? IsPriceLocked {
            get {
                return GetAttributeValue<bool?>("ispricelocked");
            }
            set {
                SetAttributeValue("ispricelocked", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the date and time when the order was last submitted to an accounting or ERP system for processing.</para>
        /// <para>Display Name: Last Submitted to Back Office</para>
        /// </summary>
        [AttributeLogicalName("lastbackofficesubmit")]
        [DisplayName("Last Submitted to Back Office")]
        public DateTime? LastBackofficeSubmit {
            get {
                return GetAttributeValue<DateTime?>("lastbackofficesubmit");
            }
            set {
                SetAttributeValue("lastbackofficesubmit", value);
            }
        }
        
        /// <summary>
        /// <para>Contains the date time stamp of the last on hold time.</para>
        /// <para>Display Name: Last On Hold Time</para>
        /// </summary>
        [AttributeLogicalName("lastonholdtime")]
        [DisplayName("Last On Hold Time")]
        public DateTime? LastOnHoldTime {
            get {
                return GetAttributeValue<DateTime?>("lastonholdtime");
            }
            set {
                SetAttributeValue("lastonholdtime", value);
            }
        }
        
        /// <summary>
        /// <para>lk_salesorderbase_modifiedby</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics CRM options.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>lk_salesorder_modifiedonbehalfby</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Type a descriptive name for the order.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Name")]
        [MaxLength(300)]
        public string Name {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the duration in minutes for which the order was on hold.</para>
        /// <para>Display Name: On Hold Time (Minutes)</para>
        /// </summary>
        [AttributeLogicalName("onholdtime")]
        [DisplayName("On Hold Time (Minutes)")]
        [Range(-2147483648, 2147483647)]
        public int? OnHoldTime {
            get {
                return GetAttributeValue<int?>("onholdtime");
            }
        }
        
        /// <summary>
        /// <para>opportunity_sales_orders</para>
        /// <para>Display Name: Opportunity</para>
        /// </summary>
        [AttributeLogicalName("opportunityid")]
        [DisplayName("Opportunity")]
        public EntityReference OpportunityId {
            get {
                return GetAttributeValue<EntityReference>("opportunityid");
            }
            set {
                SetAttributeValue("opportunityid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the order number for customer reference and to use in search. The number cannot be modified.</para>
        /// <para>Display Name: Order ID</para>
        /// </summary>
        [AttributeLogicalName("ordernumber")]
        [DisplayName("Order ID")]
        [MaxLength(100)]
        public string OrderNumber {
            get {
                return GetAttributeValue<string>("ordernumber");
            }
            set {
                SetAttributeValue("ordernumber", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>owner_salesorders</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>business_unit_orders</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>team_orders</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>system_user_orders</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Select the payment terms to indicate when the customer needs to pay the total amount.</para>
        /// <para>Display Name: Payment Terms</para>
        /// </summary>
        [AttributeLogicalName("paymenttermscode")]
        [DisplayName("Payment Terms")]
        public SalesOrder_PaymentTermsCode? PaymentTermsCode {
            get {
                return GetOptionSetValue<SalesOrder_PaymentTermsCode>("paymenttermscode");
            }
            set {
                SetOptionSetValue("paymenttermscode", value);
            }
        }
        
        /// <summary>
        /// <para>price_level_orders</para>
        /// <para>Display Name: Price List</para>
        /// </summary>
        [AttributeLogicalName("pricelevelid")]
        [DisplayName("Price List")]
        public EntityReference PriceLevelId {
            get {
                return GetAttributeValue<EntityReference>("pricelevelid");
            }
            set {
                SetAttributeValue("pricelevelid", value);
            }
        }
        
        /// <summary>
        /// <para>Select the type of pricing error, such as a missing or invalid product, or missing quantity.</para>
        /// <para>Display Name: Pricing Error </para>
        /// </summary>
        [AttributeLogicalName("pricingerrorcode")]
        [DisplayName("Pricing Error ")]
        public qooi_pricingerrorcode? PricingErrorCode {
            get {
                return GetOptionSetValue<qooi_pricingerrorcode>("pricingerrorcode");
            }
            set {
                SetOptionSetValue("pricingerrorcode", value);
            }
        }
        
        /// <summary>
        /// <para>Type a descriptive name for the order.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Name")]
        [MaxLength(300)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Select the priority so that preferred customers or critical issues are handled quickly.</para>
        /// <para>Display Name: Priority</para>
        /// </summary>
        [AttributeLogicalName("prioritycode")]
        [DisplayName("Priority")]
        public SalesOrder_PriorityCode? PriorityCode {
            get {
                return GetOptionSetValue<SalesOrder_PriorityCode>("prioritycode");
            }
            set {
                SetOptionSetValue("prioritycode", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the process.</para>
        /// <para>Display Name: Process</para>
        /// </summary>
        [AttributeLogicalName("processid")]
        [DisplayName("Process")]
        public Guid? ProcessId {
            get {
                return GetAttributeValue<Guid?>("processid");
            }
            set {
                SetAttributeValue("processid", value);
            }
        }
        
        /// <summary>
        /// <para>quote_orders</para>
        /// <para>Display Name: Quote</para>
        /// </summary>
        [AttributeLogicalName("quoteid")]
        [DisplayName("Quote")]
        public EntityReference QuoteId {
            get {
                return GetAttributeValue<EntityReference>("quoteid");
            }
            set {
                SetAttributeValue("quoteid", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the delivery date requested by the customer for all products in the order.</para>
        /// <para>Display Name: Requested Delivery Date</para>
        /// </summary>
        [AttributeLogicalName("requestdeliveryby")]
        [DisplayName("Requested Delivery Date")]
        public DateTime? RequestDeliveryBy {
            get {
                return GetAttributeValue<DateTime?>("requestdeliveryby");
            }
            set {
                SetAttributeValue("requestdeliveryby", value);
            }
        }
        
        /// <summary>
        /// <para>manualsla_salesorder</para>
        /// <para>Display Name: SLA</para>
        /// </summary>
        [AttributeLogicalName("slaid")]
        [DisplayName("SLA")]
        public EntityReference SLAId {
            get {
                return GetAttributeValue<EntityReference>("slaid");
            }
            set {
                SetAttributeValue("slaid", value);
            }
        }
        
        /// <summary>
        /// <para>sla_salesorder</para>
        /// <para>Display Name: Last SLA applied</para>
        /// </summary>
        [AttributeLogicalName("slainvokedid")]
        [DisplayName("Last SLA applied")]
        public EntityReference SLAInvokedId {
            get {
                return GetAttributeValue<EntityReference>("slainvokedid");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the shipping address.</para>
        /// <para>Display Name: Ship To Address ID</para>
        /// </summary>
        [AttributeLogicalName("shipto_addressid")]
        [DisplayName("Ship To Address ID")]
        public Guid? ShipTo_AddressId {
            get {
                return GetAttributeValue<Guid?>("shipto_addressid");
            }
            set {
                SetAttributeValue("shipto_addressid", value);
            }
        }
        
        /// <summary>
        /// <para>Type the city for the customer's shipping address.</para>
        /// <para>Display Name: Ship To City</para>
        /// </summary>
        [AttributeLogicalName("shipto_city")]
        [DisplayName("Ship To City")]
        [MaxLength(80)]
        public string ShipTo_City {
            get {
                return GetAttributeValue<string>("shipto_city");
            }
            set {
                SetAttributeValue("shipto_city", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the complete Ship To address.</para>
        /// <para>Display Name: Ship To Address</para>
        /// </summary>
        [AttributeLogicalName("shipto_composite")]
        [DisplayName("Ship To Address")]
        public string ShipTo_Composite {
            get {
                return GetAttributeValue<string>("shipto_composite");
            }
        }
        
        /// <summary>
        /// <para>Type the primary contact name at the customer's shipping address.</para>
        /// <para>Display Name: Ship To Contact Name</para>
        /// </summary>
        [AttributeLogicalName("shipto_contactname")]
        [DisplayName("Ship To Contact Name")]
        [MaxLength(150)]
        public string ShipTo_ContactName {
            get {
                return GetAttributeValue<string>("shipto_contactname");
            }
            set {
                SetAttributeValue("shipto_contactname", value);
            }
        }
        
        /// <summary>
        /// <para>Type the country or region for the customer's shipping address.</para>
        /// <para>Display Name: Ship To Country/Region</para>
        /// </summary>
        [AttributeLogicalName("shipto_country")]
        [DisplayName("Ship To Country/Region")]
        [MaxLength(80)]
        public string ShipTo_Country {
            get {
                return GetAttributeValue<string>("shipto_country");
            }
            set {
                SetAttributeValue("shipto_country", value);
            }
        }
        
        /// <summary>
        /// <para>Type the fax number for the customer's shipping address.</para>
        /// <para>Display Name: Ship to Fax</para>
        /// </summary>
        [AttributeLogicalName("shipto_fax")]
        [DisplayName("Ship to Fax")]
        [MaxLength(50)]
        public string ShipTo_Fax {
            get {
                return GetAttributeValue<string>("shipto_fax");
            }
            set {
                SetAttributeValue("shipto_fax", value);
            }
        }
        
        /// <summary>
        /// <para>Select the freight terms to make sure shipping orders are processed correctly.</para>
        /// <para>Display Name: Ship To Freight Terms</para>
        /// </summary>
        [AttributeLogicalName("shipto_freighttermscode")]
        [DisplayName("Ship To Freight Terms")]
        public SalesOrder_ShipTo_FreightTermsCode? ShipTo_FreightTermsCode {
            get {
                return GetOptionSetValue<SalesOrder_ShipTo_FreightTermsCode>("shipto_freighttermscode");
            }
            set {
                SetOptionSetValue("shipto_freighttermscode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the first line of the customer's shipping address.</para>
        /// <para>Display Name: Ship To Street 1</para>
        /// </summary>
        [AttributeLogicalName("shipto_line1")]
        [DisplayName("Ship To Street 1")]
        [MaxLength(250)]
        public string ShipTo_Line1 {
            get {
                return GetAttributeValue<string>("shipto_line1");
            }
            set {
                SetAttributeValue("shipto_line1", value);
            }
        }
        
        /// <summary>
        /// <para>Type the second line of the customer's shipping address.</para>
        /// <para>Display Name: Ship To Street 2</para>
        /// </summary>
        [AttributeLogicalName("shipto_line2")]
        [DisplayName("Ship To Street 2")]
        [MaxLength(250)]
        public string ShipTo_Line2 {
            get {
                return GetAttributeValue<string>("shipto_line2");
            }
            set {
                SetAttributeValue("shipto_line2", value);
            }
        }
        
        /// <summary>
        /// <para>Type the third line of the shipping address.</para>
        /// <para>Display Name: Ship To Street 3</para>
        /// </summary>
        [AttributeLogicalName("shipto_line3")]
        [DisplayName("Ship To Street 3")]
        [MaxLength(250)]
        public string ShipTo_Line3 {
            get {
                return GetAttributeValue<string>("shipto_line3");
            }
            set {
                SetAttributeValue("shipto_line3", value);
            }
        }
        
        /// <summary>
        /// <para>Type a name for the customer's shipping address, such as "Headquarters" or "Field office",  to identify the address.</para>
        /// <para>Display Name: Ship To Name</para>
        /// </summary>
        [AttributeLogicalName("shipto_name")]
        [DisplayName("Ship To Name")]
        [MaxLength(200)]
        public string ShipTo_Name {
            get {
                return GetAttributeValue<string>("shipto_name");
            }
            set {
                SetAttributeValue("shipto_name", value);
            }
        }
        
        /// <summary>
        /// <para>Type the ZIP Code or postal code for the shipping address.</para>
        /// <para>Display Name: Ship To ZIP/Postal Code</para>
        /// </summary>
        [AttributeLogicalName("shipto_postalcode")]
        [DisplayName("Ship To ZIP/Postal Code")]
        [MaxLength(20)]
        public string ShipTo_PostalCode {
            get {
                return GetAttributeValue<string>("shipto_postalcode");
            }
            set {
                SetAttributeValue("shipto_postalcode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the state or province for the shipping address.</para>
        /// <para>Display Name: Ship To State/Province</para>
        /// </summary>
        [AttributeLogicalName("shipto_stateorprovince")]
        [DisplayName("Ship To State/Province")]
        [MaxLength(50)]
        public string ShipTo_StateOrProvince {
            get {
                return GetAttributeValue<string>("shipto_stateorprovince");
            }
            set {
                SetAttributeValue("shipto_stateorprovince", value);
            }
        }
        
        /// <summary>
        /// <para>Type the phone number for the customer's shipping address.</para>
        /// <para>Display Name: Ship To Phone</para>
        /// </summary>
        [AttributeLogicalName("shipto_telephone")]
        [DisplayName("Ship To Phone")]
        [MaxLength(50)]
        public string ShipTo_Telephone {
            get {
                return GetAttributeValue<string>("shipto_telephone");
            }
            set {
                SetAttributeValue("shipto_telephone", value);
            }
        }
        
        /// <summary>
        /// <para>Select a shipping method for deliveries sent to this address.</para>
        /// <para>Display Name: Shipping Method</para>
        /// </summary>
        [AttributeLogicalName("shippingmethodcode")]
        [DisplayName("Shipping Method")]
        public SalesOrder_ShippingMethodCode? ShippingMethodCode {
            get {
                return GetOptionSetValue<SalesOrder_ShippingMethodCode>("shippingmethodcode");
            }
            set {
                SetOptionSetValue("shippingmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>Skip Price Calculation</para>
        /// <para>Display Name: Skip Price Calculation (For Internal Use)</para>
        /// </summary>
        [AttributeLogicalName("skippricecalculation")]
        [DisplayName("Skip Price Calculation (For Internal Use)")]
        public qooi_skippricecalculation? SkipPriceCalculation {
            get {
                return GetOptionSetValue<qooi_skippricecalculation>("skippricecalculation");
            }
            set {
                SetOptionSetValue("skippricecalculation", value);
            }
        }
        
        /// <summary>
        /// <para>processstage_salesorders</para>
        /// <para>Display Name: Process Stage</para>
        /// </summary>
        [AttributeLogicalName("stageid")]
        [DisplayName("Process Stage")]
        public Guid? StageId {
            get {
                return GetAttributeValue<Guid?>("stageid");
            }
            set {
                SetAttributeValue("stageid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows whether the order is active, submitted, fulfilled, canceled, or invoiced. Only active orders can be edited.</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public SalesOrderState? StateCode {
            get {
                return GetOptionSetValue<SalesOrderState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the order's status.</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public SalesOrder_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<SalesOrder_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the date when the order was submitted to the fulfillment or shipping center.</para>
        /// <para>Display Name: Date Submitted</para>
        /// </summary>
        [AttributeLogicalName("submitdate")]
        [DisplayName("Date Submitted")]
        public DateTime? SubmitDate {
            get {
                return GetAttributeValue<DateTime?>("submitdate");
            }
            set {
                SetAttributeValue("submitdate", value);
            }
        }
        
        /// <summary>
        /// <para>Type the code for the submitted status in the fulfillment or shipping center system.</para>
        /// <para>Display Name: Submitted Status</para>
        /// </summary>
        [AttributeLogicalName("submitstatus")]
        [DisplayName("Submitted Status")]
        [Range(0, 1000000000)]
        public int? SubmitStatus {
            get {
                return GetAttributeValue<int?>("submitstatus");
            }
            set {
                SetAttributeValue("submitstatus", value);
            }
        }
        
        /// <summary>
        /// <para>Type additional details or notes about the order for the fulfillment or shipping center.</para>
        /// <para>Display Name: Submitted Status Description</para>
        /// </summary>
        [AttributeLogicalName("submitstatusdescription")]
        [DisplayName("Submitted Status Description")]
        public string SubmitStatusDescription {
            get {
                return GetAttributeValue<string>("submitstatusdescription");
            }
            set {
                SetAttributeValue("submitstatusdescription", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the total amount due, calculated as the sum of the products, discounts, freight, and taxes for the order.</para>
        /// <para>Display Name: Total Amount</para>
        /// </summary>
        [AttributeLogicalName("totalamount")]
        [DisplayName("Total Amount")]
        public decimal? TotalAmount {
            get {
                return GetMoneyValue("totalamount");
            }
            set {
                SetMoneyValue("totalamount", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the total product amount for the order, minus any discounts. This value is added to freight and tax amounts in the calculation for the total amount due for the order.</para>
        /// <para>Display Name: Total Pre-Freight Amount</para>
        /// </summary>
        [AttributeLogicalName("totalamountlessfreight")]
        [DisplayName("Total Pre-Freight Amount")]
        public decimal? TotalAmountLessFreight {
            get {
                return GetMoneyValue("totalamountlessfreight");
            }
            set {
                SetMoneyValue("totalamountlessfreight", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the Pre-Freight Amount field converted to the system's default base currency for reporting purposes. The calculation uses the exchange rate specified in the Currencies area.</para>
        /// <para>Display Name: Total Pre-Freight Amount (Base)</para>
        /// </summary>
        [AttributeLogicalName("totalamountlessfreight_base")]
        [DisplayName("Total Pre-Freight Amount (Base)")]
        public decimal? TotalAmountLessFreight_Base {
            get {
                return GetMoneyValue("totalamountlessfreight_base");
            }
        }
        
        /// <summary>
        /// <para>Shows the Total Amount field converted to the system's default base currency for reporting purposes. The calculation uses the exchange rate specified in the Currencies area.</para>
        /// <para>Display Name: Total Amount (Base)</para>
        /// </summary>
        [AttributeLogicalName("totalamount_base")]
        [DisplayName("Total Amount (Base)")]
        public decimal? TotalAmount_Base {
            get {
                return GetMoneyValue("totalamount_base");
            }
        }
        
        /// <summary>
        /// <para>Shows the total discount amount, based on the discount price and rate entered on the order.</para>
        /// <para>Display Name: Total Discount Amount</para>
        /// </summary>
        [AttributeLogicalName("totaldiscountamount")]
        [DisplayName("Total Discount Amount")]
        public decimal? TotalDiscountAmount {
            get {
                return GetMoneyValue("totaldiscountamount");
            }
            set {
                SetMoneyValue("totaldiscountamount", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the Total Discount Amount field converted to the system's default base currency for reporting purposes. The calculation uses the exchange rate specified in the Currencies area.</para>
        /// <para>Display Name: Total Discount Amount (Base)</para>
        /// </summary>
        [AttributeLogicalName("totaldiscountamount_base")]
        [DisplayName("Total Discount Amount (Base)")]
        public decimal? TotalDiscountAmount_Base {
            get {
                return GetMoneyValue("totaldiscountamount_base");
            }
        }
        
        /// <summary>
        /// <para>Shows the sum of all existing and write-in products included on the order, based on the specified price list and quantities.</para>
        /// <para>Display Name: Total Detail Amount</para>
        /// </summary>
        [AttributeLogicalName("totallineitemamount")]
        [DisplayName("Total Detail Amount")]
        public decimal? TotalLineItemAmount {
            get {
                return GetMoneyValue("totallineitemamount");
            }
            set {
                SetMoneyValue("totallineitemamount", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the Detail Amount field converted to the system's default base currency. The calculation uses the exchange rate specified in the Currencies area.</para>
        /// <para>Display Name: Total Detail Amount (Base)</para>
        /// </summary>
        [AttributeLogicalName("totallineitemamount_base")]
        [DisplayName("Total Detail Amount (Base)")]
        public decimal? TotalLineItemAmount_Base {
            get {
                return GetMoneyValue("totallineitemamount_base");
            }
        }
        
        /// <summary>
        /// <para>Shows the total of the Manual Discount amounts specified on all products included in the order. This value is reflected in the Detail Amount field on the order and is added to any discount amount or rate specified on the order.</para>
        /// <para>Display Name: Total Line Item Discount Amount</para>
        /// </summary>
        [AttributeLogicalName("totallineitemdiscountamount")]
        [DisplayName("Total Line Item Discount Amount")]
        public decimal? TotalLineItemDiscountAmount {
            get {
                return GetMoneyValue("totallineitemdiscountamount");
            }
            set {
                SetMoneyValue("totallineitemdiscountamount", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the Total Line Item Discount Amount field converted to the system's default base currency for reporting purposes. The calculation uses the exchange rate specified in the Currencies area.</para>
        /// <para>Display Name: Total Line Item Discount Amount (Base)</para>
        /// </summary>
        [AttributeLogicalName("totallineitemdiscountamount_base")]
        [DisplayName("Total Line Item Discount Amount (Base)")]
        public decimal? TotalLineItemDiscountAmount_Base {
            get {
                return GetMoneyValue("totallineitemdiscountamount_base");
            }
        }
        
        /// <summary>
        /// <para>Shows the Tax amounts specified on all products included in the order, included in the Total Amount due calculation for the order.</para>
        /// <para>Display Name: Total Tax</para>
        /// </summary>
        [AttributeLogicalName("totaltax")]
        [DisplayName("Total Tax")]
        public decimal? TotalTax {
            get {
                return GetMoneyValue("totaltax");
            }
            set {
                SetMoneyValue("totaltax", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the Total Tax field converted to the system's default base currency for reporting purposes. The calculation uses the exchange rate specified in the Currencies area.</para>
        /// <para>Display Name: Total Tax (Base)</para>
        /// </summary>
        [AttributeLogicalName("totaltax_base")]
        [DisplayName("Total Tax (Base)")]
        public decimal? TotalTax_Base {
            get {
                return GetMoneyValue("totaltax_base");
            }
        }
        
        /// <summary>
        /// <para>transactioncurrency_salesorder</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Traversed Path</para>
        /// </summary>
        [AttributeLogicalName("traversedpath")]
        [DisplayName("Traversed Path")]
        [MaxLength(1250)]
        public string TraversedPath {
            get {
                return GetAttributeValue<string>("traversedpath");
            }
            set {
                SetAttributeValue("traversedpath", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version number of the order.</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Select whether the products included in the order should be shipped to the specified address or held until the customer calls with further pick-up or delivery instructions.</para>
        /// <para>Display Name: Ship To</para>
        /// </summary>
        [AttributeLogicalName("willcall")]
        [DisplayName("Ship To")]
        public bool? WillCall {
            get {
                return GetAttributeValue<bool?>("willcall");
            }
            set {
                SetAttributeValue("willcall", value);
            }
        }
        
        /// <summary>
        /// <para>Customer Account associated with this Order</para>
        /// <para>Display Name: Potential Customer</para>
        /// </summary>
        [AttributeLogicalName("msdyn_account")]
        [DisplayName("Potential Customer")]
        public EntityReference msdyn_Account {
            get {
                return GetAttributeValue<EntityReference>("msdyn_account");
            }
            set {
                SetAttributeValue("msdyn_account", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only</para>
        /// <para>Display Name: Process Started On</para>
        /// </summary>
        [AttributeLogicalName("msdyn_processstartedon")]
        [DisplayName("Process Started On")]
        public DateTime? msdyn_ProcessStartedOn {
            get {
                return GetAttributeValue<DateTime?>("msdyn_processstartedon");
            }
            set {
                SetAttributeValue("msdyn_processstartedon", value);
            }
        }
        
        /// <summary>
        /// <para>Internal use only</para>
        /// <para>Display Name: Order Type</para>
        /// </summary>
        [AttributeLogicalName("msdyn_ordertype")]
        [DisplayName("Order Type")]
        public SalesOrder_msdyn_ordertype? msdyn_ordertype {
            get {
                return GetOptionSetValue<SalesOrder_msdyn_ordertype>("msdyn_ordertype");
            }
            set {
                SetOptionSetValue("msdyn_ordertype", value);
            }
        }
        
        [RelationshipSchemaName("SalesOrder_ActivityPointers")]
        public IEnumerable<ActivityPointer> SalesOrder_ActivityPointers {
            get {
                return GetRelatedEntities<ActivityPointer>("SalesOrder_ActivityPointers", null);
            }
            set {
                SetRelatedEntities("SalesOrder_ActivityPointers", null, value);
            }
        }
        
        [RelationshipSchemaName("SalesOrder_Appointments")]
        public IEnumerable<Appointment> SalesOrder_Appointments {
            get {
                return GetRelatedEntities<Appointment>("SalesOrder_Appointments", null);
            }
            set {
                SetRelatedEntities("SalesOrder_Appointments", null, value);
            }
        }
        
        [RelationshipSchemaName("SalesOrder_Emails")]
        public IEnumerable<Email> SalesOrder_Emails {
            get {
                return GetRelatedEntities<Email>("SalesOrder_Emails", null);
            }
            set {
                SetRelatedEntities("SalesOrder_Emails", null, value);
            }
        }
        
        [RelationshipSchemaName("SalesOrder_Faxes")]
        public IEnumerable<Fax> SalesOrder_Faxes {
            get {
                return GetRelatedEntities<Fax>("SalesOrder_Faxes", null);
            }
            set {
                SetRelatedEntities("SalesOrder_Faxes", null, value);
            }
        }
        
        [RelationshipSchemaName("SalesOrder_Letters")]
        public IEnumerable<Letter> SalesOrder_Letters {
            get {
                return GetRelatedEntities<Letter>("SalesOrder_Letters", null);
            }
            set {
                SetRelatedEntities("SalesOrder_Letters", null, value);
            }
        }
        
        [RelationshipSchemaName("SalesOrder_Phonecalls")]
        public IEnumerable<PhoneCall> SalesOrder_Phonecalls {
            get {
                return GetRelatedEntities<PhoneCall>("SalesOrder_Phonecalls", null);
            }
            set {
                SetRelatedEntities("SalesOrder_Phonecalls", null, value);
            }
        }
        
        [RelationshipSchemaName("SalesOrder_RecurringAppointmentMasters")]
        public IEnumerable<RecurringAppointmentMaster> SalesOrder_RecurringAppointmentMasters {
            get {
                return GetRelatedEntities<RecurringAppointmentMaster>("SalesOrder_RecurringAppointmentMasters", null);
            }
            set {
                SetRelatedEntities("SalesOrder_RecurringAppointmentMasters", null, value);
            }
        }
        
        [RelationshipSchemaName("SalesOrder_ServiceAppointments")]
        public IEnumerable<ServiceAppointment> SalesOrder_ServiceAppointments {
            get {
                return GetRelatedEntities<ServiceAppointment>("SalesOrder_ServiceAppointments", null);
            }
            set {
                SetRelatedEntities("SalesOrder_ServiceAppointments", null, value);
            }
        }
        
        [RelationshipSchemaName("SalesOrder_SocialActivities")]
        public IEnumerable<SocialActivity> SalesOrder_SocialActivities {
            get {
                return GetRelatedEntities<SocialActivity>("SalesOrder_SocialActivities", null);
            }
            set {
                SetRelatedEntities("SalesOrder_SocialActivities", null, value);
            }
        }
        
        [RelationshipSchemaName("SalesOrder_SyncErrors")]
        public IEnumerable<SyncError> SalesOrder_SyncErrors {
            get {
                return GetRelatedEntities<SyncError>("SalesOrder_SyncErrors", null);
            }
            set {
                SetRelatedEntities("SalesOrder_SyncErrors", null, value);
            }
        }
        
        [RelationshipSchemaName("SalesOrder_Tasks")]
        public IEnumerable<Task> SalesOrder_Tasks {
            get {
                return GetRelatedEntities<Task>("SalesOrder_Tasks", null);
            }
            set {
                SetRelatedEntities("SalesOrder_Tasks", null, value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_orders")]
        public BusinessUnit business_unit_orders {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_orders", null);
            }
            set {
                SetRelatedEntity("business_unit_orders", null, value);
            }
        }
        
        [AttributeLogicalName("campaignid")]
        [RelationshipSchemaName("campaign_orders")]
        public Campaign campaign_orders {
            get {
                return GetRelatedEntity<Campaign>("campaign_orders", null);
            }
            set {
                SetRelatedEntity("campaign_orders", null, value);
            }
        }
        
        [RelationshipSchemaName("contactorders_association")]
        public IEnumerable<Contact> contactorders_association {
            get {
                return GetRelatedEntities<Contact>("contactorders_association", null);
            }
            set {
                SetRelatedEntities("contactorders_association", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_opportunitysalesprocess_salesorderid")]
        public IEnumerable<OpportunitySalesProcess> lk_opportunitysalesprocess_salesorderid {
            get {
                return GetRelatedEntities<OpportunitySalesProcess>("lk_opportunitysalesprocess_salesorderid", null);
            }
            set {
                SetRelatedEntities("lk_opportunitysalesprocess_salesorderid", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_salesorder_createdonbehalfby")]
        public SystemUser lk_salesorder_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_salesorder_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_salesorder_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_salesorder_modifiedonbehalfby")]
        public SystemUser lk_salesorder_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_salesorder_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_salesorder_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_salesorderbase_createdby")]
        public SystemUser lk_salesorderbase_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_salesorderbase_createdby", null);
            }
            set {
                SetRelatedEntity("lk_salesorderbase_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_salesorderbase_modifiedby")]
        public SystemUser lk_salesorderbase_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_salesorderbase_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_salesorderbase_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("slaid")]
        [RelationshipSchemaName("manualsla_salesorder")]
        public SLA manualsla_salesorder {
            get {
                return GetRelatedEntity<SLA>("manualsla_salesorder", null);
            }
            set {
                SetRelatedEntity("manualsla_salesorder", null, value);
            }
        }
        
        [AttributeLogicalName("msdyn_account")]
        [RelationshipSchemaName("msdyn_account_salesorder_Account")]
        public Account msdyn_account_salesorder_Account {
            get {
                return GetRelatedEntity<Account>("msdyn_account_salesorder_Account", null);
            }
            set {
                SetRelatedEntity("msdyn_account_salesorder_Account", null, value);
            }
        }
        
        [AttributeLogicalName("opportunityid")]
        [RelationshipSchemaName("opportunity_sales_orders")]
        public Opportunity opportunity_sales_orders {
            get {
                return GetRelatedEntity<Opportunity>("opportunity_sales_orders", null);
            }
            set {
                SetRelatedEntity("opportunity_sales_orders", null, value);
            }
        }
        
        [AttributeLogicalName("customerid")]
        [RelationshipSchemaName("order_customer_accounts")]
        public Account order_customer_accounts {
            get {
                return GetRelatedEntity<Account>("order_customer_accounts", null);
            }
            set {
                SetRelatedEntity("order_customer_accounts", null, value);
            }
        }
        
        [AttributeLogicalName("customerid")]
        [RelationshipSchemaName("order_customer_contacts")]
        public Contact order_customer_contacts {
            get {
                return GetRelatedEntity<Contact>("order_customer_contacts", null);
            }
            set {
                SetRelatedEntity("order_customer_contacts", null, value);
            }
        }
        
        [RelationshipSchemaName("order_invoices")]
        public IEnumerable<Invoice> order_invoices {
            get {
                return GetRelatedEntities<Invoice>("order_invoices", null);
            }
            set {
                SetRelatedEntities("order_invoices", null, value);
            }
        }
        
        [AttributeLogicalName("quoteid")]
        [RelationshipSchemaName("quote_orders")]
        public Quote quote_orders {
            get {
                return GetRelatedEntity<Quote>("quote_orders", null);
            }
            set {
                SetRelatedEntity("quote_orders", null, value);
            }
        }
        
        [RelationshipSchemaName("salesorder_Teams")]
        public IEnumerable<Team> salesorder_Teams {
            get {
                return GetRelatedEntities<Team>("salesorder_Teams", null);
            }
            set {
                SetRelatedEntities("salesorder_Teams", null, value);
            }
        }
        
        [RelationshipSchemaName("salesorder_activity_parties")]
        public IEnumerable<ActivityParty> salesorder_activity_parties {
            get {
                return GetRelatedEntities<ActivityParty>("salesorder_activity_parties", null);
            }
            set {
                SetRelatedEntities("salesorder_activity_parties", null, value);
            }
        }
        
        [RelationshipSchemaName("salesorder_connections1")]
        public IEnumerable<Connection> salesorder_connections1 {
            get {
                return GetRelatedEntities<Connection>("salesorder_connections1", null);
            }
            set {
                SetRelatedEntities("salesorder_connections1", null, value);
            }
        }
        
        [RelationshipSchemaName("salesorder_connections2")]
        public IEnumerable<Connection> salesorder_connections2 {
            get {
                return GetRelatedEntities<Connection>("salesorder_connections2", null);
            }
            set {
                SetRelatedEntities("salesorder_connections2", null, value);
            }
        }
        
        [AttributeLogicalName("slainvokedid")]
        [RelationshipSchemaName("sla_salesorder")]
        public SLA sla_salesorder {
            get {
                return GetRelatedEntity<SLA>("sla_salesorder", null);
            }
            set {
                SetRelatedEntity("sla_salesorder", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("system_user_orders")]
        public SystemUser system_user_orders {
            get {
                return GetRelatedEntity<SystemUser>("system_user_orders", null);
            }
            set {
                SetRelatedEntity("system_user_orders", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_orders")]
        public Team team_orders {
            get {
                return GetRelatedEntity<Team>("team_orders", null);
            }
            set {
                SetRelatedEntity("team_orders", null, value);
            }
        }
        
        [AttributeLogicalName("transactioncurrencyid")]
        [RelationshipSchemaName("transactioncurrency_salesorder")]
        public TransactionCurrency transactioncurrency_salesorder {
            get {
                return GetRelatedEntity<TransactionCurrency>("transactioncurrency_salesorder", null);
            }
            set {
                SetRelatedEntity("transactioncurrency_salesorder", null, value);
            }
        }
        
        public static SalesOrder Retrieve(IOrganizationService service, Guid id, params Expression<Func<SalesOrder,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Activity offered by the organization to satisfy its customer's needs. Each service activity includes date, time, duration, and required resources.</para>
    /// <para>Display Name: Service Activity</para>
    /// </summary>
    [EntityLogicalName("serviceappointment")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class ServiceAppointment : ExtendedEntity<ServiceAppointmentState, ServiceAppointment_StatusCode> {
        
        public const string EntityLogicalName = "serviceappointment";
        
        public const int EntityTypeCode = 4214;
        
        public ServiceAppointment() : 
                base(EntityLogicalName) {
        }
        
        public ServiceAppointment(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("subject");
            }
        }
        
        [AttributeLogicalName("activityid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("activityid", value);
            }
        }
        
        /// <summary>
        /// <para>activity_pointer_service_appointment</para>
        /// <para>Display Name: Service Activity</para>
        /// </summary>
        [AttributeLogicalName("activityid")]
        [DisplayName("Service Activity")]
        public Guid? ActivityId {
            get {
                return GetAttributeValue<Guid?>("activityid");
            }
            set {
                SetId("activityid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Additional Parameters</para>
        /// </summary>
        [AttributeLogicalName("activityadditionalparams")]
        [DisplayName("Additional Parameters")]
        public string ActivityAdditionalParams {
            get {
                return GetAttributeValue<string>("activityadditionalparams");
            }
            set {
                SetAttributeValue("activityadditionalparams", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the type of activity.</para>
        /// <para>Display Name: Activity Type</para>
        /// </summary>
        [AttributeLogicalName("activitytypecode")]
        [DisplayName("Activity Type")]
        public string ActivityTypeCode {
            get {
                return GetAttributeValue<string>("activitytypecode");
            }
        }
        
        /// <summary>
        /// <para>Shows the value selected in the Duration field on the service activity at the time the service activity is closed as completed. The duration is used to report the time spent on the activity.</para>
        /// <para>Display Name: Actual Duration</para>
        /// </summary>
        [AttributeLogicalName("actualdurationminutes")]
        [DisplayName("Actual Duration")]
        [Range(0, 2147483647)]
        public int? ActualDurationMinutes {
            get {
                return GetAttributeValue<int?>("actualdurationminutes");
            }
            set {
                SetAttributeValue("actualdurationminutes", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the actual end date and time of the service activity. By default, it displays when the activity was closed or canceled.</para>
        /// <para>Display Name: Actual End</para>
        /// </summary>
        [AttributeLogicalName("actualend")]
        [DisplayName("Actual End")]
        public DateTime? ActualEnd {
            get {
                return GetAttributeValue<DateTime?>("actualend");
            }
            set {
                SetAttributeValue("actualend", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the actual start date and time for the service activity. By default, it displays when the activity was created.</para>
        /// <para>Display Name: Actual Start</para>
        /// </summary>
        [AttributeLogicalName("actualstart")]
        [DisplayName("Actual Start")]
        public DateTime? ActualStart {
            get {
                return GetAttributeValue<DateTime?>("actualstart");
            }
            set {
                SetAttributeValue("actualstart", value);
            }
        }
        
        /// <summary>
        /// <para>Blind Carbon-copy (bcc) recipients of the activity.</para>
        /// <para>Display Name: BCC</para>
        /// </summary>
        [AttributeLogicalName("bcc")]
        [DisplayName("BCC")]
        public IEnumerable<ActivityParty> Bcc {
            get {
                return GetEntityCollection<ActivityParty>("bcc");
            }
            set {
                SetEntityCollection("bcc", value);
            }
        }
        
        /// <summary>
        /// <para>Type a category to identify the service activity type, such as routine maintenance or service call, to tie the service activity to a business group or function.</para>
        /// <para>Display Name: Category</para>
        /// </summary>
        [AttributeLogicalName("category")]
        [DisplayName("Category")]
        [MaxLength(250)]
        public string Category {
            get {
                return GetAttributeValue<string>("category");
            }
            set {
                SetAttributeValue("category", value);
            }
        }
        
        /// <summary>
        /// <para>Carbon-copy (cc) recipients of the activity.</para>
        /// <para>Display Name: CC</para>
        /// </summary>
        [AttributeLogicalName("cc")]
        [DisplayName("CC")]
        public IEnumerable<ActivityParty> Cc {
            get {
                return GetEntityCollection<ActivityParty>("cc");
            }
            set {
                SetEntityCollection("cc", value);
            }
        }
        
        /// <summary>
        /// <para>Shows how contact about the social activity originated, such as from Twitter or Facebook. This field is read-only.</para>
        /// <para>Display Name: Social Channel</para>
        /// </summary>
        [AttributeLogicalName("community")]
        [DisplayName("Social Channel")]
        public socialprofile_community? Community {
            get {
                return GetOptionSetValue<socialprofile_community>("community");
            }
            set {
                SetOptionSetValue("community", value);
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics CRM options.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record on behalf of another user.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Enter the accounts and contacts for whom the service activity is being performed.</para>
        /// <para>Display Name: Customers</para>
        /// </summary>
        [AttributeLogicalName("customers")]
        [DisplayName("Customers")]
        public IEnumerable<ActivityParty> Customers {
            get {
                return GetEntityCollection<ActivityParty>("customers");
            }
            set {
                SetEntityCollection("customers", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time when the delivery of the activity was last attempted.</para>
        /// <para>Display Name: Date Delivery Last Attempted</para>
        /// </summary>
        [AttributeLogicalName("deliverylastattemptedon")]
        [DisplayName("Date Delivery Last Attempted")]
        public DateTime? DeliveryLastAttemptedOn {
            get {
                return GetAttributeValue<DateTime?>("deliverylastattemptedon");
            }
        }
        
        /// <summary>
        /// <para>Priority of delivery of the activity to the email server.</para>
        /// <para>Display Name: Delivery Priority</para>
        /// </summary>
        [AttributeLogicalName("deliveryprioritycode")]
        [DisplayName("Delivery Priority")]
        public activitypointer_deliveryprioritycode? DeliveryPriorityCode {
            get {
                return GetOptionSetValue<activitypointer_deliveryprioritycode>("deliveryprioritycode");
            }
            set {
                SetOptionSetValue("deliveryprioritycode", value);
            }
        }
        
        /// <summary>
        /// <para>Type additional information to describe the service activity, such as key talking points or objectives.</para>
        /// <para>Display Name: Description</para>
        /// </summary>
        [AttributeLogicalName("description")]
        [DisplayName("Description")]
        public string Description {
            get {
                return GetAttributeValue<string>("description");
            }
            set {
                SetAttributeValue("description", value);
            }
        }
        
        /// <summary>
        /// <para>The message id of activity which is returned from Exchange Server.</para>
        /// <para>Display Name: Exchange Item ID</para>
        /// </summary>
        [AttributeLogicalName("exchangeitemid")]
        [DisplayName("Exchange Item ID")]
        [MaxLength(200)]
        public string ExchangeItemId {
            get {
                return GetAttributeValue<string>("exchangeitemid");
            }
            set {
                SetAttributeValue("exchangeitemid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("Exchange Rate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Shows the web link of Activity of type email.</para>
        /// <para>Display Name: Exchange WebLink</para>
        /// </summary>
        [AttributeLogicalName("exchangeweblink")]
        [DisplayName("Exchange WebLink")]
        [MaxLength(1250)]
        public string ExchangeWebLink {
            get {
                return GetAttributeValue<string>("exchangeweblink");
            }
            set {
                SetAttributeValue("exchangeweblink", value);
            }
        }
        
        /// <summary>
        /// <para>Person who the activity is from.</para>
        /// <para>Display Name: From</para>
        /// </summary>
        [AttributeLogicalName("from")]
        [DisplayName("From")]
        public IEnumerable<ActivityParty> From {
            get {
                return GetEntityCollection<ActivityParty>("from");
            }
            set {
                SetEntityCollection("from", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the data import or data migration that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Type of instance of a recurring series.</para>
        /// <para>Display Name: Recurring Instance Type</para>
        /// </summary>
        [AttributeLogicalName("instancetypecode")]
        [DisplayName("Recurring Instance Type")]
        public ServiceAppointment_InstanceTypeCode? InstanceTypeCode {
            get {
                return GetOptionSetValue<ServiceAppointment_InstanceTypeCode>("instancetypecode");
            }
        }
        
        /// <summary>
        /// <para>Select whether the service activity is an all-day event to make sure the required resources are scheduled for the full day.</para>
        /// <para>Display Name: All Day Event</para>
        /// </summary>
        [AttributeLogicalName("isalldayevent")]
        [DisplayName("All Day Event")]
        public bool? IsAllDayEvent {
            get {
                return GetAttributeValue<bool?>("isalldayevent");
            }
            set {
                SetAttributeValue("isalldayevent", value);
            }
        }
        
        /// <summary>
        /// <para>Information which specifies whether the service activity was billed as part of resolving a case.</para>
        /// <para>Display Name: Is Billed</para>
        /// </summary>
        [AttributeLogicalName("isbilled")]
        [DisplayName("Is Billed")]
        public bool? IsBilled {
            get {
                return GetAttributeValue<bool?>("isbilled");
            }
            set {
                SetAttributeValue("isbilled", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Is Private</para>
        /// </summary>
        [AttributeLogicalName("ismapiprivate")]
        [DisplayName("Is Private")]
        public bool? IsMapiPrivate {
            get {
                return GetAttributeValue<bool?>("ismapiprivate");
            }
            set {
                SetAttributeValue("ismapiprivate", value);
            }
        }
        
        /// <summary>
        /// <para>Information regarding whether the activity is a regular activity type or event type.</para>
        /// <para>Display Name: Is Regular Activity</para>
        /// </summary>
        [AttributeLogicalName("isregularactivity")]
        [DisplayName("Is Regular Activity")]
        public bool? IsRegularActivity {
            get {
                return GetAttributeValue<bool?>("isregularactivity");
            }
        }
        
        /// <summary>
        /// <para>Information which specifies if the service activity was created from a workflow rule.</para>
        /// <para>Display Name: Is Workflow Created</para>
        /// </summary>
        [AttributeLogicalName("isworkflowcreated")]
        [DisplayName("Is Workflow Created")]
        public bool? IsWorkflowCreated {
            get {
                return GetAttributeValue<bool?>("isworkflowcreated");
            }
            set {
                SetAttributeValue("isworkflowcreated", value);
            }
        }
        
        /// <summary>
        /// <para>Contains the date and time stamp of the last on hold time.</para>
        /// <para>Display Name: Last On Hold Time</para>
        /// </summary>
        [AttributeLogicalName("lastonholdtime")]
        [DisplayName("Last On Hold Time")]
        public DateTime? LastOnHoldTime {
            get {
                return GetAttributeValue<DateTime?>("lastonholdtime");
            }
            set {
                SetAttributeValue("lastonholdtime", value);
            }
        }
        
        /// <summary>
        /// <para>Left the voice mail</para>
        /// <para>Display Name: Left Voice Mail</para>
        /// </summary>
        [AttributeLogicalName("leftvoicemail")]
        [DisplayName("Left Voice Mail")]
        public bool? LeftVoiceMail {
            get {
                return GetAttributeValue<bool?>("leftvoicemail");
            }
            set {
                SetAttributeValue("leftvoicemail", value);
            }
        }
        
        /// <summary>
        /// <para>Type the location where the service activity will take place, such as a conference room, customer office, or other venue.</para>
        /// <para>Display Name: Delivery Location</para>
        /// </summary>
        [AttributeLogicalName("location")]
        [DisplayName("Delivery Location")]
        [MaxLength(500)]
        public string Location {
            get {
                return GetAttributeValue<string>("location");
            }
            set {
                SetAttributeValue("location", value);
            }
        }
        
        /// <summary>
        /// <para>Shows who last updated the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics CRM options.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Shows who last updated the record on behalf of another user.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Shows how long, in minutes, that the record was on hold.</para>
        /// <para>Display Name: On Hold Time (Minutes)</para>
        /// </summary>
        [AttributeLogicalName("onholdtime")]
        [DisplayName("On Hold Time (Minutes)")]
        [Range(-2147483648, 2147483647)]
        public int? OnHoldTime {
            get {
                return GetAttributeValue<int?>("onholdtime");
            }
        }
        
        /// <summary>
        /// <para>List of optional attendees for the activity.</para>
        /// <para>Display Name: Optional Attendees</para>
        /// </summary>
        [AttributeLogicalName("optionalattendees")]
        [DisplayName("Optional Attendees")]
        public IEnumerable<ActivityParty> OptionalAttendees {
            get {
                return GetEntityCollection<ActivityParty>("optionalattendees");
            }
            set {
                SetEntityCollection("optionalattendees", value);
            }
        }
        
        /// <summary>
        /// <para>Person who organized the activity.</para>
        /// <para>Display Name: Organizer</para>
        /// </summary>
        [AttributeLogicalName("organizer")]
        [DisplayName("Organizer")]
        public IEnumerable<ActivityParty> Organizer {
            get {
                return GetEntityCollection<ActivityParty>("organizer");
            }
            set {
                SetEntityCollection("organizer", value);
            }
        }
        
        [AttributeLogicalName("overriddencreatedon")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the user or team who is assigned to manage the record. This field is updated every time the record is assigned to a different user.</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>business_unit_service_appointments</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the team that owns the service activity.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user that owns the service activity.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Outsource vendor with which activity is associated.</para>
        /// <para>Display Name: Outsource Vendors</para>
        /// </summary>
        [AttributeLogicalName("partners")]
        [DisplayName("Outsource Vendors")]
        public IEnumerable<ActivityParty> Partners {
            get {
                return GetEntityCollection<ActivityParty>("partners");
            }
            set {
                SetEntityCollection("partners", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Delay activity processing until</para>
        /// </summary>
        [AttributeLogicalName("postponeactivityprocessinguntil")]
        [DisplayName("Delay activity processing until")]
        public DateTime? PostponeActivityProcessingUntil {
            get {
                return GetAttributeValue<DateTime?>("postponeactivityprocessinguntil");
            }
        }
        
        /// <summary>
        /// <para>Type a short description about the objective or primary topic of the service activity.</para>
        /// <para>Display Name: Subject</para>
        /// </summary>
        [AttributeLogicalName("subject")]
        [DisplayName("Subject")]
        [MaxLength(200)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("subject");
            }
            set {
                SetAttributeValue("subject", value);
            }
        }
        
        /// <summary>
        /// <para>Select the priority so that preferred customers or critical issues are handled quickly.</para>
        /// <para>Display Name: Priority</para>
        /// </summary>
        [AttributeLogicalName("prioritycode")]
        [DisplayName("Priority")]
        public ServiceAppointment_PriorityCode? PriorityCode {
            get {
                return GetOptionSetValue<ServiceAppointment_PriorityCode>("prioritycode");
            }
            set {
                SetOptionSetValue("prioritycode", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the Process.</para>
        /// <para>Display Name: Process</para>
        /// </summary>
        [AttributeLogicalName("processid")]
        [DisplayName("Process")]
        public Guid? ProcessId {
            get {
                return GetAttributeValue<Guid?>("processid");
            }
            set {
                SetAttributeValue("processid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the object with which the service activity is associated.</para>
        /// <para>Display Name: Regarding</para>
        /// </summary>
        [AttributeLogicalName("regardingobjectid")]
        [DisplayName("Regarding")]
        public EntityReference RegardingObjectId {
            get {
                return GetAttributeValue<EntityReference>("regardingobjectid");
            }
            set {
                SetAttributeValue("regardingobjectid", value);
            }
        }
        
        /// <summary>
        /// <para>List of required attendees for the activity.</para>
        /// <para>Display Name: Required Attendees</para>
        /// </summary>
        [AttributeLogicalName("requiredattendees")]
        [DisplayName("Required Attendees")]
        public IEnumerable<ActivityParty> RequiredAttendees {
            get {
                return GetEntityCollection<ActivityParty>("requiredattendees");
            }
            set {
                SetEntityCollection("requiredattendees", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the user, facility, or equipment required to complete the service activity.</para>
        /// <para>Display Name: Resources</para>
        /// </summary>
        [AttributeLogicalName("resources")]
        [DisplayName("Resources")]
        public IEnumerable<ActivityParty> Resources {
            get {
                return GetEntityCollection<ActivityParty>("resources");
            }
            set {
                SetEntityCollection("resources", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the service level agreement (SLA) that you want to apply to the service appointment record.</para>
        /// <para>Display Name: SLA</para>
        /// </summary>
        [AttributeLogicalName("slaid")]
        [DisplayName("SLA")]
        public EntityReference SLAId {
            get {
                return GetAttributeValue<EntityReference>("slaid");
            }
            set {
                SetAttributeValue("slaid", value);
            }
        }
        
        /// <summary>
        /// <para>Last SLA that was applied to this email. This field is for internal use only.</para>
        /// <para>Display Name: Last SLA applied</para>
        /// </summary>
        [AttributeLogicalName("slainvokedid")]
        [DisplayName("Last SLA applied")]
        public EntityReference SLAInvokedId {
            get {
                return GetAttributeValue<EntityReference>("slainvokedid");
            }
        }
        
        /// <summary>
        /// <para>Shows the expected duration of the service activity, in minutes.</para>
        /// <para>Display Name: Scheduled Duration</para>
        /// </summary>
        [AttributeLogicalName("scheduleddurationminutes")]
        [DisplayName("Scheduled Duration")]
        [Range(0, 2147483647)]
        public int? ScheduledDurationMinutes {
            get {
                return GetAttributeValue<int?>("scheduleddurationminutes");
            }
            set {
                SetAttributeValue("scheduleddurationminutes", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the expected due date and time.</para>
        /// <para>Display Name: Scheduled End</para>
        /// </summary>
        [AttributeLogicalName("scheduledend")]
        [DisplayName("Scheduled End")]
        public DateTime? ScheduledEnd {
            get {
                return GetAttributeValue<DateTime?>("scheduledend");
            }
            set {
                SetAttributeValue("scheduledend", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the expected due date and time.</para>
        /// <para>Display Name: Scheduled Start</para>
        /// </summary>
        [AttributeLogicalName("scheduledstart")]
        [DisplayName("Scheduled Start")]
        public DateTime? ScheduledStart {
            get {
                return GetAttributeValue<DateTime?>("scheduledstart");
            }
            set {
                SetAttributeValue("scheduledstart", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the mailbox associated with the sender of the email message.</para>
        /// <para>Display Name: Sender's Mailbox</para>
        /// </summary>
        [AttributeLogicalName("sendermailboxid")]
        [DisplayName("Sender\'s Mailbox")]
        public EntityReference SenderMailboxId {
            get {
                return GetAttributeValue<EntityReference>("sendermailboxid");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the activity was sent.</para>
        /// <para>Display Name: Date Sent</para>
        /// </summary>
        [AttributeLogicalName("senton")]
        [DisplayName("Date Sent")]
        public DateTime? SentOn {
            get {
                return GetAttributeValue<DateTime?>("senton");
            }
        }
        
        /// <summary>
        /// <para>Uniqueidentifier specifying the id of recurring series of an instance.</para>
        /// <para>Display Name: Series Id</para>
        /// </summary>
        [AttributeLogicalName("seriesid")]
        [DisplayName("Series Id")]
        public Guid? SeriesId {
            get {
                return GetAttributeValue<Guid?>("seriesid");
            }
        }
        
        /// <summary>
        /// <para>service_service_appointments</para>
        /// <para>Display Name: Service</para>
        /// </summary>
        [AttributeLogicalName("serviceid")]
        [DisplayName("Service")]
        public EntityReference ServiceId {
            get {
                return GetAttributeValue<EntityReference>("serviceid");
            }
            set {
                SetAttributeValue("serviceid", value);
            }
        }
        
        /// <summary>
        /// <para>site_service_appointments</para>
        /// <para>Display Name: Site</para>
        /// </summary>
        [AttributeLogicalName("siteid")]
        [DisplayName("Site")]
        public EntityReference SiteId {
            get {
                return GetAttributeValue<EntityReference>("siteid");
            }
            set {
                SetAttributeValue("siteid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time by which the activities are sorted.</para>
        /// <para>Display Name: Sort Date</para>
        /// </summary>
        [AttributeLogicalName("sortdate")]
        [DisplayName("Sort Date")]
        public DateTime? SortDate {
            get {
                return GetAttributeValue<DateTime?>("sortdate");
            }
            set {
                SetAttributeValue("sortdate", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the Stage.</para>
        /// <para>Display Name: Process Stage</para>
        /// </summary>
        [AttributeLogicalName("stageid")]
        [DisplayName("Process Stage")]
        public Guid? StageId {
            get {
                return GetAttributeValue<Guid?>("stageid");
            }
            set {
                SetAttributeValue("stageid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows whether the service activity is open, completed, or canceled. Completed and canceled service activities are read-only and can't be edited.</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public ServiceAppointmentState? StateCode {
            get {
                return GetOptionSetValue<ServiceAppointmentState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the service activity's status.</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public ServiceAppointment_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<ServiceAppointment_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>Type a subcategory to identify the service activity type and relate the activity to a specific product, service region, business group, or other function.</para>
        /// <para>Display Name: Sub-Category</para>
        /// </summary>
        [AttributeLogicalName("subcategory")]
        [DisplayName("Sub-Category")]
        [MaxLength(250)]
        public string Subcategory {
            get {
                return GetAttributeValue<string>("subcategory");
            }
            set {
                SetAttributeValue("subcategory", value);
            }
        }
        
        /// <summary>
        /// <para>Type a short description about the objective or primary topic of the service activity.</para>
        /// <para>Display Name: Subject</para>
        /// </summary>
        [AttributeLogicalName("subject")]
        [DisplayName("Subject")]
        [MaxLength(200)]
        public string Subject {
            get {
                return GetAttributeValue<string>("subject");
            }
            set {
                SetAttributeValue("subject", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Subscription</para>
        /// </summary>
        [AttributeLogicalName("subscriptionid")]
        [DisplayName("Subscription")]
        public Guid? SubscriptionId {
            get {
                return GetAttributeValue<Guid?>("subscriptionid");
            }
            set {
                SetAttributeValue("subscriptionid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Person who is the receiver of the activity.</para>
        /// <para>Display Name: To</para>
        /// </summary>
        [AttributeLogicalName("to")]
        [DisplayName("To")]
        public IEnumerable<ActivityParty> To {
            get {
                return GetEntityCollection<ActivityParty>("to");
            }
            set {
                SetEntityCollection("to", value);
            }
        }
        
        /// <summary>
        /// <para>TransactionCurrency_ServiceAppointment</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Traversed Path</para>
        /// </summary>
        [AttributeLogicalName("traversedpath")]
        [DisplayName("Traversed Path")]
        [MaxLength(1250)]
        public string TraversedPath {
            get {
                return GetAttributeValue<string>("traversedpath");
            }
            set {
                SetAttributeValue("traversedpath", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version number of the service activity.</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Account_ServiceAppointments")]
        public Account Account_ServiceAppointments {
            get {
                return GetRelatedEntity<Account>("Account_ServiceAppointments", null);
            }
            set {
                SetRelatedEntity("Account_ServiceAppointments", null, value);
            }
        }
        
        [RelationshipSchemaName("CampaignResponse_ServiceAppointments")]
        public IEnumerable<CampaignResponse> CampaignResponse_ServiceAppointments {
            get {
                return GetRelatedEntities<CampaignResponse>("CampaignResponse_ServiceAppointments", null);
            }
            set {
                SetRelatedEntities("CampaignResponse_ServiceAppointments", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Campaign_ServiceAppointments")]
        public Campaign Campaign_ServiceAppointments {
            get {
                return GetRelatedEntity<Campaign>("Campaign_ServiceAppointments", null);
            }
            set {
                SetRelatedEntity("Campaign_ServiceAppointments", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Contact_ServiceAppointments")]
        public Contact Contact_ServiceAppointments {
            get {
                return GetRelatedEntity<Contact>("Contact_ServiceAppointments", null);
            }
            set {
                SetRelatedEntity("Contact_ServiceAppointments", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Contract_ServiceAppointments")]
        public Contract Contract_ServiceAppointments {
            get {
                return GetRelatedEntity<Contract>("Contract_ServiceAppointments", null);
            }
            set {
                SetRelatedEntity("Contract_ServiceAppointments", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Incident_ServiceAppointments")]
        public Incident Incident_ServiceAppointments {
            get {
                return GetRelatedEntity<Incident>("Incident_ServiceAppointments", null);
            }
            set {
                SetRelatedEntity("Incident_ServiceAppointments", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Invoice_ServiceAppointments")]
        public Invoice Invoice_ServiceAppointments {
            get {
                return GetRelatedEntity<Invoice>("Invoice_ServiceAppointments", null);
            }
            set {
                SetRelatedEntity("Invoice_ServiceAppointments", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("KnowledgeArticle_ServiceAppointments")]
        public KnowledgeArticle KnowledgeArticle_ServiceAppointments {
            get {
                return GetRelatedEntity<KnowledgeArticle>("KnowledgeArticle_ServiceAppointments", null);
            }
            set {
                SetRelatedEntity("KnowledgeArticle_ServiceAppointments", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Lead_ServiceAppointments")]
        public Lead Lead_ServiceAppointments {
            get {
                return GetRelatedEntity<Lead>("Lead_ServiceAppointments", null);
            }
            set {
                SetRelatedEntity("Lead_ServiceAppointments", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Opportunity_ServiceAppointments")]
        public Opportunity Opportunity_ServiceAppointments {
            get {
                return GetRelatedEntity<Opportunity>("Opportunity_ServiceAppointments", null);
            }
            set {
                SetRelatedEntity("Opportunity_ServiceAppointments", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Quote_ServiceAppointments")]
        public Quote Quote_ServiceAppointments {
            get {
                return GetRelatedEntity<Quote>("Quote_ServiceAppointments", null);
            }
            set {
                SetRelatedEntity("Quote_ServiceAppointments", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("SalesOrder_ServiceAppointments")]
        public SalesOrder SalesOrder_ServiceAppointments {
            get {
                return GetRelatedEntity<SalesOrder>("SalesOrder_ServiceAppointments", null);
            }
            set {
                SetRelatedEntity("SalesOrder_ServiceAppointments", null, value);
            }
        }
        
        [RelationshipSchemaName("ServiceAppointment_QueueItem")]
        public IEnumerable<QueueItem> ServiceAppointment_QueueItem {
            get {
                return GetRelatedEntities<QueueItem>("ServiceAppointment_QueueItem", null);
            }
            set {
                SetRelatedEntities("ServiceAppointment_QueueItem", null, value);
            }
        }
        
        [RelationshipSchemaName("ServiceAppointment_SyncErrors")]
        public IEnumerable<SyncError> ServiceAppointment_SyncErrors {
            get {
                return GetRelatedEntities<SyncError>("ServiceAppointment_SyncErrors", null);
            }
            set {
                SetRelatedEntities("ServiceAppointment_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("transactioncurrencyid")]
        [RelationshipSchemaName("TransactionCurrency_ServiceAppointment")]
        public TransactionCurrency TransactionCurrency_ServiceAppointment {
            get {
                return GetRelatedEntity<TransactionCurrency>("TransactionCurrency_ServiceAppointment", null);
            }
            set {
                SetRelatedEntity("TransactionCurrency_ServiceAppointment", null, value);
            }
        }
        
        [AttributeLogicalName("activityid")]
        [RelationshipSchemaName("activity_pointer_service_appointment")]
        public ActivityPointer activity_pointer_service_appointment {
            get {
                return GetRelatedEntity<ActivityPointer>("activity_pointer_service_appointment", null);
            }
            set {
                SetRelatedEntity("activity_pointer_service_appointment", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("bookableresourcebooking_ServiceAppointments")]
        public BookableResourceBooking bookableresourcebooking_ServiceAppointments {
            get {
                return GetRelatedEntity<BookableResourceBooking>("bookableresourcebooking_ServiceAppointments", null);
            }
            set {
                SetRelatedEntity("bookableresourcebooking_ServiceAppointments", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("bookableresourcebookingheader_ServiceAppointments")]
        public BookableResourceBookingHeader bookableresourcebookingheader_ServiceAppointments {
            get {
                return GetRelatedEntity<BookableResourceBookingHeader>("bookableresourcebookingheader_ServiceAppointments", null);
            }
            set {
                SetRelatedEntity("bookableresourcebookingheader_ServiceAppointments", null, value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_service_appointments")]
        public BusinessUnit business_unit_service_appointments {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_service_appointments", null);
            }
            set {
                SetRelatedEntity("business_unit_service_appointments", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("campaignactivity_ServiceAppointments")]
        public CampaignActivity campaignactivity_ServiceAppointments {
            get {
                return GetRelatedEntity<CampaignActivity>("campaignactivity_ServiceAppointments", null);
            }
            set {
                SetRelatedEntity("campaignactivity_ServiceAppointments", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("dg_event_ServiceAppointments")]
        public dg_event dg_event_ServiceAppointments {
            get {
                return GetRelatedEntity<dg_event>("dg_event_ServiceAppointments", null);
            }
            set {
                SetRelatedEntity("dg_event_ServiceAppointments", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("dg_participant_ServiceAppointments")]
        public dg_participant dg_participant_ServiceAppointments {
            get {
                return GetRelatedEntity<dg_participant>("dg_participant_ServiceAppointments", null);
            }
            set {
                SetRelatedEntity("dg_participant_ServiceAppointments", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("entitlement_ServiceAppointments")]
        public Entitlement entitlement_ServiceAppointments {
            get {
                return GetRelatedEntity<Entitlement>("entitlement_ServiceAppointments", null);
            }
            set {
                SetRelatedEntity("entitlement_ServiceAppointments", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_serviceappointment_createdby")]
        public SystemUser lk_serviceappointment_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_serviceappointment_createdby", null);
            }
            set {
                SetRelatedEntity("lk_serviceappointment_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_serviceappointment_createdonbehalfby")]
        public SystemUser lk_serviceappointment_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_serviceappointment_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_serviceappointment_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_serviceappointment_modifiedby")]
        public SystemUser lk_serviceappointment_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_serviceappointment_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_serviceappointment_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_serviceappointment_modifiedonbehalfby")]
        public SystemUser lk_serviceappointment_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_serviceappointment_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_serviceappointment_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("slaid")]
        [RelationshipSchemaName("manualsla_serviceappointment")]
        public SLA manualsla_serviceappointment {
            get {
                return GetRelatedEntity<SLA>("manualsla_serviceappointment", null);
            }
            set {
                SetRelatedEntity("manualsla_serviceappointment", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("msdyn_agreement_ServiceAppointments")]
        public msdyn_agreement msdyn_agreement_ServiceAppointments {
            get {
                return GetRelatedEntity<msdyn_agreement>("msdyn_agreement_ServiceAppointments", null);
            }
            set {
                SetRelatedEntity("msdyn_agreement_ServiceAppointments", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("msdyn_postalbum_ServiceAppointments")]
        public msdyn_PostAlbum msdyn_postalbum_ServiceAppointments {
            get {
                return GetRelatedEntity<msdyn_PostAlbum>("msdyn_postalbum_ServiceAppointments", null);
            }
            set {
                SetRelatedEntity("msdyn_postalbum_ServiceAppointments", null, value);
            }
        }
        
        [RelationshipSchemaName("serviceappointment_Teams")]
        public IEnumerable<Team> serviceappointment_Teams {
            get {
                return GetRelatedEntities<Team>("serviceappointment_Teams", null);
            }
            set {
                SetRelatedEntities("serviceappointment_Teams", null, value);
            }
        }
        
        [RelationshipSchemaName("serviceappointment_activity_parties")]
        public IEnumerable<ActivityParty> serviceappointment_activity_parties {
            get {
                return GetRelatedEntities<ActivityParty>("serviceappointment_activity_parties", null);
            }
            set {
                SetRelatedEntities("serviceappointment_activity_parties", null, value);
            }
        }
        
        [RelationshipSchemaName("serviceappointment_connections1")]
        public IEnumerable<Connection> serviceappointment_connections1 {
            get {
                return GetRelatedEntities<Connection>("serviceappointment_connections1", null);
            }
            set {
                SetRelatedEntities("serviceappointment_connections1", null, value);
            }
        }
        
        [RelationshipSchemaName("serviceappointment_connections2")]
        public IEnumerable<Connection> serviceappointment_connections2 {
            get {
                return GetRelatedEntities<Connection>("serviceappointment_connections2", null);
            }
            set {
                SetRelatedEntities("serviceappointment_connections2", null, value);
            }
        }
        
        [AttributeLogicalName("sendermailboxid")]
        [RelationshipSchemaName("serviceappointment_mailbox_sendermailboxid")]
        public Mailbox serviceappointment_mailbox_sendermailboxid {
            get {
                return GetRelatedEntity<Mailbox>("serviceappointment_mailbox_sendermailboxid", null);
            }
            set {
                SetRelatedEntity("serviceappointment_mailbox_sendermailboxid", null, value);
            }
        }
        
        [AttributeLogicalName("slainvokedid")]
        [RelationshipSchemaName("sla_serviceappointment")]
        public SLA sla_serviceappointment {
            get {
                return GetRelatedEntity<SLA>("sla_serviceappointment", null);
            }
            set {
                SetRelatedEntity("sla_serviceappointment", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("system_user_service_appointments")]
        public SystemUser system_user_service_appointments {
            get {
                return GetRelatedEntity<SystemUser>("system_user_service_appointments", null);
            }
            set {
                SetRelatedEntity("system_user_service_appointments", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_service_appointments")]
        public Team team_service_appointments {
            get {
                return GetRelatedEntity<Team>("team_service_appointments", null);
            }
            set {
                SetRelatedEntity("team_service_appointments", null, value);
            }
        }
        
        public static ServiceAppointment Retrieve(IOrganizationService service, Guid id, params Expression<Func<ServiceAppointment,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Item in a Service contract.</para>
    /// <para>Display Name: Service Contract Contact</para>
    /// </summary>
    [EntityLogicalName("servicecontractcontacts")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class ServiceContractContacts : ExtendedEntity<EmptyEnum, EmptyEnum> {
        
        public const string EntityLogicalName = "servicecontractcontacts";
        
        public const string RelationshipSchemaName = "ServiceContractContacts";
        
        public const int EntityTypeCode = 20;
        
        public ServiceContractContacts() : 
                base(EntityLogicalName) {
        }
        
        public ServiceContractContacts(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("name");
            }
        }
        
        [AttributeLogicalName("servicecontractcontactid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("servicecontractcontactid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the contact of the service contract.</para>
        /// </summary>
        [AttributeLogicalName("servicecontractcontactid")]
        public Guid? ServiceContractContactId {
            get {
                return GetAttributeValue<Guid?>("servicecontractcontactid");
            }
            set {
                SetId("servicecontractcontactid", value);
            }
        }
        
        [AttributeLogicalName("contactid")]
        public Guid? ContactId {
            get {
                return GetAttributeValue<Guid?>("contactid");
            }
        }
        
        [AttributeLogicalName("contractid")]
        public Guid? ContractId {
            get {
                return GetAttributeValue<Guid?>("contractid");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>name</para>
        /// <para>Display Name: name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("name")]
        [MaxLength(100)]
        public string Name {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>name</para>
        /// <para>Display Name: name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("name")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        [AttributeLogicalName("servicelevel")]
        [Range(-2147483648, 2147483647)]
        public int? ServiceLevel {
            get {
                return GetAttributeValue<int?>("servicelevel");
            }
            set {
                SetAttributeValue("servicelevel", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        [RelationshipSchemaName("servicecontractcontacts_Teams")]
        public IEnumerable<Team> servicecontractcontacts_Teams {
            get {
                return GetRelatedEntities<Team>("servicecontractcontacts_Teams", null);
            }
            set {
                SetRelatedEntities("servicecontractcontacts_Teams", null, value);
            }
        }
        
        public static ServiceContractContacts Retrieve(IOrganizationService service, Guid id, params Expression<Func<ServiceContractContacts,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Document libraries or folders on a SharePoint server from where documents can be managed in Microsoft Dynamics 365.</para>
    /// <para>Display Name: Document Location</para>
    /// </summary>
    [EntityLogicalName("sharepointdocumentlocation")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class SharePointDocumentLocation : ExtendedEntity<SharePointDocumentLocationState, SharePointDocumentLocation_StatusCode> {
        
        public const string EntityLogicalName = "sharepointdocumentlocation";
        
        public const int EntityTypeCode = 9508;
        
        public SharePointDocumentLocation() : 
                base(EntityLogicalName) {
        }
        
        public SharePointDocumentLocation(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("name");
            }
        }
        
        [AttributeLogicalName("sharepointdocumentlocationid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("sharepointdocumentlocationid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the SharePoint document location record.</para>
        /// <para>Display Name: SharePoint Document Location ID</para>
        /// </summary>
        [AttributeLogicalName("sharepointdocumentlocationid")]
        [DisplayName("SharePoint Document Location ID")]
        public Guid? SharePointDocumentLocationId {
            get {
                return GetAttributeValue<Guid?>("sharepointdocumentlocationid");
            }
            set {
                SetId("sharepointdocumentlocationid", value);
            }
        }
        
        /// <summary>
        /// <para>Absolute URL of the SharePoint document location.</para>
        /// <para>Display Name: Absolute URL</para>
        /// </summary>
        [AttributeLogicalName("absoluteurl")]
        [DisplayName("Absolute URL")]
        [MaxLength(2000)]
        public string AbsoluteURL {
            get {
                return GetAttributeValue<string>("absoluteurl");
            }
            set {
                SetAttributeValue("absoluteurl", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the SharePoint document location record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the SharePoint document location record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the SharePoint document location record.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Description of the SharePoint document location record.</para>
        /// <para>Display Name: Description</para>
        /// </summary>
        [AttributeLogicalName("description")]
        [DisplayName("Description")]
        public string Description {
            get {
                return GetAttributeValue<string>("description");
            }
            set {
                SetAttributeValue("description", value);
            }
        }
        
        /// <summary>
        /// <para>Exchange rate between the currency associated with the SharePoint document location record and the base currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("Exchange Rate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created the SharePoint document location record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Location type of the SharePoint document location.</para>
        /// <para>Display Name: Location Type </para>
        /// </summary>
        [AttributeLogicalName("locationtype")]
        [DisplayName("Location Type ")]
        public sharepointdocumentlocation_locationtype? LocationType {
            get {
                return GetOptionSetValue<sharepointdocumentlocation_locationtype>("locationtype");
            }
            set {
                SetOptionSetValue("locationtype", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who last modified the SharePoint document location record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the SharePoint document location record was last modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who modified the SharePoint document location record.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Name of the SharePoint document location record.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Name")]
        [MaxLength(160)]
        public string Name {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user or team who owns the SharePoint document location record.</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the business unit that owns the SharePoint document location record.</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the team who owns the SharePoint document location record.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who owns the SharePoint document location record.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the parent site or location.</para>
        /// <para>Display Name: Parent Site or Location</para>
        /// </summary>
        [AttributeLogicalName("parentsiteorlocation")]
        [DisplayName("Parent Site or Location")]
        public EntityReference ParentSiteOrLocation {
            get {
                return GetAttributeValue<EntityReference>("parentsiteorlocation");
            }
            set {
                SetAttributeValue("parentsiteorlocation", value);
            }
        }
        
        /// <summary>
        /// <para>Name of the SharePoint document location record.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Name")]
        [MaxLength(160)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>SalesLiterature_SharepointDocumentLocation</para>
        /// <para>Display Name: Regarding</para>
        /// </summary>
        [AttributeLogicalName("regardingobjectid")]
        [DisplayName("Regarding")]
        public EntityReference RegardingObjectId {
            get {
                return GetAttributeValue<EntityReference>("regardingobjectid");
            }
            set {
                SetAttributeValue("regardingobjectid", value);
            }
        }
        
        /// <summary>
        /// <para>Relative URL of the SharePoint document location.</para>
        /// <para>Display Name: Relative URL</para>
        /// </summary>
        [AttributeLogicalName("relativeurl")]
        [DisplayName("Relative URL")]
        [MaxLength(255)]
        public string RelativeUrl {
            get {
                return GetAttributeValue<string>("relativeurl");
            }
            set {
                SetAttributeValue("relativeurl", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the service type of the SharePoint site.</para>
        /// <para>Display Name: Service Type</para>
        /// </summary>
        [AttributeLogicalName("servicetype")]
        [DisplayName("Service Type")]
        public sharepointsite_servicetype? ServiceType {
            get {
                return GetOptionSetValue<sharepointsite_servicetype>("servicetype");
            }
            set {
                SetOptionSetValue("servicetype", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// </summary>
        [AttributeLogicalName("sitecollectionid")]
        public Guid? SiteCollectionId {
            get {
                return GetAttributeValue<Guid?>("sitecollectionid");
            }
        }
        
        /// <summary>
        /// <para>Status of the SharePoint document location record.</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public SharePointDocumentLocationState? StateCode {
            get {
                return GetOptionSetValue<SharePointDocumentLocationState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the SharePoint document location record.</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public SharePointDocumentLocation_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<SharePointDocumentLocation_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the currency associated with the SharePoint document location record.</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the user who owns the SharePoint document location.</para>
        /// <para>Display Name: SharePoint Document Location Owner</para>
        /// </summary>
        [AttributeLogicalName("userid")]
        [DisplayName("SharePoint Document Location Owner")]
        public Guid? UserId {
            get {
                return GetAttributeValue<Guid?>("userid");
            }
            set {
                SetAttributeValue("userid", value);
            }
        }
        
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Account_SharepointDocumentLocation")]
        public Account Account_SharepointDocumentLocation {
            get {
                return GetRelatedEntity<Account>("Account_SharepointDocumentLocation", null);
            }
            set {
                SetRelatedEntity("Account_SharepointDocumentLocation", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Lead_SharepointDocumentLocation")]
        public Lead Lead_SharepointDocumentLocation {
            get {
                return GetRelatedEntity<Lead>("Lead_SharepointDocumentLocation", null);
            }
            set {
                SetRelatedEntity("Lead_SharepointDocumentLocation", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Opportunity_SharepointDocumentLocation")]
        public Opportunity Opportunity_SharepointDocumentLocation {
            get {
                return GetRelatedEntity<Opportunity>("Opportunity_SharepointDocumentLocation", null);
            }
            set {
                SetRelatedEntity("Opportunity_SharepointDocumentLocation", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Quote_SharepointDocumentLocation")]
        public Quote Quote_SharepointDocumentLocation {
            get {
                return GetRelatedEntity<Quote>("Quote_SharepointDocumentLocation", null);
            }
            set {
                SetRelatedEntity("Quote_SharepointDocumentLocation", null, value);
            }
        }
        
        [RelationshipSchemaName("sharepointdocumentlocation_parent_sharepointdocumentlocation", EntityRole.Referenced)]
        public IEnumerable<SharePointDocumentLocation> Referencedsharepointdocumentlocation_parent_sharepointdocumentlocation {
            get {
                return GetRelatedEntities<SharePointDocumentLocation>("sharepointdocumentlocation_parent_sharepointdocumentlocation", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("sharepointdocumentlocation_parent_sharepointdocumentlocation", EntityRole.Referenced, value);
            }
        }
        
        [AttributeLogicalName("parentsiteorlocation")]
        [RelationshipSchemaName("sharepointdocumentlocation_parent_sharepointdocumentlocation", EntityRole.Referencing)]
        public SharePointDocumentLocation Referencingsharepointdocumentlocation_parent_sharepointdocumentlocation {
            get {
                return GetRelatedEntity<SharePointDocumentLocation>("sharepointdocumentlocation_parent_sharepointdocumentlocation", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("sharepointdocumentlocation_parent_sharepointdocumentlocation", EntityRole.Referencing, value);
            }
        }
        
        [RelationshipSchemaName("SharePointDocumentLocation_SyncErrors")]
        public IEnumerable<SyncError> SharePointDocumentLocation_SyncErrors {
            get {
                return GetRelatedEntities<SyncError>("SharePointDocumentLocation_SyncErrors", null);
            }
            set {
                SetRelatedEntities("SharePointDocumentLocation_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("transactioncurrencyid")]
        [RelationshipSchemaName("TransactionCurrency_SharePointDocumentLocation")]
        public TransactionCurrency TransactionCurrency_SharePointDocumentLocation {
            get {
                return GetRelatedEntity<TransactionCurrency>("TransactionCurrency_SharePointDocumentLocation", null);
            }
            set {
                SetRelatedEntity("TransactionCurrency_SharePointDocumentLocation", null, value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_sharepointdocumentlocation")]
        public BusinessUnit business_unit_sharepointdocumentlocation {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_sharepointdocumentlocation", null);
            }
            set {
                SetRelatedEntity("business_unit_sharepointdocumentlocation", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("contact_SharePointDocumentLocations")]
        public Contact contact_SharePointDocumentLocations {
            get {
                return GetRelatedEntity<Contact>("contact_SharePointDocumentLocations", null);
            }
            set {
                SetRelatedEntity("contact_SharePointDocumentLocations", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("knowledgearticle_SharePointDocumentLocations")]
        public KnowledgeArticle knowledgearticle_SharePointDocumentLocations {
            get {
                return GetRelatedEntity<KnowledgeArticle>("knowledgearticle_SharePointDocumentLocations", null);
            }
            set {
                SetRelatedEntity("knowledgearticle_SharePointDocumentLocations", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_sharepointdocumentlocationbase_createdby")]
        public SystemUser lk_sharepointdocumentlocationbase_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_sharepointdocumentlocationbase_createdby", null);
            }
            set {
                SetRelatedEntity("lk_sharepointdocumentlocationbase_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_sharepointdocumentlocationbase_createdonbehalfby")]
        public SystemUser lk_sharepointdocumentlocationbase_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_sharepointdocumentlocationbase_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_sharepointdocumentlocationbase_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_sharepointdocumentlocationbase_modifiedby")]
        public SystemUser lk_sharepointdocumentlocationbase_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_sharepointdocumentlocationbase_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_sharepointdocumentlocationbase_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_sharepointdocumentlocationbase_modifiedonbehalfby")]
        public SystemUser lk_sharepointdocumentlocationbase_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_sharepointdocumentlocationbase_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_sharepointdocumentlocationbase_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("msdyn_agreement_SharePointDocumentLocations")]
        public msdyn_agreement msdyn_agreement_SharePointDocumentLocations {
            get {
                return GetRelatedEntity<msdyn_agreement>("msdyn_agreement_SharePointDocumentLocations", null);
            }
            set {
                SetRelatedEntity("msdyn_agreement_SharePointDocumentLocations", null, value);
            }
        }
        
        [AttributeLogicalName("parentsiteorlocation")]
        [RelationshipSchemaName("sharepointdocumentlocation_parent_sharepointsite")]
        public SharePointSite sharepointdocumentlocation_parent_sharepointsite {
            get {
                return GetRelatedEntity<SharePointSite>("sharepointdocumentlocation_parent_sharepointsite", null);
            }
            set {
                SetRelatedEntity("sharepointdocumentlocation_parent_sharepointsite", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_sharepointdocumentlocation")]
        public Team team_sharepointdocumentlocation {
            get {
                return GetRelatedEntity<Team>("team_sharepointdocumentlocation", null);
            }
            set {
                SetRelatedEntity("team_sharepointdocumentlocation", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_sharepointdocumentlocation")]
        public SystemUser user_sharepointdocumentlocation {
            get {
                return GetRelatedEntity<SystemUser>("user_sharepointdocumentlocation", null);
            }
            set {
                SetRelatedEntity("user_sharepointdocumentlocation", null, value);
            }
        }
        
        public static SharePointDocumentLocation Retrieve(IOrganizationService service, Guid id, params Expression<Func<SharePointDocumentLocation,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>SharePoint site from where documents can be managed in Microsoft Dynamics 365.</para>
    /// <para>Display Name: SharePoint Site</para>
    /// </summary>
    [EntityLogicalName("sharepointsite")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class SharePointSite : ExtendedEntity<SharePointSiteState, SharePointSite_StatusCode> {
        
        public const string EntityLogicalName = "sharepointsite";
        
        public const int EntityTypeCode = 9502;
        
        public SharePointSite() : 
                base(EntityLogicalName) {
        }
        
        public SharePointSite(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("name");
            }
        }
        
        [AttributeLogicalName("sharepointsiteid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("sharepointsiteid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the SharePoint site in Dynamics 365</para>
        /// <para>Display Name: SharePoint Site ID</para>
        /// </summary>
        [AttributeLogicalName("sharepointsiteid")]
        [DisplayName("SharePoint Site ID")]
        public Guid? SharePointSiteId {
            get {
                return GetAttributeValue<Guid?>("sharepointsiteid");
            }
            set {
                SetId("sharepointsiteid", value);
            }
        }
        
        /// <summary>
        /// <para>Absolute URL of the SharePoint site.</para>
        /// <para>Display Name: Absolute URL</para>
        /// </summary>
        [AttributeLogicalName("absoluteurl")]
        [DisplayName("Absolute URL")]
        [MaxLength(2000)]
        public string AbsoluteURL {
            get {
                return GetAttributeValue<string>("absoluteurl");
            }
            set {
                SetAttributeValue("absoluteurl", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the SharePoint site record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the SharePoint site record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the SharePoint site record.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Description of the SharePoint site record.</para>
        /// <para>Display Name: Description</para>
        /// </summary>
        [AttributeLogicalName("description")]
        [DisplayName("Description")]
        public string Description {
            get {
                return GetAttributeValue<string>("description");
            }
            set {
                SetAttributeValue("description", value);
            }
        }
        
        /// <summary>
        /// <para>Exchange rate between the currency associated with the SharePoint site record and the base currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("Exchange Rate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Entity on which the folder structure for Microsoft Dynamics 365 records will be created in SharePoint.</para>
        /// <para>Display Name: Entity for SharePoint Folder Structure</para>
        /// </summary>
        [AttributeLogicalName("folderstructureentity")]
        [DisplayName("Entity for SharePoint Folder Structure")]
        public string FolderStructureEntity {
            get {
                return GetAttributeValue<string>("folderstructureentity");
            }
            set {
                SetAttributeValue("folderstructureentity", value);
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the SharePoint site is the default site or not.</para>
        /// <para>Display Name: Default Site</para>
        /// </summary>
        [AttributeLogicalName("isdefault")]
        [DisplayName("Default Site")]
        public bool? IsDefault {
            get {
                return GetAttributeValue<bool?>("isdefault");
            }
            set {
                SetAttributeValue("isdefault", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates if SharePoint Grid is present or not.</para>
        /// <para>Display Name: List component is installed</para>
        /// </summary>
        [AttributeLogicalName("isgridpresent")]
        [DisplayName("List component is installed")]
        public bool? IsGridPresent {
            get {
                return GetAttributeValue<bool?>("isgridpresent");
            }
            set {
                SetAttributeValue("isgridpresent", value);
            }
        }
        
        /// <summary>
        /// <para>Allows embedding of Power BI Reports available in this SharePoint site.</para>
        /// <para>Display Name: Allow Embedding of Power BI Reports</para>
        /// </summary>
        [AttributeLogicalName("ispowerbisite")]
        [DisplayName("Allow Embedding of Power BI Reports")]
        public bool? IsPowerBISite {
            get {
                return GetAttributeValue<bool?>("ispowerbisite");
            }
            set {
                SetAttributeValue("ispowerbisite", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time when the SharePoint site URL was last validated.</para>
        /// <para>Display Name: Last Validated</para>
        /// </summary>
        [AttributeLogicalName("lastvalidated")]
        [DisplayName("Last Validated")]
        public DateTime? LastValidated {
            get {
                return GetAttributeValue<DateTime?>("lastvalidated");
            }
            set {
                SetAttributeValue("lastvalidated", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who last modified the SharePoint site record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the SharePoint site record was last modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who modified the SharePoint site record.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Name of the SharePoint site record.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Name")]
        [MaxLength(160)]
        public string Name {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user or team who owns the SharePoint site.</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the business unit that owns the document location record.</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the team that owns the SharePoint site record.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who owns the SharePoint site record.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the parent SharePoint site.</para>
        /// <para>Display Name: Parent Site</para>
        /// </summary>
        [AttributeLogicalName("parentsite")]
        [DisplayName("Parent Site")]
        public EntityReference ParentSite {
            get {
                return GetAttributeValue<EntityReference>("parentsite");
            }
            set {
                SetAttributeValue("parentsite", value);
            }
        }
        
        /// <summary>
        /// <para>Name of the SharePoint site record.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Name")]
        [MaxLength(160)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Relative URL of the SharePoint site.</para>
        /// <para>Display Name: Relative URL</para>
        /// </summary>
        [AttributeLogicalName("relativeurl")]
        [DisplayName("Relative URL")]
        [MaxLength(160)]
        public string RelativeUrl {
            get {
                return GetAttributeValue<string>("relativeurl");
            }
            set {
                SetAttributeValue("relativeurl", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the service type of location of the SharePoint site.</para>
        /// <para>Display Name: Service Type</para>
        /// </summary>
        [AttributeLogicalName("servicetype")]
        [DisplayName("Service Type")]
        public sharepointsite_servicetype? ServiceType {
            get {
                return GetOptionSetValue<sharepointsite_servicetype>("servicetype");
            }
            set {
                SetOptionSetValue("servicetype", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// </summary>
        [AttributeLogicalName("sitecollectionid")]
        public Guid? SiteCollectionId {
            get {
                return GetAttributeValue<Guid?>("sitecollectionid");
            }
        }
        
        /// <summary>
        /// <para>Status of the SharePoint site record.</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public SharePointSiteState? StateCode {
            get {
                return GetOptionSetValue<SharePointSiteState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the SharePoint site record.</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public SharePointSite_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<SharePointSite_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the currency associated with the SharePoint site record.</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the user who owns the SharePoint site.</para>
        /// <para>Display Name: SharePoint Site Owner</para>
        /// </summary>
        [AttributeLogicalName("userid")]
        [DisplayName("SharePoint Site Owner")]
        public Guid? UserId {
            get {
                return GetAttributeValue<Guid?>("userid");
            }
            set {
                SetAttributeValue("userid", value);
            }
        }
        
        /// <summary>
        /// <para>Validation status of the SharePoint site URL.</para>
        /// <para>Display Name: Last Validation Status</para>
        /// </summary>
        [AttributeLogicalName("validationstatus")]
        [DisplayName("Last Validation Status")]
        public sharepoint_validationstatus? ValidationStatus {
            get {
                return GetOptionSetValue<sharepoint_validationstatus>("validationstatus");
            }
            set {
                SetOptionSetValue("validationstatus", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for validation status of the URL</para>
        /// <para>Display Name: Additional Information</para>
        /// </summary>
        [AttributeLogicalName("validationstatuserrorcode")]
        [DisplayName("Additional Information")]
        public sharepoint_validationstatusreason? ValidationStatusErrorCode {
            get {
                return GetOptionSetValue<sharepoint_validationstatusreason>("validationstatuserrorcode");
            }
            set {
                SetOptionSetValue("validationstatuserrorcode", value);
            }
        }
        
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        [RelationshipSchemaName("sharepointsite_parentsite_sharepointsite", EntityRole.Referenced)]
        public IEnumerable<SharePointSite> Referencedsharepointsite_parentsite_sharepointsite {
            get {
                return GetRelatedEntities<SharePointSite>("sharepointsite_parentsite_sharepointsite", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("sharepointsite_parentsite_sharepointsite", EntityRole.Referenced, value);
            }
        }
        
        [AttributeLogicalName("parentsite")]
        [RelationshipSchemaName("sharepointsite_parentsite_sharepointsite", EntityRole.Referencing)]
        public SharePointSite Referencingsharepointsite_parentsite_sharepointsite {
            get {
                return GetRelatedEntity<SharePointSite>("sharepointsite_parentsite_sharepointsite", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("sharepointsite_parentsite_sharepointsite", EntityRole.Referencing, value);
            }
        }
        
        [RelationshipSchemaName("SharePointSite_SyncErrors")]
        public IEnumerable<SyncError> SharePointSite_SyncErrors {
            get {
                return GetRelatedEntities<SyncError>("SharePointSite_SyncErrors", null);
            }
            set {
                SetRelatedEntities("SharePointSite_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("transactioncurrencyid")]
        [RelationshipSchemaName("TransactionCurrency_SharePointSite")]
        public TransactionCurrency TransactionCurrency_SharePointSite {
            get {
                return GetRelatedEntity<TransactionCurrency>("TransactionCurrency_SharePointSite", null);
            }
            set {
                SetRelatedEntity("TransactionCurrency_SharePointSite", null, value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_sharepointsites")]
        public BusinessUnit business_unit_sharepointsites {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_sharepointsites", null);
            }
            set {
                SetRelatedEntity("business_unit_sharepointsites", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_sharepointsitebase_createdby")]
        public SystemUser lk_sharepointsitebase_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_sharepointsitebase_createdby", null);
            }
            set {
                SetRelatedEntity("lk_sharepointsitebase_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_sharepointsitebase_createdonbehalfby")]
        public SystemUser lk_sharepointsitebase_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_sharepointsitebase_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_sharepointsitebase_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_sharepointsitebase_modifiedby")]
        public SystemUser lk_sharepointsitebase_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_sharepointsitebase_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_sharepointsitebase_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_sharepointsitebase_modifiedonbehalfby")]
        public SystemUser lk_sharepointsitebase_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_sharepointsitebase_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_sharepointsitebase_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("sharepointdocumentlocation_parent_sharepointsite")]
        public IEnumerable<SharePointDocumentLocation> sharepointdocumentlocation_parent_sharepointsite {
            get {
                return GetRelatedEntities<SharePointDocumentLocation>("sharepointdocumentlocation_parent_sharepointsite", null);
            }
            set {
                SetRelatedEntities("sharepointdocumentlocation_parent_sharepointsite", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_sharepointsite")]
        public Team team_sharepointsite {
            get {
                return GetRelatedEntity<Team>("team_sharepointsite", null);
            }
            set {
                SetRelatedEntity("team_sharepointsite", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_sharepointsite")]
        public SystemUser user_sharepointsite {
            get {
                return GetRelatedEntity<SystemUser>("user_sharepointsite", null);
            }
            set {
                SetRelatedEntity("user_sharepointsite", null, value);
            }
        }
        
        public static SharePointSite Retrieve(IOrganizationService service, Guid id, params Expression<Func<SharePointSite,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Social Activity</para>
    /// </summary>
    [EntityLogicalName("socialactivity")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class SocialActivity : ExtendedEntity<SocialActivityState, SocialActivity_StatusCode> {
        
        public const string EntityLogicalName = "socialactivity";
        
        public const int EntityTypeCode = 4216;
        
        public SocialActivity() : 
                base(EntityLogicalName) {
        }
        
        public SocialActivity(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("subject");
            }
        }
        
        [AttributeLogicalName("activityid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("activityid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the activity.</para>
        /// <para>Display Name: Activity</para>
        /// </summary>
        [AttributeLogicalName("activityid")]
        [DisplayName("Activity")]
        public Guid? ActivityId {
            get {
                return GetAttributeValue<Guid?>("activityid");
            }
            set {
                SetId("activityid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Additional Parameters</para>
        /// </summary>
        [AttributeLogicalName("activityadditionalparams")]
        [DisplayName("Additional Parameters")]
        public string ActivityAdditionalParams {
            get {
                return GetAttributeValue<string>("activityadditionalparams");
            }
            set {
                SetAttributeValue("activityadditionalparams", value);
            }
        }
        
        /// <summary>
        /// <para>Type of activity.</para>
        /// <para>Display Name: Activity Type</para>
        /// </summary>
        [AttributeLogicalName("activitytypecode")]
        [DisplayName("Activity Type")]
        public string ActivityTypeCode {
            get {
                return GetAttributeValue<string>("activitytypecode");
            }
        }
        
        /// <summary>
        /// <para>Actual duration of the activity in minutes.</para>
        /// <para>Display Name: Actual Duration</para>
        /// </summary>
        [AttributeLogicalName("actualdurationminutes")]
        [DisplayName("Actual Duration")]
        [Range(0, 2147483647)]
        public int? ActualDurationMinutes {
            get {
                return GetAttributeValue<int?>("actualdurationminutes");
            }
            set {
                SetAttributeValue("actualdurationminutes", value);
            }
        }
        
        /// <summary>
        /// <para>Actual end time of the activity.</para>
        /// <para>Display Name: Actual End</para>
        /// </summary>
        [AttributeLogicalName("actualend")]
        [DisplayName("Actual End")]
        public DateTime? ActualEnd {
            get {
                return GetAttributeValue<DateTime?>("actualend");
            }
            set {
                SetAttributeValue("actualend", value);
            }
        }
        
        /// <summary>
        /// <para>Actual start time of the activity.</para>
        /// <para>Display Name: Actual Start</para>
        /// </summary>
        [AttributeLogicalName("actualstart")]
        [DisplayName("Actual Start")]
        public DateTime? ActualStart {
            get {
                return GetAttributeValue<DateTime?>("actualstart");
            }
            set {
                SetAttributeValue("actualstart", value);
            }
        }
        
        /// <summary>
        /// <para>Shows how contact about the social activity originated, such as from Twitter or Facebook. This field is read-only.</para>
        /// <para>Display Name: Social Channel</para>
        /// </summary>
        [AttributeLogicalName("community")]
        [DisplayName("Social Channel")]
        public socialprofile_community? Community {
            get {
                return GetOptionSetValue<socialprofile_community>("community");
            }
            set {
                SetOptionSetValue("community", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the activity.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the activity was created.</para>
        /// <para>Display Name: Created Date</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created Date")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the activitypointer.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Shows information about the social post content. This field is read-only.</para>
        /// <para>Display Name: Post Description</para>
        /// </summary>
        [AttributeLogicalName("description")]
        [DisplayName("Post Description")]
        public string Description {
            get {
                return GetAttributeValue<string>("description");
            }
            set {
                SetAttributeValue("description", value);
            }
        }
        
        /// <summary>
        /// <para>Select the direction of the post as incoming or outbound.</para>
        /// <para>Display Name: Direction</para>
        /// </summary>
        [AttributeLogicalName("directioncode")]
        [DisplayName("Direction")]
        public bool? DirectionCode {
            get {
                return GetAttributeValue<bool?>("directioncode");
            }
            set {
                SetAttributeValue("directioncode", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("Exchange Rate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Person who the activity is from.</para>
        /// <para>Display Name: From</para>
        /// </summary>
        [AttributeLogicalName("from")]
        [DisplayName("From")]
        public IEnumerable<ActivityParty> From {
            get {
                return GetEntityCollection<ActivityParty>("from");
            }
            set {
                SetEntityCollection("from", value);
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the responses to a post. For internal use only.</para>
        /// <para>Display Name: In Response To</para>
        /// </summary>
        [AttributeLogicalName("inresponseto")]
        [DisplayName("In Response To")]
        [MaxLength(160)]
        public string InResponseTo {
            get {
                return GetAttributeValue<string>("inresponseto");
            }
            set {
                SetAttributeValue("inresponseto", value);
            }
        }
        
        /// <summary>
        /// <para>Information regarding whether the activity was billed as part of resolving a case.</para>
        /// <para>Display Name: Is Billed</para>
        /// </summary>
        [AttributeLogicalName("isbilled")]
        [DisplayName("Is Billed")]
        public bool? IsBilled {
            get {
                return GetAttributeValue<bool?>("isbilled");
            }
            set {
                SetAttributeValue("isbilled", value);
            }
        }
        
        /// <summary>
        /// <para>Information regarding whether the activity is a regular activity type or event type.</para>
        /// <para>Display Name: Is Regular Activity</para>
        /// </summary>
        [AttributeLogicalName("isregularactivity")]
        [DisplayName("Is Regular Activity")]
        public bool? IsRegularActivity {
            get {
                return GetAttributeValue<bool?>("isregularactivity");
            }
        }
        
        /// <summary>
        /// <para>Information regarding whether the activity was created from a workflow rule.</para>
        /// <para>Display Name: Is Workflow Created</para>
        /// </summary>
        [AttributeLogicalName("isworkflowcreated")]
        [DisplayName("Is Workflow Created")]
        public bool? IsWorkflowCreated {
            get {
                return GetAttributeValue<bool?>("isworkflowcreated");
            }
            set {
                SetAttributeValue("isworkflowcreated", value);
            }
        }
        
        /// <summary>
        /// <para>Contains the date and time stamp of the last on hold time.</para>
        /// <para>Display Name: Last On Hold Time</para>
        /// </summary>
        [AttributeLogicalName("lastonholdtime")]
        [DisplayName("Last On Hold Time")]
        public DateTime? LastOnHoldTime {
            get {
                return GetAttributeValue<DateTime?>("lastonholdtime");
            }
            set {
                SetAttributeValue("lastonholdtime", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
        /// <para>Display Name: Last Updated</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Last Updated")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Shows how long, in minutes, that the record was on hold.</para>
        /// <para>Display Name: On Hold Time (Minutes)</para>
        /// </summary>
        [AttributeLogicalName("onholdtime")]
        [DisplayName("On Hold Time (Minutes)")]
        [Range(-2147483648, 2147483647)]
        public int? OnHoldTime {
            get {
                return GetAttributeValue<int?>("onholdtime");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user or team who owns the activity.</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the business unit that owns the activity.</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the team that owns the activity.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who owns the Activity.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Shows the contact or account that authored the post.</para>
        /// <para>Display Name: Post Author</para>
        /// </summary>
        [AttributeLogicalName("postauthor")]
        [DisplayName("Post Author")]
        public EntityReference PostAuthor {
            get {
                return GetAttributeValue<EntityReference>("postauthor");
            }
            set {
                SetAttributeValue("postauthor", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the parent account of the author of the post.</para>
        /// <para>Display Name: Post Author Account</para>
        /// </summary>
        [AttributeLogicalName("postauthoraccount")]
        [DisplayName("Post Author Account")]
        public EntityReference PostAuthorAccount {
            get {
                return GetAttributeValue<EntityReference>("postauthoraccount");
            }
            set {
                SetAttributeValue("postauthoraccount", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the author of the post on the corresponding social channel.</para>
        /// <para>Display Name: Posted By</para>
        /// </summary>
        [AttributeLogicalName("postfromprofileid")]
        [DisplayName("Posted By")]
        public EntityReference PostFromProfileId {
            get {
                return GetAttributeValue<EntityReference>("postfromprofileid");
            }
            set {
                SetAttributeValue("postfromprofileid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the post. For internal use only.</para>
        /// <para>Display Name: Post ID</para>
        /// </summary>
        [AttributeLogicalName("postid")]
        [DisplayName("Post ID")]
        [MaxLength(160)]
        public string PostId {
            get {
                return GetAttributeValue<string>("postid");
            }
            set {
                SetAttributeValue("postid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows if the social post originated as a private or public message.</para>
        /// <para>Display Name: Received As</para>
        /// </summary>
        [AttributeLogicalName("postmessagetype")]
        [DisplayName("Received As")]
        public socialactivity_postmessagetype? PostMessageType {
            get {
                return GetOptionSetValue<socialactivity_postmessagetype>("postmessagetype");
            }
            set {
                SetOptionSetValue("postmessagetype", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the recipients of the social post.</para>
        /// <para>Display Name: Posted To</para>
        /// </summary>
        [AttributeLogicalName("posttoprofileid")]
        [DisplayName("Posted To")]
        [MaxLength(200)]
        public string PostToProfileId {
            get {
                return GetAttributeValue<string>("posttoprofileid");
            }
            set {
                SetAttributeValue("posttoprofileid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the URL of the post.</para>
        /// <para>Display Name: Post URL</para>
        /// </summary>
        [AttributeLogicalName("posturl")]
        [DisplayName("Post URL")]
        [MaxLength(200)]
        public string PostURL {
            get {
                return GetAttributeValue<string>("posturl");
            }
            set {
                SetAttributeValue("posturl", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("postedon")]
        [DisplayName("Created On")]
        public DateTime? PostedOn {
            get {
                return GetAttributeValue<DateTime?>("postedon");
            }
            set {
                SetAttributeValue("postedon", value);
            }
        }
        
        /// <summary>
        /// <para>Subject associated with the activity.</para>
        /// <para>Display Name: Subject</para>
        /// </summary>
        [AttributeLogicalName("subject")]
        [DisplayName("Subject")]
        [MaxLength(200)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("subject");
            }
            set {
                SetAttributeValue("subject", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the priority so that preferred customers or critical issues are handled quickly.</para>
        /// <para>Display Name: Priority</para>
        /// </summary>
        [AttributeLogicalName("prioritycode")]
        [DisplayName("Priority")]
        public SocialActivity_PriorityCode? PriorityCode {
            get {
                return GetOptionSetValue<SocialActivity_PriorityCode>("prioritycode");
            }
            set {
                SetOptionSetValue("prioritycode", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the Process.</para>
        /// <para>Display Name: Process</para>
        /// </summary>
        [AttributeLogicalName("processid")]
        [DisplayName("Process")]
        public Guid? ProcessId {
            get {
                return GetAttributeValue<Guid?>("processid");
            }
            set {
                SetAttributeValue("processid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the record that the social activity relates to.</para>
        /// <para>Display Name: Regarding</para>
        /// </summary>
        [AttributeLogicalName("regardingobjectid")]
        [DisplayName("Regarding")]
        public EntityReference RegardingObjectId {
            get {
                return GetAttributeValue<EntityReference>("regardingobjectid");
            }
            set {
                SetAttributeValue("regardingobjectid", value);
            }
        }
        
        /// <summary>
        /// <para>Users or facility/equipment that are required for the activity.</para>
        /// <para>Display Name: Resources</para>
        /// </summary>
        [AttributeLogicalName("resources")]
        [DisplayName("Resources")]
        public IEnumerable<ActivityParty> Resources {
            get {
                return GetEntityCollection<ActivityParty>("resources");
            }
            set {
                SetEntityCollection("resources", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the service level agreement (SLA) that you want to apply to the Social Activity record.</para>
        /// <para>Display Name: SLA</para>
        /// </summary>
        [AttributeLogicalName("slaid")]
        [DisplayName("SLA")]
        public EntityReference SLAId {
            get {
                return GetAttributeValue<EntityReference>("slaid");
            }
            set {
                SetAttributeValue("slaid", value);
            }
        }
        
        /// <summary>
        /// <para>Last SLA that was applied to this Social Activity. This field is for internal use only.</para>
        /// <para>Display Name: Last SLA applied</para>
        /// </summary>
        [AttributeLogicalName("slainvokedid")]
        [DisplayName("Last SLA applied")]
        public EntityReference SLAInvokedId {
            get {
                return GetAttributeValue<EntityReference>("slainvokedid");
            }
        }
        
        /// <summary>
        /// <para>Scheduled duration of the activity, specified in minutes.</para>
        /// <para>Display Name: Scheduled Duration</para>
        /// </summary>
        [AttributeLogicalName("scheduleddurationminutes")]
        [DisplayName("Scheduled Duration")]
        [Range(0, 2147483647)]
        public int? ScheduledDurationMinutes {
            get {
                return GetAttributeValue<int?>("scheduleddurationminutes");
            }
            set {
                SetAttributeValue("scheduleddurationminutes", value);
            }
        }
        
        /// <summary>
        /// <para>Scheduled end time of the activity.</para>
        /// <para>Display Name: Due Date</para>
        /// </summary>
        [AttributeLogicalName("scheduledend")]
        [DisplayName("Due Date")]
        public DateTime? ScheduledEnd {
            get {
                return GetAttributeValue<DateTime?>("scheduledend");
            }
            set {
                SetAttributeValue("scheduledend", value);
            }
        }
        
        /// <summary>
        /// <para>Scheduled start time of the activity.</para>
        /// <para>Display Name: Start Date</para>
        /// </summary>
        [AttributeLogicalName("scheduledstart")]
        [DisplayName("Start Date")]
        public DateTime? ScheduledStart {
            get {
                return GetAttributeValue<DateTime?>("scheduledstart");
            }
            set {
                SetAttributeValue("scheduledstart", value);
            }
        }
        
        /// <summary>
        /// <para>Value derived after assessing words commonly associated with a negative, neutral, or positive sentiment that occurs in a social post. Sentiment information can also be reported as numeric values.</para>
        /// <para>Display Name: Sentiment Value</para>
        /// </summary>
        [AttributeLogicalName("sentimentvalue")]
        [DisplayName("Sentiment Value")]
        public double? SentimentValue {
            get {
                return GetAttributeValue<double?>("sentimentvalue");
            }
            set {
                SetAttributeValue("sentimentvalue", value);
            }
        }
        
        /// <summary>
        /// <para>service_socialactivities</para>
        /// <para>Display Name: Service</para>
        /// </summary>
        [AttributeLogicalName("serviceid")]
        [DisplayName("Service")]
        public EntityReference ServiceId {
            get {
                return GetAttributeValue<EntityReference>("serviceid");
            }
            set {
                SetAttributeValue("serviceid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Social Additional Parameters</para>
        /// </summary>
        [AttributeLogicalName("socialadditionalparams")]
        [DisplayName("Social Additional Parameters")]
        public string SocialAdditionalParams {
            get {
                return GetAttributeValue<string>("socialadditionalparams");
            }
            set {
                SetAttributeValue("socialadditionalparams", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time by which the activities are sorted.</para>
        /// <para>Display Name: Sort Date</para>
        /// </summary>
        [AttributeLogicalName("sortdate")]
        [DisplayName("Sort Date")]
        public DateTime? SortDate {
            get {
                return GetAttributeValue<DateTime?>("sortdate");
            }
            set {
                SetAttributeValue("sortdate", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the Stage.</para>
        /// <para>Display Name: (Deprecated) Process Stage</para>
        /// </summary>
        [AttributeLogicalName("stageid")]
        [DisplayName("(Deprecated) Process Stage")]
        public Guid? StageId {
            get {
                return GetAttributeValue<Guid?>("stageid");
            }
            set {
                SetAttributeValue("stageid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows whether the social activity completed. This field is read-only.</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public SocialActivityState? StateCode {
            get {
                return GetOptionSetValue<SocialActivityState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Shows whether the social activity is completed, failed, or processing. This field is read-only.</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public SocialActivity_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<SocialActivity_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>Subject associated with the activity.</para>
        /// <para>Display Name: Subject</para>
        /// </summary>
        [AttributeLogicalName("subject")]
        [DisplayName("Subject")]
        [MaxLength(200)]
        public string Subject {
            get {
                return GetAttributeValue<string>("subject");
            }
            set {
                SetAttributeValue("subject", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the social conversation. For internal use only.</para>
        /// <para>Display Name: Thread ID</para>
        /// </summary>
        [AttributeLogicalName("threadid")]
        [DisplayName("Thread ID")]
        [MaxLength(160)]
        public string ThreadId {
            get {
                return GetAttributeValue<string>("threadid");
            }
            set {
                SetAttributeValue("threadid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Person who is the receiver of the activity.</para>
        /// <para>Display Name: To</para>
        /// </summary>
        [AttributeLogicalName("to")]
        [DisplayName("To")]
        public IEnumerable<ActivityParty> To {
            get {
                return GetEntityCollection<ActivityParty>("to");
            }
            set {
                SetEntityCollection("to", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the local currency for the record to make sure budgets are reported in the correct currency.</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: (Deprecated) Traversed Path</para>
        /// </summary>
        [AttributeLogicalName("traversedpath")]
        [DisplayName("(Deprecated) Traversed Path")]
        [MaxLength(1250)]
        public string TraversedPath {
            get {
                return GetAttributeValue<string>("traversedpath");
            }
            set {
                SetAttributeValue("traversedpath", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version number of the social activity.</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Account_SocialActivities")]
        public Account Account_SocialActivities {
            get {
                return GetRelatedEntity<Account>("Account_SocialActivities", null);
            }
            set {
                SetRelatedEntity("Account_SocialActivities", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Contact_SocialActivities")]
        public Contact Contact_SocialActivities {
            get {
                return GetRelatedEntity<Contact>("Contact_SocialActivities", null);
            }
            set {
                SetRelatedEntity("Contact_SocialActivities", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Contract_SocialActivities")]
        public Contract Contract_SocialActivities {
            get {
                return GetRelatedEntity<Contract>("Contract_SocialActivities", null);
            }
            set {
                SetRelatedEntity("Contract_SocialActivities", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Incident_SocialActivities")]
        public Incident Incident_SocialActivities {
            get {
                return GetRelatedEntity<Incident>("Incident_SocialActivities", null);
            }
            set {
                SetRelatedEntity("Incident_SocialActivities", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Invoice_SocialActivities")]
        public Invoice Invoice_SocialActivities {
            get {
                return GetRelatedEntity<Invoice>("Invoice_SocialActivities", null);
            }
            set {
                SetRelatedEntity("Invoice_SocialActivities", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("KnowledgeArticle_SocialActivities")]
        public KnowledgeArticle KnowledgeArticle_SocialActivities {
            get {
                return GetRelatedEntity<KnowledgeArticle>("KnowledgeArticle_SocialActivities", null);
            }
            set {
                SetRelatedEntity("KnowledgeArticle_SocialActivities", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Lead_SocialActivities")]
        public Lead Lead_SocialActivities {
            get {
                return GetRelatedEntity<Lead>("Lead_SocialActivities", null);
            }
            set {
                SetRelatedEntity("Lead_SocialActivities", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Opportunity_SocialActivities")]
        public Opportunity Opportunity_SocialActivities {
            get {
                return GetRelatedEntity<Opportunity>("Opportunity_SocialActivities", null);
            }
            set {
                SetRelatedEntity("Opportunity_SocialActivities", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Quote_SocialActivities")]
        public Quote Quote_SocialActivities {
            get {
                return GetRelatedEntity<Quote>("Quote_SocialActivities", null);
            }
            set {
                SetRelatedEntity("Quote_SocialActivities", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("SalesOrder_SocialActivities")]
        public SalesOrder SalesOrder_SocialActivities {
            get {
                return GetRelatedEntity<SalesOrder>("SalesOrder_SocialActivities", null);
            }
            set {
                SetRelatedEntity("SalesOrder_SocialActivities", null, value);
            }
        }
        
        [AttributeLogicalName("postauthoraccount")]
        [RelationshipSchemaName("SocialActivity_PostAuthorAccount_accounts")]
        public Account SocialActivity_PostAuthorAccount_accounts {
            get {
                return GetRelatedEntity<Account>("SocialActivity_PostAuthorAccount_accounts", null);
            }
            set {
                SetRelatedEntity("SocialActivity_PostAuthorAccount_accounts", null, value);
            }
        }
        
        [AttributeLogicalName("postauthor")]
        [RelationshipSchemaName("SocialActivity_PostAuthor_accounts")]
        public Account SocialActivity_PostAuthor_accounts {
            get {
                return GetRelatedEntity<Account>("SocialActivity_PostAuthor_accounts", null);
            }
            set {
                SetRelatedEntity("SocialActivity_PostAuthor_accounts", null, value);
            }
        }
        
        [RelationshipSchemaName("SocialActivity_QueueItem")]
        public IEnumerable<QueueItem> SocialActivity_QueueItem {
            get {
                return GetRelatedEntities<QueueItem>("SocialActivity_QueueItem", null);
            }
            set {
                SetRelatedEntities("SocialActivity_QueueItem", null, value);
            }
        }
        
        [RelationshipSchemaName("SocialActivity_SyncErrors")]
        public IEnumerable<SyncError> SocialActivity_SyncErrors {
            get {
                return GetRelatedEntities<SyncError>("SocialActivity_SyncErrors", null);
            }
            set {
                SetRelatedEntities("SocialActivity_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("activityid")]
        [RelationshipSchemaName("activity_pointer_socialactivity")]
        public ActivityPointer activity_pointer_socialactivity {
            get {
                return GetRelatedEntity<ActivityPointer>("activity_pointer_socialactivity", null);
            }
            set {
                SetRelatedEntity("activity_pointer_socialactivity", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("bookableresourcebooking_SocialActivities")]
        public BookableResourceBooking bookableresourcebooking_SocialActivities {
            get {
                return GetRelatedEntity<BookableResourceBooking>("bookableresourcebooking_SocialActivities", null);
            }
            set {
                SetRelatedEntity("bookableresourcebooking_SocialActivities", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("bookableresourcebookingheader_SocialActivities")]
        public BookableResourceBookingHeader bookableresourcebookingheader_SocialActivities {
            get {
                return GetRelatedEntity<BookableResourceBookingHeader>("bookableresourcebookingheader_SocialActivities", null);
            }
            set {
                SetRelatedEntity("bookableresourcebookingheader_SocialActivities", null, value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_socialactivity")]
        public BusinessUnit business_unit_socialactivity {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_socialactivity", null);
            }
            set {
                SetRelatedEntity("business_unit_socialactivity", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("dg_event_SocialActivities")]
        public dg_event dg_event_SocialActivities {
            get {
                return GetRelatedEntity<dg_event>("dg_event_SocialActivities", null);
            }
            set {
                SetRelatedEntity("dg_event_SocialActivities", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("dg_participant_SocialActivities")]
        public dg_participant dg_participant_SocialActivities {
            get {
                return GetRelatedEntity<dg_participant>("dg_participant_SocialActivities", null);
            }
            set {
                SetRelatedEntity("dg_participant_SocialActivities", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("entitlement_SocialActivities")]
        public Entitlement entitlement_SocialActivities {
            get {
                return GetRelatedEntity<Entitlement>("entitlement_SocialActivities", null);
            }
            set {
                SetRelatedEntity("entitlement_SocialActivities", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_socialactivity_createdby")]
        public SystemUser lk_socialactivity_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_socialactivity_createdby", null);
            }
            set {
                SetRelatedEntity("lk_socialactivity_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_socialactivity_modifiedby")]
        public SystemUser lk_socialactivity_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_socialactivity_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_socialactivity_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_socialactivitybase_createdonbehalfby")]
        public SystemUser lk_socialactivitybase_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_socialactivitybase_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_socialactivitybase_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_socialactivitybase_modifiedonbehalfby")]
        public SystemUser lk_socialactivitybase_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_socialactivitybase_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_socialactivitybase_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("slaid")]
        [RelationshipSchemaName("manualsla_socialactivity")]
        public SLA manualsla_socialactivity {
            get {
                return GetRelatedEntity<SLA>("manualsla_socialactivity", null);
            }
            set {
                SetRelatedEntity("manualsla_socialactivity", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("msdyn_agreement_SocialActivities")]
        public msdyn_agreement msdyn_agreement_SocialActivities {
            get {
                return GetRelatedEntity<msdyn_agreement>("msdyn_agreement_SocialActivities", null);
            }
            set {
                SetRelatedEntity("msdyn_agreement_SocialActivities", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("msdyn_postalbum_SocialActivities")]
        public msdyn_PostAlbum msdyn_postalbum_SocialActivities {
            get {
                return GetRelatedEntity<msdyn_PostAlbum>("msdyn_postalbum_SocialActivities", null);
            }
            set {
                SetRelatedEntity("msdyn_postalbum_SocialActivities", null, value);
            }
        }
        
        [AttributeLogicalName("slainvokedid")]
        [RelationshipSchemaName("sla_socialactivity")]
        public SLA sla_socialactivity {
            get {
                return GetRelatedEntity<SLA>("sla_socialactivity", null);
            }
            set {
                SetRelatedEntity("sla_socialactivity", null, value);
            }
        }
        
        [RelationshipSchemaName("socialactivity_activity_parties")]
        public IEnumerable<ActivityParty> socialactivity_activity_parties {
            get {
                return GetRelatedEntities<ActivityParty>("socialactivity_activity_parties", null);
            }
            set {
                SetRelatedEntities("socialactivity_activity_parties", null, value);
            }
        }
        
        [RelationshipSchemaName("socialactivity_connections1")]
        public IEnumerable<Connection> socialactivity_connections1 {
            get {
                return GetRelatedEntities<Connection>("socialactivity_connections1", null);
            }
            set {
                SetRelatedEntities("socialactivity_connections1", null, value);
            }
        }
        
        [RelationshipSchemaName("socialactivity_connections2")]
        public IEnumerable<Connection> socialactivity_connections2 {
            get {
                return GetRelatedEntities<Connection>("socialactivity_connections2", null);
            }
            set {
                SetRelatedEntities("socialactivity_connections2", null, value);
            }
        }
        
        [AttributeLogicalName("postauthor")]
        [RelationshipSchemaName("socialactivity_postauthor_contacts")]
        public Contact socialactivity_postauthor_contacts {
            get {
                return GetRelatedEntity<Contact>("socialactivity_postauthor_contacts", null);
            }
            set {
                SetRelatedEntity("socialactivity_postauthor_contacts", null, value);
            }
        }
        
        [AttributeLogicalName("postauthoraccount")]
        [RelationshipSchemaName("socialactivity_postauthoraccount_contacts")]
        public Contact socialactivity_postauthoraccount_contacts {
            get {
                return GetRelatedEntity<Contact>("socialactivity_postauthoraccount_contacts", null);
            }
            set {
                SetRelatedEntity("socialactivity_postauthoraccount_contacts", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_socialactivity")]
        public Team team_socialactivity {
            get {
                return GetRelatedEntity<Team>("team_socialactivity", null);
            }
            set {
                SetRelatedEntity("team_socialactivity", null, value);
            }
        }
        
        [AttributeLogicalName("transactioncurrencyid")]
        [RelationshipSchemaName("transactioncurrency_socialactivity")]
        public TransactionCurrency transactioncurrency_socialactivity {
            get {
                return GetRelatedEntity<TransactionCurrency>("transactioncurrency_socialactivity", null);
            }
            set {
                SetRelatedEntity("transactioncurrency_socialactivity", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_socialactivity")]
        public SystemUser user_socialactivity {
            get {
                return GetRelatedEntity<SystemUser>("user_socialactivity", null);
            }
            set {
                SetRelatedEntity("user_socialactivity", null, value);
            }
        }
        
        public static SocialActivity Retrieve(IOrganizationService service, Guid id, params Expression<Func<SocialActivity,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Failure reason and other detailed information for a record that failed to sync.</para>
    /// <para>Display Name: Sync Error</para>
    /// </summary>
    [EntityLogicalName("syncerror")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class SyncError : ExtendedEntity<SyncErrorState, SyncError_StatusCode> {
        
        public const string EntityLogicalName = "syncerror";
        
        public const int EntityTypeCode = 9869;
        
        public SyncError() : 
                base(EntityLogicalName) {
        }
        
        public SyncError(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("name");
            }
        }
        
        [AttributeLogicalName("syncerrorid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("syncerrorid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the sync error.</para>
        /// <para>Display Name: Sync Error Id</para>
        /// </summary>
        [AttributeLogicalName("syncerrorid")]
        [DisplayName("Sync Error Id")]
        public Guid? SyncErrorId {
            get {
                return GetAttributeValue<Guid?>("syncerrorid");
            }
            set {
                SetId("syncerrorid", value);
            }
        }
        
        /// <summary>
        /// <para>Action Name for which sync error has occurred</para>
        /// <para>Display Name: Action</para>
        /// </summary>
        [AttributeLogicalName("action")]
        [DisplayName("Action")]
        [MaxLength(100)]
        public string Action {
            get {
                return GetAttributeValue<string>("action");
            }
            set {
                SetAttributeValue("action", value);
            }
        }
        
        /// <summary>
        /// <para>Show the action data</para>
        /// <para>Display Name: Action Data</para>
        /// </summary>
        [AttributeLogicalName("actiondata")]
        [DisplayName("Action Data")]
        [MaxLength(10000)]
        public string ActionData {
            get {
                return GetAttributeValue<string>("actiondata");
            }
            set {
                SetAttributeValue("actiondata", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the sync error.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the sync Error was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the sync error.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Enter a short description of the sync error.</para>
        /// <para>Display Name: Description</para>
        /// </summary>
        [AttributeLogicalName("description")]
        [DisplayName("Description")]
        public string Description {
            get {
                return GetAttributeValue<string>("description");
            }
            set {
                SetAttributeValue("description", value);
            }
        }
        
        /// <summary>
        /// <para>Displays the error code.</para>
        /// <para>Display Name: Error Code</para>
        /// </summary>
        [AttributeLogicalName("errorcode")]
        [DisplayName("Error Code")]
        public string ErrorCode {
            get {
                return GetAttributeValue<string>("errorcode");
            }
            set {
                SetAttributeValue("errorcode", value);
            }
        }
        
        /// <summary>
        /// <para>Error description from the exception</para>
        /// <para>Display Name: Error Detail</para>
        /// </summary>
        [AttributeLogicalName("errordetail")]
        [DisplayName("Error Detail")]
        public string ErrorDetail {
            get {
                return GetAttributeValue<string>("errordetail");
            }
            set {
                SetAttributeValue("errordetail", value);
            }
        }
        
        /// <summary>
        /// <para>Error Message of the exception</para>
        /// <para>Display Name: Error Message</para>
        /// </summary>
        [AttributeLogicalName("errormessage")]
        [DisplayName("Error Message")]
        [MaxLength(1000)]
        public string ErrorMessage {
            get {
                return GetAttributeValue<string>("errormessage");
            }
            set {
                SetAttributeValue("errormessage", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time when the upsync request was executed on CRM server</para>
        /// <para>Display Name: Error Time</para>
        /// </summary>
        [AttributeLogicalName("errortime")]
        [DisplayName("Error Time")]
        public DateTime? ErrorTime {
            get {
                return GetAttributeValue<DateTime?>("errortime");
            }
            set {
                SetAttributeValue("errortime", value);
            }
        }
        
        /// <summary>
        /// <para>Select the preferred error type.</para>
        /// <para>Display Name: Error Type</para>
        /// </summary>
        [AttributeLogicalName("errortype")]
        [DisplayName("Error Type")]
        public SyncError_ErrorType? ErrorType {
            get {
                return GetOptionSetValue<SyncError_ErrorType>("errortype");
            }
            set {
                SetOptionSetValue("errortype", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who last modified the sync error.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the sync error was last modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who last modified the sync error.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Entity name of the record for which sync error has occurred</para>
        /// <para>Display Name: Entity</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Entity")]
        [MaxLength(100)]
        public string Name {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user or team who owns the sync error.</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Business unit that owns the sync error.</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the team who owns the sync error.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who owns the sync error.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Entity name of the record for which sync error has occurred</para>
        /// <para>Display Name: Entity</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Entity")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>SalesOrderDetail_SyncErrors</para>
        /// <para>Display Name: Record</para>
        /// </summary>
        [AttributeLogicalName("regardingobjectid")]
        [DisplayName("Record")]
        public EntityReference RegardingObjectId {
            get {
                return GetAttributeValue<EntityReference>("regardingobjectid");
            }
            set {
                SetAttributeValue("regardingobjectid", value);
            }
        }
        
        /// <summary>
        /// <para>Request data for the entity that had the sync error.</para>
        /// <para>Display Name: Request Data</para>
        /// </summary>
        [AttributeLogicalName("requestdata")]
        [DisplayName("Request Data")]
        public string RequestData {
            get {
                return GetAttributeValue<string>("requestdata");
            }
            set {
                SetAttributeValue("requestdata", value);
            }
        }
        
        /// <summary>
        /// <para>Shows whether the sync error is active or resolved.</para>
        /// <para>Display Name: State</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("State")]
        public SyncErrorState? StateCode {
            get {
                return GetOptionSetValue<SyncErrorState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the sync error status.</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public SyncError_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<SyncError_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the version number of the sync error.</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Account_SyncErrors")]
        public Account Account_SyncErrors {
            get {
                return GetRelatedEntity<Account>("Account_SyncErrors", null);
            }
            set {
                SetRelatedEntity("Account_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("ActivityParty_SyncErrors")]
        public ActivityParty ActivityParty_SyncErrors {
            get {
                return GetRelatedEntity<ActivityParty>("ActivityParty_SyncErrors", null);
            }
            set {
                SetRelatedEntity("ActivityParty_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Appointment_SyncErrors")]
        public Appointment Appointment_SyncErrors {
            get {
                return GetRelatedEntity<Appointment>("Appointment_SyncErrors", null);
            }
            set {
                SetRelatedEntity("Appointment_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("BookableResourceBookingHeader_SyncErrors")]
        public BookableResourceBookingHeader BookableResourceBookingHeader_SyncErrors {
            get {
                return GetRelatedEntity<BookableResourceBookingHeader>("BookableResourceBookingHeader_SyncErrors", null);
            }
            set {
                SetRelatedEntity("BookableResourceBookingHeader_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("BookableResourceBooking_SyncErrors")]
        public BookableResourceBooking BookableResourceBooking_SyncErrors {
            get {
                return GetRelatedEntity<BookableResourceBooking>("BookableResourceBooking_SyncErrors", null);
            }
            set {
                SetRelatedEntity("BookableResourceBooking_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("BookableResourceCategoryAssn_SyncErrors")]
        public BookableResourceCategoryAssn BookableResourceCategoryAssn_SyncErrors {
            get {
                return GetRelatedEntity<BookableResourceCategoryAssn>("BookableResourceCategoryAssn_SyncErrors", null);
            }
            set {
                SetRelatedEntity("BookableResourceCategoryAssn_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("BookableResourceCategory_SyncErrors")]
        public BookableResourceCategory BookableResourceCategory_SyncErrors {
            get {
                return GetRelatedEntity<BookableResourceCategory>("BookableResourceCategory_SyncErrors", null);
            }
            set {
                SetRelatedEntity("BookableResourceCategory_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("BookableResourceCharacteristic_SyncErrors")]
        public BookableResourceCharacteristic BookableResourceCharacteristic_SyncErrors {
            get {
                return GetRelatedEntity<BookableResourceCharacteristic>("BookableResourceCharacteristic_SyncErrors", null);
            }
            set {
                SetRelatedEntity("BookableResourceCharacteristic_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("BookableResourceGroup_SyncErrors")]
        public BookableResourceGroup BookableResourceGroup_SyncErrors {
            get {
                return GetRelatedEntity<BookableResourceGroup>("BookableResourceGroup_SyncErrors", null);
            }
            set {
                SetRelatedEntity("BookableResourceGroup_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("BookableResource_SyncErrors")]
        public BookableResource BookableResource_SyncErrors {
            get {
                return GetRelatedEntity<BookableResource>("BookableResource_SyncErrors", null);
            }
            set {
                SetRelatedEntity("BookableResource_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("BookingStatus_SyncErrors")]
        public BookingStatus BookingStatus_SyncErrors {
            get {
                return GetRelatedEntity<BookingStatus>("BookingStatus_SyncErrors", null);
            }
            set {
                SetRelatedEntity("BookingStatus_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("BusinessUnit_SyncError")]
        public BusinessUnit BusinessUnit_SyncError {
            get {
                return GetRelatedEntity<BusinessUnit>("BusinessUnit_SyncError", null);
            }
            set {
                SetRelatedEntity("BusinessUnit_SyncError", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("BusinessUnit_SyncErrors")]
        public BusinessUnit BusinessUnit_SyncErrors {
            get {
                return GetRelatedEntity<BusinessUnit>("BusinessUnit_SyncErrors", null);
            }
            set {
                SetRelatedEntity("BusinessUnit_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("CampaignActivity_SyncErrors")]
        public CampaignActivity CampaignActivity_SyncErrors {
            get {
                return GetRelatedEntity<CampaignActivity>("CampaignActivity_SyncErrors", null);
            }
            set {
                SetRelatedEntity("CampaignActivity_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("CampaignResponse_SyncErrors")]
        public CampaignResponse CampaignResponse_SyncErrors {
            get {
                return GetRelatedEntity<CampaignResponse>("CampaignResponse_SyncErrors", null);
            }
            set {
                SetRelatedEntity("CampaignResponse_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Campaign_SyncErrors")]
        public Campaign Campaign_SyncErrors {
            get {
                return GetRelatedEntity<Campaign>("Campaign_SyncErrors", null);
            }
            set {
                SetRelatedEntity("Campaign_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Characteristic_SyncErrors")]
        public Characteristic Characteristic_SyncErrors {
            get {
                return GetRelatedEntity<Characteristic>("Characteristic_SyncErrors", null);
            }
            set {
                SetRelatedEntity("Characteristic_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Connection_SyncErrors")]
        public Connection Connection_SyncErrors {
            get {
                return GetRelatedEntity<Connection>("Connection_SyncErrors", null);
            }
            set {
                SetRelatedEntity("Connection_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Contact_SyncErrors")]
        public Contact Contact_SyncErrors {
            get {
                return GetRelatedEntity<Contact>("Contact_SyncErrors", null);
            }
            set {
                SetRelatedEntity("Contact_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Contract_SyncErrors")]
        public Contract Contract_SyncErrors {
            get {
                return GetRelatedEntity<Contract>("Contract_SyncErrors", null);
            }
            set {
                SetRelatedEntity("Contract_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("CustomerAddress_SyncErrors")]
        public CustomerAddress CustomerAddress_SyncErrors {
            get {
                return GetRelatedEntity<CustomerAddress>("CustomerAddress_SyncErrors", null);
            }
            set {
                SetRelatedEntity("CustomerAddress_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("EmailServerProfile_SyncErrors")]
        public EmailServerProfile EmailServerProfile_SyncErrors {
            get {
                return GetRelatedEntity<EmailServerProfile>("EmailServerProfile_SyncErrors", null);
            }
            set {
                SetRelatedEntity("EmailServerProfile_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Email_SyncErrors")]
        public Email Email_SyncErrors {
            get {
                return GetRelatedEntity<Email>("Email_SyncErrors", null);
            }
            set {
                SetRelatedEntity("Email_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Entitlement_SyncErrors")]
        public Entitlement Entitlement_SyncErrors {
            get {
                return GetRelatedEntity<Entitlement>("Entitlement_SyncErrors", null);
            }
            set {
                SetRelatedEntity("Entitlement_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Fax_SyncErrors")]
        public Fax Fax_SyncErrors {
            get {
                return GetRelatedEntity<Fax>("Fax_SyncErrors", null);
            }
            set {
                SetRelatedEntity("Fax_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Goal_SyncErrors")]
        public Goal Goal_SyncErrors {
            get {
                return GetRelatedEntity<Goal>("Goal_SyncErrors", null);
            }
            set {
                SetRelatedEntity("Goal_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("IncidentResolution_SyncErrors")]
        public IncidentResolution IncidentResolution_SyncErrors {
            get {
                return GetRelatedEntity<IncidentResolution>("IncidentResolution_SyncErrors", null);
            }
            set {
                SetRelatedEntity("IncidentResolution_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Incident_SyncErrors")]
        public Incident Incident_SyncErrors {
            get {
                return GetRelatedEntity<Incident>("Incident_SyncErrors", null);
            }
            set {
                SetRelatedEntity("Incident_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Invoice_SyncErrors")]
        public Invoice Invoice_SyncErrors {
            get {
                return GetRelatedEntity<Invoice>("Invoice_SyncErrors", null);
            }
            set {
                SetRelatedEntity("Invoice_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("KnowledgeArticle_SyncErrors")]
        public KnowledgeArticle KnowledgeArticle_SyncErrors {
            get {
                return GetRelatedEntity<KnowledgeArticle>("KnowledgeArticle_SyncErrors", null);
            }
            set {
                SetRelatedEntity("KnowledgeArticle_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Lead_SyncErrors")]
        public Lead Lead_SyncErrors {
            get {
                return GetRelatedEntity<Lead>("Lead_SyncErrors", null);
            }
            set {
                SetRelatedEntity("Lead_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Letter_SyncErrors")]
        public Letter Letter_SyncErrors {
            get {
                return GetRelatedEntity<Letter>("Letter_SyncErrors", null);
            }
            set {
                SetRelatedEntity("Letter_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("List_SyncErrors")]
        public List List_SyncErrors {
            get {
                return GetRelatedEntity<List>("List_SyncErrors", null);
            }
            set {
                SetRelatedEntity("List_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Mailbox_SyncErrors")]
        public Mailbox Mailbox_SyncErrors {
            get {
                return GetRelatedEntity<Mailbox>("Mailbox_SyncErrors", null);
            }
            set {
                SetRelatedEntity("Mailbox_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("OpportunityClose_SyncErrors")]
        public OpportunityClose OpportunityClose_SyncErrors {
            get {
                return GetRelatedEntity<OpportunityClose>("OpportunityClose_SyncErrors", null);
            }
            set {
                SetRelatedEntity("OpportunityClose_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("OpportunitySalesProcess_SyncErrors")]
        public OpportunitySalesProcess OpportunitySalesProcess_SyncErrors {
            get {
                return GetRelatedEntity<OpportunitySalesProcess>("OpportunitySalesProcess_SyncErrors", null);
            }
            set {
                SetRelatedEntity("OpportunitySalesProcess_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Opportunity_SyncErrors")]
        public Opportunity Opportunity_SyncErrors {
            get {
                return GetRelatedEntity<Opportunity>("Opportunity_SyncErrors", null);
            }
            set {
                SetRelatedEntity("Opportunity_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Organization_SyncErrors")]
        public Organization Organization_SyncErrors {
            get {
                return GetRelatedEntity<Organization>("Organization_SyncErrors", null);
            }
            set {
                SetRelatedEntity("Organization_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("PhoneCall_SyncErrors")]
        public PhoneCall PhoneCall_SyncErrors {
            get {
                return GetRelatedEntity<PhoneCall>("PhoneCall_SyncErrors", null);
            }
            set {
                SetRelatedEntity("PhoneCall_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("QueueItem_SyncErrors")]
        public QueueItem QueueItem_SyncErrors {
            get {
                return GetRelatedEntity<QueueItem>("QueueItem_SyncErrors", null);
            }
            set {
                SetRelatedEntity("QueueItem_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Quote_SyncErrors")]
        public Quote Quote_SyncErrors {
            get {
                return GetRelatedEntity<Quote>("Quote_SyncErrors", null);
            }
            set {
                SetRelatedEntity("Quote_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("RatingModel_SyncErrors")]
        public RatingModel RatingModel_SyncErrors {
            get {
                return GetRelatedEntity<RatingModel>("RatingModel_SyncErrors", null);
            }
            set {
                SetRelatedEntity("RatingModel_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("RatingValue_SyncErrors")]
        public RatingValue RatingValue_SyncErrors {
            get {
                return GetRelatedEntity<RatingValue>("RatingValue_SyncErrors", null);
            }
            set {
                SetRelatedEntity("RatingValue_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("RecurringAppointmentMaster_SyncErrors")]
        public RecurringAppointmentMaster RecurringAppointmentMaster_SyncErrors {
            get {
                return GetRelatedEntity<RecurringAppointmentMaster>("RecurringAppointmentMaster_SyncErrors", null);
            }
            set {
                SetRelatedEntity("RecurringAppointmentMaster_SyncErrors", null, value);
            }
        }
        
        [RelationshipSchemaName("SyncError_SyncErrors", EntityRole.Referenced)]
        public IEnumerable<SyncError> ReferencedSyncError_SyncErrors {
            get {
                return GetRelatedEntities<SyncError>("SyncError_SyncErrors", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("SyncError_SyncErrors", EntityRole.Referenced, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("SyncError_SyncErrors", EntityRole.Referencing)]
        public SyncError ReferencingSyncError_SyncErrors {
            get {
                return GetRelatedEntity<SyncError>("SyncError_SyncErrors", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("SyncError_SyncErrors", EntityRole.Referencing, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("SLA_SyncErrors")]
        public SLA SLA_SyncErrors {
            get {
                return GetRelatedEntity<SLA>("SLA_SyncErrors", null);
            }
            set {
                SetRelatedEntity("SLA_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("SalesOrder_SyncErrors")]
        public SalesOrder SalesOrder_SyncErrors {
            get {
                return GetRelatedEntity<SalesOrder>("SalesOrder_SyncErrors", null);
            }
            set {
                SetRelatedEntity("SalesOrder_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("ServiceAppointment_SyncErrors")]
        public ServiceAppointment ServiceAppointment_SyncErrors {
            get {
                return GetRelatedEntity<ServiceAppointment>("ServiceAppointment_SyncErrors", null);
            }
            set {
                SetRelatedEntity("ServiceAppointment_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("SharePointDocumentLocation_SyncErrors")]
        public SharePointDocumentLocation SharePointDocumentLocation_SyncErrors {
            get {
                return GetRelatedEntity<SharePointDocumentLocation>("SharePointDocumentLocation_SyncErrors", null);
            }
            set {
                SetRelatedEntity("SharePointDocumentLocation_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("SharePointSite_SyncErrors")]
        public SharePointSite SharePointSite_SyncErrors {
            get {
                return GetRelatedEntity<SharePointSite>("SharePointSite_SyncErrors", null);
            }
            set {
                SetRelatedEntity("SharePointSite_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("SocialActivity_SyncErrors")]
        public SocialActivity SocialActivity_SyncErrors {
            get {
                return GetRelatedEntity<SocialActivity>("SocialActivity_SyncErrors", null);
            }
            set {
                SetRelatedEntity("SocialActivity_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("SystemUser_SyncError")]
        public SystemUser SystemUser_SyncError {
            get {
                return GetRelatedEntity<SystemUser>("SystemUser_SyncError", null);
            }
            set {
                SetRelatedEntity("SystemUser_SyncError", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("SystemUser_SyncErrors")]
        public SystemUser SystemUser_SyncErrors {
            get {
                return GetRelatedEntity<SystemUser>("SystemUser_SyncErrors", null);
            }
            set {
                SetRelatedEntity("SystemUser_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Task_SyncErrors")]
        public Task Task_SyncErrors {
            get {
                return GetRelatedEntity<Task>("Task_SyncErrors", null);
            }
            set {
                SetRelatedEntity("Task_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Team_SyncErrors")]
        public Team Team_SyncErrors {
            get {
                return GetRelatedEntity<Team>("Team_SyncErrors", null);
            }
            set {
                SetRelatedEntity("Team_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("TransactionCurrency_SyncErrors")]
        public TransactionCurrency TransactionCurrency_SyncErrors {
            get {
                return GetRelatedEntity<TransactionCurrency>("TransactionCurrency_SyncErrors", null);
            }
            set {
                SetRelatedEntity("TransactionCurrency_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Workflow_SyncErrors")]
        public Workflow Workflow_SyncErrors {
            get {
                return GetRelatedEntity<Workflow>("Workflow_SyncErrors", null);
            }
            set {
                SetRelatedEntity("Workflow_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("bulkoperationlog_SyncErrors")]
        public BulkOperationLog bulkoperationlog_SyncErrors {
            get {
                return GetRelatedEntity<BulkOperationLog>("bulkoperationlog_SyncErrors", null);
            }
            set {
                SetRelatedEntity("bulkoperationlog_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("dg_animal_SyncErrors")]
        public dg_animal dg_animal_SyncErrors {
            get {
                return GetRelatedEntity<dg_animal>("dg_animal_SyncErrors", null);
            }
            set {
                SetRelatedEntity("dg_animal_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("dg_animalfood_SyncErrors")]
        public dg_animalfood dg_animalfood_SyncErrors {
            get {
                return GetRelatedEntity<dg_animalfood>("dg_animalfood_SyncErrors", null);
            }
            set {
                SetRelatedEntity("dg_animalfood_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("dg_bus_SyncErrors")]
        public dg_bus dg_bus_SyncErrors {
            get {
                return GetRelatedEntity<dg_bus>("dg_bus_SyncErrors", null);
            }
            set {
                SetRelatedEntity("dg_bus_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("dg_child_SyncErrors")]
        public dg_child dg_child_SyncErrors {
            get {
                return GetRelatedEntity<dg_child>("dg_child_SyncErrors", null);
            }
            set {
                SetRelatedEntity("dg_child_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("dg_configuration_SyncErrors")]
        public dg_configuration dg_configuration_SyncErrors {
            get {
                return GetRelatedEntity<dg_configuration>("dg_configuration_SyncErrors", null);
            }
            set {
                SetRelatedEntity("dg_configuration_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("dg_country_SyncErrors")]
        public dg_country dg_country_SyncErrors {
            get {
                return GetRelatedEntity<dg_country>("dg_country_SyncErrors", null);
            }
            set {
                SetRelatedEntity("dg_country_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("dg_event_SyncErrors")]
        public dg_event dg_event_SyncErrors {
            get {
                return GetRelatedEntity<dg_event>("dg_event_SyncErrors", null);
            }
            set {
                SetRelatedEntity("dg_event_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("dg_field_SyncErrors")]
        public dg_field dg_field_SyncErrors {
            get {
                return GetRelatedEntity<dg_field>("dg_field_SyncErrors", null);
            }
            set {
                SetRelatedEntity("dg_field_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("dg_food_SyncErrors")]
        public dg_food dg_food_SyncErrors {
            get {
                return GetRelatedEntity<dg_food>("dg_food_SyncErrors", null);
            }
            set {
                SetRelatedEntity("dg_food_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("dg_man_SyncErrors")]
        public dg_man dg_man_SyncErrors {
            get {
                return GetRelatedEntity<dg_man>("dg_man_SyncErrors", null);
            }
            set {
                SetRelatedEntity("dg_man_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("dg_mild_SyncErrors")]
        public dg_mild dg_mild_SyncErrors {
            get {
                return GetRelatedEntity<dg_mild>("dg_mild_SyncErrors", null);
            }
            set {
                SetRelatedEntity("dg_mild_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("dg_participant_SyncErrors")]
        public dg_participant dg_participant_SyncErrors {
            get {
                return GetRelatedEntity<dg_participant>("dg_participant_SyncErrors", null);
            }
            set {
                SetRelatedEntity("dg_participant_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("dg_secroletest_SyncErrors")]
        public dg_secroletest dg_secroletest_SyncErrors {
            get {
                return GetRelatedEntity<dg_secroletest>("dg_secroletest_SyncErrors", null);
            }
            set {
                SetRelatedEntity("dg_secroletest_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("dg_sheep_SyncErrors")]
        public dg_sheep dg_sheep_SyncErrors {
            get {
                return GetRelatedEntity<dg_sheep>("dg_sheep_SyncErrors", null);
            }
            set {
                SetRelatedEntity("dg_sheep_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("dg_tooth_SyncErrors")]
        public dg_tooth dg_tooth_SyncErrors {
            get {
                return GetRelatedEntity<dg_tooth>("dg_tooth_SyncErrors", null);
            }
            set {
                SetRelatedEntity("dg_tooth_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("dg_zipcodecity_SyncErrors")]
        public dg_zipCodeCity dg_zipcodecity_SyncErrors {
            get {
                return GetRelatedEntity<dg_zipCodeCity>("dg_zipcodecity_SyncErrors", null);
            }
            set {
                SetRelatedEntity("dg_zipcodecity_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_syncerrorbase_createdby")]
        public SystemUser lk_syncerrorbase_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_syncerrorbase_createdby", null);
            }
            set {
                SetRelatedEntity("lk_syncerrorbase_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_syncerrorbase_createdonbehalfby")]
        public SystemUser lk_syncerrorbase_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_syncerrorbase_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_syncerrorbase_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_syncerrorbase_modifiedby")]
        public SystemUser lk_syncerrorbase_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_syncerrorbase_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_syncerrorbase_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_syncerrorbase_modifiedonbehalfby")]
        public SystemUser lk_syncerrorbase_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_syncerrorbase_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_syncerrorbase_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("msdyn_agreement_SyncErrors")]
        public msdyn_agreement msdyn_agreement_SyncErrors {
            get {
                return GetRelatedEntity<msdyn_agreement>("msdyn_agreement_SyncErrors", null);
            }
            set {
                SetRelatedEntity("msdyn_agreement_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("msdyn_postalbum_SyncErrors")]
        public msdyn_PostAlbum msdyn_postalbum_SyncErrors {
            get {
                return GetRelatedEntity<msdyn_PostAlbum>("msdyn_postalbum_SyncErrors", null);
            }
            set {
                SetRelatedEntity("msdyn_postalbum_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("msdyn_wallsavedqueryusersettings_SyncErrors")]
        public msdyn_wallsavedqueryusersettings msdyn_wallsavedqueryusersettings_SyncErrors {
            get {
                return GetRelatedEntity<msdyn_wallsavedqueryusersettings>("msdyn_wallsavedqueryusersettings_SyncErrors", null);
            }
            set {
                SetRelatedEntity("msdyn_wallsavedqueryusersettings_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_SyncError")]
        public Team team_SyncError {
            get {
                return GetRelatedEntity<Team>("team_SyncError", null);
            }
            set {
                SetRelatedEntity("team_SyncError", null, value);
            }
        }
        
        public static SyncError Retrieve(IOrganizationService service, Guid id, params Expression<Func<SyncError,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Person with access to the Microsoft CRM system and who owns objects in the Microsoft CRM database.</para>
    /// <para>Display Name: User</para>
    /// </summary>
    [EntityLogicalName("systemuser")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class SystemUser : ExtendedEntity<EmptyEnum, EmptyEnum> {
        
        public const string EntityLogicalName = "systemuser";
        
        public const int EntityTypeCode = 8;
        
        public SystemUser() : 
                base(EntityLogicalName) {
        }
        
        public SystemUser(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("fullname");
            }
        }
        
        [AttributeLogicalName("systemuserid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("systemuserid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the user.</para>
        /// <para>Display Name: User</para>
        /// </summary>
        [AttributeLogicalName("systemuserid")]
        [DisplayName("User")]
        public Guid? SystemUserId {
            get {
                return GetAttributeValue<Guid?>("systemuserid");
            }
            set {
                SetId("systemuserid", value);
            }
        }
        
        /// <summary>
        /// <para>Type of user.</para>
        /// <para>Display Name: Access Mode</para>
        /// </summary>
        [AttributeLogicalName("accessmode")]
        [DisplayName("Access Mode")]
        public SystemUser_AccessMode? AccessMode {
            get {
                return GetOptionSetValue<SystemUser_AccessMode>("accessmode");
            }
            set {
                SetOptionSetValue("accessmode", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for address 1.</para>
        /// <para>Display Name: Address 1: ID</para>
        /// </summary>
        [AttributeLogicalName("address1_addressid")]
        [DisplayName("Address 1: ID")]
        public Guid? Address1_AddressId {
            get {
                return GetAttributeValue<Guid?>("address1_addressid");
            }
            set {
                SetAttributeValue("address1_addressid", value);
            }
        }
        
        /// <summary>
        /// <para>Type of address for address 1, such as billing, shipping, or primary address.</para>
        /// <para>Display Name: Address 1: Address Type</para>
        /// </summary>
        [AttributeLogicalName("address1_addresstypecode")]
        [DisplayName("Address 1: Address Type")]
        public SystemUser_Address1_AddressTypeCode? Address1_AddressTypeCode {
            get {
                return GetOptionSetValue<SystemUser_Address1_AddressTypeCode>("address1_addresstypecode");
            }
            set {
                SetOptionSetValue("address1_addresstypecode", value);
            }
        }
        
        /// <summary>
        /// <para>City name for address 1.</para>
        /// <para>Display Name: City</para>
        /// </summary>
        [AttributeLogicalName("address1_city")]
        [DisplayName("City")]
        [MaxLength(128)]
        public string Address1_City {
            get {
                return GetAttributeValue<string>("address1_city");
            }
            set {
                SetAttributeValue("address1_city", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the complete primary address.</para>
        /// <para>Display Name: Address</para>
        /// </summary>
        [AttributeLogicalName("address1_composite")]
        [DisplayName("Address")]
        public string Address1_Composite {
            get {
                return GetAttributeValue<string>("address1_composite");
            }
        }
        
        /// <summary>
        /// <para>Country/region name in address 1.</para>
        /// <para>Display Name: Country/Region</para>
        /// </summary>
        [AttributeLogicalName("address1_country")]
        [DisplayName("Country/Region")]
        [MaxLength(128)]
        public string Address1_Country {
            get {
                return GetAttributeValue<string>("address1_country");
            }
            set {
                SetAttributeValue("address1_country", value);
            }
        }
        
        /// <summary>
        /// <para>County name for address 1.</para>
        /// <para>Display Name: Address 1: County</para>
        /// </summary>
        [AttributeLogicalName("address1_county")]
        [DisplayName("Address 1: County")]
        [MaxLength(128)]
        public string Address1_County {
            get {
                return GetAttributeValue<string>("address1_county");
            }
            set {
                SetAttributeValue("address1_county", value);
            }
        }
        
        /// <summary>
        /// <para>Fax number for address 1.</para>
        /// <para>Display Name: Address 1: Fax</para>
        /// </summary>
        [AttributeLogicalName("address1_fax")]
        [DisplayName("Address 1: Fax")]
        [MaxLength(64)]
        public string Address1_Fax {
            get {
                return GetAttributeValue<string>("address1_fax");
            }
            set {
                SetAttributeValue("address1_fax", value);
            }
        }
        
        /// <summary>
        /// <para>Latitude for address 1.</para>
        /// <para>Display Name: Address 1: Latitude</para>
        /// </summary>
        [AttributeLogicalName("address1_latitude")]
        [DisplayName("Address 1: Latitude")]
        public double? Address1_Latitude {
            get {
                return GetAttributeValue<double?>("address1_latitude");
            }
            set {
                SetAttributeValue("address1_latitude", value);
            }
        }
        
        /// <summary>
        /// <para>First line for entering address 1 information.</para>
        /// <para>Display Name: Street 1</para>
        /// </summary>
        [AttributeLogicalName("address1_line1")]
        [DisplayName("Street 1")]
        [MaxLength(1024)]
        public string Address1_Line1 {
            get {
                return GetAttributeValue<string>("address1_line1");
            }
            set {
                SetAttributeValue("address1_line1", value);
            }
        }
        
        /// <summary>
        /// <para>Second line for entering address 1 information.</para>
        /// <para>Display Name: Street 2</para>
        /// </summary>
        [AttributeLogicalName("address1_line2")]
        [DisplayName("Street 2")]
        [MaxLength(1024)]
        public string Address1_Line2 {
            get {
                return GetAttributeValue<string>("address1_line2");
            }
            set {
                SetAttributeValue("address1_line2", value);
            }
        }
        
        /// <summary>
        /// <para>Third line for entering address 1 information.</para>
        /// <para>Display Name: Street 3</para>
        /// </summary>
        [AttributeLogicalName("address1_line3")]
        [DisplayName("Street 3")]
        [MaxLength(1024)]
        public string Address1_Line3 {
            get {
                return GetAttributeValue<string>("address1_line3");
            }
            set {
                SetAttributeValue("address1_line3", value);
            }
        }
        
        /// <summary>
        /// <para>Longitude for address 1.</para>
        /// <para>Display Name: Address 1: Longitude</para>
        /// </summary>
        [AttributeLogicalName("address1_longitude")]
        [DisplayName("Address 1: Longitude")]
        public double? Address1_Longitude {
            get {
                return GetAttributeValue<double?>("address1_longitude");
            }
            set {
                SetAttributeValue("address1_longitude", value);
            }
        }
        
        /// <summary>
        /// <para>Name to enter for address 1.</para>
        /// <para>Display Name: Address 1: Name</para>
        /// </summary>
        [AttributeLogicalName("address1_name")]
        [DisplayName("Address 1: Name")]
        [MaxLength(100)]
        public string Address1_Name {
            get {
                return GetAttributeValue<string>("address1_name");
            }
            set {
                SetAttributeValue("address1_name", value);
            }
        }
        
        /// <summary>
        /// <para>Post office box number for address 1.</para>
        /// <para>Display Name: Address 1: Post Office Box</para>
        /// </summary>
        [AttributeLogicalName("address1_postofficebox")]
        [DisplayName("Address 1: Post Office Box")]
        [MaxLength(40)]
        public string Address1_PostOfficeBox {
            get {
                return GetAttributeValue<string>("address1_postofficebox");
            }
            set {
                SetAttributeValue("address1_postofficebox", value);
            }
        }
        
        /// <summary>
        /// <para>ZIP Code or postal code for address 1.</para>
        /// <para>Display Name: ZIP/Postal Code</para>
        /// </summary>
        [AttributeLogicalName("address1_postalcode")]
        [DisplayName("ZIP/Postal Code")]
        [MaxLength(40)]
        public string Address1_PostalCode {
            get {
                return GetAttributeValue<string>("address1_postalcode");
            }
            set {
                SetAttributeValue("address1_postalcode", value);
            }
        }
        
        /// <summary>
        /// <para>Method of shipment for address 1.</para>
        /// <para>Display Name: Address 1: Shipping Method</para>
        /// </summary>
        [AttributeLogicalName("address1_shippingmethodcode")]
        [DisplayName("Address 1: Shipping Method")]
        public SystemUser_Address1_ShippingMethodCode? Address1_ShippingMethodCode {
            get {
                return GetOptionSetValue<SystemUser_Address1_ShippingMethodCode>("address1_shippingmethodcode");
            }
            set {
                SetOptionSetValue("address1_shippingmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>State or province for address 1.</para>
        /// <para>Display Name: State/Province</para>
        /// </summary>
        [AttributeLogicalName("address1_stateorprovince")]
        [DisplayName("State/Province")]
        [MaxLength(128)]
        public string Address1_StateOrProvince {
            get {
                return GetAttributeValue<string>("address1_stateorprovince");
            }
            set {
                SetAttributeValue("address1_stateorprovince", value);
            }
        }
        
        /// <summary>
        /// <para>First telephone number associated with address 1.</para>
        /// <para>Display Name: Main Phone</para>
        /// </summary>
        [AttributeLogicalName("address1_telephone1")]
        [DisplayName("Main Phone")]
        [MaxLength(64)]
        public string Address1_Telephone1 {
            get {
                return GetAttributeValue<string>("address1_telephone1");
            }
            set {
                SetAttributeValue("address1_telephone1", value);
            }
        }
        
        /// <summary>
        /// <para>Second telephone number associated with address 1.</para>
        /// <para>Display Name: Other Phone</para>
        /// </summary>
        [AttributeLogicalName("address1_telephone2")]
        [DisplayName("Other Phone")]
        [MaxLength(50)]
        public string Address1_Telephone2 {
            get {
                return GetAttributeValue<string>("address1_telephone2");
            }
            set {
                SetAttributeValue("address1_telephone2", value);
            }
        }
        
        /// <summary>
        /// <para>Third telephone number associated with address 1.</para>
        /// <para>Display Name: Pager</para>
        /// </summary>
        [AttributeLogicalName("address1_telephone3")]
        [DisplayName("Pager")]
        [MaxLength(50)]
        public string Address1_Telephone3 {
            get {
                return GetAttributeValue<string>("address1_telephone3");
            }
            set {
                SetAttributeValue("address1_telephone3", value);
            }
        }
        
        /// <summary>
        /// <para>United Parcel Service (UPS) zone for address 1.</para>
        /// <para>Display Name: Address 1: UPS Zone</para>
        /// </summary>
        [AttributeLogicalName("address1_upszone")]
        [DisplayName("Address 1: UPS Zone")]
        [MaxLength(4)]
        public string Address1_UPSZone {
            get {
                return GetAttributeValue<string>("address1_upszone");
            }
            set {
                SetAttributeValue("address1_upszone", value);
            }
        }
        
        /// <summary>
        /// <para>UTC offset for address 1. This is the difference between local time and standard Coordinated Universal Time.</para>
        /// <para>Display Name: Address 1: UTC Offset</para>
        /// </summary>
        [AttributeLogicalName("address1_utcoffset")]
        [DisplayName("Address 1: UTC Offset")]
        [Range(-1500, 1500)]
        public int? Address1_UTCOffset {
            get {
                return GetAttributeValue<int?>("address1_utcoffset");
            }
            set {
                SetAttributeValue("address1_utcoffset", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for address 2.</para>
        /// <para>Display Name: Address 2: ID</para>
        /// </summary>
        [AttributeLogicalName("address2_addressid")]
        [DisplayName("Address 2: ID")]
        public Guid? Address2_AddressId {
            get {
                return GetAttributeValue<Guid?>("address2_addressid");
            }
            set {
                SetAttributeValue("address2_addressid", value);
            }
        }
        
        /// <summary>
        /// <para>Type of address for address 2, such as billing, shipping, or primary address.</para>
        /// <para>Display Name: Address 2: Address Type</para>
        /// </summary>
        [AttributeLogicalName("address2_addresstypecode")]
        [DisplayName("Address 2: Address Type")]
        public SystemUser_Address2_AddressTypeCode? Address2_AddressTypeCode {
            get {
                return GetOptionSetValue<SystemUser_Address2_AddressTypeCode>("address2_addresstypecode");
            }
            set {
                SetOptionSetValue("address2_addresstypecode", value);
            }
        }
        
        /// <summary>
        /// <para>City name for address 2.</para>
        /// <para>Display Name: Other City</para>
        /// </summary>
        [AttributeLogicalName("address2_city")]
        [DisplayName("Other City")]
        [MaxLength(128)]
        public string Address2_City {
            get {
                return GetAttributeValue<string>("address2_city");
            }
            set {
                SetAttributeValue("address2_city", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the complete secondary address.</para>
        /// <para>Display Name: Other Address</para>
        /// </summary>
        [AttributeLogicalName("address2_composite")]
        [DisplayName("Other Address")]
        public string Address2_Composite {
            get {
                return GetAttributeValue<string>("address2_composite");
            }
        }
        
        /// <summary>
        /// <para>Country/region name in address 2.</para>
        /// <para>Display Name: Other Country/Region</para>
        /// </summary>
        [AttributeLogicalName("address2_country")]
        [DisplayName("Other Country/Region")]
        [MaxLength(128)]
        public string Address2_Country {
            get {
                return GetAttributeValue<string>("address2_country");
            }
            set {
                SetAttributeValue("address2_country", value);
            }
        }
        
        /// <summary>
        /// <para>County name for address 2.</para>
        /// <para>Display Name: Address 2: County</para>
        /// </summary>
        [AttributeLogicalName("address2_county")]
        [DisplayName("Address 2: County")]
        [MaxLength(128)]
        public string Address2_County {
            get {
                return GetAttributeValue<string>("address2_county");
            }
            set {
                SetAttributeValue("address2_county", value);
            }
        }
        
        /// <summary>
        /// <para>Fax number for address 2.</para>
        /// <para>Display Name: Address 2: Fax</para>
        /// </summary>
        [AttributeLogicalName("address2_fax")]
        [DisplayName("Address 2: Fax")]
        [MaxLength(50)]
        public string Address2_Fax {
            get {
                return GetAttributeValue<string>("address2_fax");
            }
            set {
                SetAttributeValue("address2_fax", value);
            }
        }
        
        /// <summary>
        /// <para>Latitude for address 2.</para>
        /// <para>Display Name: Address 2: Latitude</para>
        /// </summary>
        [AttributeLogicalName("address2_latitude")]
        [DisplayName("Address 2: Latitude")]
        public double? Address2_Latitude {
            get {
                return GetAttributeValue<double?>("address2_latitude");
            }
            set {
                SetAttributeValue("address2_latitude", value);
            }
        }
        
        /// <summary>
        /// <para>First line for entering address 2 information.</para>
        /// <para>Display Name: Other Street 1</para>
        /// </summary>
        [AttributeLogicalName("address2_line1")]
        [DisplayName("Other Street 1")]
        [MaxLength(1024)]
        public string Address2_Line1 {
            get {
                return GetAttributeValue<string>("address2_line1");
            }
            set {
                SetAttributeValue("address2_line1", value);
            }
        }
        
        /// <summary>
        /// <para>Second line for entering address 2 information.</para>
        /// <para>Display Name: Other Street 2</para>
        /// </summary>
        [AttributeLogicalName("address2_line2")]
        [DisplayName("Other Street 2")]
        [MaxLength(1024)]
        public string Address2_Line2 {
            get {
                return GetAttributeValue<string>("address2_line2");
            }
            set {
                SetAttributeValue("address2_line2", value);
            }
        }
        
        /// <summary>
        /// <para>Third line for entering address 2 information.</para>
        /// <para>Display Name: Other Street 3</para>
        /// </summary>
        [AttributeLogicalName("address2_line3")]
        [DisplayName("Other Street 3")]
        [MaxLength(1024)]
        public string Address2_Line3 {
            get {
                return GetAttributeValue<string>("address2_line3");
            }
            set {
                SetAttributeValue("address2_line3", value);
            }
        }
        
        /// <summary>
        /// <para>Longitude for address 2.</para>
        /// <para>Display Name: Address 2: Longitude</para>
        /// </summary>
        [AttributeLogicalName("address2_longitude")]
        [DisplayName("Address 2: Longitude")]
        public double? Address2_Longitude {
            get {
                return GetAttributeValue<double?>("address2_longitude");
            }
            set {
                SetAttributeValue("address2_longitude", value);
            }
        }
        
        /// <summary>
        /// <para>Name to enter for address 2.</para>
        /// <para>Display Name: Address 2: Name</para>
        /// </summary>
        [AttributeLogicalName("address2_name")]
        [DisplayName("Address 2: Name")]
        [MaxLength(100)]
        public string Address2_Name {
            get {
                return GetAttributeValue<string>("address2_name");
            }
            set {
                SetAttributeValue("address2_name", value);
            }
        }
        
        /// <summary>
        /// <para>Post office box number for address 2.</para>
        /// <para>Display Name: Address 2: Post Office Box</para>
        /// </summary>
        [AttributeLogicalName("address2_postofficebox")]
        [DisplayName("Address 2: Post Office Box")]
        [MaxLength(40)]
        public string Address2_PostOfficeBox {
            get {
                return GetAttributeValue<string>("address2_postofficebox");
            }
            set {
                SetAttributeValue("address2_postofficebox", value);
            }
        }
        
        /// <summary>
        /// <para>ZIP Code or postal code for address 2.</para>
        /// <para>Display Name: Other ZIP/Postal Code</para>
        /// </summary>
        [AttributeLogicalName("address2_postalcode")]
        [DisplayName("Other ZIP/Postal Code")]
        [MaxLength(40)]
        public string Address2_PostalCode {
            get {
                return GetAttributeValue<string>("address2_postalcode");
            }
            set {
                SetAttributeValue("address2_postalcode", value);
            }
        }
        
        /// <summary>
        /// <para>Method of shipment for address 2.</para>
        /// <para>Display Name: Address 2: Shipping Method</para>
        /// </summary>
        [AttributeLogicalName("address2_shippingmethodcode")]
        [DisplayName("Address 2: Shipping Method")]
        public SystemUser_Address2_ShippingMethodCode? Address2_ShippingMethodCode {
            get {
                return GetOptionSetValue<SystemUser_Address2_ShippingMethodCode>("address2_shippingmethodcode");
            }
            set {
                SetOptionSetValue("address2_shippingmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>State or province for address 2.</para>
        /// <para>Display Name: Other State/Province</para>
        /// </summary>
        [AttributeLogicalName("address2_stateorprovince")]
        [DisplayName("Other State/Province")]
        [MaxLength(128)]
        public string Address2_StateOrProvince {
            get {
                return GetAttributeValue<string>("address2_stateorprovince");
            }
            set {
                SetAttributeValue("address2_stateorprovince", value);
            }
        }
        
        /// <summary>
        /// <para>First telephone number associated with address 2.</para>
        /// <para>Display Name: Address 2: Telephone 1</para>
        /// </summary>
        [AttributeLogicalName("address2_telephone1")]
        [DisplayName("Address 2: Telephone 1")]
        [MaxLength(50)]
        public string Address2_Telephone1 {
            get {
                return GetAttributeValue<string>("address2_telephone1");
            }
            set {
                SetAttributeValue("address2_telephone1", value);
            }
        }
        
        /// <summary>
        /// <para>Second telephone number associated with address 2.</para>
        /// <para>Display Name: Address 2: Telephone 2</para>
        /// </summary>
        [AttributeLogicalName("address2_telephone2")]
        [DisplayName("Address 2: Telephone 2")]
        [MaxLength(50)]
        public string Address2_Telephone2 {
            get {
                return GetAttributeValue<string>("address2_telephone2");
            }
            set {
                SetAttributeValue("address2_telephone2", value);
            }
        }
        
        /// <summary>
        /// <para>Third telephone number associated with address 2.</para>
        /// <para>Display Name: Address 2: Telephone 3</para>
        /// </summary>
        [AttributeLogicalName("address2_telephone3")]
        [DisplayName("Address 2: Telephone 3")]
        [MaxLength(50)]
        public string Address2_Telephone3 {
            get {
                return GetAttributeValue<string>("address2_telephone3");
            }
            set {
                SetAttributeValue("address2_telephone3", value);
            }
        }
        
        /// <summary>
        /// <para>United Parcel Service (UPS) zone for address 2.</para>
        /// <para>Display Name: Address 2: UPS Zone</para>
        /// </summary>
        [AttributeLogicalName("address2_upszone")]
        [DisplayName("Address 2: UPS Zone")]
        [MaxLength(4)]
        public string Address2_UPSZone {
            get {
                return GetAttributeValue<string>("address2_upszone");
            }
            set {
                SetAttributeValue("address2_upszone", value);
            }
        }
        
        /// <summary>
        /// <para>UTC offset for address 2. This is the difference between local time and standard Coordinated Universal Time.</para>
        /// <para>Display Name: Address 2: UTC Offset</para>
        /// </summary>
        [AttributeLogicalName("address2_utcoffset")]
        [DisplayName("Address 2: UTC Offset")]
        [Range(-1500, 1500)]
        public int? Address2_UTCOffset {
            get {
                return GetAttributeValue<int?>("address2_utcoffset");
            }
            set {
                SetAttributeValue("address2_utcoffset", value);
            }
        }
        
        /// <summary>
        /// <para>The identifier for the application. This is used to access data in another application.</para>
        /// <para>Display Name: Application ID</para>
        /// </summary>
        [AttributeLogicalName("applicationid")]
        [DisplayName("Application ID")]
        public Guid? ApplicationId {
            get {
                return GetAttributeValue<Guid?>("applicationid");
            }
            set {
                SetAttributeValue("applicationid", value);
            }
        }
        
        /// <summary>
        /// <para>The URI used as a unique logical identifier for the external app. This can be used to validate the application.</para>
        /// <para>Display Name: Application ID URI</para>
        /// </summary>
        [AttributeLogicalName("applicationiduri")]
        [DisplayName("Application ID URI")]
        [MaxLength(1024)]
        public string ApplicationIdUri {
            get {
                return GetAttributeValue<string>("applicationiduri");
            }
        }
        
        /// <summary>
        /// <para>This is the application directory object Id.</para>
        /// <para>Display Name: Azure AD Object ID</para>
        /// </summary>
        [AttributeLogicalName("azureactivedirectoryobjectid")]
        [DisplayName("Azure AD Object ID")]
        public Guid? AzureActiveDirectoryObjectId {
            get {
                return GetAttributeValue<Guid?>("azureactivedirectoryobjectid");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the business unit with which the user is associated.</para>
        /// <para>Display Name: Business Unit</para>
        /// </summary>
        [AttributeLogicalName("businessunitid")]
        [DisplayName("Business Unit")]
        public EntityReference BusinessUnitId {
            get {
                return GetAttributeValue<EntityReference>("businessunitid");
            }
            set {
                SetAttributeValue("businessunitid", value);
            }
        }
        
        /// <summary>
        /// <para>License type of user. This is used only in the on-premises version of the product. Online licenses are managed through Microsoft 365 Office Portal</para>
        /// <para>Display Name: License Type</para>
        /// </summary>
        [AttributeLogicalName("caltype")]
        [DisplayName("License Type")]
        public SystemUser_CALType? CALType {
            get {
                return GetOptionSetValue<SystemUser_CALType>("caltype");
            }
            set {
                SetOptionSetValue("caltype", value);
            }
        }
        
        /// <summary>
        /// <para>Fiscal calendar associated with the user.</para>
        /// <para>Display Name: Calendar</para>
        /// </summary>
        [AttributeLogicalName("calendarid")]
        [DisplayName("Calendar")]
        public EntityReference CalendarId {
            get {
                return GetAttributeValue<EntityReference>("calendarid");
            }
            set {
                SetAttributeValue("calendarid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the user.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the user was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the systemuser.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Indicates if default outlook filters have been populated.</para>
        /// <para>Display Name: Default Filters Populated</para>
        /// </summary>
        [AttributeLogicalName("defaultfilterspopulated")]
        [DisplayName("Default Filters Populated")]
        public bool? DefaultFiltersPopulated {
            get {
                return GetAttributeValue<bool?>("defaultfilterspopulated");
            }
        }
        
        /// <summary>
        /// <para>Select the mailbox associated with this user.</para>
        /// <para>Display Name: Mailbox</para>
        /// </summary>
        [AttributeLogicalName("defaultmailbox")]
        [DisplayName("Mailbox")]
        public EntityReference DefaultMailbox {
            get {
                return GetAttributeValue<EntityReference>("defaultmailbox");
            }
        }
        
        /// <summary>
        /// <para>Type a default folder name for the user's OneDrive For Business location.</para>
        /// <para>Display Name: Default OneDrive for Business Folder Name</para>
        /// </summary>
        [AttributeLogicalName("defaultodbfoldername")]
        [DisplayName("Default OneDrive for Business Folder Name")]
        [MaxLength(200)]
        public string DefaultOdbFolderName {
            get {
                return GetAttributeValue<string>("defaultodbfoldername");
            }
        }
        
        /// <summary>
        /// <para>User delete state</para>
        /// <para>Display Name: Deleted State</para>
        /// </summary>
        [AttributeLogicalName("deletedstate")]
        [DisplayName("Deleted State")]
        public SystemUser_DeletedState? DeletedState {
            get {
                return GetOptionSetValue<SystemUser_DeletedState>("deletedstate");
            }
        }
        
        /// <summary>
        /// <para>Reason for disabling the user.</para>
        /// <para>Display Name: Disabled Reason</para>
        /// </summary>
        [AttributeLogicalName("disabledreason")]
        [DisplayName("Disabled Reason")]
        [MaxLength(500)]
        public string DisabledReason {
            get {
                return GetAttributeValue<string>("disabledreason");
            }
        }
        
        /// <summary>
        /// <para>Whether to display the user in service views.</para>
        /// <para>Display Name: Display in Service Views</para>
        /// </summary>
        [AttributeLogicalName("displayinserviceviews")]
        [DisplayName("Display in Service Views")]
        public bool? DisplayInServiceViews {
            get {
                return GetAttributeValue<bool?>("displayinserviceviews");
            }
            set {
                SetAttributeValue("displayinserviceviews", value);
            }
        }
        
        /// <summary>
        /// <para>Active Directory domain of which the user is a member.</para>
        /// <para>Display Name: User Name</para>
        /// </summary>
        [AttributeLogicalName("domainname")]
        [DisplayName("User Name")]
        [MaxLength(1024)]
        public string DomainName {
            get {
                return GetAttributeValue<string>("domainname");
            }
            set {
                SetAttributeValue("domainname", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the status of the primary email address.</para>
        /// <para>Display Name: Primary Email Status</para>
        /// </summary>
        [AttributeLogicalName("emailrouteraccessapproval")]
        [DisplayName("Primary Email Status")]
        public SystemUser_EmailRouterAccessApproval? EmailRouterAccessApproval {
            get {
                return GetOptionSetValue<SystemUser_EmailRouterAccessApproval>("emailrouteraccessapproval");
            }
            set {
                SetOptionSetValue("emailrouteraccessapproval", value);
            }
        }
        
        /// <summary>
        /// <para>Employee identifier for the user.</para>
        /// <para>Display Name: Employee</para>
        /// </summary>
        [AttributeLogicalName("employeeid")]
        [DisplayName("Employee")]
        [MaxLength(100)]
        public string EmployeeId {
            get {
                return GetAttributeValue<string>("employeeid");
            }
            set {
                SetAttributeValue("employeeid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Entity Image Id</para>
        /// </summary>
        [AttributeLogicalName("entityimageid")]
        [DisplayName("Entity Image Id")]
        public Guid? EntityImageId {
            get {
                return GetAttributeValue<Guid?>("entityimageid");
            }
        }
        
        /// <summary>
        /// <para>Exchange rate for the currency associated with the systemuser with respect to the base currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("Exchange Rate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>First name of the user.</para>
        /// <para>Display Name: First Name</para>
        /// </summary>
        [AttributeLogicalName("firstname")]
        [DisplayName("First Name")]
        [MaxLength(256)]
        public string FirstName {
            get {
                return GetAttributeValue<string>("firstname");
            }
            set {
                SetAttributeValue("firstname", value);
            }
        }
        
        /// <summary>
        /// <para>Full name of the user.</para>
        /// <para>Display Name: Full Name</para>
        /// </summary>
        [AttributeLogicalName("fullname")]
        [DisplayName("Full Name")]
        [MaxLength(200)]
        public string FullName {
            get {
                return GetAttributeValue<string>("fullname");
            }
        }
        
        /// <summary>
        /// <para>Government identifier for the user.</para>
        /// <para>Display Name: Government</para>
        /// </summary>
        [AttributeLogicalName("governmentid")]
        [DisplayName("Government")]
        [MaxLength(100)]
        public string GovernmentId {
            get {
                return GetAttributeValue<string>("governmentid");
            }
            set {
                SetAttributeValue("governmentid", value);
            }
        }
        
        /// <summary>
        /// <para>Home phone number for the user.</para>
        /// <para>Display Name: Home Phone</para>
        /// </summary>
        [AttributeLogicalName("homephone")]
        [DisplayName("Home Phone")]
        [MaxLength(50)]
        public string HomePhone {
            get {
                return GetAttributeValue<string>("homephone");
            }
            set {
                SetAttributeValue("homephone", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Unique user identity id</para>
        /// </summary>
        [AttributeLogicalName("identityid")]
        [DisplayName("Unique user identity id")]
        [Range(-2147483648, 2147483647)]
        public int? IdentityId {
            get {
                return GetAttributeValue<int?>("identityid");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the data import or data migration that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Incoming email delivery method for the user.</para>
        /// <para>Display Name: Incoming Email Delivery Method</para>
        /// </summary>
        [AttributeLogicalName("incomingemaildeliverymethod")]
        [DisplayName("Incoming Email Delivery Method")]
        public SystemUser_IncomingEmailDeliveryMethod? IncomingEmailDeliveryMethod {
            get {
                return GetOptionSetValue<SystemUser_IncomingEmailDeliveryMethod>("incomingemaildeliverymethod");
            }
            set {
                SetOptionSetValue("incomingemaildeliverymethod", value);
            }
        }
        
        /// <summary>
        /// <para>Internal email address for the user.</para>
        /// <para>Display Name: Primary Email</para>
        /// </summary>
        [AttributeLogicalName("internalemailaddress")]
        [DisplayName("Primary Email")]
        [MaxLength(100)]
        public string InternalEMailAddress {
            get {
                return GetAttributeValue<string>("internalemailaddress");
            }
            set {
                SetAttributeValue("internalemailaddress", value);
            }
        }
        
        /// <summary>
        /// <para>User invitation status.</para>
        /// <para>Display Name: Invitation Status</para>
        /// </summary>
        [AttributeLogicalName("invitestatuscode")]
        [DisplayName("Invitation Status")]
        public SystemUser_InviteStatusCode? InviteStatusCode {
            get {
                return GetOptionSetValue<SystemUser_InviteStatusCode>("invitestatuscode");
            }
            set {
                SetOptionSetValue("invitestatuscode", value);
            }
        }
        
        /// <summary>
        /// <para>Information about whether the user is enabled.</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("isdisabled")]
        [DisplayName("Status")]
        public bool? IsDisabled {
            get {
                return GetAttributeValue<bool?>("isdisabled");
            }
            set {
                SetAttributeValue("isdisabled", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the status of approval of the email address by O365 Admin.</para>
        /// <para>Display Name: Email Address O365 Admin Approval Status</para>
        /// </summary>
        [AttributeLogicalName("isemailaddressapprovedbyo365admin")]
        [DisplayName("Email Address O365 Admin Approval Status")]
        public bool? IsEmailAddressApprovedByO365Admin {
            get {
                return GetAttributeValue<bool?>("isemailaddressapprovedbyo365admin");
            }
        }
        
        /// <summary>
        /// <para>Check if user is an integration user.</para>
        /// <para>Display Name: Integration user mode</para>
        /// </summary>
        [AttributeLogicalName("isintegrationuser")]
        [DisplayName("Integration user mode")]
        public bool? IsIntegrationUser {
            get {
                return GetAttributeValue<bool?>("isintegrationuser");
            }
            set {
                SetAttributeValue("isintegrationuser", value);
            }
        }
        
        /// <summary>
        /// <para>Information about whether the user is licensed.</para>
        /// <para>Display Name: User Licensed</para>
        /// </summary>
        [AttributeLogicalName("islicensed")]
        [DisplayName("User Licensed")]
        public bool? IsLicensed {
            get {
                return GetAttributeValue<bool?>("islicensed");
            }
            set {
                SetAttributeValue("islicensed", value);
            }
        }
        
        /// <summary>
        /// <para>Information about whether the user is synced with the directory.</para>
        /// <para>Display Name: User Synced</para>
        /// </summary>
        [AttributeLogicalName("issyncwithdirectory")]
        [DisplayName("User Synced")]
        public bool? IsSyncWithDirectory {
            get {
                return GetAttributeValue<bool?>("issyncwithdirectory");
            }
            set {
                SetAttributeValue("issyncwithdirectory", value);
            }
        }
        
        /// <summary>
        /// <para>Job title of the user.</para>
        /// <para>Display Name: Job Title</para>
        /// </summary>
        [AttributeLogicalName("jobtitle")]
        [DisplayName("Job Title")]
        [MaxLength(100)]
        public string JobTitle {
            get {
                return GetAttributeValue<string>("jobtitle");
            }
            set {
                SetAttributeValue("jobtitle", value);
            }
        }
        
        /// <summary>
        /// <para>Last name of the user.</para>
        /// <para>Display Name: Last Name</para>
        /// </summary>
        [AttributeLogicalName("lastname")]
        [DisplayName("Last Name")]
        [MaxLength(256)]
        public string LastName {
            get {
                return GetAttributeValue<string>("lastname");
            }
            set {
                SetAttributeValue("lastname", value);
            }
        }
        
        /// <summary>
        /// <para>Middle name of the user.</para>
        /// <para>Display Name: Middle Name</para>
        /// </summary>
        [AttributeLogicalName("middlename")]
        [DisplayName("Middle Name")]
        [MaxLength(50)]
        public string MiddleName {
            get {
                return GetAttributeValue<string>("middlename");
            }
            set {
                SetAttributeValue("middlename", value);
            }
        }
        
        /// <summary>
        /// <para>Mobile alert email address for the user.</para>
        /// <para>Display Name: Mobile Alert Email</para>
        /// </summary>
        [AttributeLogicalName("mobilealertemail")]
        [DisplayName("Mobile Alert Email")]
        [MaxLength(100)]
        public string MobileAlertEMail {
            get {
                return GetAttributeValue<string>("mobilealertemail");
            }
            set {
                SetAttributeValue("mobilealertemail", value);
            }
        }
        
        /// <summary>
        /// <para>Items contained with a particular SystemUser.</para>
        /// <para>Display Name: Mobile Offline Profile</para>
        /// </summary>
        [AttributeLogicalName("mobileofflineprofileid")]
        [DisplayName("Mobile Offline Profile")]
        public EntityReference MobileOfflineProfileId {
            get {
                return GetAttributeValue<EntityReference>("mobileofflineprofileid");
            }
            set {
                SetAttributeValue("mobileofflineprofileid", value);
            }
        }
        
        /// <summary>
        /// <para>Mobile phone number for the user.</para>
        /// <para>Display Name: Mobile Phone</para>
        /// </summary>
        [AttributeLogicalName("mobilephone")]
        [DisplayName("Mobile Phone")]
        [MaxLength(64)]
        public string MobilePhone {
            get {
                return GetAttributeValue<string>("mobilephone");
            }
            set {
                SetAttributeValue("mobilephone", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who last modified the user.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the user was last modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who last modified the systemuser.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Nickname of the user.</para>
        /// <para>Display Name: Nickname</para>
        /// </summary>
        [AttributeLogicalName("nickname")]
        [DisplayName("Nickname")]
        [MaxLength(50)]
        public string NickName {
            get {
                return GetAttributeValue<string>("nickname");
            }
            set {
                SetAttributeValue("nickname", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the organization associated with the user.</para>
        /// <para>Display Name: Organization </para>
        /// </summary>
        [AttributeLogicalName("organizationid")]
        [DisplayName("Organization ")]
        public Guid? OrganizationId {
            get {
                return GetAttributeValue<Guid?>("organizationid");
            }
        }
        
        /// <summary>
        /// <para>Outgoing email delivery method for the user.</para>
        /// <para>Display Name: Outgoing Email Delivery Method</para>
        /// </summary>
        [AttributeLogicalName("outgoingemaildeliverymethod")]
        [DisplayName("Outgoing Email Delivery Method")]
        public SystemUser_OutgoingEmailDeliveryMethod? OutgoingEmailDeliveryMethod {
            get {
                return GetOptionSetValue<SystemUser_OutgoingEmailDeliveryMethod>("outgoingemaildeliverymethod");
            }
            set {
                SetOptionSetValue("outgoingemaildeliverymethod", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the manager of the user.</para>
        /// <para>Display Name: Manager</para>
        /// </summary>
        [AttributeLogicalName("parentsystemuserid")]
        [DisplayName("Manager")]
        public EntityReference ParentSystemUserId {
            get {
                return GetAttributeValue<EntityReference>("parentsystemuserid");
            }
            set {
                SetAttributeValue("parentsystemuserid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Passport Hi</para>
        /// </summary>
        [AttributeLogicalName("passporthi")]
        [DisplayName("Passport Hi")]
        [Range(0, 1000000000)]
        public int? PassportHi {
            get {
                return GetAttributeValue<int?>("passporthi");
            }
            set {
                SetAttributeValue("passporthi", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Passport Lo</para>
        /// </summary>
        [AttributeLogicalName("passportlo")]
        [DisplayName("Passport Lo")]
        [Range(0, 1000000000)]
        public int? PassportLo {
            get {
                return GetAttributeValue<int?>("passportlo");
            }
            set {
                SetAttributeValue("passportlo", value);
            }
        }
        
        /// <summary>
        /// <para>Personal email address of the user.</para>
        /// <para>Display Name: Email 2</para>
        /// </summary>
        [AttributeLogicalName("personalemailaddress")]
        [DisplayName("Email 2")]
        [MaxLength(100)]
        public string PersonalEMailAddress {
            get {
                return GetAttributeValue<string>("personalemailaddress");
            }
            set {
                SetAttributeValue("personalemailaddress", value);
            }
        }
        
        /// <summary>
        /// <para>URL for the Website on which a photo of the user is located.</para>
        /// <para>Display Name: Photo URL</para>
        /// </summary>
        [AttributeLogicalName("photourl")]
        [DisplayName("Photo URL")]
        [MaxLength(200)]
        public string PhotoUrl {
            get {
                return GetAttributeValue<string>("photourl");
            }
            set {
                SetAttributeValue("photourl", value);
            }
        }
        
        /// <summary>
        /// <para>User's position in hierarchical security model.</para>
        /// <para>Display Name: Position</para>
        /// </summary>
        [AttributeLogicalName("positionid")]
        [DisplayName("Position")]
        public EntityReference PositionId {
            get {
                return GetAttributeValue<EntityReference>("positionid");
            }
            set {
                SetAttributeValue("positionid", value);
            }
        }
        
        /// <summary>
        /// <para>Preferred address for the user.</para>
        /// <para>Display Name: Preferred Address</para>
        /// </summary>
        [AttributeLogicalName("preferredaddresscode")]
        [DisplayName("Preferred Address")]
        public SystemUser_PreferredAddressCode? PreferredAddressCode {
            get {
                return GetOptionSetValue<SystemUser_PreferredAddressCode>("preferredaddresscode");
            }
            set {
                SetOptionSetValue("preferredaddresscode", value);
            }
        }
        
        /// <summary>
        /// <para>Preferred email address for the user.</para>
        /// <para>Display Name: Preferred Email</para>
        /// </summary>
        [AttributeLogicalName("preferredemailcode")]
        [DisplayName("Preferred Email")]
        public SystemUser_PreferredEmailCode? PreferredEmailCode {
            get {
                return GetOptionSetValue<SystemUser_PreferredEmailCode>("preferredemailcode");
            }
            set {
                SetOptionSetValue("preferredemailcode", value);
            }
        }
        
        /// <summary>
        /// <para>Preferred phone number for the user.</para>
        /// <para>Display Name: Preferred Phone</para>
        /// </summary>
        [AttributeLogicalName("preferredphonecode")]
        [DisplayName("Preferred Phone")]
        public SystemUser_PreferredPhoneCode? PreferredPhoneCode {
            get {
                return GetOptionSetValue<SystemUser_PreferredPhoneCode>("preferredphonecode");
            }
            set {
                SetOptionSetValue("preferredphonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Full name of the user.</para>
        /// <para>Display Name: Full Name</para>
        /// </summary>
        [AttributeLogicalName("fullname")]
        [DisplayName("Full Name")]
        [MaxLength(200)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("fullname");
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the process.</para>
        /// <para>Display Name: Process</para>
        /// </summary>
        [AttributeLogicalName("processid")]
        [DisplayName("Process")]
        public Guid? ProcessId {
            get {
                return GetAttributeValue<Guid?>("processid");
            }
            set {
                SetAttributeValue("processid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the default queue for the user.</para>
        /// <para>Display Name: Default Queue</para>
        /// </summary>
        [AttributeLogicalName("queueid")]
        [DisplayName("Default Queue")]
        public EntityReference QueueId {
            get {
                return GetAttributeValue<EntityReference>("queueid");
            }
            set {
                SetAttributeValue("queueid", value);
            }
        }
        
        /// <summary>
        /// <para>Salutation for correspondence with the user.</para>
        /// <para>Display Name: Salutation</para>
        /// </summary>
        [AttributeLogicalName("salutation")]
        [DisplayName("Salutation")]
        [MaxLength(20)]
        public string Salutation {
            get {
                return GetAttributeValue<string>("salutation");
            }
            set {
                SetAttributeValue("salutation", value);
            }
        }
        
        /// <summary>
        /// <para>Check if user is a setup user.</para>
        /// <para>Display Name: Restricted Access Mode</para>
        /// </summary>
        [AttributeLogicalName("setupuser")]
        [DisplayName("Restricted Access Mode")]
        public bool? SetupUser {
            get {
                return GetAttributeValue<bool?>("setupuser");
            }
            set {
                SetAttributeValue("setupuser", value);
            }
        }
        
        /// <summary>
        /// <para>SharePoint Work Email Address</para>
        /// <para>Display Name: SharePoint Email Address</para>
        /// </summary>
        [AttributeLogicalName("sharepointemailaddress")]
        [DisplayName("SharePoint Email Address")]
        [MaxLength(1024)]
        public string SharePointEmailAddress {
            get {
                return GetAttributeValue<string>("sharepointemailaddress");
            }
            set {
                SetAttributeValue("sharepointemailaddress", value);
            }
        }
        
        /// <summary>
        /// <para>site_system_users</para>
        /// <para>Display Name: Site</para>
        /// </summary>
        [AttributeLogicalName("siteid")]
        [DisplayName("Site")]
        public EntityReference SiteId {
            get {
                return GetAttributeValue<EntityReference>("siteid");
            }
            set {
                SetAttributeValue("siteid", value);
            }
        }
        
        /// <summary>
        /// <para>Skill set of the user.</para>
        /// <para>Display Name: Skills</para>
        /// </summary>
        [AttributeLogicalName("skills")]
        [DisplayName("Skills")]
        [MaxLength(100)]
        public string Skills {
            get {
                return GetAttributeValue<string>("skills");
            }
            set {
                SetAttributeValue("skills", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the stage.</para>
        /// <para>Display Name: (Deprecated) Process Stage</para>
        /// </summary>
        [AttributeLogicalName("stageid")]
        [DisplayName("(Deprecated) Process Stage")]
        public Guid? StageId {
            get {
                return GetAttributeValue<Guid?>("stageid");
            }
            set {
                SetAttributeValue("stageid", value);
            }
        }
        
        /// <summary>
        /// <para>territory_system_users</para>
        /// <para>Display Name: Territory</para>
        /// </summary>
        [AttributeLogicalName("territoryid")]
        [DisplayName("Territory")]
        public EntityReference TerritoryId {
            get {
                return GetAttributeValue<EntityReference>("territoryid");
            }
            set {
                SetAttributeValue("territoryid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Title of the user.</para>
        /// <para>Display Name: Title</para>
        /// </summary>
        [AttributeLogicalName("title")]
        [DisplayName("Title")]
        [MaxLength(128)]
        public string Title {
            get {
                return GetAttributeValue<string>("title");
            }
            set {
                SetAttributeValue("title", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the currency associated with the systemuser.</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: (Deprecated) Traversed Path</para>
        /// </summary>
        [AttributeLogicalName("traversedpath")]
        [DisplayName("(Deprecated) Traversed Path")]
        [MaxLength(1250)]
        public string TraversedPath {
            get {
                return GetAttributeValue<string>("traversedpath");
            }
            set {
                SetAttributeValue("traversedpath", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the type of user license.</para>
        /// <para>Display Name: User License Type</para>
        /// </summary>
        [AttributeLogicalName("userlicensetype")]
        [DisplayName("User License Type")]
        [Range(-2147483648, 2147483647)]
        public int? UserLicenseType {
            get {
                return GetAttributeValue<int?>("userlicensetype");
            }
            set {
                SetAttributeValue("userlicensetype", value);
            }
        }
        
        /// <summary>
        /// <para> User PUID User Identifiable Information</para>
        /// <para>Display Name: User PUID</para>
        /// </summary>
        [AttributeLogicalName("userpuid")]
        [DisplayName("User PUID")]
        [MaxLength(100)]
        public string UserPuid {
            get {
                return GetAttributeValue<string>("userpuid");
            }
        }
        
        /// <summary>
        /// <para>Version number of the user.</para>
        /// <para>Display Name: Version number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Windows Live ID</para>
        /// <para>Display Name: Windows Live ID</para>
        /// </summary>
        [AttributeLogicalName("windowsliveid")]
        [DisplayName("Windows Live ID")]
        [MaxLength(1024)]
        public string WindowsLiveID {
            get {
                return GetAttributeValue<string>("windowsliveid");
            }
            set {
                SetAttributeValue("windowsliveid", value);
            }
        }
        
        /// <summary>
        /// <para>User's Yammer login email address</para>
        /// <para>Display Name: Yammer Email</para>
        /// </summary>
        [AttributeLogicalName("yammeremailaddress")]
        [DisplayName("Yammer Email")]
        [MaxLength(200)]
        public string YammerEmailAddress {
            get {
                return GetAttributeValue<string>("yammeremailaddress");
            }
            set {
                SetAttributeValue("yammeremailaddress", value);
            }
        }
        
        /// <summary>
        /// <para>User's Yammer ID</para>
        /// <para>Display Name: Yammer User ID</para>
        /// </summary>
        [AttributeLogicalName("yammeruserid")]
        [DisplayName("Yammer User ID")]
        [MaxLength(128)]
        public string YammerUserId {
            get {
                return GetAttributeValue<string>("yammeruserid");
            }
            set {
                SetAttributeValue("yammeruserid", value);
            }
        }
        
        /// <summary>
        /// <para>Pronunciation of the first name of the user, written in phonetic hiragana or katakana characters.</para>
        /// <para>Display Name: Yomi First Name</para>
        /// </summary>
        [AttributeLogicalName("yomifirstname")]
        [DisplayName("Yomi First Name")]
        [MaxLength(64)]
        public string YomiFirstName {
            get {
                return GetAttributeValue<string>("yomifirstname");
            }
            set {
                SetAttributeValue("yomifirstname", value);
            }
        }
        
        /// <summary>
        /// <para>Pronunciation of the full name of the user, written in phonetic hiragana or katakana characters.</para>
        /// <para>Display Name: Yomi Full Name</para>
        /// </summary>
        [AttributeLogicalName("yomifullname")]
        [DisplayName("Yomi Full Name")]
        [MaxLength(200)]
        public string YomiFullName {
            get {
                return GetAttributeValue<string>("yomifullname");
            }
        }
        
        /// <summary>
        /// <para>Pronunciation of the last name of the user, written in phonetic hiragana or katakana characters.</para>
        /// <para>Display Name: Yomi Last Name</para>
        /// </summary>
        [AttributeLogicalName("yomilastname")]
        [DisplayName("Yomi Last Name")]
        [MaxLength(64)]
        public string YomiLastName {
            get {
                return GetAttributeValue<string>("yomilastname");
            }
            set {
                SetAttributeValue("yomilastname", value);
            }
        }
        
        /// <summary>
        /// <para>Pronunciation of the middle name of the user, written in phonetic hiragana or katakana characters.</para>
        /// <para>Display Name: Yomi Middle Name</para>
        /// </summary>
        [AttributeLogicalName("yomimiddlename")]
        [DisplayName("Yomi Middle Name")]
        [MaxLength(50)]
        public string YomiMiddleName {
            get {
                return GetAttributeValue<string>("yomimiddlename");
            }
            set {
                SetAttributeValue("yomimiddlename", value);
            }
        }
        
        /// <summary>
        /// <para>Describes whether user is opted out or not</para>
        /// <para>Display Name: GDPR Optout</para>
        /// </summary>
        [AttributeLogicalName("msdyn_gdproptout")]
        [DisplayName("GDPR Optout")]
        public bool? msdyn_gdproptout {
            get {
                return GetAttributeValue<bool?>("msdyn_gdproptout");
            }
            set {
                SetAttributeValue("msdyn_gdproptout", value);
            }
        }
        
        [RelationshipSchemaName("lk_systemuser_createdonbehalfby", EntityRole.Referenced)]
        public IEnumerable<SystemUser> Referencedlk_systemuser_createdonbehalfby {
            get {
                return GetRelatedEntities<SystemUser>("lk_systemuser_createdonbehalfby", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("lk_systemuser_createdonbehalfby", EntityRole.Referenced, value);
            }
        }
        
        [RelationshipSchemaName("lk_systemuser_modifiedonbehalfby", EntityRole.Referenced)]
        public IEnumerable<SystemUser> Referencedlk_systemuser_modifiedonbehalfby {
            get {
                return GetRelatedEntities<SystemUser>("lk_systemuser_modifiedonbehalfby", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("lk_systemuser_modifiedonbehalfby", EntityRole.Referenced, value);
            }
        }
        
        [RelationshipSchemaName("lk_systemuserbase_createdby", EntityRole.Referenced)]
        public IEnumerable<SystemUser> Referencedlk_systemuserbase_createdby {
            get {
                return GetRelatedEntities<SystemUser>("lk_systemuserbase_createdby", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("lk_systemuserbase_createdby", EntityRole.Referenced, value);
            }
        }
        
        [RelationshipSchemaName("lk_systemuserbase_modifiedby", EntityRole.Referenced)]
        public IEnumerable<SystemUser> Referencedlk_systemuserbase_modifiedby {
            get {
                return GetRelatedEntities<SystemUser>("lk_systemuserbase_modifiedby", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("lk_systemuserbase_modifiedby", EntityRole.Referenced, value);
            }
        }
        
        [RelationshipSchemaName("user_parent_user", EntityRole.Referenced)]
        public IEnumerable<SystemUser> Referenceduser_parent_user {
            get {
                return GetRelatedEntities<SystemUser>("user_parent_user", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("user_parent_user", EntityRole.Referenced, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_systemuser_createdonbehalfby", EntityRole.Referencing)]
        public SystemUser Referencinglk_systemuser_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_systemuser_createdonbehalfby", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("lk_systemuser_createdonbehalfby", EntityRole.Referencing, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_systemuser_modifiedonbehalfby", EntityRole.Referencing)]
        public SystemUser Referencinglk_systemuser_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_systemuser_modifiedonbehalfby", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("lk_systemuser_modifiedonbehalfby", EntityRole.Referencing, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_systemuserbase_createdby", EntityRole.Referencing)]
        public SystemUser Referencinglk_systemuserbase_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_systemuserbase_createdby", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("lk_systemuserbase_createdby", EntityRole.Referencing, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_systemuserbase_modifiedby", EntityRole.Referencing)]
        public SystemUser Referencinglk_systemuserbase_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_systemuserbase_modifiedby", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("lk_systemuserbase_modifiedby", EntityRole.Referencing, value);
            }
        }
        
        [AttributeLogicalName("parentsystemuserid")]
        [RelationshipSchemaName("user_parent_user", EntityRole.Referencing)]
        public SystemUser Referencinguser_parent_user {
            get {
                return GetRelatedEntity<SystemUser>("user_parent_user", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("user_parent_user", EntityRole.Referencing, value);
            }
        }
        
        [RelationshipSchemaName("SystemUser_Campaigns")]
        public IEnumerable<Campaign> SystemUser_Campaigns {
            get {
                return GetRelatedEntities<Campaign>("SystemUser_Campaigns", null);
            }
            set {
                SetRelatedEntities("SystemUser_Campaigns", null, value);
            }
        }
        
        [RelationshipSchemaName("SystemUser_Email_EmailSender")]
        public IEnumerable<Email> SystemUser_Email_EmailSender {
            get {
                return GetRelatedEntities<Email>("SystemUser_Email_EmailSender", null);
            }
            set {
                SetRelatedEntities("SystemUser_Email_EmailSender", null, value);
            }
        }
        
        [RelationshipSchemaName("SystemUser_SyncError")]
        public IEnumerable<SyncError> SystemUser_SyncError {
            get {
                return GetRelatedEntities<SyncError>("SystemUser_SyncError", null);
            }
            set {
                SetRelatedEntities("SystemUser_SyncError", null, value);
            }
        }
        
        [RelationshipSchemaName("SystemUser_SyncErrors")]
        public IEnumerable<SyncError> SystemUser_SyncErrors {
            get {
                return GetRelatedEntities<SyncError>("SystemUser_SyncErrors", null);
            }
            set {
                SetRelatedEntities("SystemUser_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("transactioncurrencyid")]
        [RelationshipSchemaName("TransactionCurrency_SystemUser")]
        public TransactionCurrency TransactionCurrency_SystemUser {
            get {
                return GetRelatedEntity<TransactionCurrency>("TransactionCurrency_SystemUser", null);
            }
            set {
                SetRelatedEntity("TransactionCurrency_SystemUser", null, value);
            }
        }
        
        [AttributeLogicalName("businessunitid")]
        [RelationshipSchemaName("business_unit_system_users")]
        public BusinessUnit business_unit_system_users {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_system_users", null);
            }
            set {
                SetRelatedEntity("business_unit_system_users", null, value);
            }
        }
        
        [AttributeLogicalName("calendarid")]
        [RelationshipSchemaName("calendar_system_users")]
        public Calendar calendar_system_users {
            get {
                return GetRelatedEntity<Calendar>("calendar_system_users", null);
            }
            set {
                SetRelatedEntity("calendar_system_users", null, value);
            }
        }
        
        [RelationshipSchemaName("contact_owning_user")]
        public IEnumerable<Contact> contact_owning_user {
            get {
                return GetRelatedEntities<Contact>("contact_owning_user", null);
            }
            set {
                SetRelatedEntities("contact_owning_user", null, value);
            }
        }
        
        [RelationshipSchemaName("createdby_connection")]
        public IEnumerable<Connection> createdby_connection {
            get {
                return GetRelatedEntities<Connection>("createdby_connection", null);
            }
            set {
                SetRelatedEntities("createdby_connection", null, value);
            }
        }
        
        [RelationshipSchemaName("email_acceptingentity_systemuser")]
        public IEnumerable<Email> email_acceptingentity_systemuser {
            get {
                return GetRelatedEntities<Email>("email_acceptingentity_systemuser", null);
            }
            set {
                SetRelatedEntities("email_acceptingentity_systemuser", null, value);
            }
        }
        
        [RelationshipSchemaName("knowledgearticle_primaryauthorid")]
        public IEnumerable<KnowledgeArticle> knowledgearticle_primaryauthorid {
            get {
                return GetRelatedEntities<KnowledgeArticle>("knowledgearticle_primaryauthorid", null);
            }
            set {
                SetRelatedEntities("knowledgearticle_primaryauthorid", null, value);
            }
        }
        
        [RelationshipSchemaName("lead_owning_user")]
        public IEnumerable<Lead> lead_owning_user {
            get {
                return GetRelatedEntities<Lead>("lead_owning_user", null);
            }
            set {
                SetRelatedEntities("lead_owning_user", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_accountbase_createdby")]
        public IEnumerable<Account> lk_accountbase_createdby {
            get {
                return GetRelatedEntities<Account>("lk_accountbase_createdby", null);
            }
            set {
                SetRelatedEntities("lk_accountbase_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_accountbase_createdonbehalfby")]
        public IEnumerable<Account> lk_accountbase_createdonbehalfby {
            get {
                return GetRelatedEntities<Account>("lk_accountbase_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_accountbase_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_accountbase_modifiedby")]
        public IEnumerable<Account> lk_accountbase_modifiedby {
            get {
                return GetRelatedEntities<Account>("lk_accountbase_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_accountbase_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_accountbase_modifiedonbehalfby")]
        public IEnumerable<Account> lk_accountbase_modifiedonbehalfby {
            get {
                return GetRelatedEntities<Account>("lk_accountbase_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_accountbase_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_activitypointer_createdby")]
        public IEnumerable<ActivityPointer> lk_activitypointer_createdby {
            get {
                return GetRelatedEntities<ActivityPointer>("lk_activitypointer_createdby", null);
            }
            set {
                SetRelatedEntities("lk_activitypointer_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_activitypointer_createdonbehalfby")]
        public IEnumerable<ActivityPointer> lk_activitypointer_createdonbehalfby {
            get {
                return GetRelatedEntities<ActivityPointer>("lk_activitypointer_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_activitypointer_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_activitypointer_modifiedby")]
        public IEnumerable<ActivityPointer> lk_activitypointer_modifiedby {
            get {
                return GetRelatedEntities<ActivityPointer>("lk_activitypointer_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_activitypointer_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_activitypointer_modifiedonbehalfby")]
        public IEnumerable<ActivityPointer> lk_activitypointer_modifiedonbehalfby {
            get {
                return GetRelatedEntities<ActivityPointer>("lk_activitypointer_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_activitypointer_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_appointment_createdby")]
        public IEnumerable<Appointment> lk_appointment_createdby {
            get {
                return GetRelatedEntities<Appointment>("lk_appointment_createdby", null);
            }
            set {
                SetRelatedEntities("lk_appointment_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_appointment_createdonbehalfby")]
        public IEnumerable<Appointment> lk_appointment_createdonbehalfby {
            get {
                return GetRelatedEntities<Appointment>("lk_appointment_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_appointment_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_appointment_modifiedby")]
        public IEnumerable<Appointment> lk_appointment_modifiedby {
            get {
                return GetRelatedEntities<Appointment>("lk_appointment_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_appointment_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_appointment_modifiedonbehalfby")]
        public IEnumerable<Appointment> lk_appointment_modifiedonbehalfby {
            get {
                return GetRelatedEntities<Appointment>("lk_appointment_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_appointment_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_bookableresource_createdby")]
        public IEnumerable<BookableResource> lk_bookableresource_createdby {
            get {
                return GetRelatedEntities<BookableResource>("lk_bookableresource_createdby", null);
            }
            set {
                SetRelatedEntities("lk_bookableresource_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_bookableresource_createdonbehalfby")]
        public IEnumerable<BookableResource> lk_bookableresource_createdonbehalfby {
            get {
                return GetRelatedEntities<BookableResource>("lk_bookableresource_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_bookableresource_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_bookableresource_modifiedby")]
        public IEnumerable<BookableResource> lk_bookableresource_modifiedby {
            get {
                return GetRelatedEntities<BookableResource>("lk_bookableresource_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_bookableresource_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_bookableresource_modifiedonbehalfby")]
        public IEnumerable<BookableResource> lk_bookableresource_modifiedonbehalfby {
            get {
                return GetRelatedEntities<BookableResource>("lk_bookableresource_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_bookableresource_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_bookableresourcebooking_createdby")]
        public IEnumerable<BookableResourceBooking> lk_bookableresourcebooking_createdby {
            get {
                return GetRelatedEntities<BookableResourceBooking>("lk_bookableresourcebooking_createdby", null);
            }
            set {
                SetRelatedEntities("lk_bookableresourcebooking_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_bookableresourcebooking_createdonbehalfby")]
        public IEnumerable<BookableResourceBooking> lk_bookableresourcebooking_createdonbehalfby {
            get {
                return GetRelatedEntities<BookableResourceBooking>("lk_bookableresourcebooking_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_bookableresourcebooking_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_bookableresourcebooking_modifiedby")]
        public IEnumerable<BookableResourceBooking> lk_bookableresourcebooking_modifiedby {
            get {
                return GetRelatedEntities<BookableResourceBooking>("lk_bookableresourcebooking_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_bookableresourcebooking_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_bookableresourcebooking_modifiedonbehalfby")]
        public IEnumerable<BookableResourceBooking> lk_bookableresourcebooking_modifiedonbehalfby {
            get {
                return GetRelatedEntities<BookableResourceBooking>("lk_bookableresourcebooking_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_bookableresourcebooking_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_bookableresourcebookingheader_createdby")]
        public IEnumerable<BookableResourceBookingHeader> lk_bookableresourcebookingheader_createdby {
            get {
                return GetRelatedEntities<BookableResourceBookingHeader>("lk_bookableresourcebookingheader_createdby", null);
            }
            set {
                SetRelatedEntities("lk_bookableresourcebookingheader_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_bookableresourcebookingheader_createdonbehalfby")]
        public IEnumerable<BookableResourceBookingHeader> lk_bookableresourcebookingheader_createdonbehalfby {
            get {
                return GetRelatedEntities<BookableResourceBookingHeader>("lk_bookableresourcebookingheader_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_bookableresourcebookingheader_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_bookableresourcebookingheader_modifiedby")]
        public IEnumerable<BookableResourceBookingHeader> lk_bookableresourcebookingheader_modifiedby {
            get {
                return GetRelatedEntities<BookableResourceBookingHeader>("lk_bookableresourcebookingheader_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_bookableresourcebookingheader_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_bookableresourcebookingheader_modifiedonbehalfby")]
        public IEnumerable<BookableResourceBookingHeader> lk_bookableresourcebookingheader_modifiedonbehalfby {
            get {
                return GetRelatedEntities<BookableResourceBookingHeader>("lk_bookableresourcebookingheader_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_bookableresourcebookingheader_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_bookableresourcecategory_createdby")]
        public IEnumerable<BookableResourceCategory> lk_bookableresourcecategory_createdby {
            get {
                return GetRelatedEntities<BookableResourceCategory>("lk_bookableresourcecategory_createdby", null);
            }
            set {
                SetRelatedEntities("lk_bookableresourcecategory_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_bookableresourcecategory_createdonbehalfby")]
        public IEnumerable<BookableResourceCategory> lk_bookableresourcecategory_createdonbehalfby {
            get {
                return GetRelatedEntities<BookableResourceCategory>("lk_bookableresourcecategory_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_bookableresourcecategory_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_bookableresourcecategory_modifiedby")]
        public IEnumerable<BookableResourceCategory> lk_bookableresourcecategory_modifiedby {
            get {
                return GetRelatedEntities<BookableResourceCategory>("lk_bookableresourcecategory_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_bookableresourcecategory_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_bookableresourcecategory_modifiedonbehalfby")]
        public IEnumerable<BookableResourceCategory> lk_bookableresourcecategory_modifiedonbehalfby {
            get {
                return GetRelatedEntities<BookableResourceCategory>("lk_bookableresourcecategory_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_bookableresourcecategory_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_bookableresourcecategoryassn_createdby")]
        public IEnumerable<BookableResourceCategoryAssn> lk_bookableresourcecategoryassn_createdby {
            get {
                return GetRelatedEntities<BookableResourceCategoryAssn>("lk_bookableresourcecategoryassn_createdby", null);
            }
            set {
                SetRelatedEntities("lk_bookableresourcecategoryassn_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_bookableresourcecategoryassn_createdonbehalfby")]
        public IEnumerable<BookableResourceCategoryAssn> lk_bookableresourcecategoryassn_createdonbehalfby {
            get {
                return GetRelatedEntities<BookableResourceCategoryAssn>("lk_bookableresourcecategoryassn_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_bookableresourcecategoryassn_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_bookableresourcecategoryassn_modifiedby")]
        public IEnumerable<BookableResourceCategoryAssn> lk_bookableresourcecategoryassn_modifiedby {
            get {
                return GetRelatedEntities<BookableResourceCategoryAssn>("lk_bookableresourcecategoryassn_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_bookableresourcecategoryassn_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_bookableresourcecategoryassn_modifiedonbehalfby")]
        public IEnumerable<BookableResourceCategoryAssn> lk_bookableresourcecategoryassn_modifiedonbehalfby {
            get {
                return GetRelatedEntities<BookableResourceCategoryAssn>("lk_bookableresourcecategoryassn_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_bookableresourcecategoryassn_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_bookableresourcecharacteristic_createdby")]
        public IEnumerable<BookableResourceCharacteristic> lk_bookableresourcecharacteristic_createdby {
            get {
                return GetRelatedEntities<BookableResourceCharacteristic>("lk_bookableresourcecharacteristic_createdby", null);
            }
            set {
                SetRelatedEntities("lk_bookableresourcecharacteristic_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_bookableresourcecharacteristic_createdonbehalfby")]
        public IEnumerable<BookableResourceCharacteristic> lk_bookableresourcecharacteristic_createdonbehalfby {
            get {
                return GetRelatedEntities<BookableResourceCharacteristic>("lk_bookableresourcecharacteristic_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_bookableresourcecharacteristic_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_bookableresourcecharacteristic_modifiedby")]
        public IEnumerable<BookableResourceCharacteristic> lk_bookableresourcecharacteristic_modifiedby {
            get {
                return GetRelatedEntities<BookableResourceCharacteristic>("lk_bookableresourcecharacteristic_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_bookableresourcecharacteristic_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_bookableresourcecharacteristic_modifiedonbehalfby")]
        public IEnumerable<BookableResourceCharacteristic> lk_bookableresourcecharacteristic_modifiedonbehalfby {
            get {
                return GetRelatedEntities<BookableResourceCharacteristic>("lk_bookableresourcecharacteristic_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_bookableresourcecharacteristic_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_bookableresourcegroup_createdby")]
        public IEnumerable<BookableResourceGroup> lk_bookableresourcegroup_createdby {
            get {
                return GetRelatedEntities<BookableResourceGroup>("lk_bookableresourcegroup_createdby", null);
            }
            set {
                SetRelatedEntities("lk_bookableresourcegroup_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_bookableresourcegroup_createdonbehalfby")]
        public IEnumerable<BookableResourceGroup> lk_bookableresourcegroup_createdonbehalfby {
            get {
                return GetRelatedEntities<BookableResourceGroup>("lk_bookableresourcegroup_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_bookableresourcegroup_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_bookableresourcegroup_modifiedby")]
        public IEnumerable<BookableResourceGroup> lk_bookableresourcegroup_modifiedby {
            get {
                return GetRelatedEntities<BookableResourceGroup>("lk_bookableresourcegroup_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_bookableresourcegroup_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_bookableresourcegroup_modifiedonbehalfby")]
        public IEnumerable<BookableResourceGroup> lk_bookableresourcegroup_modifiedonbehalfby {
            get {
                return GetRelatedEntities<BookableResourceGroup>("lk_bookableresourcegroup_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_bookableresourcegroup_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_bookingstatus_createdby")]
        public IEnumerable<BookingStatus> lk_bookingstatus_createdby {
            get {
                return GetRelatedEntities<BookingStatus>("lk_bookingstatus_createdby", null);
            }
            set {
                SetRelatedEntities("lk_bookingstatus_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_bookingstatus_createdonbehalfby")]
        public IEnumerable<BookingStatus> lk_bookingstatus_createdonbehalfby {
            get {
                return GetRelatedEntities<BookingStatus>("lk_bookingstatus_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_bookingstatus_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_bookingstatus_modifiedby")]
        public IEnumerable<BookingStatus> lk_bookingstatus_modifiedby {
            get {
                return GetRelatedEntities<BookingStatus>("lk_bookingstatus_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_bookingstatus_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_bookingstatus_modifiedonbehalfby")]
        public IEnumerable<BookingStatus> lk_bookingstatus_modifiedonbehalfby {
            get {
                return GetRelatedEntities<BookingStatus>("lk_bookingstatus_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_bookingstatus_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_businessunit_createdonbehalfby")]
        public IEnumerable<BusinessUnit> lk_businessunit_createdonbehalfby {
            get {
                return GetRelatedEntities<BusinessUnit>("lk_businessunit_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_businessunit_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_businessunit_modifiedonbehalfby")]
        public IEnumerable<BusinessUnit> lk_businessunit_modifiedonbehalfby {
            get {
                return GetRelatedEntities<BusinessUnit>("lk_businessunit_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_businessunit_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_businessunitbase_createdby")]
        public IEnumerable<BusinessUnit> lk_businessunitbase_createdby {
            get {
                return GetRelatedEntities<BusinessUnit>("lk_businessunitbase_createdby", null);
            }
            set {
                SetRelatedEntities("lk_businessunitbase_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_businessunitbase_modifiedby")]
        public IEnumerable<BusinessUnit> lk_businessunitbase_modifiedby {
            get {
                return GetRelatedEntities<BusinessUnit>("lk_businessunitbase_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_businessunitbase_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_calendar_createdby")]
        public IEnumerable<Calendar> lk_calendar_createdby {
            get {
                return GetRelatedEntities<Calendar>("lk_calendar_createdby", null);
            }
            set {
                SetRelatedEntities("lk_calendar_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_calendar_createdonbehalfby")]
        public IEnumerable<Calendar> lk_calendar_createdonbehalfby {
            get {
                return GetRelatedEntities<Calendar>("lk_calendar_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_calendar_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_calendar_modifiedby")]
        public IEnumerable<Calendar> lk_calendar_modifiedby {
            get {
                return GetRelatedEntities<Calendar>("lk_calendar_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_calendar_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_calendar_modifiedonbehalfby")]
        public IEnumerable<Calendar> lk_calendar_modifiedonbehalfby {
            get {
                return GetRelatedEntities<Calendar>("lk_calendar_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_calendar_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_campaign_createdby")]
        public IEnumerable<Campaign> lk_campaign_createdby {
            get {
                return GetRelatedEntities<Campaign>("lk_campaign_createdby", null);
            }
            set {
                SetRelatedEntities("lk_campaign_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_campaign_createdonbehalfby")]
        public IEnumerable<Campaign> lk_campaign_createdonbehalfby {
            get {
                return GetRelatedEntities<Campaign>("lk_campaign_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_campaign_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_campaign_modifiedby")]
        public IEnumerable<Campaign> lk_campaign_modifiedby {
            get {
                return GetRelatedEntities<Campaign>("lk_campaign_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_campaign_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_campaign_modifiedonbehalfby")]
        public IEnumerable<Campaign> lk_campaign_modifiedonbehalfby {
            get {
                return GetRelatedEntities<Campaign>("lk_campaign_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_campaign_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_campaignactivity_createdby")]
        public IEnumerable<CampaignActivity> lk_campaignactivity_createdby {
            get {
                return GetRelatedEntities<CampaignActivity>("lk_campaignactivity_createdby", null);
            }
            set {
                SetRelatedEntities("lk_campaignactivity_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_campaignactivity_createdonbehalfby")]
        public IEnumerable<CampaignActivity> lk_campaignactivity_createdonbehalfby {
            get {
                return GetRelatedEntities<CampaignActivity>("lk_campaignactivity_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_campaignactivity_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_campaignactivity_modifiedby")]
        public IEnumerable<CampaignActivity> lk_campaignactivity_modifiedby {
            get {
                return GetRelatedEntities<CampaignActivity>("lk_campaignactivity_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_campaignactivity_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_campaignactivity_modifiedonbehalfby")]
        public IEnumerable<CampaignActivity> lk_campaignactivity_modifiedonbehalfby {
            get {
                return GetRelatedEntities<CampaignActivity>("lk_campaignactivity_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_campaignactivity_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_campaignresponse_createdby")]
        public IEnumerable<CampaignResponse> lk_campaignresponse_createdby {
            get {
                return GetRelatedEntities<CampaignResponse>("lk_campaignresponse_createdby", null);
            }
            set {
                SetRelatedEntities("lk_campaignresponse_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_campaignresponse_createdonbehalfby")]
        public IEnumerable<CampaignResponse> lk_campaignresponse_createdonbehalfby {
            get {
                return GetRelatedEntities<CampaignResponse>("lk_campaignresponse_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_campaignresponse_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_campaignresponse_modifiedby")]
        public IEnumerable<CampaignResponse> lk_campaignresponse_modifiedby {
            get {
                return GetRelatedEntities<CampaignResponse>("lk_campaignresponse_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_campaignresponse_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_campaignresponse_modifiedonbehalfby")]
        public IEnumerable<CampaignResponse> lk_campaignresponse_modifiedonbehalfby {
            get {
                return GetRelatedEntities<CampaignResponse>("lk_campaignresponse_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_campaignresponse_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_characteristic_createdby")]
        public IEnumerable<Characteristic> lk_characteristic_createdby {
            get {
                return GetRelatedEntities<Characteristic>("lk_characteristic_createdby", null);
            }
            set {
                SetRelatedEntities("lk_characteristic_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_characteristic_createdonbehalfby")]
        public IEnumerable<Characteristic> lk_characteristic_createdonbehalfby {
            get {
                return GetRelatedEntities<Characteristic>("lk_characteristic_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_characteristic_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_characteristic_modifiedby")]
        public IEnumerable<Characteristic> lk_characteristic_modifiedby {
            get {
                return GetRelatedEntities<Characteristic>("lk_characteristic_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_characteristic_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_characteristic_modifiedonbehalfby")]
        public IEnumerable<Characteristic> lk_characteristic_modifiedonbehalfby {
            get {
                return GetRelatedEntities<Characteristic>("lk_characteristic_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_characteristic_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_connectionbase_createdonbehalfby")]
        public IEnumerable<Connection> lk_connectionbase_createdonbehalfby {
            get {
                return GetRelatedEntities<Connection>("lk_connectionbase_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_connectionbase_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_connectionbase_modifiedonbehalfby")]
        public IEnumerable<Connection> lk_connectionbase_modifiedonbehalfby {
            get {
                return GetRelatedEntities<Connection>("lk_connectionbase_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_connectionbase_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_contact_createdonbehalfby")]
        public IEnumerable<Contact> lk_contact_createdonbehalfby {
            get {
                return GetRelatedEntities<Contact>("lk_contact_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_contact_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_contact_modifiedonbehalfby")]
        public IEnumerable<Contact> lk_contact_modifiedonbehalfby {
            get {
                return GetRelatedEntities<Contact>("lk_contact_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_contact_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_contactbase_createdby")]
        public IEnumerable<Contact> lk_contactbase_createdby {
            get {
                return GetRelatedEntities<Contact>("lk_contactbase_createdby", null);
            }
            set {
                SetRelatedEntities("lk_contactbase_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_contactbase_modifiedby")]
        public IEnumerable<Contact> lk_contactbase_modifiedby {
            get {
                return GetRelatedEntities<Contact>("lk_contactbase_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_contactbase_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_contract_createdonbehalfby")]
        public IEnumerable<Contract> lk_contract_createdonbehalfby {
            get {
                return GetRelatedEntities<Contract>("lk_contract_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_contract_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_contract_modifiedonbehalfby")]
        public IEnumerable<Contract> lk_contract_modifiedonbehalfby {
            get {
                return GetRelatedEntities<Contract>("lk_contract_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_contract_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_contractbase_createdby")]
        public IEnumerable<Contract> lk_contractbase_createdby {
            get {
                return GetRelatedEntities<Contract>("lk_contractbase_createdby", null);
            }
            set {
                SetRelatedEntities("lk_contractbase_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_contractbase_modifiedby")]
        public IEnumerable<Contract> lk_contractbase_modifiedby {
            get {
                return GetRelatedEntities<Contract>("lk_contractbase_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_contractbase_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_customeraddress_createdonbehalfby")]
        public IEnumerable<CustomerAddress> lk_customeraddress_createdonbehalfby {
            get {
                return GetRelatedEntities<CustomerAddress>("lk_customeraddress_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_customeraddress_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_customeraddress_modifiedonbehalfby")]
        public IEnumerable<CustomerAddress> lk_customeraddress_modifiedonbehalfby {
            get {
                return GetRelatedEntities<CustomerAddress>("lk_customeraddress_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_customeraddress_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_customeraddressbase_createdby")]
        public IEnumerable<CustomerAddress> lk_customeraddressbase_createdby {
            get {
                return GetRelatedEntities<CustomerAddress>("lk_customeraddressbase_createdby", null);
            }
            set {
                SetRelatedEntities("lk_customeraddressbase_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_customeraddressbase_modifiedby")]
        public IEnumerable<CustomerAddress> lk_customeraddressbase_modifiedby {
            get {
                return GetRelatedEntities<CustomerAddress>("lk_customeraddressbase_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_customeraddressbase_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dg_animal_createdby")]
        public IEnumerable<dg_animal> lk_dg_animal_createdby {
            get {
                return GetRelatedEntities<dg_animal>("lk_dg_animal_createdby", null);
            }
            set {
                SetRelatedEntities("lk_dg_animal_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dg_animal_createdonbehalfby")]
        public IEnumerable<dg_animal> lk_dg_animal_createdonbehalfby {
            get {
                return GetRelatedEntities<dg_animal>("lk_dg_animal_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_dg_animal_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dg_animal_modifiedby")]
        public IEnumerable<dg_animal> lk_dg_animal_modifiedby {
            get {
                return GetRelatedEntities<dg_animal>("lk_dg_animal_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_dg_animal_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dg_animal_modifiedonbehalfby")]
        public IEnumerable<dg_animal> lk_dg_animal_modifiedonbehalfby {
            get {
                return GetRelatedEntities<dg_animal>("lk_dg_animal_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_dg_animal_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dg_animalfood_createdby")]
        public IEnumerable<dg_animalfood> lk_dg_animalfood_createdby {
            get {
                return GetRelatedEntities<dg_animalfood>("lk_dg_animalfood_createdby", null);
            }
            set {
                SetRelatedEntities("lk_dg_animalfood_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dg_animalfood_createdonbehalfby")]
        public IEnumerable<dg_animalfood> lk_dg_animalfood_createdonbehalfby {
            get {
                return GetRelatedEntities<dg_animalfood>("lk_dg_animalfood_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_dg_animalfood_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dg_animalfood_modifiedby")]
        public IEnumerable<dg_animalfood> lk_dg_animalfood_modifiedby {
            get {
                return GetRelatedEntities<dg_animalfood>("lk_dg_animalfood_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_dg_animalfood_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dg_animalfood_modifiedonbehalfby")]
        public IEnumerable<dg_animalfood> lk_dg_animalfood_modifiedonbehalfby {
            get {
                return GetRelatedEntities<dg_animalfood>("lk_dg_animalfood_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_dg_animalfood_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dg_bus_createdby")]
        public IEnumerable<dg_bus> lk_dg_bus_createdby {
            get {
                return GetRelatedEntities<dg_bus>("lk_dg_bus_createdby", null);
            }
            set {
                SetRelatedEntities("lk_dg_bus_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dg_bus_createdonbehalfby")]
        public IEnumerable<dg_bus> lk_dg_bus_createdonbehalfby {
            get {
                return GetRelatedEntities<dg_bus>("lk_dg_bus_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_dg_bus_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dg_bus_modifiedby")]
        public IEnumerable<dg_bus> lk_dg_bus_modifiedby {
            get {
                return GetRelatedEntities<dg_bus>("lk_dg_bus_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_dg_bus_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dg_bus_modifiedonbehalfby")]
        public IEnumerable<dg_bus> lk_dg_bus_modifiedonbehalfby {
            get {
                return GetRelatedEntities<dg_bus>("lk_dg_bus_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_dg_bus_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dg_child_createdby")]
        public IEnumerable<dg_child> lk_dg_child_createdby {
            get {
                return GetRelatedEntities<dg_child>("lk_dg_child_createdby", null);
            }
            set {
                SetRelatedEntities("lk_dg_child_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dg_child_createdonbehalfby")]
        public IEnumerable<dg_child> lk_dg_child_createdonbehalfby {
            get {
                return GetRelatedEntities<dg_child>("lk_dg_child_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_dg_child_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dg_child_modifiedby")]
        public IEnumerable<dg_child> lk_dg_child_modifiedby {
            get {
                return GetRelatedEntities<dg_child>("lk_dg_child_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_dg_child_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dg_child_modifiedonbehalfby")]
        public IEnumerable<dg_child> lk_dg_child_modifiedonbehalfby {
            get {
                return GetRelatedEntities<dg_child>("lk_dg_child_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_dg_child_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dg_configuration_createdby")]
        public IEnumerable<dg_configuration> lk_dg_configuration_createdby {
            get {
                return GetRelatedEntities<dg_configuration>("lk_dg_configuration_createdby", null);
            }
            set {
                SetRelatedEntities("lk_dg_configuration_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dg_configuration_createdonbehalfby")]
        public IEnumerable<dg_configuration> lk_dg_configuration_createdonbehalfby {
            get {
                return GetRelatedEntities<dg_configuration>("lk_dg_configuration_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_dg_configuration_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dg_configuration_modifiedby")]
        public IEnumerable<dg_configuration> lk_dg_configuration_modifiedby {
            get {
                return GetRelatedEntities<dg_configuration>("lk_dg_configuration_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_dg_configuration_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dg_configuration_modifiedonbehalfby")]
        public IEnumerable<dg_configuration> lk_dg_configuration_modifiedonbehalfby {
            get {
                return GetRelatedEntities<dg_configuration>("lk_dg_configuration_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_dg_configuration_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dg_country_createdby")]
        public IEnumerable<dg_country> lk_dg_country_createdby {
            get {
                return GetRelatedEntities<dg_country>("lk_dg_country_createdby", null);
            }
            set {
                SetRelatedEntities("lk_dg_country_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dg_country_createdonbehalfby")]
        public IEnumerable<dg_country> lk_dg_country_createdonbehalfby {
            get {
                return GetRelatedEntities<dg_country>("lk_dg_country_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_dg_country_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dg_country_modifiedby")]
        public IEnumerable<dg_country> lk_dg_country_modifiedby {
            get {
                return GetRelatedEntities<dg_country>("lk_dg_country_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_dg_country_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dg_country_modifiedonbehalfby")]
        public IEnumerable<dg_country> lk_dg_country_modifiedonbehalfby {
            get {
                return GetRelatedEntities<dg_country>("lk_dg_country_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_dg_country_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dg_event_createdby")]
        public IEnumerable<dg_event> lk_dg_event_createdby {
            get {
                return GetRelatedEntities<dg_event>("lk_dg_event_createdby", null);
            }
            set {
                SetRelatedEntities("lk_dg_event_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dg_event_createdonbehalfby")]
        public IEnumerable<dg_event> lk_dg_event_createdonbehalfby {
            get {
                return GetRelatedEntities<dg_event>("lk_dg_event_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_dg_event_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dg_event_modifiedby")]
        public IEnumerable<dg_event> lk_dg_event_modifiedby {
            get {
                return GetRelatedEntities<dg_event>("lk_dg_event_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_dg_event_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dg_event_modifiedonbehalfby")]
        public IEnumerable<dg_event> lk_dg_event_modifiedonbehalfby {
            get {
                return GetRelatedEntities<dg_event>("lk_dg_event_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_dg_event_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dg_field_createdby")]
        public IEnumerable<dg_field> lk_dg_field_createdby {
            get {
                return GetRelatedEntities<dg_field>("lk_dg_field_createdby", null);
            }
            set {
                SetRelatedEntities("lk_dg_field_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dg_field_createdonbehalfby")]
        public IEnumerable<dg_field> lk_dg_field_createdonbehalfby {
            get {
                return GetRelatedEntities<dg_field>("lk_dg_field_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_dg_field_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dg_field_modifiedby")]
        public IEnumerable<dg_field> lk_dg_field_modifiedby {
            get {
                return GetRelatedEntities<dg_field>("lk_dg_field_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_dg_field_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dg_field_modifiedonbehalfby")]
        public IEnumerable<dg_field> lk_dg_field_modifiedonbehalfby {
            get {
                return GetRelatedEntities<dg_field>("lk_dg_field_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_dg_field_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dg_food_createdby")]
        public IEnumerable<dg_food> lk_dg_food_createdby {
            get {
                return GetRelatedEntities<dg_food>("lk_dg_food_createdby", null);
            }
            set {
                SetRelatedEntities("lk_dg_food_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dg_food_createdonbehalfby")]
        public IEnumerable<dg_food> lk_dg_food_createdonbehalfby {
            get {
                return GetRelatedEntities<dg_food>("lk_dg_food_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_dg_food_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dg_food_modifiedby")]
        public IEnumerable<dg_food> lk_dg_food_modifiedby {
            get {
                return GetRelatedEntities<dg_food>("lk_dg_food_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_dg_food_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dg_food_modifiedonbehalfby")]
        public IEnumerable<dg_food> lk_dg_food_modifiedonbehalfby {
            get {
                return GetRelatedEntities<dg_food>("lk_dg_food_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_dg_food_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dg_man_createdby")]
        public IEnumerable<dg_man> lk_dg_man_createdby {
            get {
                return GetRelatedEntities<dg_man>("lk_dg_man_createdby", null);
            }
            set {
                SetRelatedEntities("lk_dg_man_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dg_man_createdonbehalfby")]
        public IEnumerable<dg_man> lk_dg_man_createdonbehalfby {
            get {
                return GetRelatedEntities<dg_man>("lk_dg_man_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_dg_man_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dg_man_modifiedby")]
        public IEnumerable<dg_man> lk_dg_man_modifiedby {
            get {
                return GetRelatedEntities<dg_man>("lk_dg_man_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_dg_man_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dg_man_modifiedonbehalfby")]
        public IEnumerable<dg_man> lk_dg_man_modifiedonbehalfby {
            get {
                return GetRelatedEntities<dg_man>("lk_dg_man_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_dg_man_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dg_mild_createdby")]
        public IEnumerable<dg_mild> lk_dg_mild_createdby {
            get {
                return GetRelatedEntities<dg_mild>("lk_dg_mild_createdby", null);
            }
            set {
                SetRelatedEntities("lk_dg_mild_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dg_mild_createdonbehalfby")]
        public IEnumerable<dg_mild> lk_dg_mild_createdonbehalfby {
            get {
                return GetRelatedEntities<dg_mild>("lk_dg_mild_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_dg_mild_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dg_mild_modifiedby")]
        public IEnumerable<dg_mild> lk_dg_mild_modifiedby {
            get {
                return GetRelatedEntities<dg_mild>("lk_dg_mild_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_dg_mild_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dg_mild_modifiedonbehalfby")]
        public IEnumerable<dg_mild> lk_dg_mild_modifiedonbehalfby {
            get {
                return GetRelatedEntities<dg_mild>("lk_dg_mild_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_dg_mild_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dg_participant_createdby")]
        public IEnumerable<dg_participant> lk_dg_participant_createdby {
            get {
                return GetRelatedEntities<dg_participant>("lk_dg_participant_createdby", null);
            }
            set {
                SetRelatedEntities("lk_dg_participant_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dg_participant_createdonbehalfby")]
        public IEnumerable<dg_participant> lk_dg_participant_createdonbehalfby {
            get {
                return GetRelatedEntities<dg_participant>("lk_dg_participant_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_dg_participant_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dg_participant_modifiedby")]
        public IEnumerable<dg_participant> lk_dg_participant_modifiedby {
            get {
                return GetRelatedEntities<dg_participant>("lk_dg_participant_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_dg_participant_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dg_participant_modifiedonbehalfby")]
        public IEnumerable<dg_participant> lk_dg_participant_modifiedonbehalfby {
            get {
                return GetRelatedEntities<dg_participant>("lk_dg_participant_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_dg_participant_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dg_secroletest_createdby")]
        public IEnumerable<dg_secroletest> lk_dg_secroletest_createdby {
            get {
                return GetRelatedEntities<dg_secroletest>("lk_dg_secroletest_createdby", null);
            }
            set {
                SetRelatedEntities("lk_dg_secroletest_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dg_secroletest_createdonbehalfby")]
        public IEnumerable<dg_secroletest> lk_dg_secroletest_createdonbehalfby {
            get {
                return GetRelatedEntities<dg_secroletest>("lk_dg_secroletest_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_dg_secroletest_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dg_secroletest_modifiedby")]
        public IEnumerable<dg_secroletest> lk_dg_secroletest_modifiedby {
            get {
                return GetRelatedEntities<dg_secroletest>("lk_dg_secroletest_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_dg_secroletest_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dg_secroletest_modifiedonbehalfby")]
        public IEnumerable<dg_secroletest> lk_dg_secroletest_modifiedonbehalfby {
            get {
                return GetRelatedEntities<dg_secroletest>("lk_dg_secroletest_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_dg_secroletest_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dg_sheep_createdby")]
        public IEnumerable<dg_sheep> lk_dg_sheep_createdby {
            get {
                return GetRelatedEntities<dg_sheep>("lk_dg_sheep_createdby", null);
            }
            set {
                SetRelatedEntities("lk_dg_sheep_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dg_sheep_createdonbehalfby")]
        public IEnumerable<dg_sheep> lk_dg_sheep_createdonbehalfby {
            get {
                return GetRelatedEntities<dg_sheep>("lk_dg_sheep_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_dg_sheep_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dg_sheep_modifiedby")]
        public IEnumerable<dg_sheep> lk_dg_sheep_modifiedby {
            get {
                return GetRelatedEntities<dg_sheep>("lk_dg_sheep_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_dg_sheep_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dg_sheep_modifiedonbehalfby")]
        public IEnumerable<dg_sheep> lk_dg_sheep_modifiedonbehalfby {
            get {
                return GetRelatedEntities<dg_sheep>("lk_dg_sheep_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_dg_sheep_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dg_tooth_createdby")]
        public IEnumerable<dg_tooth> lk_dg_tooth_createdby {
            get {
                return GetRelatedEntities<dg_tooth>("lk_dg_tooth_createdby", null);
            }
            set {
                SetRelatedEntities("lk_dg_tooth_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dg_tooth_createdonbehalfby")]
        public IEnumerable<dg_tooth> lk_dg_tooth_createdonbehalfby {
            get {
                return GetRelatedEntities<dg_tooth>("lk_dg_tooth_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_dg_tooth_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dg_tooth_modifiedby")]
        public IEnumerable<dg_tooth> lk_dg_tooth_modifiedby {
            get {
                return GetRelatedEntities<dg_tooth>("lk_dg_tooth_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_dg_tooth_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dg_tooth_modifiedonbehalfby")]
        public IEnumerable<dg_tooth> lk_dg_tooth_modifiedonbehalfby {
            get {
                return GetRelatedEntities<dg_tooth>("lk_dg_tooth_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_dg_tooth_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dg_zipcodecity_createdby")]
        public IEnumerable<dg_zipCodeCity> lk_dg_zipcodecity_createdby {
            get {
                return GetRelatedEntities<dg_zipCodeCity>("lk_dg_zipcodecity_createdby", null);
            }
            set {
                SetRelatedEntities("lk_dg_zipcodecity_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dg_zipcodecity_createdonbehalfby")]
        public IEnumerable<dg_zipCodeCity> lk_dg_zipcodecity_createdonbehalfby {
            get {
                return GetRelatedEntities<dg_zipCodeCity>("lk_dg_zipcodecity_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_dg_zipcodecity_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dg_zipcodecity_modifiedby")]
        public IEnumerable<dg_zipCodeCity> lk_dg_zipcodecity_modifiedby {
            get {
                return GetRelatedEntities<dg_zipCodeCity>("lk_dg_zipcodecity_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_dg_zipcodecity_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dg_zipcodecity_modifiedonbehalfby")]
        public IEnumerable<dg_zipCodeCity> lk_dg_zipcodecity_modifiedonbehalfby {
            get {
                return GetRelatedEntities<dg_zipCodeCity>("lk_dg_zipcodecity_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_dg_zipcodecity_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_email_createdby")]
        public IEnumerable<Email> lk_email_createdby {
            get {
                return GetRelatedEntities<Email>("lk_email_createdby", null);
            }
            set {
                SetRelatedEntities("lk_email_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_email_createdonbehalfby")]
        public IEnumerable<Email> lk_email_createdonbehalfby {
            get {
                return GetRelatedEntities<Email>("lk_email_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_email_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_email_modifiedby")]
        public IEnumerable<Email> lk_email_modifiedby {
            get {
                return GetRelatedEntities<Email>("lk_email_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_email_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_email_modifiedonbehalfby")]
        public IEnumerable<Email> lk_email_modifiedonbehalfby {
            get {
                return GetRelatedEntities<Email>("lk_email_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_email_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_emailserverprofile_createdby")]
        public IEnumerable<EmailServerProfile> lk_emailserverprofile_createdby {
            get {
                return GetRelatedEntities<EmailServerProfile>("lk_emailserverprofile_createdby", null);
            }
            set {
                SetRelatedEntities("lk_emailserverprofile_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_emailserverprofile_createdonbehalfby")]
        public IEnumerable<EmailServerProfile> lk_emailserverprofile_createdonbehalfby {
            get {
                return GetRelatedEntities<EmailServerProfile>("lk_emailserverprofile_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_emailserverprofile_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_emailserverprofile_modifiedby")]
        public IEnumerable<EmailServerProfile> lk_emailserverprofile_modifiedby {
            get {
                return GetRelatedEntities<EmailServerProfile>("lk_emailserverprofile_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_emailserverprofile_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_emailserverprofile_modifiedonbehalfby")]
        public IEnumerable<EmailServerProfile> lk_emailserverprofile_modifiedonbehalfby {
            get {
                return GetRelatedEntities<EmailServerProfile>("lk_emailserverprofile_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_emailserverprofile_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_entitlement_createdby")]
        public IEnumerable<Entitlement> lk_entitlement_createdby {
            get {
                return GetRelatedEntities<Entitlement>("lk_entitlement_createdby", null);
            }
            set {
                SetRelatedEntities("lk_entitlement_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_entitlement_createdonbehalfby")]
        public IEnumerable<Entitlement> lk_entitlement_createdonbehalfby {
            get {
                return GetRelatedEntities<Entitlement>("lk_entitlement_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_entitlement_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_entitlement_modifiedby")]
        public IEnumerable<Entitlement> lk_entitlement_modifiedby {
            get {
                return GetRelatedEntities<Entitlement>("lk_entitlement_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_entitlement_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_entitlement_modifiedonbehalfby")]
        public IEnumerable<Entitlement> lk_entitlement_modifiedonbehalfby {
            get {
                return GetRelatedEntities<Entitlement>("lk_entitlement_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_entitlement_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_fax_createdby")]
        public IEnumerable<Fax> lk_fax_createdby {
            get {
                return GetRelatedEntities<Fax>("lk_fax_createdby", null);
            }
            set {
                SetRelatedEntities("lk_fax_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_fax_createdonbehalfby")]
        public IEnumerable<Fax> lk_fax_createdonbehalfby {
            get {
                return GetRelatedEntities<Fax>("lk_fax_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_fax_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_fax_modifiedby")]
        public IEnumerable<Fax> lk_fax_modifiedby {
            get {
                return GetRelatedEntities<Fax>("lk_fax_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_fax_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_fax_modifiedonbehalfby")]
        public IEnumerable<Fax> lk_fax_modifiedonbehalfby {
            get {
                return GetRelatedEntities<Fax>("lk_fax_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_fax_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_goal_createdby")]
        public IEnumerable<Goal> lk_goal_createdby {
            get {
                return GetRelatedEntities<Goal>("lk_goal_createdby", null);
            }
            set {
                SetRelatedEntities("lk_goal_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_goal_createdonbehalfby")]
        public IEnumerable<Goal> lk_goal_createdonbehalfby {
            get {
                return GetRelatedEntities<Goal>("lk_goal_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_goal_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_goal_modifiedby")]
        public IEnumerable<Goal> lk_goal_modifiedby {
            get {
                return GetRelatedEntities<Goal>("lk_goal_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_goal_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_goal_modifiedonbehalfby")]
        public IEnumerable<Goal> lk_goal_modifiedonbehalfby {
            get {
                return GetRelatedEntities<Goal>("lk_goal_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_goal_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_incidentbase_createdby")]
        public IEnumerable<Incident> lk_incidentbase_createdby {
            get {
                return GetRelatedEntities<Incident>("lk_incidentbase_createdby", null);
            }
            set {
                SetRelatedEntities("lk_incidentbase_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_incidentbase_createdonbehalfby")]
        public IEnumerable<Incident> lk_incidentbase_createdonbehalfby {
            get {
                return GetRelatedEntities<Incident>("lk_incidentbase_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_incidentbase_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_incidentbase_modifiedby")]
        public IEnumerable<Incident> lk_incidentbase_modifiedby {
            get {
                return GetRelatedEntities<Incident>("lk_incidentbase_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_incidentbase_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_incidentbase_modifiedonbehalfby")]
        public IEnumerable<Incident> lk_incidentbase_modifiedonbehalfby {
            get {
                return GetRelatedEntities<Incident>("lk_incidentbase_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_incidentbase_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_incidentresolution_createdby")]
        public IEnumerable<IncidentResolution> lk_incidentresolution_createdby {
            get {
                return GetRelatedEntities<IncidentResolution>("lk_incidentresolution_createdby", null);
            }
            set {
                SetRelatedEntities("lk_incidentresolution_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_incidentresolution_createdonbehalfby")]
        public IEnumerable<IncidentResolution> lk_incidentresolution_createdonbehalfby {
            get {
                return GetRelatedEntities<IncidentResolution>("lk_incidentresolution_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_incidentresolution_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_incidentresolution_modifiedby")]
        public IEnumerable<IncidentResolution> lk_incidentresolution_modifiedby {
            get {
                return GetRelatedEntities<IncidentResolution>("lk_incidentresolution_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_incidentresolution_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_incidentresolution_modifiedonbehalfby")]
        public IEnumerable<IncidentResolution> lk_incidentresolution_modifiedonbehalfby {
            get {
                return GetRelatedEntities<IncidentResolution>("lk_incidentresolution_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_incidentresolution_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_invoice_createdonbehalfby")]
        public IEnumerable<Invoice> lk_invoice_createdonbehalfby {
            get {
                return GetRelatedEntities<Invoice>("lk_invoice_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_invoice_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_invoice_modifiedonbehalfby")]
        public IEnumerable<Invoice> lk_invoice_modifiedonbehalfby {
            get {
                return GetRelatedEntities<Invoice>("lk_invoice_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_invoice_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_invoicebase_createdby")]
        public IEnumerable<Invoice> lk_invoicebase_createdby {
            get {
                return GetRelatedEntities<Invoice>("lk_invoicebase_createdby", null);
            }
            set {
                SetRelatedEntities("lk_invoicebase_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_invoicebase_modifiedby")]
        public IEnumerable<Invoice> lk_invoicebase_modifiedby {
            get {
                return GetRelatedEntities<Invoice>("lk_invoicebase_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_invoicebase_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_knowledgearticle_createdby")]
        public IEnumerable<KnowledgeArticle> lk_knowledgearticle_createdby {
            get {
                return GetRelatedEntities<KnowledgeArticle>("lk_knowledgearticle_createdby", null);
            }
            set {
                SetRelatedEntities("lk_knowledgearticle_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_knowledgearticle_createdonbehalfby")]
        public IEnumerable<KnowledgeArticle> lk_knowledgearticle_createdonbehalfby {
            get {
                return GetRelatedEntities<KnowledgeArticle>("lk_knowledgearticle_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_knowledgearticle_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_knowledgearticle_modifiedby")]
        public IEnumerable<KnowledgeArticle> lk_knowledgearticle_modifiedby {
            get {
                return GetRelatedEntities<KnowledgeArticle>("lk_knowledgearticle_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_knowledgearticle_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_knowledgearticle_modifiedonbehalfby")]
        public IEnumerable<KnowledgeArticle> lk_knowledgearticle_modifiedonbehalfby {
            get {
                return GetRelatedEntities<KnowledgeArticle>("lk_knowledgearticle_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_knowledgearticle_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_lead_createdonbehalfby")]
        public IEnumerable<Lead> lk_lead_createdonbehalfby {
            get {
                return GetRelatedEntities<Lead>("lk_lead_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_lead_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_lead_modifiedonbehalfby")]
        public IEnumerable<Lead> lk_lead_modifiedonbehalfby {
            get {
                return GetRelatedEntities<Lead>("lk_lead_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_lead_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_leadbase_createdby")]
        public IEnumerable<Lead> lk_leadbase_createdby {
            get {
                return GetRelatedEntities<Lead>("lk_leadbase_createdby", null);
            }
            set {
                SetRelatedEntities("lk_leadbase_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_leadbase_modifiedby")]
        public IEnumerable<Lead> lk_leadbase_modifiedby {
            get {
                return GetRelatedEntities<Lead>("lk_leadbase_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_leadbase_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_letter_createdby")]
        public IEnumerable<Letter> lk_letter_createdby {
            get {
                return GetRelatedEntities<Letter>("lk_letter_createdby", null);
            }
            set {
                SetRelatedEntities("lk_letter_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_letter_createdonbehalfby")]
        public IEnumerable<Letter> lk_letter_createdonbehalfby {
            get {
                return GetRelatedEntities<Letter>("lk_letter_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_letter_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_letter_modifiedby")]
        public IEnumerable<Letter> lk_letter_modifiedby {
            get {
                return GetRelatedEntities<Letter>("lk_letter_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_letter_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_letter_modifiedonbehalfby")]
        public IEnumerable<Letter> lk_letter_modifiedonbehalfby {
            get {
                return GetRelatedEntities<Letter>("lk_letter_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_letter_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_list_createdby")]
        public IEnumerable<List> lk_list_createdby {
            get {
                return GetRelatedEntities<List>("lk_list_createdby", null);
            }
            set {
                SetRelatedEntities("lk_list_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_list_createdonbehalfby")]
        public IEnumerable<List> lk_list_createdonbehalfby {
            get {
                return GetRelatedEntities<List>("lk_list_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_list_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_list_modifiedby")]
        public IEnumerable<List> lk_list_modifiedby {
            get {
                return GetRelatedEntities<List>("lk_list_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_list_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_list_modifiedonbehalfby")]
        public IEnumerable<List> lk_list_modifiedonbehalfby {
            get {
                return GetRelatedEntities<List>("lk_list_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_list_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_listmember_createdby")]
        public IEnumerable<ListMember> lk_listmember_createdby {
            get {
                return GetRelatedEntities<ListMember>("lk_listmember_createdby", null);
            }
            set {
                SetRelatedEntities("lk_listmember_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_listmember_createdonbehalfby")]
        public IEnumerable<ListMember> lk_listmember_createdonbehalfby {
            get {
                return GetRelatedEntities<ListMember>("lk_listmember_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_listmember_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_listmember_modifiedby")]
        public IEnumerable<ListMember> lk_listmember_modifiedby {
            get {
                return GetRelatedEntities<ListMember>("lk_listmember_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_listmember_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_listmember_modifiedonbehalfby")]
        public IEnumerable<ListMember> lk_listmember_modifiedonbehalfby {
            get {
                return GetRelatedEntities<ListMember>("lk_listmember_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_listmember_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_mailbox_createdby")]
        public IEnumerable<Mailbox> lk_mailbox_createdby {
            get {
                return GetRelatedEntities<Mailbox>("lk_mailbox_createdby", null);
            }
            set {
                SetRelatedEntities("lk_mailbox_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_mailbox_createdonbehalfby")]
        public IEnumerable<Mailbox> lk_mailbox_createdonbehalfby {
            get {
                return GetRelatedEntities<Mailbox>("lk_mailbox_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_mailbox_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_mailbox_modifiedby")]
        public IEnumerable<Mailbox> lk_mailbox_modifiedby {
            get {
                return GetRelatedEntities<Mailbox>("lk_mailbox_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_mailbox_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_mailbox_modifiedonbehalfby")]
        public IEnumerable<Mailbox> lk_mailbox_modifiedonbehalfby {
            get {
                return GetRelatedEntities<Mailbox>("lk_mailbox_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_mailbox_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_msdyn_agreement_createdby")]
        public IEnumerable<msdyn_agreement> lk_msdyn_agreement_createdby {
            get {
                return GetRelatedEntities<msdyn_agreement>("lk_msdyn_agreement_createdby", null);
            }
            set {
                SetRelatedEntities("lk_msdyn_agreement_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_msdyn_agreement_createdonbehalfby")]
        public IEnumerable<msdyn_agreement> lk_msdyn_agreement_createdonbehalfby {
            get {
                return GetRelatedEntities<msdyn_agreement>("lk_msdyn_agreement_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_msdyn_agreement_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_msdyn_agreement_modifiedby")]
        public IEnumerable<msdyn_agreement> lk_msdyn_agreement_modifiedby {
            get {
                return GetRelatedEntities<msdyn_agreement>("lk_msdyn_agreement_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_msdyn_agreement_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_msdyn_agreement_modifiedonbehalfby")]
        public IEnumerable<msdyn_agreement> lk_msdyn_agreement_modifiedonbehalfby {
            get {
                return GetRelatedEntities<msdyn_agreement>("lk_msdyn_agreement_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_msdyn_agreement_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_msdyn_postalbum_createdby")]
        public IEnumerable<msdyn_PostAlbum> lk_msdyn_postalbum_createdby {
            get {
                return GetRelatedEntities<msdyn_PostAlbum>("lk_msdyn_postalbum_createdby", null);
            }
            set {
                SetRelatedEntities("lk_msdyn_postalbum_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_msdyn_postalbum_createdonbehalfby")]
        public IEnumerable<msdyn_PostAlbum> lk_msdyn_postalbum_createdonbehalfby {
            get {
                return GetRelatedEntities<msdyn_PostAlbum>("lk_msdyn_postalbum_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_msdyn_postalbum_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_msdyn_postalbum_modifiedby")]
        public IEnumerable<msdyn_PostAlbum> lk_msdyn_postalbum_modifiedby {
            get {
                return GetRelatedEntities<msdyn_PostAlbum>("lk_msdyn_postalbum_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_msdyn_postalbum_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_msdyn_postalbum_modifiedonbehalfby")]
        public IEnumerable<msdyn_PostAlbum> lk_msdyn_postalbum_modifiedonbehalfby {
            get {
                return GetRelatedEntities<msdyn_PostAlbum>("lk_msdyn_postalbum_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_msdyn_postalbum_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_msdyn_wallsavedqueryusersettings_createdby")]
        public IEnumerable<msdyn_wallsavedqueryusersettings> lk_msdyn_wallsavedqueryusersettings_createdby {
            get {
                return GetRelatedEntities<msdyn_wallsavedqueryusersettings>("lk_msdyn_wallsavedqueryusersettings_createdby", null);
            }
            set {
                SetRelatedEntities("lk_msdyn_wallsavedqueryusersettings_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_msdyn_wallsavedqueryusersettings_createdonbehalfby")]
        public IEnumerable<msdyn_wallsavedqueryusersettings> lk_msdyn_wallsavedqueryusersettings_createdonbehalfby {
            get {
                return GetRelatedEntities<msdyn_wallsavedqueryusersettings>("lk_msdyn_wallsavedqueryusersettings_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_msdyn_wallsavedqueryusersettings_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_msdyn_wallsavedqueryusersettings_modifiedby")]
        public IEnumerable<msdyn_wallsavedqueryusersettings> lk_msdyn_wallsavedqueryusersettings_modifiedby {
            get {
                return GetRelatedEntities<msdyn_wallsavedqueryusersettings>("lk_msdyn_wallsavedqueryusersettings_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_msdyn_wallsavedqueryusersettings_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_msdyn_wallsavedqueryusersettings_modifiedonbehalfby")]
        public IEnumerable<msdyn_wallsavedqueryusersettings> lk_msdyn_wallsavedqueryusersettings_modifiedonbehalfby {
            get {
                return GetRelatedEntities<msdyn_wallsavedqueryusersettings>("lk_msdyn_wallsavedqueryusersettings_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_msdyn_wallsavedqueryusersettings_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_opportunity_createdonbehalfby")]
        public IEnumerable<Opportunity> lk_opportunity_createdonbehalfby {
            get {
                return GetRelatedEntities<Opportunity>("lk_opportunity_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_opportunity_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_opportunity_modifiedonbehalfby")]
        public IEnumerable<Opportunity> lk_opportunity_modifiedonbehalfby {
            get {
                return GetRelatedEntities<Opportunity>("lk_opportunity_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_opportunity_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_opportunitybase_createdby")]
        public IEnumerable<Opportunity> lk_opportunitybase_createdby {
            get {
                return GetRelatedEntities<Opportunity>("lk_opportunitybase_createdby", null);
            }
            set {
                SetRelatedEntities("lk_opportunitybase_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_opportunitybase_modifiedby")]
        public IEnumerable<Opportunity> lk_opportunitybase_modifiedby {
            get {
                return GetRelatedEntities<Opportunity>("lk_opportunitybase_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_opportunitybase_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_opportunityclose_createdby")]
        public IEnumerable<OpportunityClose> lk_opportunityclose_createdby {
            get {
                return GetRelatedEntities<OpportunityClose>("lk_opportunityclose_createdby", null);
            }
            set {
                SetRelatedEntities("lk_opportunityclose_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_opportunityclose_createdonbehalfby")]
        public IEnumerable<OpportunityClose> lk_opportunityclose_createdonbehalfby {
            get {
                return GetRelatedEntities<OpportunityClose>("lk_opportunityclose_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_opportunityclose_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_opportunityclose_modifiedby")]
        public IEnumerable<OpportunityClose> lk_opportunityclose_modifiedby {
            get {
                return GetRelatedEntities<OpportunityClose>("lk_opportunityclose_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_opportunityclose_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_opportunityclose_modifiedonbehalfby")]
        public IEnumerable<OpportunityClose> lk_opportunityclose_modifiedonbehalfby {
            get {
                return GetRelatedEntities<OpportunityClose>("lk_opportunityclose_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_opportunityclose_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_opportunitysalesprocess_createdby")]
        public IEnumerable<OpportunitySalesProcess> lk_opportunitysalesprocess_createdby {
            get {
                return GetRelatedEntities<OpportunitySalesProcess>("lk_opportunitysalesprocess_createdby", null);
            }
            set {
                SetRelatedEntities("lk_opportunitysalesprocess_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_opportunitysalesprocess_createdonbehalfby")]
        public IEnumerable<OpportunitySalesProcess> lk_opportunitysalesprocess_createdonbehalfby {
            get {
                return GetRelatedEntities<OpportunitySalesProcess>("lk_opportunitysalesprocess_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_opportunitysalesprocess_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_opportunitysalesprocess_modifiedby")]
        public IEnumerable<OpportunitySalesProcess> lk_opportunitysalesprocess_modifiedby {
            get {
                return GetRelatedEntities<OpportunitySalesProcess>("lk_opportunitysalesprocess_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_opportunitysalesprocess_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_opportunitysalesprocess_modifiedonbehalfby")]
        public IEnumerable<OpportunitySalesProcess> lk_opportunitysalesprocess_modifiedonbehalfby {
            get {
                return GetRelatedEntities<OpportunitySalesProcess>("lk_opportunitysalesprocess_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_opportunitysalesprocess_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_organization_createdonbehalfby")]
        public IEnumerable<Organization> lk_organization_createdonbehalfby {
            get {
                return GetRelatedEntities<Organization>("lk_organization_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_organization_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_organization_modifiedonbehalfby")]
        public IEnumerable<Organization> lk_organization_modifiedonbehalfby {
            get {
                return GetRelatedEntities<Organization>("lk_organization_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_organization_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_organizationbase_createdby")]
        public IEnumerable<Organization> lk_organizationbase_createdby {
            get {
                return GetRelatedEntities<Organization>("lk_organizationbase_createdby", null);
            }
            set {
                SetRelatedEntities("lk_organizationbase_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_organizationbase_modifiedby")]
        public IEnumerable<Organization> lk_organizationbase_modifiedby {
            get {
                return GetRelatedEntities<Organization>("lk_organizationbase_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_organizationbase_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_phonecall_createdby")]
        public IEnumerable<PhoneCall> lk_phonecall_createdby {
            get {
                return GetRelatedEntities<PhoneCall>("lk_phonecall_createdby", null);
            }
            set {
                SetRelatedEntities("lk_phonecall_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_phonecall_createdonbehalfby")]
        public IEnumerable<PhoneCall> lk_phonecall_createdonbehalfby {
            get {
                return GetRelatedEntities<PhoneCall>("lk_phonecall_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_phonecall_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_phonecall_modifiedby")]
        public IEnumerable<PhoneCall> lk_phonecall_modifiedby {
            get {
                return GetRelatedEntities<PhoneCall>("lk_phonecall_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_phonecall_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_phonecall_modifiedonbehalfby")]
        public IEnumerable<PhoneCall> lk_phonecall_modifiedonbehalfby {
            get {
                return GetRelatedEntities<PhoneCall>("lk_phonecall_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_phonecall_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_queueitem_createdonbehalfby")]
        public IEnumerable<QueueItem> lk_queueitem_createdonbehalfby {
            get {
                return GetRelatedEntities<QueueItem>("lk_queueitem_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_queueitem_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_queueitem_modifiedonbehalfby")]
        public IEnumerable<QueueItem> lk_queueitem_modifiedonbehalfby {
            get {
                return GetRelatedEntities<QueueItem>("lk_queueitem_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_queueitem_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_queueitembase_createdby")]
        public IEnumerable<QueueItem> lk_queueitembase_createdby {
            get {
                return GetRelatedEntities<QueueItem>("lk_queueitembase_createdby", null);
            }
            set {
                SetRelatedEntities("lk_queueitembase_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_queueitembase_modifiedby")]
        public IEnumerable<QueueItem> lk_queueitembase_modifiedby {
            get {
                return GetRelatedEntities<QueueItem>("lk_queueitembase_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_queueitembase_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_queueitembase_workerid")]
        public IEnumerable<QueueItem> lk_queueitembase_workerid {
            get {
                return GetRelatedEntities<QueueItem>("lk_queueitembase_workerid", null);
            }
            set {
                SetRelatedEntities("lk_queueitembase_workerid", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_quote_createdonbehalfby")]
        public IEnumerable<Quote> lk_quote_createdonbehalfby {
            get {
                return GetRelatedEntities<Quote>("lk_quote_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_quote_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_quote_modifiedonbehalfby")]
        public IEnumerable<Quote> lk_quote_modifiedonbehalfby {
            get {
                return GetRelatedEntities<Quote>("lk_quote_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_quote_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_quotebase_createdby")]
        public IEnumerable<Quote> lk_quotebase_createdby {
            get {
                return GetRelatedEntities<Quote>("lk_quotebase_createdby", null);
            }
            set {
                SetRelatedEntities("lk_quotebase_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_quotebase_modifiedby")]
        public IEnumerable<Quote> lk_quotebase_modifiedby {
            get {
                return GetRelatedEntities<Quote>("lk_quotebase_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_quotebase_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_ratingmodel_createdby")]
        public IEnumerable<RatingModel> lk_ratingmodel_createdby {
            get {
                return GetRelatedEntities<RatingModel>("lk_ratingmodel_createdby", null);
            }
            set {
                SetRelatedEntities("lk_ratingmodel_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_ratingmodel_createdonbehalfby")]
        public IEnumerable<RatingModel> lk_ratingmodel_createdonbehalfby {
            get {
                return GetRelatedEntities<RatingModel>("lk_ratingmodel_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_ratingmodel_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_ratingmodel_modifiedby")]
        public IEnumerable<RatingModel> lk_ratingmodel_modifiedby {
            get {
                return GetRelatedEntities<RatingModel>("lk_ratingmodel_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_ratingmodel_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_ratingmodel_modifiedonbehalfby")]
        public IEnumerable<RatingModel> lk_ratingmodel_modifiedonbehalfby {
            get {
                return GetRelatedEntities<RatingModel>("lk_ratingmodel_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_ratingmodel_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_ratingvalue_createdby")]
        public IEnumerable<RatingValue> lk_ratingvalue_createdby {
            get {
                return GetRelatedEntities<RatingValue>("lk_ratingvalue_createdby", null);
            }
            set {
                SetRelatedEntities("lk_ratingvalue_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_ratingvalue_createdonbehalfby")]
        public IEnumerable<RatingValue> lk_ratingvalue_createdonbehalfby {
            get {
                return GetRelatedEntities<RatingValue>("lk_ratingvalue_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_ratingvalue_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_ratingvalue_modifiedby")]
        public IEnumerable<RatingValue> lk_ratingvalue_modifiedby {
            get {
                return GetRelatedEntities<RatingValue>("lk_ratingvalue_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_ratingvalue_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_ratingvalue_modifiedonbehalfby")]
        public IEnumerable<RatingValue> lk_ratingvalue_modifiedonbehalfby {
            get {
                return GetRelatedEntities<RatingValue>("lk_ratingvalue_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_ratingvalue_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_recurringappointmentmaster_createdby")]
        public IEnumerable<RecurringAppointmentMaster> lk_recurringappointmentmaster_createdby {
            get {
                return GetRelatedEntities<RecurringAppointmentMaster>("lk_recurringappointmentmaster_createdby", null);
            }
            set {
                SetRelatedEntities("lk_recurringappointmentmaster_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_recurringappointmentmaster_createdonbehalfby")]
        public IEnumerable<RecurringAppointmentMaster> lk_recurringappointmentmaster_createdonbehalfby {
            get {
                return GetRelatedEntities<RecurringAppointmentMaster>("lk_recurringappointmentmaster_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_recurringappointmentmaster_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_recurringappointmentmaster_modifiedby")]
        public IEnumerable<RecurringAppointmentMaster> lk_recurringappointmentmaster_modifiedby {
            get {
                return GetRelatedEntities<RecurringAppointmentMaster>("lk_recurringappointmentmaster_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_recurringappointmentmaster_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_recurringappointmentmaster_modifiedonbehalfby")]
        public IEnumerable<RecurringAppointmentMaster> lk_recurringappointmentmaster_modifiedonbehalfby {
            get {
                return GetRelatedEntities<RecurringAppointmentMaster>("lk_recurringappointmentmaster_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_recurringappointmentmaster_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_salesorder_createdonbehalfby")]
        public IEnumerable<SalesOrder> lk_salesorder_createdonbehalfby {
            get {
                return GetRelatedEntities<SalesOrder>("lk_salesorder_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_salesorder_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_salesorder_modifiedonbehalfby")]
        public IEnumerable<SalesOrder> lk_salesorder_modifiedonbehalfby {
            get {
                return GetRelatedEntities<SalesOrder>("lk_salesorder_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_salesorder_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_salesorderbase_createdby")]
        public IEnumerable<SalesOrder> lk_salesorderbase_createdby {
            get {
                return GetRelatedEntities<SalesOrder>("lk_salesorderbase_createdby", null);
            }
            set {
                SetRelatedEntities("lk_salesorderbase_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_salesorderbase_modifiedby")]
        public IEnumerable<SalesOrder> lk_salesorderbase_modifiedby {
            get {
                return GetRelatedEntities<SalesOrder>("lk_salesorderbase_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_salesorderbase_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_serviceappointment_createdby")]
        public IEnumerable<ServiceAppointment> lk_serviceappointment_createdby {
            get {
                return GetRelatedEntities<ServiceAppointment>("lk_serviceappointment_createdby", null);
            }
            set {
                SetRelatedEntities("lk_serviceappointment_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_serviceappointment_createdonbehalfby")]
        public IEnumerable<ServiceAppointment> lk_serviceappointment_createdonbehalfby {
            get {
                return GetRelatedEntities<ServiceAppointment>("lk_serviceappointment_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_serviceappointment_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_serviceappointment_modifiedby")]
        public IEnumerable<ServiceAppointment> lk_serviceappointment_modifiedby {
            get {
                return GetRelatedEntities<ServiceAppointment>("lk_serviceappointment_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_serviceappointment_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_serviceappointment_modifiedonbehalfby")]
        public IEnumerable<ServiceAppointment> lk_serviceappointment_modifiedonbehalfby {
            get {
                return GetRelatedEntities<ServiceAppointment>("lk_serviceappointment_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_serviceappointment_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_sharepointdocumentlocationbase_createdby")]
        public IEnumerable<SharePointDocumentLocation> lk_sharepointdocumentlocationbase_createdby {
            get {
                return GetRelatedEntities<SharePointDocumentLocation>("lk_sharepointdocumentlocationbase_createdby", null);
            }
            set {
                SetRelatedEntities("lk_sharepointdocumentlocationbase_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_sharepointdocumentlocationbase_createdonbehalfby")]
        public IEnumerable<SharePointDocumentLocation> lk_sharepointdocumentlocationbase_createdonbehalfby {
            get {
                return GetRelatedEntities<SharePointDocumentLocation>("lk_sharepointdocumentlocationbase_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_sharepointdocumentlocationbase_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_sharepointdocumentlocationbase_modifiedby")]
        public IEnumerable<SharePointDocumentLocation> lk_sharepointdocumentlocationbase_modifiedby {
            get {
                return GetRelatedEntities<SharePointDocumentLocation>("lk_sharepointdocumentlocationbase_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_sharepointdocumentlocationbase_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_sharepointdocumentlocationbase_modifiedonbehalfby")]
        public IEnumerable<SharePointDocumentLocation> lk_sharepointdocumentlocationbase_modifiedonbehalfby {
            get {
                return GetRelatedEntities<SharePointDocumentLocation>("lk_sharepointdocumentlocationbase_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_sharepointdocumentlocationbase_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_sharepointsitebase_createdby")]
        public IEnumerable<SharePointSite> lk_sharepointsitebase_createdby {
            get {
                return GetRelatedEntities<SharePointSite>("lk_sharepointsitebase_createdby", null);
            }
            set {
                SetRelatedEntities("lk_sharepointsitebase_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_sharepointsitebase_createdonbehalfby")]
        public IEnumerable<SharePointSite> lk_sharepointsitebase_createdonbehalfby {
            get {
                return GetRelatedEntities<SharePointSite>("lk_sharepointsitebase_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_sharepointsitebase_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_sharepointsitebase_modifiedby")]
        public IEnumerable<SharePointSite> lk_sharepointsitebase_modifiedby {
            get {
                return GetRelatedEntities<SharePointSite>("lk_sharepointsitebase_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_sharepointsitebase_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_sharepointsitebase_modifiedonbehalfby")]
        public IEnumerable<SharePointSite> lk_sharepointsitebase_modifiedonbehalfby {
            get {
                return GetRelatedEntities<SharePointSite>("lk_sharepointsitebase_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_sharepointsitebase_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_slabase_createdby")]
        public IEnumerable<SLA> lk_slabase_createdby {
            get {
                return GetRelatedEntities<SLA>("lk_slabase_createdby", null);
            }
            set {
                SetRelatedEntities("lk_slabase_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_slabase_createdonbehalfby")]
        public IEnumerable<SLA> lk_slabase_createdonbehalfby {
            get {
                return GetRelatedEntities<SLA>("lk_slabase_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_slabase_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_slabase_modifiedby")]
        public IEnumerable<SLA> lk_slabase_modifiedby {
            get {
                return GetRelatedEntities<SLA>("lk_slabase_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_slabase_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_slabase_modifiedonbehalfby")]
        public IEnumerable<SLA> lk_slabase_modifiedonbehalfby {
            get {
                return GetRelatedEntities<SLA>("lk_slabase_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_slabase_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_socialactivity_createdby")]
        public IEnumerable<SocialActivity> lk_socialactivity_createdby {
            get {
                return GetRelatedEntities<SocialActivity>("lk_socialactivity_createdby", null);
            }
            set {
                SetRelatedEntities("lk_socialactivity_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_socialactivity_modifiedby")]
        public IEnumerable<SocialActivity> lk_socialactivity_modifiedby {
            get {
                return GetRelatedEntities<SocialActivity>("lk_socialactivity_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_socialactivity_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_socialactivitybase_createdonbehalfby")]
        public IEnumerable<SocialActivity> lk_socialactivitybase_createdonbehalfby {
            get {
                return GetRelatedEntities<SocialActivity>("lk_socialactivitybase_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_socialactivitybase_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_socialactivitybase_modifiedonbehalfby")]
        public IEnumerable<SocialActivity> lk_socialactivitybase_modifiedonbehalfby {
            get {
                return GetRelatedEntities<SocialActivity>("lk_socialactivitybase_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_socialactivitybase_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_syncerrorbase_createdby")]
        public IEnumerable<SyncError> lk_syncerrorbase_createdby {
            get {
                return GetRelatedEntities<SyncError>("lk_syncerrorbase_createdby", null);
            }
            set {
                SetRelatedEntities("lk_syncerrorbase_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_syncerrorbase_createdonbehalfby")]
        public IEnumerable<SyncError> lk_syncerrorbase_createdonbehalfby {
            get {
                return GetRelatedEntities<SyncError>("lk_syncerrorbase_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_syncerrorbase_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_syncerrorbase_modifiedby")]
        public IEnumerable<SyncError> lk_syncerrorbase_modifiedby {
            get {
                return GetRelatedEntities<SyncError>("lk_syncerrorbase_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_syncerrorbase_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_syncerrorbase_modifiedonbehalfby")]
        public IEnumerable<SyncError> lk_syncerrorbase_modifiedonbehalfby {
            get {
                return GetRelatedEntities<SyncError>("lk_syncerrorbase_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_syncerrorbase_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_task_createdby")]
        public IEnumerable<Task> lk_task_createdby {
            get {
                return GetRelatedEntities<Task>("lk_task_createdby", null);
            }
            set {
                SetRelatedEntities("lk_task_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_task_createdonbehalfby")]
        public IEnumerable<Task> lk_task_createdonbehalfby {
            get {
                return GetRelatedEntities<Task>("lk_task_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_task_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_task_modifiedby")]
        public IEnumerable<Task> lk_task_modifiedby {
            get {
                return GetRelatedEntities<Task>("lk_task_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_task_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_task_modifiedonbehalfby")]
        public IEnumerable<Task> lk_task_modifiedonbehalfby {
            get {
                return GetRelatedEntities<Task>("lk_task_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_task_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_team_createdonbehalfby")]
        public IEnumerable<Team> lk_team_createdonbehalfby {
            get {
                return GetRelatedEntities<Team>("lk_team_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_team_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_team_modifiedonbehalfby")]
        public IEnumerable<Team> lk_team_modifiedonbehalfby {
            get {
                return GetRelatedEntities<Team>("lk_team_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_team_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_teambase_administratorid")]
        public IEnumerable<Team> lk_teambase_administratorid {
            get {
                return GetRelatedEntities<Team>("lk_teambase_administratorid", null);
            }
            set {
                SetRelatedEntities("lk_teambase_administratorid", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_teambase_createdby")]
        public IEnumerable<Team> lk_teambase_createdby {
            get {
                return GetRelatedEntities<Team>("lk_teambase_createdby", null);
            }
            set {
                SetRelatedEntities("lk_teambase_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_teambase_modifiedby")]
        public IEnumerable<Team> lk_teambase_modifiedby {
            get {
                return GetRelatedEntities<Team>("lk_teambase_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_teambase_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_transactioncurrency_createdonbehalfby")]
        public IEnumerable<TransactionCurrency> lk_transactioncurrency_createdonbehalfby {
            get {
                return GetRelatedEntities<TransactionCurrency>("lk_transactioncurrency_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_transactioncurrency_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_transactioncurrency_modifiedonbehalfby")]
        public IEnumerable<TransactionCurrency> lk_transactioncurrency_modifiedonbehalfby {
            get {
                return GetRelatedEntities<TransactionCurrency>("lk_transactioncurrency_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_transactioncurrency_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_transactioncurrencybase_createdby")]
        public IEnumerable<TransactionCurrency> lk_transactioncurrencybase_createdby {
            get {
                return GetRelatedEntities<TransactionCurrency>("lk_transactioncurrencybase_createdby", null);
            }
            set {
                SetRelatedEntities("lk_transactioncurrencybase_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_transactioncurrencybase_modifiedby")]
        public IEnumerable<TransactionCurrency> lk_transactioncurrencybase_modifiedby {
            get {
                return GetRelatedEntities<TransactionCurrency>("lk_transactioncurrencybase_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_transactioncurrencybase_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("mailbox_regarding_systemuser")]
        public IEnumerable<Mailbox> mailbox_regarding_systemuser {
            get {
                return GetRelatedEntities<Mailbox>("mailbox_regarding_systemuser", null);
            }
            set {
                SetRelatedEntities("mailbox_regarding_systemuser", null, value);
            }
        }
        
        [RelationshipSchemaName("modifiedby_connection")]
        public IEnumerable<Connection> modifiedby_connection {
            get {
                return GetRelatedEntities<Connection>("modifiedby_connection", null);
            }
            set {
                SetRelatedEntities("modifiedby_connection", null, value);
            }
        }
        
        [RelationshipSchemaName("msdyn_systemuser_wallsavedqueryusersettings_userid")]
        public IEnumerable<msdyn_wallsavedqueryusersettings> msdyn_systemuser_wallsavedqueryusersettings_userid {
            get {
                return GetRelatedEntities<msdyn_wallsavedqueryusersettings>("msdyn_systemuser_wallsavedqueryusersettings_userid", null);
            }
            set {
                SetRelatedEntities("msdyn_systemuser_wallsavedqueryusersettings_userid", null, value);
            }
        }
        
        [RelationshipSchemaName("opportunity_owning_user")]
        public IEnumerable<Opportunity> opportunity_owning_user {
            get {
                return GetRelatedEntities<Opportunity>("opportunity_owning_user", null);
            }
            set {
                SetRelatedEntities("opportunity_owning_user", null, value);
            }
        }
        
        [AttributeLogicalName("organizationid")]
        [RelationshipSchemaName("organization_system_users")]
        public Organization organization_system_users {
            get {
                return GetRelatedEntity<Organization>("organization_system_users", null);
            }
            set {
                SetRelatedEntity("organization_system_users", null, value);
            }
        }
        
        [RelationshipSchemaName("system_user_accounts")]
        public IEnumerable<Account> system_user_accounts {
            get {
                return GetRelatedEntities<Account>("system_user_accounts", null);
            }
            set {
                SetRelatedEntities("system_user_accounts", null, value);
            }
        }
        
        [RelationshipSchemaName("system_user_activity_parties")]
        public IEnumerable<ActivityParty> system_user_activity_parties {
            get {
                return GetRelatedEntities<ActivityParty>("system_user_activity_parties", null);
            }
            set {
                SetRelatedEntities("system_user_activity_parties", null, value);
            }
        }
        
        [RelationshipSchemaName("system_user_contacts")]
        public IEnumerable<Contact> system_user_contacts {
            get {
                return GetRelatedEntities<Contact>("system_user_contacts", null);
            }
            set {
                SetRelatedEntities("system_user_contacts", null, value);
            }
        }
        
        [RelationshipSchemaName("system_user_incidents")]
        public IEnumerable<Incident> system_user_incidents {
            get {
                return GetRelatedEntities<Incident>("system_user_incidents", null);
            }
            set {
                SetRelatedEntities("system_user_incidents", null, value);
            }
        }
        
        [RelationshipSchemaName("system_user_invoices")]
        public IEnumerable<Invoice> system_user_invoices {
            get {
                return GetRelatedEntities<Invoice>("system_user_invoices", null);
            }
            set {
                SetRelatedEntities("system_user_invoices", null, value);
            }
        }
        
        [RelationshipSchemaName("system_user_orders")]
        public IEnumerable<SalesOrder> system_user_orders {
            get {
                return GetRelatedEntities<SalesOrder>("system_user_orders", null);
            }
            set {
                SetRelatedEntities("system_user_orders", null, value);
            }
        }
        
        [RelationshipSchemaName("system_user_quotes")]
        public IEnumerable<Quote> system_user_quotes {
            get {
                return GetRelatedEntities<Quote>("system_user_quotes", null);
            }
            set {
                SetRelatedEntities("system_user_quotes", null, value);
            }
        }
        
        [RelationshipSchemaName("system_user_service_appointments")]
        public IEnumerable<ServiceAppointment> system_user_service_appointments {
            get {
                return GetRelatedEntities<ServiceAppointment>("system_user_service_appointments", null);
            }
            set {
                SetRelatedEntities("system_user_service_appointments", null, value);
            }
        }
        
        [RelationshipSchemaName("system_user_service_contracts")]
        public IEnumerable<Contract> system_user_service_contracts {
            get {
                return GetRelatedEntities<Contract>("system_user_service_contracts", null);
            }
            set {
                SetRelatedEntities("system_user_service_contracts", null, value);
            }
        }
        
        [RelationshipSchemaName("system_user_workflow")]
        public IEnumerable<Workflow> system_user_workflow {
            get {
                return GetRelatedEntities<Workflow>("system_user_workflow", null);
            }
            set {
                SetRelatedEntities("system_user_workflow", null, value);
            }
        }
        
        [RelationshipSchemaName("systemuser_bookableresource_UserId")]
        public IEnumerable<BookableResource> systemuser_bookableresource_UserId {
            get {
                return GetRelatedEntities<BookableResource>("systemuser_bookableresource_UserId", null);
            }
            set {
                SetRelatedEntities("systemuser_bookableresource_UserId", null, value);
            }
        }
        
        [RelationshipSchemaName("systemuser_connections1")]
        public IEnumerable<Connection> systemuser_connections1 {
            get {
                return GetRelatedEntities<Connection>("systemuser_connections1", null);
            }
            set {
                SetRelatedEntities("systemuser_connections1", null, value);
            }
        }
        
        [RelationshipSchemaName("systemuser_connections2")]
        public IEnumerable<Connection> systemuser_connections2 {
            get {
                return GetRelatedEntities<Connection>("systemuser_connections2", null);
            }
            set {
                SetRelatedEntities("systemuser_connections2", null, value);
            }
        }
        
        [AttributeLogicalName("defaultmailbox")]
        [RelationshipSchemaName("systemuser_defaultmailbox_mailbox")]
        public Mailbox systemuser_defaultmailbox_mailbox {
            get {
                return GetRelatedEntity<Mailbox>("systemuser_defaultmailbox_mailbox", null);
            }
            set {
                SetRelatedEntity("systemuser_defaultmailbox_mailbox", null, value);
            }
        }
        
        [RelationshipSchemaName("teammembership_association")]
        public IEnumerable<Team> teammembership_association {
            get {
                return GetRelatedEntities<Team>("teammembership_association", null);
            }
            set {
                SetRelatedEntities("teammembership_association", null, value);
            }
        }
        
        [RelationshipSchemaName("user_accounts")]
        public IEnumerable<Account> user_accounts {
            get {
                return GetRelatedEntities<Account>("user_accounts", null);
            }
            set {
                SetRelatedEntities("user_accounts", null, value);
            }
        }
        
        [RelationshipSchemaName("user_activity")]
        public IEnumerable<ActivityPointer> user_activity {
            get {
                return GetRelatedEntities<ActivityPointer>("user_activity", null);
            }
            set {
                SetRelatedEntities("user_activity", null, value);
            }
        }
        
        [RelationshipSchemaName("user_appointment")]
        public IEnumerable<Appointment> user_appointment {
            get {
                return GetRelatedEntities<Appointment>("user_appointment", null);
            }
            set {
                SetRelatedEntities("user_appointment", null, value);
            }
        }
        
        [RelationshipSchemaName("user_bookableresource")]
        public IEnumerable<BookableResource> user_bookableresource {
            get {
                return GetRelatedEntities<BookableResource>("user_bookableresource", null);
            }
            set {
                SetRelatedEntities("user_bookableresource", null, value);
            }
        }
        
        [RelationshipSchemaName("user_bookableresourcebooking")]
        public IEnumerable<BookableResourceBooking> user_bookableresourcebooking {
            get {
                return GetRelatedEntities<BookableResourceBooking>("user_bookableresourcebooking", null);
            }
            set {
                SetRelatedEntities("user_bookableresourcebooking", null, value);
            }
        }
        
        [RelationshipSchemaName("user_bookableresourcebookingheader")]
        public IEnumerable<BookableResourceBookingHeader> user_bookableresourcebookingheader {
            get {
                return GetRelatedEntities<BookableResourceBookingHeader>("user_bookableresourcebookingheader", null);
            }
            set {
                SetRelatedEntities("user_bookableresourcebookingheader", null, value);
            }
        }
        
        [RelationshipSchemaName("user_bookableresourcecategory")]
        public IEnumerable<BookableResourceCategory> user_bookableresourcecategory {
            get {
                return GetRelatedEntities<BookableResourceCategory>("user_bookableresourcecategory", null);
            }
            set {
                SetRelatedEntities("user_bookableresourcecategory", null, value);
            }
        }
        
        [RelationshipSchemaName("user_bookableresourcecategoryassn")]
        public IEnumerable<BookableResourceCategoryAssn> user_bookableresourcecategoryassn {
            get {
                return GetRelatedEntities<BookableResourceCategoryAssn>("user_bookableresourcecategoryassn", null);
            }
            set {
                SetRelatedEntities("user_bookableresourcecategoryassn", null, value);
            }
        }
        
        [RelationshipSchemaName("user_bookableresourcecharacteristic")]
        public IEnumerable<BookableResourceCharacteristic> user_bookableresourcecharacteristic {
            get {
                return GetRelatedEntities<BookableResourceCharacteristic>("user_bookableresourcecharacteristic", null);
            }
            set {
                SetRelatedEntities("user_bookableresourcecharacteristic", null, value);
            }
        }
        
        [RelationshipSchemaName("user_bookableresourcegroup")]
        public IEnumerable<BookableResourceGroup> user_bookableresourcegroup {
            get {
                return GetRelatedEntities<BookableResourceGroup>("user_bookableresourcegroup", null);
            }
            set {
                SetRelatedEntities("user_bookableresourcegroup", null, value);
            }
        }
        
        [RelationshipSchemaName("user_bookingstatus")]
        public IEnumerable<BookingStatus> user_bookingstatus {
            get {
                return GetRelatedEntities<BookingStatus>("user_bookingstatus", null);
            }
            set {
                SetRelatedEntities("user_bookingstatus", null, value);
            }
        }
        
        [RelationshipSchemaName("user_bulkoperationlog")]
        public IEnumerable<BulkOperationLog> user_bulkoperationlog {
            get {
                return GetRelatedEntities<BulkOperationLog>("user_bulkoperationlog", null);
            }
            set {
                SetRelatedEntities("user_bulkoperationlog", null, value);
            }
        }
        
        [RelationshipSchemaName("user_campaignactivity")]
        public IEnumerable<CampaignActivity> user_campaignactivity {
            get {
                return GetRelatedEntities<CampaignActivity>("user_campaignactivity", null);
            }
            set {
                SetRelatedEntities("user_campaignactivity", null, value);
            }
        }
        
        [RelationshipSchemaName("user_campaignresponse")]
        public IEnumerable<CampaignResponse> user_campaignresponse {
            get {
                return GetRelatedEntities<CampaignResponse>("user_campaignresponse", null);
            }
            set {
                SetRelatedEntities("user_campaignresponse", null, value);
            }
        }
        
        [RelationshipSchemaName("user_characteristic")]
        public IEnumerable<Characteristic> user_characteristic {
            get {
                return GetRelatedEntities<Characteristic>("user_characteristic", null);
            }
            set {
                SetRelatedEntities("user_characteristic", null, value);
            }
        }
        
        [RelationshipSchemaName("user_dg_animal")]
        public IEnumerable<dg_animal> user_dg_animal {
            get {
                return GetRelatedEntities<dg_animal>("user_dg_animal", null);
            }
            set {
                SetRelatedEntities("user_dg_animal", null, value);
            }
        }
        
        [RelationshipSchemaName("user_dg_animalfood")]
        public IEnumerable<dg_animalfood> user_dg_animalfood {
            get {
                return GetRelatedEntities<dg_animalfood>("user_dg_animalfood", null);
            }
            set {
                SetRelatedEntities("user_dg_animalfood", null, value);
            }
        }
        
        [RelationshipSchemaName("user_dg_bus")]
        public IEnumerable<dg_bus> user_dg_bus {
            get {
                return GetRelatedEntities<dg_bus>("user_dg_bus", null);
            }
            set {
                SetRelatedEntities("user_dg_bus", null, value);
            }
        }
        
        [RelationshipSchemaName("user_dg_child")]
        public IEnumerable<dg_child> user_dg_child {
            get {
                return GetRelatedEntities<dg_child>("user_dg_child", null);
            }
            set {
                SetRelatedEntities("user_dg_child", null, value);
            }
        }
        
        [RelationshipSchemaName("user_dg_configuration")]
        public IEnumerable<dg_configuration> user_dg_configuration {
            get {
                return GetRelatedEntities<dg_configuration>("user_dg_configuration", null);
            }
            set {
                SetRelatedEntities("user_dg_configuration", null, value);
            }
        }
        
        [RelationshipSchemaName("user_dg_country")]
        public IEnumerable<dg_country> user_dg_country {
            get {
                return GetRelatedEntities<dg_country>("user_dg_country", null);
            }
            set {
                SetRelatedEntities("user_dg_country", null, value);
            }
        }
        
        [RelationshipSchemaName("user_dg_event")]
        public IEnumerable<dg_event> user_dg_event {
            get {
                return GetRelatedEntities<dg_event>("user_dg_event", null);
            }
            set {
                SetRelatedEntities("user_dg_event", null, value);
            }
        }
        
        [RelationshipSchemaName("user_dg_field")]
        public IEnumerable<dg_field> user_dg_field {
            get {
                return GetRelatedEntities<dg_field>("user_dg_field", null);
            }
            set {
                SetRelatedEntities("user_dg_field", null, value);
            }
        }
        
        [RelationshipSchemaName("user_dg_food")]
        public IEnumerable<dg_food> user_dg_food {
            get {
                return GetRelatedEntities<dg_food>("user_dg_food", null);
            }
            set {
                SetRelatedEntities("user_dg_food", null, value);
            }
        }
        
        [RelationshipSchemaName("user_dg_man")]
        public IEnumerable<dg_man> user_dg_man {
            get {
                return GetRelatedEntities<dg_man>("user_dg_man", null);
            }
            set {
                SetRelatedEntities("user_dg_man", null, value);
            }
        }
        
        [RelationshipSchemaName("user_dg_mild")]
        public IEnumerable<dg_mild> user_dg_mild {
            get {
                return GetRelatedEntities<dg_mild>("user_dg_mild", null);
            }
            set {
                SetRelatedEntities("user_dg_mild", null, value);
            }
        }
        
        [RelationshipSchemaName("user_dg_participant")]
        public IEnumerable<dg_participant> user_dg_participant {
            get {
                return GetRelatedEntities<dg_participant>("user_dg_participant", null);
            }
            set {
                SetRelatedEntities("user_dg_participant", null, value);
            }
        }
        
        [RelationshipSchemaName("user_dg_secroletest")]
        public IEnumerable<dg_secroletest> user_dg_secroletest {
            get {
                return GetRelatedEntities<dg_secroletest>("user_dg_secroletest", null);
            }
            set {
                SetRelatedEntities("user_dg_secroletest", null, value);
            }
        }
        
        [RelationshipSchemaName("user_dg_sheep")]
        public IEnumerable<dg_sheep> user_dg_sheep {
            get {
                return GetRelatedEntities<dg_sheep>("user_dg_sheep", null);
            }
            set {
                SetRelatedEntities("user_dg_sheep", null, value);
            }
        }
        
        [RelationshipSchemaName("user_dg_tooth")]
        public IEnumerable<dg_tooth> user_dg_tooth {
            get {
                return GetRelatedEntities<dg_tooth>("user_dg_tooth", null);
            }
            set {
                SetRelatedEntities("user_dg_tooth", null, value);
            }
        }
        
        [RelationshipSchemaName("user_dg_zipcodecity")]
        public IEnumerable<dg_zipCodeCity> user_dg_zipcodecity {
            get {
                return GetRelatedEntities<dg_zipCodeCity>("user_dg_zipcodecity", null);
            }
            set {
                SetRelatedEntities("user_dg_zipcodecity", null, value);
            }
        }
        
        [RelationshipSchemaName("user_email")]
        public IEnumerable<Email> user_email {
            get {
                return GetRelatedEntities<Email>("user_email", null);
            }
            set {
                SetRelatedEntities("user_email", null, value);
            }
        }
        
        [RelationshipSchemaName("user_entitlement")]
        public IEnumerable<Entitlement> user_entitlement {
            get {
                return GetRelatedEntities<Entitlement>("user_entitlement", null);
            }
            set {
                SetRelatedEntities("user_entitlement", null, value);
            }
        }
        
        [RelationshipSchemaName("user_fax")]
        public IEnumerable<Fax> user_fax {
            get {
                return GetRelatedEntities<Fax>("user_fax", null);
            }
            set {
                SetRelatedEntities("user_fax", null, value);
            }
        }
        
        [RelationshipSchemaName("user_goal")]
        public IEnumerable<Goal> user_goal {
            get {
                return GetRelatedEntities<Goal>("user_goal", null);
            }
            set {
                SetRelatedEntities("user_goal", null, value);
            }
        }
        
        [RelationshipSchemaName("user_goal_goalowner")]
        public IEnumerable<Goal> user_goal_goalowner {
            get {
                return GetRelatedEntities<Goal>("user_goal_goalowner", null);
            }
            set {
                SetRelatedEntities("user_goal_goalowner", null, value);
            }
        }
        
        [RelationshipSchemaName("user_incidentresolution")]
        public IEnumerable<IncidentResolution> user_incidentresolution {
            get {
                return GetRelatedEntities<IncidentResolution>("user_incidentresolution", null);
            }
            set {
                SetRelatedEntities("user_incidentresolution", null, value);
            }
        }
        
        [RelationshipSchemaName("user_knowledgearticle")]
        public IEnumerable<KnowledgeArticle> user_knowledgearticle {
            get {
                return GetRelatedEntities<KnowledgeArticle>("user_knowledgearticle", null);
            }
            set {
                SetRelatedEntities("user_knowledgearticle", null, value);
            }
        }
        
        [RelationshipSchemaName("user_letter")]
        public IEnumerable<Letter> user_letter {
            get {
                return GetRelatedEntities<Letter>("user_letter", null);
            }
            set {
                SetRelatedEntities("user_letter", null, value);
            }
        }
        
        [RelationshipSchemaName("user_list")]
        public IEnumerable<List> user_list {
            get {
                return GetRelatedEntities<List>("user_list", null);
            }
            set {
                SetRelatedEntities("user_list", null, value);
            }
        }
        
        [RelationshipSchemaName("user_mailbox")]
        public IEnumerable<Mailbox> user_mailbox {
            get {
                return GetRelatedEntities<Mailbox>("user_mailbox", null);
            }
            set {
                SetRelatedEntities("user_mailbox", null, value);
            }
        }
        
        [RelationshipSchemaName("user_msdyn_agreement")]
        public IEnumerable<msdyn_agreement> user_msdyn_agreement {
            get {
                return GetRelatedEntities<msdyn_agreement>("user_msdyn_agreement", null);
            }
            set {
                SetRelatedEntities("user_msdyn_agreement", null, value);
            }
        }
        
        [RelationshipSchemaName("user_msdyn_postalbum")]
        public IEnumerable<msdyn_PostAlbum> user_msdyn_postalbum {
            get {
                return GetRelatedEntities<msdyn_PostAlbum>("user_msdyn_postalbum", null);
            }
            set {
                SetRelatedEntities("user_msdyn_postalbum", null, value);
            }
        }
        
        [RelationshipSchemaName("user_msdyn_wallsavedqueryusersettings")]
        public IEnumerable<msdyn_wallsavedqueryusersettings> user_msdyn_wallsavedqueryusersettings {
            get {
                return GetRelatedEntities<msdyn_wallsavedqueryusersettings>("user_msdyn_wallsavedqueryusersettings", null);
            }
            set {
                SetRelatedEntities("user_msdyn_wallsavedqueryusersettings", null, value);
            }
        }
        
        [RelationshipSchemaName("user_opportunityclose")]
        public IEnumerable<OpportunityClose> user_opportunityclose {
            get {
                return GetRelatedEntities<OpportunityClose>("user_opportunityclose", null);
            }
            set {
                SetRelatedEntities("user_opportunityclose", null, value);
            }
        }
        
        [RelationshipSchemaName("user_phonecall")]
        public IEnumerable<PhoneCall> user_phonecall {
            get {
                return GetRelatedEntities<PhoneCall>("user_phonecall", null);
            }
            set {
                SetRelatedEntities("user_phonecall", null, value);
            }
        }
        
        [RelationshipSchemaName("user_ratingmodel")]
        public IEnumerable<RatingModel> user_ratingmodel {
            get {
                return GetRelatedEntities<RatingModel>("user_ratingmodel", null);
            }
            set {
                SetRelatedEntities("user_ratingmodel", null, value);
            }
        }
        
        [RelationshipSchemaName("user_ratingvalue")]
        public IEnumerable<RatingValue> user_ratingvalue {
            get {
                return GetRelatedEntities<RatingValue>("user_ratingvalue", null);
            }
            set {
                SetRelatedEntities("user_ratingvalue", null, value);
            }
        }
        
        [RelationshipSchemaName("user_recurringappointmentmaster")]
        public IEnumerable<RecurringAppointmentMaster> user_recurringappointmentmaster {
            get {
                return GetRelatedEntities<RecurringAppointmentMaster>("user_recurringappointmentmaster", null);
            }
            set {
                SetRelatedEntities("user_recurringappointmentmaster", null, value);
            }
        }
        
        [RelationshipSchemaName("user_sharepointdocumentlocation")]
        public IEnumerable<SharePointDocumentLocation> user_sharepointdocumentlocation {
            get {
                return GetRelatedEntities<SharePointDocumentLocation>("user_sharepointdocumentlocation", null);
            }
            set {
                SetRelatedEntities("user_sharepointdocumentlocation", null, value);
            }
        }
        
        [RelationshipSchemaName("user_sharepointsite")]
        public IEnumerable<SharePointSite> user_sharepointsite {
            get {
                return GetRelatedEntities<SharePointSite>("user_sharepointsite", null);
            }
            set {
                SetRelatedEntities("user_sharepointsite", null, value);
            }
        }
        
        [RelationshipSchemaName("user_slabase")]
        public IEnumerable<SLA> user_slabase {
            get {
                return GetRelatedEntities<SLA>("user_slabase", null);
            }
            set {
                SetRelatedEntities("user_slabase", null, value);
            }
        }
        
        [RelationshipSchemaName("user_socialactivity")]
        public IEnumerable<SocialActivity> user_socialactivity {
            get {
                return GetRelatedEntities<SocialActivity>("user_socialactivity", null);
            }
            set {
                SetRelatedEntities("user_socialactivity", null, value);
            }
        }
        
        [RelationshipSchemaName("user_task")]
        public IEnumerable<Task> user_task {
            get {
                return GetRelatedEntities<Task>("user_task", null);
            }
            set {
                SetRelatedEntities("user_task", null, value);
            }
        }
        
        [RelationshipSchemaName("workflow_createdby")]
        public IEnumerable<Workflow> workflow_createdby {
            get {
                return GetRelatedEntities<Workflow>("workflow_createdby", null);
            }
            set {
                SetRelatedEntities("workflow_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("workflow_createdonbehalfby")]
        public IEnumerable<Workflow> workflow_createdonbehalfby {
            get {
                return GetRelatedEntities<Workflow>("workflow_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("workflow_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("workflow_modifiedby")]
        public IEnumerable<Workflow> workflow_modifiedby {
            get {
                return GetRelatedEntities<Workflow>("workflow_modifiedby", null);
            }
            set {
                SetRelatedEntities("workflow_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("workflow_modifiedonbehalfby")]
        public IEnumerable<Workflow> workflow_modifiedonbehalfby {
            get {
                return GetRelatedEntities<Workflow>("workflow_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("workflow_modifiedonbehalfby", null, value);
            }
        }
        
        public static SystemUser Retrieve(IOrganizationService service, Guid id, params Expression<Func<SystemUser,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
        
        /// <summary>
        /// <para>Retrieves the record using the alternate key called 'AAD ObjectId'</para>
        /// </summary>
        public static SystemUser Retrieve_aadobjectid(IOrganizationService service, Guid AzureActiveDirectoryObjectId, params Expression<Func<SystemUser,object>>[] attrs) {
            KeyAttributeCollection keys = new KeyAttributeCollection();
            keys.Add("azureactivedirectoryobjectid", AzureActiveDirectoryObjectId);
            return Retrieve_AltKey(service, keys, attrs);
        }
        
        /// <summary>
        /// <para>Set values for the alternate key called 'AAD ObjectId'</para>
        /// </summary>
        public void AltKey_aadobjectid(Guid AzureActiveDirectoryObjectId) {
            KeyAttributes.Clear();
            KeyAttributes.Add("azureactivedirectoryobjectid", AzureActiveDirectoryObjectId);
        }
    }
    
    /// <summary>
    /// <para>Generic activity representing work needed to be done.</para>
    /// <para>Display Name: Task</para>
    /// </summary>
    [EntityLogicalName("task")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class Task : ExtendedEntity<TaskState, Task_StatusCode> {
        
        public const string EntityLogicalName = "task";
        
        public const int EntityTypeCode = 4212;
        
        public Task() : 
                base(EntityLogicalName) {
        }
        
        public Task(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("subject");
            }
        }
        
        [AttributeLogicalName("activityid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("activityid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the task.</para>
        /// <para>Display Name: Task</para>
        /// </summary>
        [AttributeLogicalName("activityid")]
        [DisplayName("Task")]
        public Guid? ActivityId {
            get {
                return GetAttributeValue<Guid?>("activityid");
            }
            set {
                SetId("activityid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Additional Parameters</para>
        /// </summary>
        [AttributeLogicalName("activityadditionalparams")]
        [DisplayName("Additional Parameters")]
        public string ActivityAdditionalParams {
            get {
                return GetAttributeValue<string>("activityadditionalparams");
            }
            set {
                SetAttributeValue("activityadditionalparams", value);
            }
        }
        
        /// <summary>
        /// <para>Type of activity.</para>
        /// <para>Display Name: Activity Type</para>
        /// </summary>
        [AttributeLogicalName("activitytypecode")]
        [DisplayName("Activity Type")]
        public string ActivityTypeCode {
            get {
                return GetAttributeValue<string>("activitytypecode");
            }
        }
        
        /// <summary>
        /// <para>Type the number of minutes spent on the task. The duration is used in reporting.</para>
        /// <para>Display Name: Duration</para>
        /// </summary>
        [AttributeLogicalName("actualdurationminutes")]
        [DisplayName("Duration")]
        [Range(0, 2147483647)]
        public int? ActualDurationMinutes {
            get {
                return GetAttributeValue<int?>("actualdurationminutes");
            }
            set {
                SetAttributeValue("actualdurationminutes", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the actual end date and time of the task. By default, it displays when the activity was completed or canceled.</para>
        /// <para>Display Name: Actual End</para>
        /// </summary>
        [AttributeLogicalName("actualend")]
        [DisplayName("Actual End")]
        public DateTime? ActualEnd {
            get {
                return GetAttributeValue<DateTime?>("actualend");
            }
            set {
                SetAttributeValue("actualend", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the actual start date and time for the task. By default, it displays when the task was created.</para>
        /// <para>Display Name: Actual Start</para>
        /// </summary>
        [AttributeLogicalName("actualstart")]
        [DisplayName("Actual Start")]
        public DateTime? ActualStart {
            get {
                return GetAttributeValue<DateTime?>("actualstart");
            }
            set {
                SetAttributeValue("actualstart", value);
            }
        }
        
        /// <summary>
        /// <para>Type a category to identify the task type, such as lead gathering or customer follow up, to tie the task to a business group or function.</para>
        /// <para>Display Name: Category</para>
        /// </summary>
        [AttributeLogicalName("category")]
        [DisplayName("Category")]
        [MaxLength(250)]
        public string Category {
            get {
                return GetAttributeValue<string>("category");
            }
            set {
                SetAttributeValue("category", value);
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record on behalf of another user.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Assigned Task Unique Id</para>
        /// <para>Display Name: Assigned Task Unique Id</para>
        /// </summary>
        [AttributeLogicalName("crmtaskassigneduniqueid")]
        [DisplayName("Assigned Task Unique Id")]
        public Guid? CrmTaskAssignedUniqueId {
            get {
                return GetAttributeValue<Guid?>("crmtaskassigneduniqueid");
            }
            set {
                SetAttributeValue("crmtaskassigneduniqueid", value);
            }
        }
        
        /// <summary>
        /// <para>Type additional information to describe the task.</para>
        /// <para>Display Name: Description</para>
        /// </summary>
        [AttributeLogicalName("description")]
        [DisplayName("Description")]
        public string Description {
            get {
                return GetAttributeValue<string>("description");
            }
            set {
                SetAttributeValue("description", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("Exchange Rate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the data import or data migration that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Information which specifies whether the task was billed as part of resolving a case.</para>
        /// <para>Display Name: Is Billed</para>
        /// </summary>
        [AttributeLogicalName("isbilled")]
        [DisplayName("Is Billed")]
        public bool? IsBilled {
            get {
                return GetAttributeValue<bool?>("isbilled");
            }
            set {
                SetAttributeValue("isbilled", value);
            }
        }
        
        /// <summary>
        /// <para>Information regarding whether the activity is a regular activity type or event type.</para>
        /// <para>Display Name: Is Regular Activity</para>
        /// </summary>
        [AttributeLogicalName("isregularactivity")]
        [DisplayName("Is Regular Activity")]
        public bool? IsRegularActivity {
            get {
                return GetAttributeValue<bool?>("isregularactivity");
            }
        }
        
        /// <summary>
        /// <para>Information which specifies if the task was created from a workflow rule.</para>
        /// <para>Display Name: Is Workflow Created</para>
        /// </summary>
        [AttributeLogicalName("isworkflowcreated")]
        [DisplayName("Is Workflow Created")]
        public bool? IsWorkflowCreated {
            get {
                return GetAttributeValue<bool?>("isworkflowcreated");
            }
            set {
                SetAttributeValue("isworkflowcreated", value);
            }
        }
        
        /// <summary>
        /// <para>Contains the date and time stamp of the last on hold time.</para>
        /// <para>Display Name: Last On Hold Time</para>
        /// </summary>
        [AttributeLogicalName("lastonholdtime")]
        [DisplayName("Last On Hold Time")]
        public DateTime? LastOnHoldTime {
            get {
                return GetAttributeValue<DateTime?>("lastonholdtime");
            }
            set {
                SetAttributeValue("lastonholdtime", value);
            }
        }
        
        /// <summary>
        /// <para>Shows who last updated the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Shows who last updated the record on behalf of another user.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Shows how long, in minutes, that the record was on hold.</para>
        /// <para>Display Name: On Hold Time (Minutes)</para>
        /// </summary>
        [AttributeLogicalName("onholdtime")]
        [DisplayName("On Hold Time (Minutes)")]
        [Range(-2147483648, 2147483647)]
        public int? OnHoldTime {
            get {
                return GetAttributeValue<int?>("onholdtime");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the user or team who is assigned to manage the record. This field is updated every time the record is assigned to a different user.</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the record owner's business unit.</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the team that owns the task.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user that owns the task.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Type the percentage complete value for the task to track tasks to completion.</para>
        /// <para>Display Name: Percent Complete</para>
        /// </summary>
        [AttributeLogicalName("percentcomplete")]
        [DisplayName("Percent Complete")]
        [Range(0, 100)]
        public int? PercentComplete {
            get {
                return GetAttributeValue<int?>("percentcomplete");
            }
            set {
                SetAttributeValue("percentcomplete", value);
            }
        }
        
        /// <summary>
        /// <para>Type a short description about the objective or primary topic of the task.</para>
        /// <para>Display Name: Subject</para>
        /// </summary>
        [AttributeLogicalName("subject")]
        [DisplayName("Subject")]
        [MaxLength(200)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("subject");
            }
            set {
                SetAttributeValue("subject", value);
            }
        }
        
        /// <summary>
        /// <para>Select the priority so that preferred customers or critical issues are handled quickly.</para>
        /// <para>Display Name: Priority</para>
        /// </summary>
        [AttributeLogicalName("prioritycode")]
        [DisplayName("Priority")]
        public Task_PriorityCode? PriorityCode {
            get {
                return GetOptionSetValue<Task_PriorityCode>("prioritycode");
            }
            set {
                SetOptionSetValue("prioritycode", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the process.</para>
        /// <para>Display Name: Process</para>
        /// </summary>
        [AttributeLogicalName("processid")]
        [DisplayName("Process")]
        public Guid? ProcessId {
            get {
                return GetAttributeValue<Guid?>("processid");
            }
            set {
                SetAttributeValue("processid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the object with which the task is associated.</para>
        /// <para>Display Name: Regarding</para>
        /// </summary>
        [AttributeLogicalName("regardingobjectid")]
        [DisplayName("Regarding")]
        public EntityReference RegardingObjectId {
            get {
                return GetAttributeValue<EntityReference>("regardingobjectid");
            }
            set {
                SetAttributeValue("regardingobjectid", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the service level agreement (SLA) that you want to apply to the Task record.</para>
        /// <para>Display Name: SLA</para>
        /// </summary>
        [AttributeLogicalName("slaid")]
        [DisplayName("SLA")]
        public EntityReference SLAId {
            get {
                return GetAttributeValue<EntityReference>("slaid");
            }
            set {
                SetAttributeValue("slaid", value);
            }
        }
        
        /// <summary>
        /// <para>Last SLA that was applied to this Task. This field is for internal use only.</para>
        /// <para>Display Name: Last SLA applied</para>
        /// </summary>
        [AttributeLogicalName("slainvokedid")]
        [DisplayName("Last SLA applied")]
        public EntityReference SLAInvokedId {
            get {
                return GetAttributeValue<EntityReference>("slainvokedid");
            }
        }
        
        /// <summary>
        /// <para>Scheduled duration of the task, specified in minutes.</para>
        /// <para>Display Name: Scheduled Duration</para>
        /// </summary>
        [AttributeLogicalName("scheduleddurationminutes")]
        [DisplayName("Scheduled Duration")]
        [Range(0, 2147483647)]
        public int? ScheduledDurationMinutes {
            get {
                return GetAttributeValue<int?>("scheduleddurationminutes");
            }
        }
        
        /// <summary>
        /// <para>Enter the expected due date and time.</para>
        /// <para>Display Name: Due Date</para>
        /// </summary>
        [AttributeLogicalName("scheduledend")]
        [DisplayName("Due Date")]
        public DateTime? ScheduledEnd {
            get {
                return GetAttributeValue<DateTime?>("scheduledend");
            }
            set {
                SetAttributeValue("scheduledend", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the expected due date and time.</para>
        /// <para>Display Name: Start Date</para>
        /// </summary>
        [AttributeLogicalName("scheduledstart")]
        [DisplayName("Start Date")]
        public DateTime? ScheduledStart {
            get {
                return GetAttributeValue<DateTime?>("scheduledstart");
            }
            set {
                SetAttributeValue("scheduledstart", value);
            }
        }
        
        /// <summary>
        /// <para>service_tasks</para>
        /// <para>Display Name: Service</para>
        /// </summary>
        [AttributeLogicalName("serviceid")]
        [DisplayName("Service")]
        public EntityReference ServiceId {
            get {
                return GetAttributeValue<EntityReference>("serviceid");
            }
            set {
                SetAttributeValue("serviceid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time by which the activities are sorted.</para>
        /// <para>Display Name: Sort Date</para>
        /// </summary>
        [AttributeLogicalName("sortdate")]
        [DisplayName("Sort Date")]
        public DateTime? SortDate {
            get {
                return GetAttributeValue<DateTime?>("sortdate");
            }
            set {
                SetAttributeValue("sortdate", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the stage.</para>
        /// <para>Display Name: (Deprecated) Process Stage</para>
        /// </summary>
        [AttributeLogicalName("stageid")]
        [DisplayName("(Deprecated) Process Stage")]
        public Guid? StageId {
            get {
                return GetAttributeValue<Guid?>("stageid");
            }
            set {
                SetAttributeValue("stageid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows whether the task is open, completed, or canceled. Completed and canceled tasks are read-only and can't be edited.</para>
        /// <para>Display Name: Activity Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Activity Status")]
        public TaskState? StateCode {
            get {
                return GetOptionSetValue<TaskState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the task's status.</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public Task_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<Task_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>Type a subcategory to identify the task type and relate the activity to a specific product, sales region, business group, or other function.</para>
        /// <para>Display Name: Sub-Category</para>
        /// </summary>
        [AttributeLogicalName("subcategory")]
        [DisplayName("Sub-Category")]
        [MaxLength(250)]
        public string Subcategory {
            get {
                return GetAttributeValue<string>("subcategory");
            }
            set {
                SetAttributeValue("subcategory", value);
            }
        }
        
        /// <summary>
        /// <para>Type a short description about the objective or primary topic of the task.</para>
        /// <para>Display Name: Subject</para>
        /// </summary>
        [AttributeLogicalName("subject")]
        [DisplayName("Subject")]
        [MaxLength(200)]
        public string Subject {
            get {
                return GetAttributeValue<string>("subject");
            }
            set {
                SetAttributeValue("subject", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Subscription</para>
        /// </summary>
        [AttributeLogicalName("subscriptionid")]
        [DisplayName("Subscription")]
        public Guid? SubscriptionId {
            get {
                return GetAttributeValue<Guid?>("subscriptionid");
            }
            set {
                SetAttributeValue("subscriptionid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the local currency for the record to make sure budgets are reported in the correct currency.</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: (Deprecated) Traversed Path</para>
        /// </summary>
        [AttributeLogicalName("traversedpath")]
        [DisplayName("(Deprecated) Traversed Path")]
        [MaxLength(1250)]
        public string TraversedPath {
            get {
                return GetAttributeValue<string>("traversedpath");
            }
            set {
                SetAttributeValue("traversedpath", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version number of the task.</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Account_Tasks")]
        public Account Account_Tasks {
            get {
                return GetRelatedEntity<Account>("Account_Tasks", null);
            }
            set {
                SetRelatedEntity("Account_Tasks", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("CampaignActivity_Tasks")]
        public CampaignActivity CampaignActivity_Tasks {
            get {
                return GetRelatedEntity<CampaignActivity>("CampaignActivity_Tasks", null);
            }
            set {
                SetRelatedEntity("CampaignActivity_Tasks", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Campaign_Tasks")]
        public Campaign Campaign_Tasks {
            get {
                return GetRelatedEntity<Campaign>("Campaign_Tasks", null);
            }
            set {
                SetRelatedEntity("Campaign_Tasks", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Contact_Tasks")]
        public Contact Contact_Tasks {
            get {
                return GetRelatedEntity<Contact>("Contact_Tasks", null);
            }
            set {
                SetRelatedEntity("Contact_Tasks", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Contract_Tasks")]
        public Contract Contract_Tasks {
            get {
                return GetRelatedEntity<Contract>("Contract_Tasks", null);
            }
            set {
                SetRelatedEntity("Contract_Tasks", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Incident_Tasks")]
        public Incident Incident_Tasks {
            get {
                return GetRelatedEntity<Incident>("Incident_Tasks", null);
            }
            set {
                SetRelatedEntity("Incident_Tasks", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Invoice_Tasks")]
        public Invoice Invoice_Tasks {
            get {
                return GetRelatedEntity<Invoice>("Invoice_Tasks", null);
            }
            set {
                SetRelatedEntity("Invoice_Tasks", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("KnowledgeArticle_Tasks")]
        public KnowledgeArticle KnowledgeArticle_Tasks {
            get {
                return GetRelatedEntity<KnowledgeArticle>("KnowledgeArticle_Tasks", null);
            }
            set {
                SetRelatedEntity("KnowledgeArticle_Tasks", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Lead_Tasks")]
        public Lead Lead_Tasks {
            get {
                return GetRelatedEntity<Lead>("Lead_Tasks", null);
            }
            set {
                SetRelatedEntity("Lead_Tasks", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Opportunity_Tasks")]
        public Opportunity Opportunity_Tasks {
            get {
                return GetRelatedEntity<Opportunity>("Opportunity_Tasks", null);
            }
            set {
                SetRelatedEntity("Opportunity_Tasks", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Quote_Tasks")]
        public Quote Quote_Tasks {
            get {
                return GetRelatedEntity<Quote>("Quote_Tasks", null);
            }
            set {
                SetRelatedEntity("Quote_Tasks", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("SalesOrder_Tasks")]
        public SalesOrder SalesOrder_Tasks {
            get {
                return GetRelatedEntity<SalesOrder>("SalesOrder_Tasks", null);
            }
            set {
                SetRelatedEntity("SalesOrder_Tasks", null, value);
            }
        }
        
        [RelationshipSchemaName("Task_QueueItem")]
        public IEnumerable<QueueItem> Task_QueueItem {
            get {
                return GetRelatedEntities<QueueItem>("Task_QueueItem", null);
            }
            set {
                SetRelatedEntities("Task_QueueItem", null, value);
            }
        }
        
        [RelationshipSchemaName("Task_SyncErrors")]
        public IEnumerable<SyncError> Task_SyncErrors {
            get {
                return GetRelatedEntities<SyncError>("Task_SyncErrors", null);
            }
            set {
                SetRelatedEntities("Task_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("transactioncurrencyid")]
        [RelationshipSchemaName("TransactionCurrency_Task")]
        public TransactionCurrency TransactionCurrency_Task {
            get {
                return GetRelatedEntity<TransactionCurrency>("TransactionCurrency_Task", null);
            }
            set {
                SetRelatedEntity("TransactionCurrency_Task", null, value);
            }
        }
        
        [AttributeLogicalName("activityid")]
        [RelationshipSchemaName("activity_pointer_task")]
        public ActivityPointer activity_pointer_task {
            get {
                return GetRelatedEntity<ActivityPointer>("activity_pointer_task", null);
            }
            set {
                SetRelatedEntity("activity_pointer_task", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("bookableresourcebooking_Tasks")]
        public BookableResourceBooking bookableresourcebooking_Tasks {
            get {
                return GetRelatedEntity<BookableResourceBooking>("bookableresourcebooking_Tasks", null);
            }
            set {
                SetRelatedEntity("bookableresourcebooking_Tasks", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("bookableresourcebookingheader_Tasks")]
        public BookableResourceBookingHeader bookableresourcebookingheader_Tasks {
            get {
                return GetRelatedEntity<BookableResourceBookingHeader>("bookableresourcebookingheader_Tasks", null);
            }
            set {
                SetRelatedEntity("bookableresourcebookingheader_Tasks", null, value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_task_activities")]
        public BusinessUnit business_unit_task_activities {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_task_activities", null);
            }
            set {
                SetRelatedEntity("business_unit_task_activities", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("dg_event_Tasks")]
        public dg_event dg_event_Tasks {
            get {
                return GetRelatedEntity<dg_event>("dg_event_Tasks", null);
            }
            set {
                SetRelatedEntity("dg_event_Tasks", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("dg_participant_Tasks")]
        public dg_participant dg_participant_Tasks {
            get {
                return GetRelatedEntity<dg_participant>("dg_participant_Tasks", null);
            }
            set {
                SetRelatedEntity("dg_participant_Tasks", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("entitlement_Tasks")]
        public Entitlement entitlement_Tasks {
            get {
                return GetRelatedEntity<Entitlement>("entitlement_Tasks", null);
            }
            set {
                SetRelatedEntity("entitlement_Tasks", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_task_createdby")]
        public SystemUser lk_task_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_task_createdby", null);
            }
            set {
                SetRelatedEntity("lk_task_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_task_createdonbehalfby")]
        public SystemUser lk_task_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_task_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_task_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_task_modifiedby")]
        public SystemUser lk_task_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_task_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_task_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_task_modifiedonbehalfby")]
        public SystemUser lk_task_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_task_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_task_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("slaid")]
        [RelationshipSchemaName("manualsla_task")]
        public SLA manualsla_task {
            get {
                return GetRelatedEntity<SLA>("manualsla_task", null);
            }
            set {
                SetRelatedEntity("manualsla_task", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("msdyn_agreement_Tasks")]
        public msdyn_agreement msdyn_agreement_Tasks {
            get {
                return GetRelatedEntity<msdyn_agreement>("msdyn_agreement_Tasks", null);
            }
            set {
                SetRelatedEntity("msdyn_agreement_Tasks", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("msdyn_postalbum_Tasks")]
        public msdyn_PostAlbum msdyn_postalbum_Tasks {
            get {
                return GetRelatedEntity<msdyn_PostAlbum>("msdyn_postalbum_Tasks", null);
            }
            set {
                SetRelatedEntity("msdyn_postalbum_Tasks", null, value);
            }
        }
        
        [AttributeLogicalName("slainvokedid")]
        [RelationshipSchemaName("sla_task")]
        public SLA sla_task {
            get {
                return GetRelatedEntity<SLA>("sla_task", null);
            }
            set {
                SetRelatedEntity("sla_task", null, value);
            }
        }
        
        [RelationshipSchemaName("task_activity_parties")]
        public IEnumerable<ActivityParty> task_activity_parties {
            get {
                return GetRelatedEntities<ActivityParty>("task_activity_parties", null);
            }
            set {
                SetRelatedEntities("task_activity_parties", null, value);
            }
        }
        
        [RelationshipSchemaName("task_connections1")]
        public IEnumerable<Connection> task_connections1 {
            get {
                return GetRelatedEntities<Connection>("task_connections1", null);
            }
            set {
                SetRelatedEntities("task_connections1", null, value);
            }
        }
        
        [RelationshipSchemaName("task_connections2")]
        public IEnumerable<Connection> task_connections2 {
            get {
                return GetRelatedEntities<Connection>("task_connections2", null);
            }
            set {
                SetRelatedEntities("task_connections2", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_task")]
        public Team team_task {
            get {
                return GetRelatedEntity<Team>("team_task", null);
            }
            set {
                SetRelatedEntity("team_task", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_task")]
        public SystemUser user_task {
            get {
                return GetRelatedEntity<SystemUser>("user_task", null);
            }
            set {
                SetRelatedEntity("user_task", null, value);
            }
        }
        
        public static Task Retrieve(IOrganizationService service, Guid id, params Expression<Func<Task,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Collection of system users that routinely collaborate. Teams can be used to simplify record sharing and provide team members with common access to organization data when team members belong to different Business Units.</para>
    /// <para>Display Name: Team</para>
    /// </summary>
    [EntityLogicalName("team")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class Team : ExtendedEntity<EmptyEnum, EmptyEnum> {
        
        public const string EntityLogicalName = "team";
        
        public const int EntityTypeCode = 9;
        
        public Team() : 
                base(EntityLogicalName) {
        }
        
        public Team(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("name");
            }
        }
        
        [AttributeLogicalName("teamid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("teamid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the team.</para>
        /// <para>Display Name: Team</para>
        /// </summary>
        [AttributeLogicalName("teamid")]
        [DisplayName("Team")]
        public Guid? TeamId {
            get {
                return GetAttributeValue<Guid?>("teamid");
            }
            set {
                SetId("teamid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user primary responsible for the team.</para>
        /// <para>Display Name: Administrator</para>
        /// </summary>
        [AttributeLogicalName("administratorid")]
        [DisplayName("Administrator")]
        public EntityReference AdministratorId {
            get {
                return GetAttributeValue<EntityReference>("administratorid");
            }
            set {
                SetAttributeValue("administratorid", value);
            }
        }
        
        /// <summary>
        /// <para>The Azure active directory object Id for a group.</para>
        /// <para>Display Name: Azure AD Object Id for a group</para>
        /// </summary>
        [AttributeLogicalName("azureactivedirectoryobjectid")]
        [DisplayName("Azure AD Object Id for a group")]
        public Guid? AzureActiveDirectoryObjectId {
            get {
                return GetAttributeValue<Guid?>("azureactivedirectoryobjectid");
            }
            set {
                SetAttributeValue("azureactivedirectoryobjectid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the business unit with which the team is associated.</para>
        /// <para>Display Name: Business Unit</para>
        /// </summary>
        [AttributeLogicalName("businessunitid")]
        [DisplayName("Business Unit")]
        public EntityReference BusinessUnitId {
            get {
                return GetAttributeValue<EntityReference>("businessunitid");
            }
            set {
                SetAttributeValue("businessunitid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the team.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the team was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the team.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Description of the team.</para>
        /// <para>Display Name: Description</para>
        /// </summary>
        [AttributeLogicalName("description")]
        [DisplayName("Description")]
        public string Description {
            get {
                return GetAttributeValue<string>("description");
            }
            set {
                SetAttributeValue("description", value);
            }
        }
        
        /// <summary>
        /// <para>Email address for the team.</para>
        /// <para>Display Name: Email</para>
        /// </summary>
        [AttributeLogicalName("emailaddress")]
        [DisplayName("Email")]
        [MaxLength(100)]
        public string EMailAddress {
            get {
                return GetAttributeValue<string>("emailaddress");
            }
            set {
                SetAttributeValue("emailaddress", value);
            }
        }
        
        /// <summary>
        /// <para>Exchange rate for the currency associated with the team with respect to the base currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("Exchange Rate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the data import or data migration that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Information about whether the team is a default business unit team.</para>
        /// <para>Display Name: Is Default</para>
        /// </summary>
        [AttributeLogicalName("isdefault")]
        [DisplayName("Is Default")]
        public bool? IsDefault {
            get {
                return GetAttributeValue<bool?>("isdefault");
            }
        }
        
        [AttributeLogicalName("issastokenset")]
        public bool? IsSasTokenSet {
            get {
                return GetAttributeValue<bool?>("issastokenset");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Membership Type</para>
        /// </summary>
        [AttributeLogicalName("membershiptype")]
        [DisplayName("Membership Type")]
        public Team_MembershipType? MembershipType {
            get {
                return GetOptionSetValue<Team_MembershipType>("membershiptype");
            }
            set {
                SetOptionSetValue("membershiptype", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who last modified the team.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the team was last modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who last modified the team.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Name of the team.</para>
        /// <para>Display Name: Team Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Team Name")]
        [MaxLength(160)]
        public string Name {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the organization associated with the team.</para>
        /// <para>Display Name: Organization </para>
        /// </summary>
        [AttributeLogicalName("organizationid")]
        [DisplayName("Organization ")]
        public Guid? OrganizationId {
            get {
                return GetAttributeValue<Guid?>("organizationid");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Name of the team.</para>
        /// <para>Display Name: Team Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Team Name")]
        [MaxLength(160)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the process.</para>
        /// <para>Display Name: Process</para>
        /// </summary>
        [AttributeLogicalName("processid")]
        [DisplayName("Process")]
        public Guid? ProcessId {
            get {
                return GetAttributeValue<Guid?>("processid");
            }
            set {
                SetAttributeValue("processid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the default queue for the team.</para>
        /// <para>Display Name: Default Queue</para>
        /// </summary>
        [AttributeLogicalName("queueid")]
        [DisplayName("Default Queue")]
        public EntityReference QueueId {
            get {
                return GetAttributeValue<EntityReference>("queueid");
            }
            set {
                SetAttributeValue("queueid", value);
            }
        }
        
        /// <summary>
        /// <para>opportunity_Teams</para>
        /// <para>Display Name: Regarding Object Id</para>
        /// </summary>
        [AttributeLogicalName("regardingobjectid")]
        [DisplayName("Regarding Object Id")]
        public EntityReference RegardingObjectId {
            get {
                return GetAttributeValue<EntityReference>("regardingobjectid");
            }
            set {
                SetAttributeValue("regardingobjectid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Share Link Qualifier</para>
        /// </summary>
        [AttributeLogicalName("sharelinkqualifier")]
        [DisplayName("Share Link Qualifier")]
        [MaxLength(1250)]
        public string ShareLinkQualifier {
            get {
                return GetAttributeValue<string>("sharelinkqualifier");
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the stage.</para>
        /// <para>Display Name: (Deprecated) Process Stage</para>
        /// </summary>
        [AttributeLogicalName("stageid")]
        [DisplayName("(Deprecated) Process Stage")]
        public Guid? StageId {
            get {
                return GetAttributeValue<Guid?>("stageid");
            }
            set {
                SetAttributeValue("stageid", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the team will be managed by the system.</para>
        /// <para>Display Name: Is System Managed</para>
        /// </summary>
        [AttributeLogicalName("systemmanaged")]
        [DisplayName("Is System Managed")]
        public bool? SystemManaged {
            get {
                return GetAttributeValue<bool?>("systemmanaged");
            }
        }
        
        /// <summary>
        /// <para>Shows the team template that is associated with the team.</para>
        /// <para>Display Name: Team Template Identifier</para>
        /// </summary>
        [AttributeLogicalName("teamtemplateid")]
        [DisplayName("Team Template Identifier")]
        public EntityReference TeamTemplateId {
            get {
                return GetAttributeValue<EntityReference>("teamtemplateid");
            }
            set {
                SetAttributeValue("teamtemplateid", value);
            }
        }
        
        /// <summary>
        /// <para>Select the team type.</para>
        /// <para>Display Name: Team Type</para>
        /// </summary>
        [AttributeLogicalName("teamtype")]
        [DisplayName("Team Type")]
        public Team_TeamType? TeamType {
            get {
                return GetOptionSetValue<Team_TeamType>("teamtype");
            }
            set {
                SetOptionSetValue("teamtype", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the currency associated with the team.</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: (Deprecated) Traversed Path</para>
        /// </summary>
        [AttributeLogicalName("traversedpath")]
        [DisplayName("(Deprecated) Traversed Path")]
        [MaxLength(1250)]
        public string TraversedPath {
            get {
                return GetAttributeValue<string>("traversedpath");
            }
            set {
                SetAttributeValue("traversedpath", value);
            }
        }
        
        /// <summary>
        /// <para>Version number of the team.</para>
        /// <para>Display Name: Version number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Pronunciation of the full name of the team, written in phonetic hiragana or katakana characters.</para>
        /// <para>Display Name: Yomi Name</para>
        /// </summary>
        [AttributeLogicalName("yominame")]
        [DisplayName("Yomi Name")]
        [MaxLength(160)]
        public string YomiName {
            get {
                return GetAttributeValue<string>("yominame");
            }
            set {
                SetAttributeValue("yominame", value);
            }
        }
        
        [RelationshipSchemaName("Team_SyncErrors")]
        public IEnumerable<SyncError> Team_SyncErrors {
            get {
                return GetRelatedEntities<SyncError>("Team_SyncErrors", null);
            }
            set {
                SetRelatedEntities("Team_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("transactioncurrencyid")]
        [RelationshipSchemaName("TransactionCurrency_Team")]
        public TransactionCurrency TransactionCurrency_Team {
            get {
                return GetRelatedEntity<TransactionCurrency>("TransactionCurrency_Team", null);
            }
            set {
                SetRelatedEntity("TransactionCurrency_Team", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("accountleads_Teams")]
        public AccountLeads accountleads_Teams {
            get {
                return GetRelatedEntity<AccountLeads>("accountleads_Teams", null);
            }
            set {
                SetRelatedEntity("accountleads_Teams", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("bookableresource_Teams")]
        public BookableResource bookableresource_Teams {
            get {
                return GetRelatedEntity<BookableResource>("bookableresource_Teams", null);
            }
            set {
                SetRelatedEntity("bookableresource_Teams", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("bookableresourcebooking_Teams")]
        public BookableResourceBooking bookableresourcebooking_Teams {
            get {
                return GetRelatedEntity<BookableResourceBooking>("bookableresourcebooking_Teams", null);
            }
            set {
                SetRelatedEntity("bookableresourcebooking_Teams", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("bookableresourcebookingheader_Teams")]
        public BookableResourceBookingHeader bookableresourcebookingheader_Teams {
            get {
                return GetRelatedEntity<BookableResourceBookingHeader>("bookableresourcebookingheader_Teams", null);
            }
            set {
                SetRelatedEntity("bookableresourcebookingheader_Teams", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("bookableresourcecategory_Teams")]
        public BookableResourceCategory bookableresourcecategory_Teams {
            get {
                return GetRelatedEntity<BookableResourceCategory>("bookableresourcecategory_Teams", null);
            }
            set {
                SetRelatedEntity("bookableresourcecategory_Teams", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("bookableresourcecategoryassn_Teams")]
        public BookableResourceCategoryAssn bookableresourcecategoryassn_Teams {
            get {
                return GetRelatedEntity<BookableResourceCategoryAssn>("bookableresourcecategoryassn_Teams", null);
            }
            set {
                SetRelatedEntity("bookableresourcecategoryassn_Teams", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("bookableresourcecharacteristic_Teams")]
        public BookableResourceCharacteristic bookableresourcecharacteristic_Teams {
            get {
                return GetRelatedEntity<BookableResourceCharacteristic>("bookableresourcecharacteristic_Teams", null);
            }
            set {
                SetRelatedEntity("bookableresourcecharacteristic_Teams", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("bookableresourcegroup_Teams")]
        public BookableResourceGroup bookableresourcegroup_Teams {
            get {
                return GetRelatedEntity<BookableResourceGroup>("bookableresourcegroup_Teams", null);
            }
            set {
                SetRelatedEntity("bookableresourcegroup_Teams", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("bookingstatus_Teams")]
        public BookingStatus bookingstatus_Teams {
            get {
                return GetRelatedEntity<BookingStatus>("bookingstatus_Teams", null);
            }
            set {
                SetRelatedEntity("bookingstatus_Teams", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("bulkoperationlog_Teams")]
        public BulkOperationLog bulkoperationlog_Teams {
            get {
                return GetRelatedEntity<BulkOperationLog>("bulkoperationlog_Teams", null);
            }
            set {
                SetRelatedEntity("bulkoperationlog_Teams", null, value);
            }
        }
        
        [AttributeLogicalName("businessunitid")]
        [RelationshipSchemaName("business_unit_teams")]
        public BusinessUnit business_unit_teams {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_teams", null);
            }
            set {
                SetRelatedEntity("business_unit_teams", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("campaign_Teams")]
        public Campaign campaign_Teams {
            get {
                return GetRelatedEntity<Campaign>("campaign_Teams", null);
            }
            set {
                SetRelatedEntity("campaign_Teams", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("campaignactivity_Teams")]
        public CampaignActivity campaignactivity_Teams {
            get {
                return GetRelatedEntity<CampaignActivity>("campaignactivity_Teams", null);
            }
            set {
                SetRelatedEntity("campaignactivity_Teams", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("campaignactivityitem_Teams")]
        public CampaignActivityItem campaignactivityitem_Teams {
            get {
                return GetRelatedEntity<CampaignActivityItem>("campaignactivityitem_Teams", null);
            }
            set {
                SetRelatedEntity("campaignactivityitem_Teams", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("campaignitem_Teams")]
        public CampaignItem campaignitem_Teams {
            get {
                return GetRelatedEntity<CampaignItem>("campaignitem_Teams", null);
            }
            set {
                SetRelatedEntity("campaignitem_Teams", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("campaignresponse_Teams")]
        public CampaignResponse campaignresponse_Teams {
            get {
                return GetRelatedEntity<CampaignResponse>("campaignresponse_Teams", null);
            }
            set {
                SetRelatedEntity("campaignresponse_Teams", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("characteristic_Teams")]
        public Characteristic characteristic_Teams {
            get {
                return GetRelatedEntity<Characteristic>("characteristic_Teams", null);
            }
            set {
                SetRelatedEntity("characteristic_Teams", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("contactinvoices_Teams")]
        public ContactInvoices contactinvoices_Teams {
            get {
                return GetRelatedEntity<ContactInvoices>("contactinvoices_Teams", null);
            }
            set {
                SetRelatedEntity("contactinvoices_Teams", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("contactleads_Teams")]
        public ContactLeads contactleads_Teams {
            get {
                return GetRelatedEntity<ContactLeads>("contactleads_Teams", null);
            }
            set {
                SetRelatedEntity("contactleads_Teams", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("contactorders_Teams")]
        public ContactOrders contactorders_Teams {
            get {
                return GetRelatedEntity<ContactOrders>("contactorders_Teams", null);
            }
            set {
                SetRelatedEntity("contactorders_Teams", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("contactquotes_Teams")]
        public ContactQuotes contactquotes_Teams {
            get {
                return GetRelatedEntity<ContactQuotes>("contactquotes_Teams", null);
            }
            set {
                SetRelatedEntity("contactquotes_Teams", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("contract_Teams")]
        public Contract contract_Teams {
            get {
                return GetRelatedEntity<Contract>("contract_Teams", null);
            }
            set {
                SetRelatedEntity("contract_Teams", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("entitlement_Teams")]
        public Entitlement entitlement_Teams {
            get {
                return GetRelatedEntity<Entitlement>("entitlement_Teams", null);
            }
            set {
                SetRelatedEntity("entitlement_Teams", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("entitlementcontacts_Teams")]
        public EntitlementContacts entitlementcontacts_Teams {
            get {
                return GetRelatedEntity<EntitlementContacts>("entitlementcontacts_Teams", null);
            }
            set {
                SetRelatedEntity("entitlementcontacts_Teams", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("incident_Teams")]
        public Incident incident_Teams {
            get {
                return GetRelatedEntity<Incident>("incident_Teams", null);
            }
            set {
                SetRelatedEntity("incident_Teams", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("incidentresolution_Teams")]
        public IncidentResolution incidentresolution_Teams {
            get {
                return GetRelatedEntity<IncidentResolution>("incidentresolution_Teams", null);
            }
            set {
                SetRelatedEntity("incidentresolution_Teams", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("invoice_Teams")]
        public Invoice invoice_Teams {
            get {
                return GetRelatedEntity<Invoice>("invoice_Teams", null);
            }
            set {
                SetRelatedEntity("invoice_Teams", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("knowledgearticle_Teams")]
        public KnowledgeArticle knowledgearticle_Teams {
            get {
                return GetRelatedEntity<KnowledgeArticle>("knowledgearticle_Teams", null);
            }
            set {
                SetRelatedEntity("knowledgearticle_Teams", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("lead_Teams")]
        public Lead lead_Teams {
            get {
                return GetRelatedEntity<Lead>("lead_Teams", null);
            }
            set {
                SetRelatedEntity("lead_Teams", null, value);
            }
        }
        
        [RelationshipSchemaName("lead_owning_team")]
        public IEnumerable<Lead> lead_owning_team {
            get {
                return GetRelatedEntities<Lead>("lead_owning_team", null);
            }
            set {
                SetRelatedEntities("lead_owning_team", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("list_Teams")]
        public List list_Teams {
            get {
                return GetRelatedEntity<List>("list_Teams", null);
            }
            set {
                SetRelatedEntity("list_Teams", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("listmember_Teams")]
        public ListMember listmember_Teams {
            get {
                return GetRelatedEntity<ListMember>("listmember_Teams", null);
            }
            set {
                SetRelatedEntity("listmember_Teams", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_team_createdonbehalfby")]
        public SystemUser lk_team_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_team_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_team_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_team_modifiedonbehalfby")]
        public SystemUser lk_team_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_team_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_team_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("administratorid")]
        [RelationshipSchemaName("lk_teambase_administratorid")]
        public SystemUser lk_teambase_administratorid {
            get {
                return GetRelatedEntity<SystemUser>("lk_teambase_administratorid", null);
            }
            set {
                SetRelatedEntity("lk_teambase_administratorid", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_teambase_createdby")]
        public SystemUser lk_teambase_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_teambase_createdby", null);
            }
            set {
                SetRelatedEntity("lk_teambase_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_teambase_modifiedby")]
        public SystemUser lk_teambase_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_teambase_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_teambase_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("opportunity_Teams")]
        public Opportunity opportunity_Teams {
            get {
                return GetRelatedEntity<Opportunity>("opportunity_Teams", null);
            }
            set {
                SetRelatedEntity("opportunity_Teams", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("opportunityclose_Teams")]
        public OpportunityClose opportunityclose_Teams {
            get {
                return GetRelatedEntity<OpportunityClose>("opportunityclose_Teams", null);
            }
            set {
                SetRelatedEntity("opportunityclose_Teams", null, value);
            }
        }
        
        [AttributeLogicalName("organizationid")]
        [RelationshipSchemaName("organization_teams")]
        public Organization organization_teams {
            get {
                return GetRelatedEntity<Organization>("organization_teams", null);
            }
            set {
                SetRelatedEntity("organization_teams", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("quote_Teams")]
        public Quote quote_Teams {
            get {
                return GetRelatedEntity<Quote>("quote_Teams", null);
            }
            set {
                SetRelatedEntity("quote_Teams", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("ratingmodel_Teams")]
        public RatingModel ratingmodel_Teams {
            get {
                return GetRelatedEntity<RatingModel>("ratingmodel_Teams", null);
            }
            set {
                SetRelatedEntity("ratingmodel_Teams", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("ratingvalue_Teams")]
        public RatingValue ratingvalue_Teams {
            get {
                return GetRelatedEntity<RatingValue>("ratingvalue_Teams", null);
            }
            set {
                SetRelatedEntity("ratingvalue_Teams", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("salesorder_Teams")]
        public SalesOrder salesorder_Teams {
            get {
                return GetRelatedEntity<SalesOrder>("salesorder_Teams", null);
            }
            set {
                SetRelatedEntity("salesorder_Teams", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("serviceappointment_Teams")]
        public ServiceAppointment serviceappointment_Teams {
            get {
                return GetRelatedEntity<ServiceAppointment>("serviceappointment_Teams", null);
            }
            set {
                SetRelatedEntity("serviceappointment_Teams", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("servicecontractcontacts_Teams")]
        public ServiceContractContacts servicecontractcontacts_Teams {
            get {
                return GetRelatedEntity<ServiceContractContacts>("servicecontractcontacts_Teams", null);
            }
            set {
                SetRelatedEntity("servicecontractcontacts_Teams", null, value);
            }
        }
        
        [RelationshipSchemaName("team_Campaigns")]
        public IEnumerable<Campaign> team_Campaigns {
            get {
                return GetRelatedEntities<Campaign>("team_Campaigns", null);
            }
            set {
                SetRelatedEntities("team_Campaigns", null, value);
            }
        }
        
        [RelationshipSchemaName("team_SyncError")]
        public IEnumerable<SyncError> team_SyncError {
            get {
                return GetRelatedEntities<SyncError>("team_SyncError", null);
            }
            set {
                SetRelatedEntities("team_SyncError", null, value);
            }
        }
        
        [RelationshipSchemaName("team_accounts")]
        public IEnumerable<Account> team_accounts {
            get {
                return GetRelatedEntities<Account>("team_accounts", null);
            }
            set {
                SetRelatedEntities("team_accounts", null, value);
            }
        }
        
        [RelationshipSchemaName("team_activity")]
        public IEnumerable<ActivityPointer> team_activity {
            get {
                return GetRelatedEntities<ActivityPointer>("team_activity", null);
            }
            set {
                SetRelatedEntities("team_activity", null, value);
            }
        }
        
        [RelationshipSchemaName("team_appointment")]
        public IEnumerable<Appointment> team_appointment {
            get {
                return GetRelatedEntities<Appointment>("team_appointment", null);
            }
            set {
                SetRelatedEntities("team_appointment", null, value);
            }
        }
        
        [RelationshipSchemaName("team_bookableresource")]
        public IEnumerable<BookableResource> team_bookableresource {
            get {
                return GetRelatedEntities<BookableResource>("team_bookableresource", null);
            }
            set {
                SetRelatedEntities("team_bookableresource", null, value);
            }
        }
        
        [RelationshipSchemaName("team_bookableresourcebooking")]
        public IEnumerable<BookableResourceBooking> team_bookableresourcebooking {
            get {
                return GetRelatedEntities<BookableResourceBooking>("team_bookableresourcebooking", null);
            }
            set {
                SetRelatedEntities("team_bookableresourcebooking", null, value);
            }
        }
        
        [RelationshipSchemaName("team_bookableresourcebookingheader")]
        public IEnumerable<BookableResourceBookingHeader> team_bookableresourcebookingheader {
            get {
                return GetRelatedEntities<BookableResourceBookingHeader>("team_bookableresourcebookingheader", null);
            }
            set {
                SetRelatedEntities("team_bookableresourcebookingheader", null, value);
            }
        }
        
        [RelationshipSchemaName("team_bookableresourcecategory")]
        public IEnumerable<BookableResourceCategory> team_bookableresourcecategory {
            get {
                return GetRelatedEntities<BookableResourceCategory>("team_bookableresourcecategory", null);
            }
            set {
                SetRelatedEntities("team_bookableresourcecategory", null, value);
            }
        }
        
        [RelationshipSchemaName("team_bookableresourcecategoryassn")]
        public IEnumerable<BookableResourceCategoryAssn> team_bookableresourcecategoryassn {
            get {
                return GetRelatedEntities<BookableResourceCategoryAssn>("team_bookableresourcecategoryassn", null);
            }
            set {
                SetRelatedEntities("team_bookableresourcecategoryassn", null, value);
            }
        }
        
        [RelationshipSchemaName("team_bookableresourcecharacteristic")]
        public IEnumerable<BookableResourceCharacteristic> team_bookableresourcecharacteristic {
            get {
                return GetRelatedEntities<BookableResourceCharacteristic>("team_bookableresourcecharacteristic", null);
            }
            set {
                SetRelatedEntities("team_bookableresourcecharacteristic", null, value);
            }
        }
        
        [RelationshipSchemaName("team_bookableresourcegroup")]
        public IEnumerable<BookableResourceGroup> team_bookableresourcegroup {
            get {
                return GetRelatedEntities<BookableResourceGroup>("team_bookableresourcegroup", null);
            }
            set {
                SetRelatedEntities("team_bookableresourcegroup", null, value);
            }
        }
        
        [RelationshipSchemaName("team_bookingstatus")]
        public IEnumerable<BookingStatus> team_bookingstatus {
            get {
                return GetRelatedEntities<BookingStatus>("team_bookingstatus", null);
            }
            set {
                SetRelatedEntities("team_bookingstatus", null, value);
            }
        }
        
        [RelationshipSchemaName("team_bulkoperationlog")]
        public IEnumerable<BulkOperationLog> team_bulkoperationlog {
            get {
                return GetRelatedEntities<BulkOperationLog>("team_bulkoperationlog", null);
            }
            set {
                SetRelatedEntities("team_bulkoperationlog", null, value);
            }
        }
        
        [RelationshipSchemaName("team_campaignactivity")]
        public IEnumerable<CampaignActivity> team_campaignactivity {
            get {
                return GetRelatedEntities<CampaignActivity>("team_campaignactivity", null);
            }
            set {
                SetRelatedEntities("team_campaignactivity", null, value);
            }
        }
        
        [RelationshipSchemaName("team_campaignresponse")]
        public IEnumerable<CampaignResponse> team_campaignresponse {
            get {
                return GetRelatedEntities<CampaignResponse>("team_campaignresponse", null);
            }
            set {
                SetRelatedEntities("team_campaignresponse", null, value);
            }
        }
        
        [RelationshipSchemaName("team_characteristic")]
        public IEnumerable<Characteristic> team_characteristic {
            get {
                return GetRelatedEntities<Characteristic>("team_characteristic", null);
            }
            set {
                SetRelatedEntities("team_characteristic", null, value);
            }
        }
        
        [RelationshipSchemaName("team_connections1")]
        public IEnumerable<Connection> team_connections1 {
            get {
                return GetRelatedEntities<Connection>("team_connections1", null);
            }
            set {
                SetRelatedEntities("team_connections1", null, value);
            }
        }
        
        [RelationshipSchemaName("team_connections2")]
        public IEnumerable<Connection> team_connections2 {
            get {
                return GetRelatedEntities<Connection>("team_connections2", null);
            }
            set {
                SetRelatedEntities("team_connections2", null, value);
            }
        }
        
        [RelationshipSchemaName("team_contacts")]
        public IEnumerable<Contact> team_contacts {
            get {
                return GetRelatedEntities<Contact>("team_contacts", null);
            }
            set {
                SetRelatedEntities("team_contacts", null, value);
            }
        }
        
        [RelationshipSchemaName("team_dg_animal")]
        public IEnumerable<dg_animal> team_dg_animal {
            get {
                return GetRelatedEntities<dg_animal>("team_dg_animal", null);
            }
            set {
                SetRelatedEntities("team_dg_animal", null, value);
            }
        }
        
        [RelationshipSchemaName("team_dg_animalfood")]
        public IEnumerable<dg_animalfood> team_dg_animalfood {
            get {
                return GetRelatedEntities<dg_animalfood>("team_dg_animalfood", null);
            }
            set {
                SetRelatedEntities("team_dg_animalfood", null, value);
            }
        }
        
        [RelationshipSchemaName("team_dg_bus")]
        public IEnumerable<dg_bus> team_dg_bus {
            get {
                return GetRelatedEntities<dg_bus>("team_dg_bus", null);
            }
            set {
                SetRelatedEntities("team_dg_bus", null, value);
            }
        }
        
        [RelationshipSchemaName("team_dg_child")]
        public IEnumerable<dg_child> team_dg_child {
            get {
                return GetRelatedEntities<dg_child>("team_dg_child", null);
            }
            set {
                SetRelatedEntities("team_dg_child", null, value);
            }
        }
        
        [RelationshipSchemaName("team_dg_configuration")]
        public IEnumerable<dg_configuration> team_dg_configuration {
            get {
                return GetRelatedEntities<dg_configuration>("team_dg_configuration", null);
            }
            set {
                SetRelatedEntities("team_dg_configuration", null, value);
            }
        }
        
        [RelationshipSchemaName("team_dg_country")]
        public IEnumerable<dg_country> team_dg_country {
            get {
                return GetRelatedEntities<dg_country>("team_dg_country", null);
            }
            set {
                SetRelatedEntities("team_dg_country", null, value);
            }
        }
        
        [RelationshipSchemaName("team_dg_event")]
        public IEnumerable<dg_event> team_dg_event {
            get {
                return GetRelatedEntities<dg_event>("team_dg_event", null);
            }
            set {
                SetRelatedEntities("team_dg_event", null, value);
            }
        }
        
        [RelationshipSchemaName("team_dg_field")]
        public IEnumerable<dg_field> team_dg_field {
            get {
                return GetRelatedEntities<dg_field>("team_dg_field", null);
            }
            set {
                SetRelatedEntities("team_dg_field", null, value);
            }
        }
        
        [RelationshipSchemaName("team_dg_food")]
        public IEnumerable<dg_food> team_dg_food {
            get {
                return GetRelatedEntities<dg_food>("team_dg_food", null);
            }
            set {
                SetRelatedEntities("team_dg_food", null, value);
            }
        }
        
        [RelationshipSchemaName("team_dg_man")]
        public IEnumerable<dg_man> team_dg_man {
            get {
                return GetRelatedEntities<dg_man>("team_dg_man", null);
            }
            set {
                SetRelatedEntities("team_dg_man", null, value);
            }
        }
        
        [RelationshipSchemaName("team_dg_mild")]
        public IEnumerable<dg_mild> team_dg_mild {
            get {
                return GetRelatedEntities<dg_mild>("team_dg_mild", null);
            }
            set {
                SetRelatedEntities("team_dg_mild", null, value);
            }
        }
        
        [RelationshipSchemaName("team_dg_participant")]
        public IEnumerable<dg_participant> team_dg_participant {
            get {
                return GetRelatedEntities<dg_participant>("team_dg_participant", null);
            }
            set {
                SetRelatedEntities("team_dg_participant", null, value);
            }
        }
        
        [RelationshipSchemaName("team_dg_secroletest")]
        public IEnumerable<dg_secroletest> team_dg_secroletest {
            get {
                return GetRelatedEntities<dg_secroletest>("team_dg_secroletest", null);
            }
            set {
                SetRelatedEntities("team_dg_secroletest", null, value);
            }
        }
        
        [RelationshipSchemaName("team_dg_sheep")]
        public IEnumerable<dg_sheep> team_dg_sheep {
            get {
                return GetRelatedEntities<dg_sheep>("team_dg_sheep", null);
            }
            set {
                SetRelatedEntities("team_dg_sheep", null, value);
            }
        }
        
        [RelationshipSchemaName("team_dg_tooth")]
        public IEnumerable<dg_tooth> team_dg_tooth {
            get {
                return GetRelatedEntities<dg_tooth>("team_dg_tooth", null);
            }
            set {
                SetRelatedEntities("team_dg_tooth", null, value);
            }
        }
        
        [RelationshipSchemaName("team_dg_zipcodecity")]
        public IEnumerable<dg_zipCodeCity> team_dg_zipcodecity {
            get {
                return GetRelatedEntities<dg_zipCodeCity>("team_dg_zipcodecity", null);
            }
            set {
                SetRelatedEntities("team_dg_zipcodecity", null, value);
            }
        }
        
        [RelationshipSchemaName("team_email")]
        public IEnumerable<Email> team_email {
            get {
                return GetRelatedEntities<Email>("team_email", null);
            }
            set {
                SetRelatedEntities("team_email", null, value);
            }
        }
        
        [RelationshipSchemaName("team_emailserverprofile")]
        public IEnumerable<EmailServerProfile> team_emailserverprofile {
            get {
                return GetRelatedEntities<EmailServerProfile>("team_emailserverprofile", null);
            }
            set {
                SetRelatedEntities("team_emailserverprofile", null, value);
            }
        }
        
        [RelationshipSchemaName("team_entitlement")]
        public IEnumerable<Entitlement> team_entitlement {
            get {
                return GetRelatedEntities<Entitlement>("team_entitlement", null);
            }
            set {
                SetRelatedEntities("team_entitlement", null, value);
            }
        }
        
        [RelationshipSchemaName("team_fax")]
        public IEnumerable<Fax> team_fax {
            get {
                return GetRelatedEntities<Fax>("team_fax", null);
            }
            set {
                SetRelatedEntities("team_fax", null, value);
            }
        }
        
        [RelationshipSchemaName("team_goal")]
        public IEnumerable<Goal> team_goal {
            get {
                return GetRelatedEntities<Goal>("team_goal", null);
            }
            set {
                SetRelatedEntities("team_goal", null, value);
            }
        }
        
        [RelationshipSchemaName("team_goal_goalowner")]
        public IEnumerable<Goal> team_goal_goalowner {
            get {
                return GetRelatedEntities<Goal>("team_goal_goalowner", null);
            }
            set {
                SetRelatedEntities("team_goal_goalowner", null, value);
            }
        }
        
        [RelationshipSchemaName("team_incidentresolution")]
        public IEnumerable<IncidentResolution> team_incidentresolution {
            get {
                return GetRelatedEntities<IncidentResolution>("team_incidentresolution", null);
            }
            set {
                SetRelatedEntities("team_incidentresolution", null, value);
            }
        }
        
        [RelationshipSchemaName("team_incidents")]
        public IEnumerable<Incident> team_incidents {
            get {
                return GetRelatedEntities<Incident>("team_incidents", null);
            }
            set {
                SetRelatedEntities("team_incidents", null, value);
            }
        }
        
        [RelationshipSchemaName("team_invoices")]
        public IEnumerable<Invoice> team_invoices {
            get {
                return GetRelatedEntities<Invoice>("team_invoices", null);
            }
            set {
                SetRelatedEntities("team_invoices", null, value);
            }
        }
        
        [RelationshipSchemaName("team_knowledgearticle")]
        public IEnumerable<KnowledgeArticle> team_knowledgearticle {
            get {
                return GetRelatedEntities<KnowledgeArticle>("team_knowledgearticle", null);
            }
            set {
                SetRelatedEntities("team_knowledgearticle", null, value);
            }
        }
        
        [RelationshipSchemaName("team_letter")]
        public IEnumerable<Letter> team_letter {
            get {
                return GetRelatedEntities<Letter>("team_letter", null);
            }
            set {
                SetRelatedEntities("team_letter", null, value);
            }
        }
        
        [RelationshipSchemaName("team_list")]
        public IEnumerable<List> team_list {
            get {
                return GetRelatedEntities<List>("team_list", null);
            }
            set {
                SetRelatedEntities("team_list", null, value);
            }
        }
        
        [RelationshipSchemaName("team_mailbox")]
        public IEnumerable<Mailbox> team_mailbox {
            get {
                return GetRelatedEntities<Mailbox>("team_mailbox", null);
            }
            set {
                SetRelatedEntities("team_mailbox", null, value);
            }
        }
        
        [RelationshipSchemaName("team_msdyn_agreement")]
        public IEnumerable<msdyn_agreement> team_msdyn_agreement {
            get {
                return GetRelatedEntities<msdyn_agreement>("team_msdyn_agreement", null);
            }
            set {
                SetRelatedEntities("team_msdyn_agreement", null, value);
            }
        }
        
        [RelationshipSchemaName("team_msdyn_postalbum")]
        public IEnumerable<msdyn_PostAlbum> team_msdyn_postalbum {
            get {
                return GetRelatedEntities<msdyn_PostAlbum>("team_msdyn_postalbum", null);
            }
            set {
                SetRelatedEntities("team_msdyn_postalbum", null, value);
            }
        }
        
        [RelationshipSchemaName("team_msdyn_wallsavedqueryusersettings")]
        public IEnumerable<msdyn_wallsavedqueryusersettings> team_msdyn_wallsavedqueryusersettings {
            get {
                return GetRelatedEntities<msdyn_wallsavedqueryusersettings>("team_msdyn_wallsavedqueryusersettings", null);
            }
            set {
                SetRelatedEntities("team_msdyn_wallsavedqueryusersettings", null, value);
            }
        }
        
        [RelationshipSchemaName("team_opportunities")]
        public IEnumerable<Opportunity> team_opportunities {
            get {
                return GetRelatedEntities<Opportunity>("team_opportunities", null);
            }
            set {
                SetRelatedEntities("team_opportunities", null, value);
            }
        }
        
        [RelationshipSchemaName("team_opportunityclose")]
        public IEnumerable<OpportunityClose> team_opportunityclose {
            get {
                return GetRelatedEntities<OpportunityClose>("team_opportunityclose", null);
            }
            set {
                SetRelatedEntities("team_opportunityclose", null, value);
            }
        }
        
        [RelationshipSchemaName("team_orders")]
        public IEnumerable<SalesOrder> team_orders {
            get {
                return GetRelatedEntities<SalesOrder>("team_orders", null);
            }
            set {
                SetRelatedEntities("team_orders", null, value);
            }
        }
        
        [RelationshipSchemaName("team_phonecall")]
        public IEnumerable<PhoneCall> team_phonecall {
            get {
                return GetRelatedEntities<PhoneCall>("team_phonecall", null);
            }
            set {
                SetRelatedEntities("team_phonecall", null, value);
            }
        }
        
        [RelationshipSchemaName("team_queueitembase_workerid")]
        public IEnumerable<QueueItem> team_queueitembase_workerid {
            get {
                return GetRelatedEntities<QueueItem>("team_queueitembase_workerid", null);
            }
            set {
                SetRelatedEntities("team_queueitembase_workerid", null, value);
            }
        }
        
        [RelationshipSchemaName("team_quotes")]
        public IEnumerable<Quote> team_quotes {
            get {
                return GetRelatedEntities<Quote>("team_quotes", null);
            }
            set {
                SetRelatedEntities("team_quotes", null, value);
            }
        }
        
        [RelationshipSchemaName("team_ratingmodel")]
        public IEnumerable<RatingModel> team_ratingmodel {
            get {
                return GetRelatedEntities<RatingModel>("team_ratingmodel", null);
            }
            set {
                SetRelatedEntities("team_ratingmodel", null, value);
            }
        }
        
        [RelationshipSchemaName("team_ratingvalue")]
        public IEnumerable<RatingValue> team_ratingvalue {
            get {
                return GetRelatedEntities<RatingValue>("team_ratingvalue", null);
            }
            set {
                SetRelatedEntities("team_ratingvalue", null, value);
            }
        }
        
        [RelationshipSchemaName("team_recurringappointmentmaster")]
        public IEnumerable<RecurringAppointmentMaster> team_recurringappointmentmaster {
            get {
                return GetRelatedEntities<RecurringAppointmentMaster>("team_recurringappointmentmaster", null);
            }
            set {
                SetRelatedEntities("team_recurringappointmentmaster", null, value);
            }
        }
        
        [RelationshipSchemaName("team_service_appointments")]
        public IEnumerable<ServiceAppointment> team_service_appointments {
            get {
                return GetRelatedEntities<ServiceAppointment>("team_service_appointments", null);
            }
            set {
                SetRelatedEntities("team_service_appointments", null, value);
            }
        }
        
        [RelationshipSchemaName("team_service_contracts")]
        public IEnumerable<Contract> team_service_contracts {
            get {
                return GetRelatedEntities<Contract>("team_service_contracts", null);
            }
            set {
                SetRelatedEntities("team_service_contracts", null, value);
            }
        }
        
        [RelationshipSchemaName("team_sharepointdocumentlocation")]
        public IEnumerable<SharePointDocumentLocation> team_sharepointdocumentlocation {
            get {
                return GetRelatedEntities<SharePointDocumentLocation>("team_sharepointdocumentlocation", null);
            }
            set {
                SetRelatedEntities("team_sharepointdocumentlocation", null, value);
            }
        }
        
        [RelationshipSchemaName("team_sharepointsite")]
        public IEnumerable<SharePointSite> team_sharepointsite {
            get {
                return GetRelatedEntities<SharePointSite>("team_sharepointsite", null);
            }
            set {
                SetRelatedEntities("team_sharepointsite", null, value);
            }
        }
        
        [RelationshipSchemaName("team_slaBase")]
        public IEnumerable<SLA> team_slaBase {
            get {
                return GetRelatedEntities<SLA>("team_slaBase", null);
            }
            set {
                SetRelatedEntities("team_slaBase", null, value);
            }
        }
        
        [RelationshipSchemaName("team_socialactivity")]
        public IEnumerable<SocialActivity> team_socialactivity {
            get {
                return GetRelatedEntities<SocialActivity>("team_socialactivity", null);
            }
            set {
                SetRelatedEntities("team_socialactivity", null, value);
            }
        }
        
        [RelationshipSchemaName("team_task")]
        public IEnumerable<Task> team_task {
            get {
                return GetRelatedEntities<Task>("team_task", null);
            }
            set {
                SetRelatedEntities("team_task", null, value);
            }
        }
        
        [RelationshipSchemaName("team_workflow")]
        public IEnumerable<Workflow> team_workflow {
            get {
                return GetRelatedEntities<Workflow>("team_workflow", null);
            }
            set {
                SetRelatedEntities("team_workflow", null, value);
            }
        }
        
        [RelationshipSchemaName("teammembership_association")]
        public IEnumerable<SystemUser> teammembership_association {
            get {
                return GetRelatedEntities<SystemUser>("teammembership_association", null);
            }
            set {
                SetRelatedEntities("teammembership_association", null, value);
            }
        }
        
        public static Team Retrieve(IOrganizationService service, Guid id, params Expression<Func<Team,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
        
        /// <summary>
        /// <para>Retrieves the record using the alternate key called 'AAD ObjectId with MembershipType'</para>
        /// </summary>
        public static Team Retrieve_aadobjectid_membershiptype(IOrganizationService service, Guid AzureActiveDirectoryObjectId, Team_MembershipType MembershipType, params Expression<Func<Team,object>>[] attrs) {
            KeyAttributeCollection keys = new KeyAttributeCollection();
            keys.Add("azureactivedirectoryobjectid", AzureActiveDirectoryObjectId);
            keys.Add("membershiptype", MembershipType);
            return Retrieve_AltKey(service, keys, attrs);
        }
        
        /// <summary>
        /// <para>Set values for the alternate key called 'AAD ObjectId with MembershipType'</para>
        /// </summary>
        public void AltKey_aadobjectid_membershiptype(Guid AzureActiveDirectoryObjectId, Team_MembershipType MembershipType) {
            KeyAttributes.Clear();
            KeyAttributes.Add("azureactivedirectoryobjectid", AzureActiveDirectoryObjectId);
            KeyAttributes.Add("membershiptype", MembershipType);
        }
    }
    
    [EntityLogicalName("teammembership")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class TeamMembership : ExtendedEntity<EmptyEnum, EmptyEnum> {
        
        public const string EntityLogicalName = "teammembership";
        
        public const string RelationshipSchemaName = "TeamMembership";
        
        public const int EntityTypeCode = 23;
        
        public TeamMembership() : 
                base(EntityLogicalName) {
        }
        
        public TeamMembership(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay(null);
            }
        }
        
        [AttributeLogicalName("teammembershipid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("teammembershipid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the team membership.</para>
        /// </summary>
        [AttributeLogicalName("teammembershipid")]
        public Guid? TeamMembershipId {
            get {
                return GetAttributeValue<Guid?>("teammembershipid");
            }
            set {
                SetId("teammembershipid", value);
            }
        }
        
        [AttributeLogicalName("systemuserid")]
        public Guid? SystemUserId {
            get {
                return GetAttributeValue<Guid?>("systemuserid");
            }
        }
        
        [AttributeLogicalName("teamid")]
        public Guid? TeamId {
            get {
                return GetAttributeValue<Guid?>("teamid");
            }
        }
        
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        public static TeamMembership Retrieve(IOrganizationService service, Guid id, params Expression<Func<TeamMembership,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Currency in which a financial transaction is carried out.</para>
    /// <para>Display Name: Currency</para>
    /// </summary>
    [EntityLogicalName("transactioncurrency")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class TransactionCurrency : ExtendedEntity<TransactionCurrencyState, TransactionCurrency_StatusCode> {
        
        public const string EntityLogicalName = "transactioncurrency";
        
        public const int EntityTypeCode = 9105;
        
        public TransactionCurrency() : 
                base(EntityLogicalName) {
        }
        
        public TransactionCurrency(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("currencyname");
            }
        }
        
        [AttributeLogicalName("transactioncurrencyid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the transaction currency.</para>
        /// <para>Display Name: Transaction Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Transaction Currency")]
        public Guid? TransactionCurrencyId {
            get {
                return GetAttributeValue<Guid?>("transactioncurrencyid");
            }
            set {
                SetId("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the transaction currency.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the transaction currency was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the transactioncurrency.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Name of the transaction currency.</para>
        /// <para>Display Name: Currency Name</para>
        /// </summary>
        [AttributeLogicalName("currencyname")]
        [DisplayName("Currency Name")]
        [MaxLength(100)]
        public string CurrencyName {
            get {
                return GetAttributeValue<string>("currencyname");
            }
            set {
                SetAttributeValue("currencyname", value);
            }
        }
        
        /// <summary>
        /// <para>Number of decimal places that can be used for currency.</para>
        /// <para>Display Name: Currency Precision</para>
        /// </summary>
        [AttributeLogicalName("currencyprecision")]
        [DisplayName("Currency Precision")]
        [Range(0, 4)]
        public int? CurrencyPrecision {
            get {
                return GetAttributeValue<int?>("currencyprecision");
            }
            set {
                SetAttributeValue("currencyprecision", value);
            }
        }
        
        /// <summary>
        /// <para>Symbol for the transaction currency.</para>
        /// <para>Display Name: Currency Symbol</para>
        /// </summary>
        [AttributeLogicalName("currencysymbol")]
        [DisplayName("Currency Symbol")]
        [MaxLength(13)]
        public string CurrencySymbol {
            get {
                return GetAttributeValue<string>("currencysymbol");
            }
            set {
                SetAttributeValue("currencysymbol", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Entity Image Id</para>
        /// </summary>
        [AttributeLogicalName("entityimageid")]
        [DisplayName("Entity Image Id")]
        public Guid? EntityImageId {
            get {
                return GetAttributeValue<Guid?>("entityimageid");
            }
        }
        
        /// <summary>
        /// <para>Exchange rate between the transaction currency and the base currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("Exchange Rate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
            set {
                SetAttributeValue("exchangerate", value);
            }
        }
        
        /// <summary>
        /// <para>ISO currency code for the transaction currency.</para>
        /// <para>Display Name: Currency Code</para>
        /// </summary>
        [AttributeLogicalName("isocurrencycode")]
        [DisplayName("Currency Code")]
        [MaxLength(5)]
        public string ISOCurrencyCode {
            get {
                return GetAttributeValue<string>("isocurrencycode");
            }
            set {
                SetAttributeValue("isocurrencycode", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the data import or data migration that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who last modified the transaction currency.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the transaction currency was last modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who last modified the transactioncurrency.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the organization associated with the transaction currency.</para>
        /// <para>Display Name: Organization</para>
        /// </summary>
        [AttributeLogicalName("organizationid")]
        [DisplayName("Organization")]
        public EntityReference OrganizationId {
            get {
                return GetAttributeValue<EntityReference>("organizationid");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Name of the transaction currency.</para>
        /// <para>Display Name: Currency Name</para>
        /// </summary>
        [AttributeLogicalName("currencyname")]
        [DisplayName("Currency Name")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("currencyname");
            }
            set {
                SetAttributeValue("currencyname", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the transaction currency.</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public TransactionCurrencyState? StateCode {
            get {
                return GetOptionSetValue<TransactionCurrencyState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the transaction currency.</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public TransactionCurrency_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<TransactionCurrency_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>Version number of the transaction currency.</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        [RelationshipSchemaName("TransactionCurrency_ActivityPointer")]
        public IEnumerable<ActivityPointer> TransactionCurrency_ActivityPointer {
            get {
                return GetRelatedEntities<ActivityPointer>("TransactionCurrency_ActivityPointer", null);
            }
            set {
                SetRelatedEntities("TransactionCurrency_ActivityPointer", null, value);
            }
        }
        
        [RelationshipSchemaName("TransactionCurrency_Appointment")]
        public IEnumerable<Appointment> TransactionCurrency_Appointment {
            get {
                return GetRelatedEntities<Appointment>("TransactionCurrency_Appointment", null);
            }
            set {
                SetRelatedEntities("TransactionCurrency_Appointment", null, value);
            }
        }
        
        [RelationshipSchemaName("TransactionCurrency_BusinessUnit")]
        public IEnumerable<BusinessUnit> TransactionCurrency_BusinessUnit {
            get {
                return GetRelatedEntities<BusinessUnit>("TransactionCurrency_BusinessUnit", null);
            }
            set {
                SetRelatedEntities("TransactionCurrency_BusinessUnit", null, value);
            }
        }
        
        [RelationshipSchemaName("TransactionCurrency_CampaignResponse")]
        public IEnumerable<CampaignResponse> TransactionCurrency_CampaignResponse {
            get {
                return GetRelatedEntities<CampaignResponse>("TransactionCurrency_CampaignResponse", null);
            }
            set {
                SetRelatedEntities("TransactionCurrency_CampaignResponse", null, value);
            }
        }
        
        [RelationshipSchemaName("TransactionCurrency_Connection")]
        public IEnumerable<Connection> TransactionCurrency_Connection {
            get {
                return GetRelatedEntities<Connection>("TransactionCurrency_Connection", null);
            }
            set {
                SetRelatedEntities("TransactionCurrency_Connection", null, value);
            }
        }
        
        [RelationshipSchemaName("TransactionCurrency_CustomerAddress")]
        public IEnumerable<CustomerAddress> TransactionCurrency_CustomerAddress {
            get {
                return GetRelatedEntities<CustomerAddress>("TransactionCurrency_CustomerAddress", null);
            }
            set {
                SetRelatedEntities("TransactionCurrency_CustomerAddress", null, value);
            }
        }
        
        [RelationshipSchemaName("TransactionCurrency_Email")]
        public IEnumerable<Email> TransactionCurrency_Email {
            get {
                return GetRelatedEntities<Email>("TransactionCurrency_Email", null);
            }
            set {
                SetRelatedEntities("TransactionCurrency_Email", null, value);
            }
        }
        
        [RelationshipSchemaName("TransactionCurrency_Entitlement")]
        public IEnumerable<Entitlement> TransactionCurrency_Entitlement {
            get {
                return GetRelatedEntities<Entitlement>("TransactionCurrency_Entitlement", null);
            }
            set {
                SetRelatedEntities("TransactionCurrency_Entitlement", null, value);
            }
        }
        
        [RelationshipSchemaName("TransactionCurrency_Fax")]
        public IEnumerable<Fax> TransactionCurrency_Fax {
            get {
                return GetRelatedEntities<Fax>("TransactionCurrency_Fax", null);
            }
            set {
                SetRelatedEntities("TransactionCurrency_Fax", null, value);
            }
        }
        
        [RelationshipSchemaName("TransactionCurrency_Goal")]
        public IEnumerable<Goal> TransactionCurrency_Goal {
            get {
                return GetRelatedEntities<Goal>("TransactionCurrency_Goal", null);
            }
            set {
                SetRelatedEntities("TransactionCurrency_Goal", null, value);
            }
        }
        
        [RelationshipSchemaName("TransactionCurrency_Incident")]
        public IEnumerable<Incident> TransactionCurrency_Incident {
            get {
                return GetRelatedEntities<Incident>("TransactionCurrency_Incident", null);
            }
            set {
                SetRelatedEntities("TransactionCurrency_Incident", null, value);
            }
        }
        
        [RelationshipSchemaName("TransactionCurrency_Letter")]
        public IEnumerable<Letter> TransactionCurrency_Letter {
            get {
                return GetRelatedEntities<Letter>("TransactionCurrency_Letter", null);
            }
            set {
                SetRelatedEntities("TransactionCurrency_Letter", null, value);
            }
        }
        
        [RelationshipSchemaName("TransactionCurrency_PhoneCall")]
        public IEnumerable<PhoneCall> TransactionCurrency_PhoneCall {
            get {
                return GetRelatedEntities<PhoneCall>("TransactionCurrency_PhoneCall", null);
            }
            set {
                SetRelatedEntities("TransactionCurrency_PhoneCall", null, value);
            }
        }
        
        [RelationshipSchemaName("TransactionCurrency_QueueItem")]
        public IEnumerable<QueueItem> TransactionCurrency_QueueItem {
            get {
                return GetRelatedEntities<QueueItem>("TransactionCurrency_QueueItem", null);
            }
            set {
                SetRelatedEntities("TransactionCurrency_QueueItem", null, value);
            }
        }
        
        [RelationshipSchemaName("TransactionCurrency_RecurringAppointmentMaster")]
        public IEnumerable<RecurringAppointmentMaster> TransactionCurrency_RecurringAppointmentMaster {
            get {
                return GetRelatedEntities<RecurringAppointmentMaster>("TransactionCurrency_RecurringAppointmentMaster", null);
            }
            set {
                SetRelatedEntities("TransactionCurrency_RecurringAppointmentMaster", null, value);
            }
        }
        
        [RelationshipSchemaName("TransactionCurrency_SLA")]
        public IEnumerable<SLA> TransactionCurrency_SLA {
            get {
                return GetRelatedEntities<SLA>("TransactionCurrency_SLA", null);
            }
            set {
                SetRelatedEntities("TransactionCurrency_SLA", null, value);
            }
        }
        
        [RelationshipSchemaName("TransactionCurrency_ServiceAppointment")]
        public IEnumerable<ServiceAppointment> TransactionCurrency_ServiceAppointment {
            get {
                return GetRelatedEntities<ServiceAppointment>("TransactionCurrency_ServiceAppointment", null);
            }
            set {
                SetRelatedEntities("TransactionCurrency_ServiceAppointment", null, value);
            }
        }
        
        [RelationshipSchemaName("TransactionCurrency_SharePointDocumentLocation")]
        public IEnumerable<SharePointDocumentLocation> TransactionCurrency_SharePointDocumentLocation {
            get {
                return GetRelatedEntities<SharePointDocumentLocation>("TransactionCurrency_SharePointDocumentLocation", null);
            }
            set {
                SetRelatedEntities("TransactionCurrency_SharePointDocumentLocation", null, value);
            }
        }
        
        [RelationshipSchemaName("TransactionCurrency_SharePointSite")]
        public IEnumerable<SharePointSite> TransactionCurrency_SharePointSite {
            get {
                return GetRelatedEntities<SharePointSite>("TransactionCurrency_SharePointSite", null);
            }
            set {
                SetRelatedEntities("TransactionCurrency_SharePointSite", null, value);
            }
        }
        
        [RelationshipSchemaName("TransactionCurrency_SyncErrors")]
        public IEnumerable<SyncError> TransactionCurrency_SyncErrors {
            get {
                return GetRelatedEntities<SyncError>("TransactionCurrency_SyncErrors", null);
            }
            set {
                SetRelatedEntities("TransactionCurrency_SyncErrors", null, value);
            }
        }
        
        [RelationshipSchemaName("TransactionCurrency_SystemUser")]
        public IEnumerable<SystemUser> TransactionCurrency_SystemUser {
            get {
                return GetRelatedEntities<SystemUser>("TransactionCurrency_SystemUser", null);
            }
            set {
                SetRelatedEntities("TransactionCurrency_SystemUser", null, value);
            }
        }
        
        [RelationshipSchemaName("TransactionCurrency_Task")]
        public IEnumerable<Task> TransactionCurrency_Task {
            get {
                return GetRelatedEntities<Task>("TransactionCurrency_Task", null);
            }
            set {
                SetRelatedEntities("TransactionCurrency_Task", null, value);
            }
        }
        
        [RelationshipSchemaName("TransactionCurrency_Team")]
        public IEnumerable<Team> TransactionCurrency_Team {
            get {
                return GetRelatedEntities<Team>("TransactionCurrency_Team", null);
            }
            set {
                SetRelatedEntities("TransactionCurrency_Team", null, value);
            }
        }
        
        [RelationshipSchemaName("TransactionCurrency_bookableresource")]
        public IEnumerable<BookableResource> TransactionCurrency_bookableresource {
            get {
                return GetRelatedEntities<BookableResource>("TransactionCurrency_bookableresource", null);
            }
            set {
                SetRelatedEntities("TransactionCurrency_bookableresource", null, value);
            }
        }
        
        [RelationshipSchemaName("TransactionCurrency_bookableresourcebooking")]
        public IEnumerable<BookableResourceBooking> TransactionCurrency_bookableresourcebooking {
            get {
                return GetRelatedEntities<BookableResourceBooking>("TransactionCurrency_bookableresourcebooking", null);
            }
            set {
                SetRelatedEntities("TransactionCurrency_bookableresourcebooking", null, value);
            }
        }
        
        [RelationshipSchemaName("TransactionCurrency_bookableresourcebookingheader")]
        public IEnumerable<BookableResourceBookingHeader> TransactionCurrency_bookableresourcebookingheader {
            get {
                return GetRelatedEntities<BookableResourceBookingHeader>("TransactionCurrency_bookableresourcebookingheader", null);
            }
            set {
                SetRelatedEntities("TransactionCurrency_bookableresourcebookingheader", null, value);
            }
        }
        
        [RelationshipSchemaName("TransactionCurrency_bookableresourcecategory")]
        public IEnumerable<BookableResourceCategory> TransactionCurrency_bookableresourcecategory {
            get {
                return GetRelatedEntities<BookableResourceCategory>("TransactionCurrency_bookableresourcecategory", null);
            }
            set {
                SetRelatedEntities("TransactionCurrency_bookableresourcecategory", null, value);
            }
        }
        
        [RelationshipSchemaName("TransactionCurrency_bookableresourcecategoryassn")]
        public IEnumerable<BookableResourceCategoryAssn> TransactionCurrency_bookableresourcecategoryassn {
            get {
                return GetRelatedEntities<BookableResourceCategoryAssn>("TransactionCurrency_bookableresourcecategoryassn", null);
            }
            set {
                SetRelatedEntities("TransactionCurrency_bookableresourcecategoryassn", null, value);
            }
        }
        
        [RelationshipSchemaName("TransactionCurrency_bookableresourcecharacteristic")]
        public IEnumerable<BookableResourceCharacteristic> TransactionCurrency_bookableresourcecharacteristic {
            get {
                return GetRelatedEntities<BookableResourceCharacteristic>("TransactionCurrency_bookableresourcecharacteristic", null);
            }
            set {
                SetRelatedEntities("TransactionCurrency_bookableresourcecharacteristic", null, value);
            }
        }
        
        [RelationshipSchemaName("TransactionCurrency_bookableresourcegroup")]
        public IEnumerable<BookableResourceGroup> TransactionCurrency_bookableresourcegroup {
            get {
                return GetRelatedEntities<BookableResourceGroup>("TransactionCurrency_bookableresourcegroup", null);
            }
            set {
                SetRelatedEntities("TransactionCurrency_bookableresourcegroup", null, value);
            }
        }
        
        [RelationshipSchemaName("TransactionCurrency_bookingstatus")]
        public IEnumerable<BookingStatus> TransactionCurrency_bookingstatus {
            get {
                return GetRelatedEntities<BookingStatus>("TransactionCurrency_bookingstatus", null);
            }
            set {
                SetRelatedEntities("TransactionCurrency_bookingstatus", null, value);
            }
        }
        
        [RelationshipSchemaName("TransactionCurrency_characteristic")]
        public IEnumerable<Characteristic> TransactionCurrency_characteristic {
            get {
                return GetRelatedEntities<Characteristic>("TransactionCurrency_characteristic", null);
            }
            set {
                SetRelatedEntities("TransactionCurrency_characteristic", null, value);
            }
        }
        
        [RelationshipSchemaName("TransactionCurrency_dg_bus")]
        public IEnumerable<dg_bus> TransactionCurrency_dg_bus {
            get {
                return GetRelatedEntities<dg_bus>("TransactionCurrency_dg_bus", null);
            }
            set {
                SetRelatedEntities("TransactionCurrency_dg_bus", null, value);
            }
        }
        
        [RelationshipSchemaName("TransactionCurrency_dg_child")]
        public IEnumerable<dg_child> TransactionCurrency_dg_child {
            get {
                return GetRelatedEntities<dg_child>("TransactionCurrency_dg_child", null);
            }
            set {
                SetRelatedEntities("TransactionCurrency_dg_child", null, value);
            }
        }
        
        [RelationshipSchemaName("TransactionCurrency_knowledgearticle")]
        public IEnumerable<KnowledgeArticle> TransactionCurrency_knowledgearticle {
            get {
                return GetRelatedEntities<KnowledgeArticle>("TransactionCurrency_knowledgearticle", null);
            }
            set {
                SetRelatedEntities("TransactionCurrency_knowledgearticle", null, value);
            }
        }
        
        [RelationshipSchemaName("TransactionCurrency_ratingmodel")]
        public IEnumerable<RatingModel> TransactionCurrency_ratingmodel {
            get {
                return GetRelatedEntities<RatingModel>("TransactionCurrency_ratingmodel", null);
            }
            set {
                SetRelatedEntities("TransactionCurrency_ratingmodel", null, value);
            }
        }
        
        [RelationshipSchemaName("TransactionCurrency_ratingvalue")]
        public IEnumerable<RatingValue> TransactionCurrency_ratingvalue {
            get {
                return GetRelatedEntities<RatingValue>("TransactionCurrency_ratingvalue", null);
            }
            set {
                SetRelatedEntities("TransactionCurrency_ratingvalue", null, value);
            }
        }
        
        [RelationshipSchemaName("basecurrency_organization")]
        public IEnumerable<Organization> basecurrency_organization {
            get {
                return GetRelatedEntities<Organization>("basecurrency_organization", null);
            }
            set {
                SetRelatedEntities("basecurrency_organization", null, value);
            }
        }
        
        [RelationshipSchemaName("incidentresolution_transactioncurrency_transactioncurrencyid")]
        public IEnumerable<IncidentResolution> incidentresolution_transactioncurrency_transactioncurrencyid {
            get {
                return GetRelatedEntities<IncidentResolution>("incidentresolution_transactioncurrency_transactioncurrencyid", null);
            }
            set {
                SetRelatedEntities("incidentresolution_transactioncurrency_transactioncurrencyid", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_transactioncurrency_createdonbehalfby")]
        public SystemUser lk_transactioncurrency_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_transactioncurrency_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_transactioncurrency_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_transactioncurrency_modifiedonbehalfby")]
        public SystemUser lk_transactioncurrency_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_transactioncurrency_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_transactioncurrency_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_transactioncurrencybase_createdby")]
        public SystemUser lk_transactioncurrencybase_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_transactioncurrencybase_createdby", null);
            }
            set {
                SetRelatedEntity("lk_transactioncurrencybase_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_transactioncurrencybase_modifiedby")]
        public SystemUser lk_transactioncurrencybase_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_transactioncurrencybase_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_transactioncurrencybase_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("organizationid")]
        [RelationshipSchemaName("organization_transactioncurrencies")]
        public Organization organization_transactioncurrencies {
            get {
                return GetRelatedEntity<Organization>("organization_transactioncurrencies", null);
            }
            set {
                SetRelatedEntity("organization_transactioncurrencies", null, value);
            }
        }
        
        [RelationshipSchemaName("transactioncurrency_account")]
        public IEnumerable<Account> transactioncurrency_account {
            get {
                return GetRelatedEntities<Account>("transactioncurrency_account", null);
            }
            set {
                SetRelatedEntities("transactioncurrency_account", null, value);
            }
        }
        
        [RelationshipSchemaName("transactioncurrency_campaign")]
        public IEnumerable<Campaign> transactioncurrency_campaign {
            get {
                return GetRelatedEntities<Campaign>("transactioncurrency_campaign", null);
            }
            set {
                SetRelatedEntities("transactioncurrency_campaign", null, value);
            }
        }
        
        [RelationshipSchemaName("transactioncurrency_campaignactivity")]
        public IEnumerable<CampaignActivity> transactioncurrency_campaignactivity {
            get {
                return GetRelatedEntities<CampaignActivity>("transactioncurrency_campaignactivity", null);
            }
            set {
                SetRelatedEntities("transactioncurrency_campaignactivity", null, value);
            }
        }
        
        [RelationshipSchemaName("transactioncurrency_contact")]
        public IEnumerable<Contact> transactioncurrency_contact {
            get {
                return GetRelatedEntities<Contact>("transactioncurrency_contact", null);
            }
            set {
                SetRelatedEntities("transactioncurrency_contact", null, value);
            }
        }
        
        [RelationshipSchemaName("transactioncurrency_contract")]
        public IEnumerable<Contract> transactioncurrency_contract {
            get {
                return GetRelatedEntities<Contract>("transactioncurrency_contract", null);
            }
            set {
                SetRelatedEntities("transactioncurrency_contract", null, value);
            }
        }
        
        [RelationshipSchemaName("transactioncurrency_invoice")]
        public IEnumerable<Invoice> transactioncurrency_invoice {
            get {
                return GetRelatedEntities<Invoice>("transactioncurrency_invoice", null);
            }
            set {
                SetRelatedEntities("transactioncurrency_invoice", null, value);
            }
        }
        
        [RelationshipSchemaName("transactioncurrency_lead")]
        public IEnumerable<Lead> transactioncurrency_lead {
            get {
                return GetRelatedEntities<Lead>("transactioncurrency_lead", null);
            }
            set {
                SetRelatedEntities("transactioncurrency_lead", null, value);
            }
        }
        
        [RelationshipSchemaName("transactioncurrency_list")]
        public IEnumerable<List> transactioncurrency_list {
            get {
                return GetRelatedEntities<List>("transactioncurrency_list", null);
            }
            set {
                SetRelatedEntities("transactioncurrency_list", null, value);
            }
        }
        
        [RelationshipSchemaName("transactioncurrency_opportunity")]
        public IEnumerable<Opportunity> transactioncurrency_opportunity {
            get {
                return GetRelatedEntities<Opportunity>("transactioncurrency_opportunity", null);
            }
            set {
                SetRelatedEntities("transactioncurrency_opportunity", null, value);
            }
        }
        
        [RelationshipSchemaName("transactioncurrency_opportunityclose")]
        public IEnumerable<OpportunityClose> transactioncurrency_opportunityclose {
            get {
                return GetRelatedEntities<OpportunityClose>("transactioncurrency_opportunityclose", null);
            }
            set {
                SetRelatedEntities("transactioncurrency_opportunityclose", null, value);
            }
        }
        
        [RelationshipSchemaName("transactioncurrency_opportunitysalesprocess")]
        public IEnumerable<OpportunitySalesProcess> transactioncurrency_opportunitysalesprocess {
            get {
                return GetRelatedEntities<OpportunitySalesProcess>("transactioncurrency_opportunitysalesprocess", null);
            }
            set {
                SetRelatedEntities("transactioncurrency_opportunitysalesprocess", null, value);
            }
        }
        
        [RelationshipSchemaName("transactioncurrency_quote")]
        public IEnumerable<Quote> transactioncurrency_quote {
            get {
                return GetRelatedEntities<Quote>("transactioncurrency_quote", null);
            }
            set {
                SetRelatedEntities("transactioncurrency_quote", null, value);
            }
        }
        
        [RelationshipSchemaName("transactioncurrency_salesorder")]
        public IEnumerable<SalesOrder> transactioncurrency_salesorder {
            get {
                return GetRelatedEntities<SalesOrder>("transactioncurrency_salesorder", null);
            }
            set {
                SetRelatedEntities("transactioncurrency_salesorder", null, value);
            }
        }
        
        [RelationshipSchemaName("transactioncurrency_socialactivity")]
        public IEnumerable<SocialActivity> transactioncurrency_socialactivity {
            get {
                return GetRelatedEntities<SocialActivity>("transactioncurrency_socialactivity", null);
            }
            set {
                SetRelatedEntities("transactioncurrency_socialactivity", null, value);
            }
        }
        
        public static TransactionCurrency Retrieve(IOrganizationService service, Guid id, params Expression<Func<TransactionCurrency,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Set of logical rules that define the steps necessary to automate a specific business process, task, or set of actions to be performed.</para>
    /// <para>Display Name: Process</para>
    /// </summary>
    [EntityLogicalName("workflow")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class Workflow : ExtendedEntity<WorkflowState, Workflow_StatusCode> {
        
        public const string EntityLogicalName = "workflow";
        
        public const int EntityTypeCode = 4703;
        
        public Workflow() : 
                base(EntityLogicalName) {
        }
        
        public Workflow(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("name");
            }
        }
        
        [AttributeLogicalName("workflowid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("workflowid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the process.</para>
        /// <para>Display Name: Process</para>
        /// </summary>
        [AttributeLogicalName("workflowid")]
        [DisplayName("Process")]
        public Guid? WorkflowId {
            get {
                return GetAttributeValue<Guid?>("workflowid");
            }
            set {
                SetId("workflowid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the latest activation record for the process.</para>
        /// <para>Display Name: Active Process ID</para>
        /// </summary>
        [AttributeLogicalName("activeworkflowid")]
        [DisplayName("Active Process ID")]
        public EntityReference ActiveWorkflowId {
            get {
                return GetAttributeValue<EntityReference>("activeworkflowid");
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the asynchronous system job is automatically deleted on completion.</para>
        /// <para>Display Name: Delete Job On Completion</para>
        /// </summary>
        [AttributeLogicalName("asyncautodelete")]
        [DisplayName("Delete Job On Completion")]
        public bool? AsyncAutoDelete {
            get {
                return GetAttributeValue<bool?>("asyncautodelete");
            }
            set {
                SetAttributeValue("asyncautodelete", value);
            }
        }
        
        /// <summary>
        /// <para>Business Process Type.</para>
        /// <para>Display Name: Business Process Type</para>
        /// </summary>
        [AttributeLogicalName("businessprocesstype")]
        [DisplayName("Business Process Type")]
        public Workflow_BusinessProcessType? BusinessProcessType {
            get {
                return GetOptionSetValue<Workflow_BusinessProcessType>("businessprocesstype");
            }
            set {
                SetOptionSetValue("businessprocesstype", value);
            }
        }
        
        /// <summary>
        /// <para>Category of the process.</para>
        /// <para>Display Name: Category</para>
        /// </summary>
        [AttributeLogicalName("category")]
        [DisplayName("Category")]
        public Workflow_Category? Category {
            get {
                return GetOptionSetValue<Workflow_Category>("category");
            }
            set {
                SetOptionSetValue("category", value);
            }
        }
        
        /// <summary>
        /// <para>Business logic converted into client data</para>
        /// <para>Display Name: Client Data</para>
        /// </summary>
        [AttributeLogicalName("clientdata")]
        [DisplayName("Client Data")]
        public string ClientData {
            get {
                return GetAttributeValue<string>("clientdata");
            }
            set {
                SetAttributeValue("clientdata", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Component State</para>
        /// </summary>
        [AttributeLogicalName("componentstate")]
        [DisplayName("Component State")]
        public componentstate? ComponentState {
            get {
                return GetOptionSetValue<componentstate>("componentstate");
            }
        }
        
        /// <summary>
        /// <para>Stage of the process when triggered on Create.</para>
        /// <para>Display Name: Create Stage</para>
        /// </summary>
        [AttributeLogicalName("createstage")]
        [DisplayName("Create Stage")]
        public workflow_stage? CreateStage {
            get {
                return GetOptionSetValue<workflow_stage>("createstage");
            }
            set {
                SetOptionSetValue("createstage", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the process.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the process was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the process.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Stage of the process when triggered on Delete.</para>
        /// <para>Display Name: Delete stage</para>
        /// </summary>
        [AttributeLogicalName("deletestage")]
        [DisplayName("Delete stage")]
        public workflow_stage? DeleteStage {
            get {
                return GetOptionSetValue<workflow_stage>("deletestage");
            }
            set {
                SetOptionSetValue("deletestage", value);
            }
        }
        
        /// <summary>
        /// <para>Description of the process.</para>
        /// <para>Display Name: Description</para>
        /// </summary>
        [AttributeLogicalName("description")]
        [DisplayName("Description")]
        public string Description {
            get {
                return GetAttributeValue<string>("description");
            }
            set {
                SetAttributeValue("description", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Entity Image Id</para>
        /// </summary>
        [AttributeLogicalName("entityimageid")]
        [DisplayName("Entity Image Id")]
        public Guid? EntityImageId {
            get {
                return GetAttributeValue<Guid?>("entityimageid");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the associated form.</para>
        /// <para>Display Name: Form ID</para>
        /// </summary>
        [AttributeLogicalName("formid")]
        [DisplayName("Form ID")]
        public Guid? FormId {
            get {
                return GetAttributeValue<Guid?>("formid");
            }
            set {
                SetAttributeValue("formid", value);
            }
        }
        
        /// <summary>
        /// <para>Input parameters to the process.</para>
        /// <para>Display Name: Input Parameters</para>
        /// </summary>
        [AttributeLogicalName("inputparameters")]
        [DisplayName("Input Parameters")]
        public string InputParameters {
            get {
                return GetAttributeValue<string>("inputparameters");
            }
            set {
                SetAttributeValue("inputparameters", value);
            }
        }
        
        /// <summary>
        /// <para>Version in which the form is introduced.</para>
        /// <para>Display Name: Introduced Version</para>
        /// </summary>
        [AttributeLogicalName("introducedversion")]
        [DisplayName("Introduced Version")]
        [MaxLength(48)]
        public string IntroducedVersion {
            get {
                return GetAttributeValue<string>("introducedversion");
            }
            set {
                SetAttributeValue("introducedversion", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the process was created using the Microsoft Dynamics 365 Web application.</para>
        /// <para>Display Name: Is CRM Process</para>
        /// </summary>
        [AttributeLogicalName("iscrmuiworkflow")]
        [DisplayName("Is CRM Process")]
        public bool? IsCrmUIWorkflow {
            get {
                return GetAttributeValue<bool?>("iscrmuiworkflow");
            }
        }
        
        /// <summary>
        /// <para>Defines whether other publishers can attach custom processing steps to this action</para>
        /// <para>Display Name: Allow custom processing step for other publishers</para>
        /// </summary>
        [AttributeLogicalName("iscustomprocessingstepallowedforotherpublishers")]
        [DisplayName("Allow custom processing step for other publishers")]
        public BooleanManagedProperty IsCustomProcessingStepAllowedForOtherPublishers {
            get {
                return GetAttributeValue<BooleanManagedProperty>("iscustomprocessingstepallowedforotherpublishers");
            }
            set {
                SetAttributeValue("iscustomprocessingstepallowedforotherpublishers", value);
            }
        }
        
        /// <summary>
        /// <para>Information that specifies whether this component can be customized.</para>
        /// <para>Display Name: Customizable</para>
        /// </summary>
        [AttributeLogicalName("iscustomizable")]
        [DisplayName("Customizable")]
        public BooleanManagedProperty IsCustomizable {
            get {
                return GetAttributeValue<BooleanManagedProperty>("iscustomizable");
            }
            set {
                SetAttributeValue("iscustomizable", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the solution component is part of a managed solution.</para>
        /// <para>Display Name: Is Managed</para>
        /// </summary>
        [AttributeLogicalName("ismanaged")]
        [DisplayName("Is Managed")]
        public bool? IsManaged {
            get {
                return GetAttributeValue<bool?>("ismanaged");
            }
        }
        
        /// <summary>
        /// <para>Whether or not the steps in the process are executed in a single transaction.</para>
        /// <para>Display Name: Is Transacted</para>
        /// </summary>
        [AttributeLogicalName("istransacted")]
        [DisplayName("Is Transacted")]
        public bool? IsTransacted {
            get {
                return GetAttributeValue<bool?>("istransacted");
            }
            set {
                SetAttributeValue("istransacted", value);
            }
        }
        
        /// <summary>
        /// <para>Language of the process.</para>
        /// <para>Display Name: Language</para>
        /// </summary>
        [AttributeLogicalName("languagecode")]
        [DisplayName("Language")]
        [Range(0, 2147483647)]
        public int? LanguageCode {
            get {
                return GetAttributeValue<int?>("languagecode");
            }
            set {
                SetAttributeValue("languagecode", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the mode of the process.</para>
        /// <para>Display Name: Mode</para>
        /// </summary>
        [AttributeLogicalName("mode")]
        [DisplayName("Mode")]
        public Workflow_Mode? Mode {
            get {
                return GetOptionSetValue<Workflow_Mode>("mode");
            }
            set {
                SetOptionSetValue("mode", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who last modified the process.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the process was last modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who last modified the process.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Name of the process.</para>
        /// <para>Display Name: Process Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Process Name")]
        [MaxLength(100)]
        public string Name {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the process is able to run as an on-demand process.</para>
        /// <para>Display Name: Run as On Demand</para>
        /// </summary>
        [AttributeLogicalName("ondemand")]
        [DisplayName("Run as On Demand")]
        public bool? OnDemand {
            get {
                return GetAttributeValue<bool?>("ondemand");
            }
            set {
                SetAttributeValue("ondemand", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Record Overwrite Time</para>
        /// </summary>
        [AttributeLogicalName("overwritetime")]
        [DisplayName("Record Overwrite Time")]
        public DateTime? OverwriteTime {
            get {
                return GetAttributeValue<DateTime?>("overwritetime");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user or team who owns the process.</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the business unit that owns the process.</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the team who owns the process.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who owns the process.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the definition for process activation.</para>
        /// <para>Display Name: Parent Process ID</para>
        /// </summary>
        [AttributeLogicalName("parentworkflowid")]
        [DisplayName("Parent Process ID")]
        public EntityReference ParentWorkflowId {
            get {
                return GetAttributeValue<EntityReference>("parentworkflowid");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the plug-in type.</para>
        /// </summary>
        [AttributeLogicalName("plugintypeid")]
        public EntityReference PluginTypeId {
            get {
                return GetAttributeValue<EntityReference>("plugintypeid");
            }
        }
        
        /// <summary>
        /// <para>Primary entity for the process. The process can be associated for one or more SDK operations defined on the primary entity.</para>
        /// <para>Display Name: Primary Entity</para>
        /// </summary>
        [AttributeLogicalName("primaryentity")]
        [DisplayName("Primary Entity")]
        public string PrimaryEntity {
            get {
                return GetAttributeValue<string>("primaryentity");
            }
            set {
                SetAttributeValue("primaryentity", value);
            }
        }
        
        /// <summary>
        /// <para>Name of the process.</para>
        /// <para>Display Name: Process Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Process Name")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Type the business process flow order.</para>
        /// <para>Display Name: Process Order</para>
        /// </summary>
        [AttributeLogicalName("processorder")]
        [DisplayName("Process Order")]
        [Range(0, 2147483647)]
        public int? ProcessOrder {
            get {
                return GetAttributeValue<int?>("processorder");
            }
            set {
                SetAttributeValue("processorder", value);
            }
        }
        
        /// <summary>
        /// <para>Contains the role assignment for the process.</para>
        /// <para>Display Name: Role assignment for Process</para>
        /// </summary>
        [AttributeLogicalName("processroleassignment")]
        [DisplayName("Role assignment for Process")]
        public string ProcessRoleAssignment {
            get {
                return GetAttributeValue<string>("processroleassignment");
            }
            set {
                SetAttributeValue("processroleassignment", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the associated form for process trigger.</para>
        /// <para>Display Name: ProcessTriggerFormId</para>
        /// </summary>
        [AttributeLogicalName("processtriggerformid")]
        [DisplayName("ProcessTriggerFormId")]
        public Guid? ProcessTriggerFormId {
            get {
                return GetAttributeValue<Guid?>("processtriggerformid");
            }
            set {
                SetAttributeValue("processtriggerformid", value);
            }
        }
        
        /// <summary>
        /// <para>Scope of the process trigger.</para>
        /// <para>Display Name: ProcessTriggerScope</para>
        /// </summary>
        [AttributeLogicalName("processtriggerscope")]
        [DisplayName("ProcessTriggerScope")]
        public Workflow_ProcessTriggerScope? ProcessTriggerScope {
            get {
                return GetOptionSetValue<Workflow_ProcessTriggerScope>("processtriggerscope");
            }
            set {
                SetOptionSetValue("processtriggerscope", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates the rank for order of execution for the synchronous workflow.</para>
        /// <para>Display Name: Rank</para>
        /// </summary>
        [AttributeLogicalName("rank")]
        [DisplayName("Rank")]
        [Range(-2147483648, 2147483647)]
        public int? Rank {
            get {
                return GetAttributeValue<int?>("rank");
            }
            set {
                SetAttributeValue("rank", value);
            }
        }
        
        /// <summary>
        /// <para>The renderer type of Workflow</para>
        /// <para>Display Name: Renderer Type</para>
        /// </summary>
        [AttributeLogicalName("rendererobjecttypecode")]
        [DisplayName("Renderer Type")]
        public string RendererObjectTypeCode {
            get {
                return GetAttributeValue<string>("rendererobjecttypecode");
            }
            set {
                SetAttributeValue("rendererobjecttypecode", value);
            }
        }
        
        /// <summary>
        /// <para>Specifies the system user account under which a workflow executes.</para>
        /// <para>Display Name: Run As User</para>
        /// </summary>
        [AttributeLogicalName("runas")]
        [DisplayName("Run As User")]
        public workflow_runas? RunAs {
            get {
                return GetOptionSetValue<workflow_runas>("runas");
            }
            set {
                SetOptionSetValue("runas", value);
            }
        }
        
        /// <summary>
        /// <para>Scope of the process.</para>
        /// <para>Display Name: Scope</para>
        /// </summary>
        [AttributeLogicalName("scope")]
        [DisplayName("Scope")]
        public Workflow_Scope? Scope {
            get {
                return GetOptionSetValue<Workflow_Scope>("scope");
            }
            set {
                SetOptionSetValue("scope", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the SDK Message associated with this workflow.</para>
        /// <para>Display Name: SDK Message</para>
        /// </summary>
        [AttributeLogicalName("sdkmessageid")]
        [DisplayName("SDK Message")]
        public EntityReference SdkMessageId {
            get {
                return GetAttributeValue<EntityReference>("sdkmessageid");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the associated solution.</para>
        /// <para>Display Name: Solution</para>
        /// </summary>
        [AttributeLogicalName("solutionid")]
        [DisplayName("Solution")]
        public Guid? SolutionId {
            get {
                return GetAttributeValue<Guid?>("solutionid");
            }
        }
        
        /// <summary>
        /// <para>Status of the workflow</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public WorkflowState? StateCode {
            get {
                return GetOptionSetValue<WorkflowState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the workflow</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public Workflow_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<Workflow_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the process can be included in other processes as a child process.</para>
        /// <para>Display Name: Is Child Process</para>
        /// </summary>
        [AttributeLogicalName("subprocess")]
        [DisplayName("Is Child Process")]
        public bool? Subprocess {
            get {
                return GetAttributeValue<bool?>("subprocess");
            }
            set {
                SetAttributeValue("subprocess", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether synchronous workflow failures will be saved to log files.</para>
        /// <para>Display Name: Log upon Failure</para>
        /// </summary>
        [AttributeLogicalName("syncworkflowlogonfailure")]
        [DisplayName("Log upon Failure")]
        public bool? SyncWorkflowLogOnFailure {
            get {
                return GetAttributeValue<bool?>("syncworkflowlogonfailure");
            }
            set {
                SetAttributeValue("syncworkflowlogonfailure", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the process will be triggered when the primary entity is created.</para>
        /// <para>Display Name: Trigger On Create</para>
        /// </summary>
        [AttributeLogicalName("triggeroncreate")]
        [DisplayName("Trigger On Create")]
        public bool? TriggerOnCreate {
            get {
                return GetAttributeValue<bool?>("triggeroncreate");
            }
            set {
                SetAttributeValue("triggeroncreate", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the process will be triggered on deletion of the primary entity.</para>
        /// <para>Display Name: Trigger On Delete</para>
        /// </summary>
        [AttributeLogicalName("triggerondelete")]
        [DisplayName("Trigger On Delete")]
        public bool? TriggerOnDelete {
            get {
                return GetAttributeValue<bool?>("triggerondelete");
            }
            set {
                SetAttributeValue("triggerondelete", value);
            }
        }
        
        /// <summary>
        /// <para>Attributes that trigger the process when updated.</para>
        /// <para>Display Name: Trigger On Update Attribute List</para>
        /// </summary>
        [AttributeLogicalName("triggeronupdateattributelist")]
        [DisplayName("Trigger On Update Attribute List")]
        public string TriggerOnUpdateAttributeList {
            get {
                return GetAttributeValue<string>("triggeronupdateattributelist");
            }
            set {
                SetAttributeValue("triggeronupdateattributelist", value);
            }
        }
        
        /// <summary>
        /// <para>For Internal Use Only.</para>
        /// <para>Display Name: Trusted Access</para>
        /// </summary>
        [AttributeLogicalName("trustedaccess")]
        [DisplayName("Trusted Access")]
        public bool? TrustedAccess {
            get {
                return GetAttributeValue<bool?>("trustedaccess");
            }
        }
        
        /// <summary>
        /// <para>Type of the process.</para>
        /// <para>Display Name: Type</para>
        /// </summary>
        [AttributeLogicalName("type")]
        [DisplayName("Type")]
        public Workflow_Type? Type {
            get {
                return GetOptionSetValue<Workflow_Type>("type");
            }
            set {
                SetOptionSetValue("type", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: UI Data</para>
        /// </summary>
        [AttributeLogicalName("uidata")]
        [DisplayName("UI Data")]
        public string UIData {
            get {
                return GetAttributeValue<string>("uidata");
            }
        }
        
        /// <summary>
        /// <para>Type of the UI Flow process.</para>
        /// <para>Display Name: Desktop Flow Type</para>
        /// </summary>
        [AttributeLogicalName("uiflowtype")]
        [DisplayName("Desktop Flow Type")]
        public Workflow_UIFlowType? UIFlowType {
            get {
                return GetOptionSetValue<Workflow_UIFlowType>("uiflowtype");
            }
            set {
                SetOptionSetValue("uiflowtype", value);
            }
        }
        
        /// <summary>
        /// <para>Unique name of the process</para>
        /// <para>Display Name: Unique Name</para>
        /// </summary>
        [AttributeLogicalName("uniquename")]
        [DisplayName("Unique Name")]
        [MaxLength(256)]
        public string UniqueName {
            get {
                return GetAttributeValue<string>("uniquename");
            }
            set {
                SetAttributeValue("uniquename", value);
            }
        }
        
        /// <summary>
        /// <para>Select the stage a process will be triggered on update.</para>
        /// <para>Display Name: Update Stage</para>
        /// </summary>
        [AttributeLogicalName("updatestage")]
        [DisplayName("Update Stage")]
        public workflow_stage? UpdateStage {
            get {
                return GetOptionSetValue<workflow_stage>("updatestage");
            }
            set {
                SetOptionSetValue("updatestage", value);
            }
        }
        
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// </summary>
        [AttributeLogicalName("workflowidunique")]
        public Guid? WorkflowIdUnique {
            get {
                return GetAttributeValue<Guid?>("workflowidunique");
            }
        }
        
        /// <summary>
        /// <para>XAML that defines the process.</para>
        /// </summary>
        [AttributeLogicalName("xaml")]
        public string Xaml {
            get {
                return GetAttributeValue<string>("xaml");
            }
            set {
                SetAttributeValue("xaml", value);
            }
        }
        
        [RelationshipSchemaName("workflow_active_workflow", EntityRole.Referenced)]
        public IEnumerable<Workflow> Referencedworkflow_active_workflow {
            get {
                return GetRelatedEntities<Workflow>("workflow_active_workflow", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("workflow_active_workflow", EntityRole.Referenced, value);
            }
        }
        
        [RelationshipSchemaName("workflow_parent_workflow", EntityRole.Referenced)]
        public IEnumerable<Workflow> Referencedworkflow_parent_workflow {
            get {
                return GetRelatedEntities<Workflow>("workflow_parent_workflow", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("workflow_parent_workflow", EntityRole.Referenced, value);
            }
        }
        
        [AttributeLogicalName("activeworkflowid")]
        [RelationshipSchemaName("workflow_active_workflow", EntityRole.Referencing)]
        public Workflow Referencingworkflow_active_workflow {
            get {
                return GetRelatedEntity<Workflow>("workflow_active_workflow", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("workflow_active_workflow", EntityRole.Referencing, value);
            }
        }
        
        [AttributeLogicalName("parentworkflowid")]
        [RelationshipSchemaName("workflow_parent_workflow", EntityRole.Referencing)]
        public Workflow Referencingworkflow_parent_workflow {
            get {
                return GetRelatedEntity<Workflow>("workflow_parent_workflow", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("workflow_parent_workflow", EntityRole.Referencing, value);
            }
        }
        
        [RelationshipSchemaName("Workflow_SyncErrors")]
        public IEnumerable<SyncError> Workflow_SyncErrors {
            get {
                return GetRelatedEntities<SyncError>("Workflow_SyncErrors", null);
            }
            set {
                SetRelatedEntities("Workflow_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_workflow")]
        public BusinessUnit business_unit_workflow {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_workflow", null);
            }
            set {
                SetRelatedEntity("business_unit_workflow", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_opportunitysalesprocess_processid")]
        public IEnumerable<OpportunitySalesProcess> lk_opportunitysalesprocess_processid {
            get {
                return GetRelatedEntities<OpportunitySalesProcess>("lk_opportunitysalesprocess_processid", null);
            }
            set {
                SetRelatedEntities("lk_opportunitysalesprocess_processid", null, value);
            }
        }
        
        [RelationshipSchemaName("slabase_workflowid")]
        public IEnumerable<SLA> slabase_workflowid {
            get {
                return GetRelatedEntities<SLA>("slabase_workflowid", null);
            }
            set {
                SetRelatedEntities("slabase_workflowid", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("system_user_workflow")]
        public SystemUser system_user_workflow {
            get {
                return GetRelatedEntity<SystemUser>("system_user_workflow", null);
            }
            set {
                SetRelatedEntity("system_user_workflow", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_workflow")]
        public Team team_workflow {
            get {
                return GetRelatedEntity<Team>("team_workflow", null);
            }
            set {
                SetRelatedEntity("team_workflow", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("workflow_createdby")]
        public SystemUser workflow_createdby {
            get {
                return GetRelatedEntity<SystemUser>("workflow_createdby", null);
            }
            set {
                SetRelatedEntity("workflow_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("workflow_createdonbehalfby")]
        public SystemUser workflow_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("workflow_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("workflow_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("workflow_modifiedby")]
        public SystemUser workflow_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("workflow_modifiedby", null);
            }
            set {
                SetRelatedEntity("workflow_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("workflow_modifiedonbehalfby")]
        public SystemUser workflow_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("workflow_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("workflow_modifiedonbehalfby", null, value);
            }
        }
        
        public static Workflow Retrieve(IOrganizationService service, Guid id, params Expression<Func<Workflow,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    [EntityLogicalName("dg_hasridden")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class dg_HasRidden : ExtendedEntity<EmptyEnum, EmptyEnum> {
        
        public const string EntityLogicalName = "dg_hasridden";
        
        public const string RelationshipSchemaName = "dg_HasRidden";
        
        public const int EntityTypeCode = 10017;
        
        public dg_HasRidden() : 
                base(EntityLogicalName) {
        }
        
        public dg_HasRidden(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay(null);
            }
        }
        
        [AttributeLogicalName("dg_hasriddenid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("dg_hasriddenid", value);
            }
        }
        
        [AttributeLogicalName("dg_hasriddenid")]
        public Guid? dg_HasRiddenId {
            get {
                return GetAttributeValue<Guid?>("dg_hasriddenid");
            }
            set {
                SetId("dg_hasriddenid", value);
            }
        }
        
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        [AttributeLogicalName("dg_busid")]
        public Guid? dg_busid {
            get {
                return GetAttributeValue<Guid?>("dg_busid");
            }
        }
        
        [AttributeLogicalName("dg_childid")]
        public Guid? dg_childid {
            get {
                return GetAttributeValue<Guid?>("dg_childid");
            }
        }
        
        public static dg_HasRidden Retrieve(IOrganizationService service, Guid id, params Expression<Func<dg_HasRidden,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    [EntityLogicalName("dg_account_account")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class dg_account_account : ExtendedEntity<EmptyEnum, EmptyEnum> {
        
        public const string EntityLogicalName = "dg_account_account";
        
        public const string RelationshipSchemaName = "dg_account_account";
        
        public const int EntityTypeCode = 10018;
        
        public dg_account_account() : 
                base(EntityLogicalName) {
        }
        
        public dg_account_account(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay(null);
            }
        }
        
        [AttributeLogicalName("dg_account_accountid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("dg_account_accountid", value);
            }
        }
        
        [AttributeLogicalName("dg_account_accountid")]
        public Guid? dg_account_accountId {
            get {
                return GetAttributeValue<Guid?>("dg_account_accountid");
            }
            set {
                SetId("dg_account_accountid", value);
            }
        }
        
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        [AttributeLogicalName("accountidone")]
        public Guid? accountidOne {
            get {
                return GetAttributeValue<Guid?>("accountidone");
            }
        }
        
        [AttributeLogicalName("accountidtwo")]
        public Guid? accountidTwo {
            get {
                return GetAttributeValue<Guid?>("accountidtwo");
            }
        }
        
        public static dg_account_account Retrieve(IOrganizationService service, Guid id, params Expression<Func<dg_account_account,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    [EntityLogicalName("dg_account_contact")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class dg_account_contact : ExtendedEntity<EmptyEnum, EmptyEnum> {
        
        public const string EntityLogicalName = "dg_account_contact";
        
        public const string RelationshipSchemaName = "dg_account_contact";
        
        public const int EntityTypeCode = 10005;
        
        public dg_account_contact() : 
                base(EntityLogicalName) {
        }
        
        public dg_account_contact(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay(null);
            }
        }
        
        [AttributeLogicalName("dg_account_contactid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("dg_account_contactid", value);
            }
        }
        
        [AttributeLogicalName("dg_account_contactid")]
        public Guid? dg_account_contactId {
            get {
                return GetAttributeValue<Guid?>("dg_account_contactid");
            }
            set {
                SetId("dg_account_contactid", value);
            }
        }
        
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        [AttributeLogicalName("accountid")]
        public Guid? accountid {
            get {
                return GetAttributeValue<Guid?>("accountid");
            }
        }
        
        [AttributeLogicalName("contactid")]
        public Guid? contactid {
            get {
                return GetAttributeValue<Guid?>("contactid");
            }
        }
        
        public static dg_account_contact Retrieve(IOrganizationService service, Guid id, params Expression<Func<dg_account_contact,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Animal</para>
    /// </summary>
    [EntityLogicalName("dg_animal")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class dg_animal : ExtendedEntity<dg_animalState, dg_animal_statuscode> {
        
        public const string EntityLogicalName = "dg_animal";
        
        public const int EntityTypeCode = 10404;
        
        public dg_animal() : 
                base(EntityLogicalName) {
        }
        
        public dg_animal(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("dg_name");
            }
        }
        
        [AttributeLogicalName("dg_animalid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("dg_animalid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for entity instances</para>
        /// <para>Display Name: Animal</para>
        /// </summary>
        [AttributeLogicalName("dg_animalid")]
        [DisplayName("Animal")]
        public Guid? dg_animalId {
            get {
                return GetAttributeValue<Guid?>("dg_animalid");
            }
            set {
                SetId("dg_animalid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the record.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who modified the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who modified the record.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Owner Id</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the business unit that owns the record</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the team that owns the record.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the user that owns the record.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>The name of the custom entity.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("dg_name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("dg_name");
            }
            set {
                SetAttributeValue("dg_name", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version Number</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Display Name: EmptyCalculatedField</para>
        /// </summary>
        [AttributeLogicalName("dg_emptycalculatedfield")]
        [DisplayName("EmptyCalculatedField")]
        [MaxLength(4000)]
        public string dg_EmptyCalculatedField {
            get {
                return GetAttributeValue<string>("dg_emptycalculatedfield");
            }
        }
        
        /// <summary>
        /// <para>The name of the custom entity.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("dg_name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string dg_name {
            get {
                return GetAttributeValue<string>("dg_name");
            }
            set {
                SetAttributeValue("dg_name", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the Animal</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public dg_animalState? statecode {
            get {
                return GetOptionSetValue<dg_animalState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the Animal</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public dg_animal_statuscode? statuscode {
            get {
                return GetOptionSetValue<dg_animal_statuscode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_dg_animal")]
        public BusinessUnit business_unit_dg_animal {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_dg_animal", null);
            }
            set {
                SetRelatedEntity("business_unit_dg_animal", null, value);
            }
        }
        
        [RelationshipSchemaName("dg_animal_SyncErrors")]
        public IEnumerable<SyncError> dg_animal_SyncErrors {
            get {
                return GetRelatedEntities<SyncError>("dg_animal_SyncErrors", null);
            }
            set {
                SetRelatedEntities("dg_animal_SyncErrors", null, value);
            }
        }
        
        [RelationshipSchemaName("dg_dg_animal_dg_animalfood")]
        public IEnumerable<dg_animalfood> dg_dg_animal_dg_animalfood {
            get {
                return GetRelatedEntities<dg_animalfood>("dg_dg_animal_dg_animalfood", null);
            }
            set {
                SetRelatedEntities("dg_dg_animal_dg_animalfood", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_dg_animal_createdby")]
        public SystemUser lk_dg_animal_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dg_animal_createdby", null);
            }
            set {
                SetRelatedEntity("lk_dg_animal_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_dg_animal_createdonbehalfby")]
        public SystemUser lk_dg_animal_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dg_animal_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_dg_animal_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_dg_animal_modifiedby")]
        public SystemUser lk_dg_animal_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dg_animal_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_dg_animal_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_dg_animal_modifiedonbehalfby")]
        public SystemUser lk_dg_animal_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dg_animal_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_dg_animal_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_dg_animal")]
        public Team team_dg_animal {
            get {
                return GetRelatedEntity<Team>("team_dg_animal", null);
            }
            set {
                SetRelatedEntity("team_dg_animal", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_dg_animal")]
        public SystemUser user_dg_animal {
            get {
                return GetRelatedEntity<SystemUser>("user_dg_animal", null);
            }
            set {
                SetRelatedEntity("user_dg_animal", null, value);
            }
        }
        
        public static dg_animal Retrieve(IOrganizationService service, Guid id, params Expression<Func<dg_animal,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Display Name: AnimalFood</para>
    /// </summary>
    [EntityLogicalName("dg_animalfood")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class dg_animalfood : ExtendedEntity<dg_animalfoodState, dg_animalfood_statuscode> {
        
        public const string EntityLogicalName = "dg_animalfood";
        
        public const int EntityTypeCode = 10403;
        
        public dg_animalfood() : 
                base(EntityLogicalName) {
        }
        
        public dg_animalfood(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("dg_name");
            }
        }
        
        [AttributeLogicalName("dg_animalfoodid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("dg_animalfoodid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for entity instances</para>
        /// <para>Display Name: AnimalFood</para>
        /// </summary>
        [AttributeLogicalName("dg_animalfoodid")]
        [DisplayName("AnimalFood")]
        public Guid? dg_animalfoodId {
            get {
                return GetAttributeValue<Guid?>("dg_animalfoodid");
            }
            set {
                SetId("dg_animalfoodid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the record.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who modified the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who modified the record.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Owner Id</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the business unit that owns the record</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the team that owns the record.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the user that owns the record.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>The name of the custom entity.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("dg_name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("dg_name");
            }
            set {
                SetAttributeValue("dg_name", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version Number</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for Animal associated with AnimalFood.</para>
        /// <para>Display Name: Animal</para>
        /// </summary>
        [AttributeLogicalName("dg_animalid")]
        [DisplayName("Animal")]
        public EntityReference dg_AnimalId {
            get {
                return GetAttributeValue<EntityReference>("dg_animalid");
            }
            set {
                SetAttributeValue("dg_animalid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for Food associated with AnimalFood.</para>
        /// <para>Display Name: Food</para>
        /// </summary>
        [AttributeLogicalName("dg_foodid")]
        [DisplayName("Food")]
        public EntityReference dg_FoodId {
            get {
                return GetAttributeValue<EntityReference>("dg_foodid");
            }
            set {
                SetAttributeValue("dg_foodid", value);
            }
        }
        
        /// <summary>
        /// <para>The name of the custom entity.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("dg_name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string dg_name {
            get {
                return GetAttributeValue<string>("dg_name");
            }
            set {
                SetAttributeValue("dg_name", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the AnimalFood</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public dg_animalfoodState? statecode {
            get {
                return GetOptionSetValue<dg_animalfoodState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the AnimalFood</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public dg_animalfood_statuscode? statuscode {
            get {
                return GetOptionSetValue<dg_animalfood_statuscode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_dg_animalfood")]
        public BusinessUnit business_unit_dg_animalfood {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_dg_animalfood", null);
            }
            set {
                SetRelatedEntity("business_unit_dg_animalfood", null, value);
            }
        }
        
        [RelationshipSchemaName("dg_animalfood_SyncErrors")]
        public IEnumerable<SyncError> dg_animalfood_SyncErrors {
            get {
                return GetRelatedEntities<SyncError>("dg_animalfood_SyncErrors", null);
            }
            set {
                SetRelatedEntities("dg_animalfood_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("dg_animalid")]
        [RelationshipSchemaName("dg_dg_animal_dg_animalfood")]
        public dg_animal dg_dg_animal_dg_animalfood {
            get {
                return GetRelatedEntity<dg_animal>("dg_dg_animal_dg_animalfood", null);
            }
            set {
                SetRelatedEntity("dg_dg_animal_dg_animalfood", null, value);
            }
        }
        
        [AttributeLogicalName("dg_foodid")]
        [RelationshipSchemaName("dg_dg_food_dg_animalfood")]
        public dg_food dg_dg_food_dg_animalfood {
            get {
                return GetRelatedEntity<dg_food>("dg_dg_food_dg_animalfood", null);
            }
            set {
                SetRelatedEntity("dg_dg_food_dg_animalfood", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_dg_animalfood_createdby")]
        public SystemUser lk_dg_animalfood_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dg_animalfood_createdby", null);
            }
            set {
                SetRelatedEntity("lk_dg_animalfood_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_dg_animalfood_createdonbehalfby")]
        public SystemUser lk_dg_animalfood_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dg_animalfood_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_dg_animalfood_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_dg_animalfood_modifiedby")]
        public SystemUser lk_dg_animalfood_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dg_animalfood_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_dg_animalfood_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_dg_animalfood_modifiedonbehalfby")]
        public SystemUser lk_dg_animalfood_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dg_animalfood_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_dg_animalfood_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_dg_animalfood")]
        public Team team_dg_animalfood {
            get {
                return GetRelatedEntity<Team>("team_dg_animalfood", null);
            }
            set {
                SetRelatedEntity("team_dg_animalfood", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_dg_animalfood")]
        public SystemUser user_dg_animalfood {
            get {
                return GetRelatedEntity<SystemUser>("user_dg_animalfood", null);
            }
            set {
                SetRelatedEntity("user_dg_animalfood", null, value);
            }
        }
        
        public static dg_animalfood Retrieve(IOrganizationService service, Guid id, params Expression<Func<dg_animalfood,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Bus</para>
    /// </summary>
    [EntityLogicalName("dg_bus")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class dg_bus : ExtendedEntity<dg_busState, dg_bus_statuscode> {
        
        public const string EntityLogicalName = "dg_bus";
        
        public const int EntityTypeCode = 10016;
        
        public dg_bus() : 
                base(EntityLogicalName) {
        }
        
        public dg_bus(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("dg_name");
            }
        }
        
        [AttributeLogicalName("dg_busid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("dg_busid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for entity instances</para>
        /// <para>Display Name: Bus</para>
        /// </summary>
        [AttributeLogicalName("dg_busid")]
        [DisplayName("Bus")]
        public Guid? dg_busId {
            get {
                return GetAttributeValue<Guid?>("dg_busid");
            }
            set {
                SetId("dg_busid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the record.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Exchange rate for the currency associated with the entity with respect to the base currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("Exchange Rate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who modified the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who modified the record.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Owner Id</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the business unit that owns the record</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the team that owns the record.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the user that owns the record.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>The name of the custom entity.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("dg_name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("dg_name");
            }
            set {
                SetAttributeValue("dg_name", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the currency associated with the entity.</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Display Name: AllConditions</para>
        /// </summary>
        [AttributeLogicalName("dg_allconditions")]
        [DisplayName("AllConditions")]
        [MaxLength(4000)]
        public string dg_AllConditions {
            get {
                return GetAttributeValue<string>("dg_allconditions");
            }
        }
        
        /// <summary>
        /// <para>Display Name: AvgAllowance</para>
        /// </summary>
        [AttributeLogicalName("dg_avgallowance")]
        [DisplayName("AvgAllowance")]
        public decimal? dg_AvgAllowance {
            get {
                return GetMoneyValue("dg_avgallowance");
            }
        }
        
        /// <summary>
        /// <para>dg_AvgAllowance (CountAverageDescription)</para>
        /// <para>Display Name: dg_AvgAllowance (CountAverage)</para>
        /// </summary>
        [AttributeLogicalName("dg_avgallowance_count")]
        [DisplayName("dg_AvgAllowance (CountAverage)")]
        [Range(-2147483648, 2147483647)]
        public int? dg_AvgAllowance_Count {
            get {
                return GetAttributeValue<int?>("dg_avgallowance_count");
            }
        }
        
        /// <summary>
        /// <para>Last Updated time of rollup field AvgAllowance.</para>
        /// <para>Display Name: AvgAllowance (Last Updated On)</para>
        /// </summary>
        [AttributeLogicalName("dg_avgallowance_date")]
        [DisplayName("AvgAllowance (Last Updated On)")]
        public DateTime? dg_AvgAllowance_Date {
            get {
                return GetAttributeValue<DateTime?>("dg_avgallowance_date");
            }
        }
        
        /// <summary>
        /// <para>State of rollup field AvgAllowance.</para>
        /// <para>Display Name: AvgAllowance (State)</para>
        /// </summary>
        [AttributeLogicalName("dg_avgallowance_state")]
        [DisplayName("AvgAllowance (State)")]
        [Range(-2147483648, 2147483647)]
        public int? dg_AvgAllowance_State {
            get {
                return GetAttributeValue<int?>("dg_avgallowance_state");
            }
        }
        
        /// <summary>
        /// <para>dg_AvgAllowance (SumAverageDescription)</para>
        /// <para>Display Name: dg_AvgAllowance (SumAverage)</para>
        /// </summary>
        [AttributeLogicalName("dg_avgallowance_sum")]
        [DisplayName("dg_AvgAllowance (SumAverage)")]
        public decimal? dg_AvgAllowance_Sum {
            get {
                return GetMoneyValue("dg_avgallowance_sum");
            }
        }
        
        /// <summary>
        /// <para>Display Name: BooleanUdregnet</para>
        /// </summary>
        [AttributeLogicalName("dg_booleanudregnet")]
        [DisplayName("BooleanUdregnet")]
        public bool? dg_BooleanUdregnet {
            get {
                return GetAttributeValue<bool?>("dg_booleanudregnet");
            }
        }
        
        /// <summary>
        /// <para>Display Name: DateTimeRollUp</para>
        /// </summary>
        [AttributeLogicalName("dg_datetimerollup")]
        [DisplayName("DateTimeRollUp")]
        public DateTime? dg_DateTimeRollUp {
            get {
                return GetAttributeValue<DateTime?>("dg_datetimerollup");
            }
        }
        
        /// <summary>
        /// <para>Last Updated time of rollup field DateTimeRollUp.</para>
        /// <para>Display Name: DateTimeRollUp (Last Updated On)</para>
        /// </summary>
        [AttributeLogicalName("dg_datetimerollup_date")]
        [DisplayName("DateTimeRollUp (Last Updated On)")]
        public DateTime? dg_DateTimeRollUp_Date {
            get {
                return GetAttributeValue<DateTime?>("dg_datetimerollup_date");
            }
        }
        
        /// <summary>
        /// <para>State of rollup field DateTimeRollUp.</para>
        /// <para>Display Name: DateTimeRollUp (State)</para>
        /// </summary>
        [AttributeLogicalName("dg_datetimerollup_state")]
        [DisplayName("DateTimeRollUp (State)")]
        [Range(-2147483648, 2147483647)]
        public int? dg_DateTimeRollUp_State {
            get {
                return GetAttributeValue<int?>("dg_datetimerollup_state");
            }
        }
        
        /// <summary>
        /// <para>Display Name: DateTimeUdregnet</para>
        /// </summary>
        [AttributeLogicalName("dg_datetimeudregnet")]
        [DisplayName("DateTimeUdregnet")]
        public DateTime? dg_DateTimeUdregnet {
            get {
                return GetAttributeValue<DateTime?>("dg_datetimeudregnet");
            }
        }
        
        /// <summary>
        /// <para>Display Name: DecimalUdregnet</para>
        /// </summary>
        [AttributeLogicalName("dg_decimaludregnet")]
        [DisplayName("DecimalUdregnet")]
        public decimal? dg_DecimalUdregnet {
            get {
                return GetAttributeValue<decimal?>("dg_decimaludregnet");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Driver</para>
        /// </summary>
        [AttributeLogicalName("dg_driver")]
        [DisplayName("Driver")]
        public EntityReference dg_Driver {
            get {
                return GetAttributeValue<EntityReference>("dg_driver");
            }
            set {
                SetAttributeValue("dg_driver", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: EndnuUdregnet</para>
        /// </summary>
        [AttributeLogicalName("dg_endnuudregnet")]
        [DisplayName("EndnuUdregnet")]
        public decimal? dg_EndnuUdregnet {
            get {
                return GetMoneyValue("dg_endnuudregnet");
            }
        }
        
        /// <summary>
        /// <para>Display Name: EtHelTal</para>
        /// </summary>
        [AttributeLogicalName("dg_etheltal")]
        [DisplayName("EtHelTal")]
        [Range(-2147483648, 2147483647)]
        public int? dg_EtHelTal {
            get {
                return GetAttributeValue<int?>("dg_etheltal");
            }
            set {
                SetAttributeValue("dg_etheltal", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: MaxAllowance</para>
        /// </summary>
        [AttributeLogicalName("dg_maxallowance")]
        [DisplayName("MaxAllowance")]
        public decimal? dg_MaxAllowance {
            get {
                return GetMoneyValue("dg_maxallowance");
            }
        }
        
        /// <summary>
        /// <para>Last Updated time of rollup field MaxAllowance.</para>
        /// <para>Display Name: MaxAllowance (Last Updated On)</para>
        /// </summary>
        [AttributeLogicalName("dg_maxallowance_date")]
        [DisplayName("MaxAllowance (Last Updated On)")]
        public DateTime? dg_MaxAllowance_Date {
            get {
                return GetAttributeValue<DateTime?>("dg_maxallowance_date");
            }
        }
        
        /// <summary>
        /// <para>State of rollup field MaxAllowance.</para>
        /// <para>Display Name: MaxAllowance (State)</para>
        /// </summary>
        [AttributeLogicalName("dg_maxallowance_state")]
        [DisplayName("MaxAllowance (State)")]
        [Range(-2147483648, 2147483647)]
        public int? dg_MaxAllowance_State {
            get {
                return GetAttributeValue<int?>("dg_maxallowance_state");
            }
        }
        
        /// <summary>
        /// <para>Display Name: MinAllowance</para>
        /// </summary>
        [AttributeLogicalName("dg_minallowance")]
        [DisplayName("MinAllowance")]
        public decimal? dg_MinAllowance {
            get {
                return GetMoneyValue("dg_minallowance");
            }
        }
        
        /// <summary>
        /// <para>Last Updated time of rollup field MinAllowance.</para>
        /// <para>Display Name: MinAllowance (Last Updated On)</para>
        /// </summary>
        [AttributeLogicalName("dg_minallowance_date")]
        [DisplayName("MinAllowance (Last Updated On)")]
        public DateTime? dg_MinAllowance_Date {
            get {
                return GetAttributeValue<DateTime?>("dg_minallowance_date");
            }
        }
        
        /// <summary>
        /// <para>State of rollup field MinAllowance.</para>
        /// <para>Display Name: MinAllowance (State)</para>
        /// </summary>
        [AttributeLogicalName("dg_minallowance_state")]
        [DisplayName("MinAllowance (State)")]
        [Range(-2147483648, 2147483647)]
        public int? dg_MinAllowance_State {
            get {
                return GetAttributeValue<int?>("dg_minallowance_state");
            }
        }
        
        /// <summary>
        /// <para>Display Name: NoValue</para>
        /// </summary>
        [AttributeLogicalName("dg_novalue")]
        [DisplayName("NoValue")]
        [MaxLength(100)]
        public string dg_NoValue {
            get {
                return GetAttributeValue<string>("dg_novalue");
            }
            set {
                SetAttributeValue("dg_novalue", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: PicklistUdregnet</para>
        /// </summary>
        [AttributeLogicalName("dg_picklistudregnet")]
        [DisplayName("PicklistUdregnet")]
        public dg_bus_dg_PicklistUdregnet? dg_PicklistUdregnet {
            get {
                return GetOptionSetValue<dg_bus_dg_PicklistUdregnet>("dg_picklistudregnet");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Some Optionset</para>
        /// </summary>
        [AttributeLogicalName("dg_someoptionset")]
        [DisplayName("Some Optionset")]
        public dg_myoptionset? dg_SomeOptionset {
            get {
                return GetOptionSetValue<dg_myoptionset>("dg_someoptionset");
            }
            set {
                SetOptionSetValue("dg_someoptionset", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: StringUdregnet</para>
        /// </summary>
        [AttributeLogicalName("dg_stringudregnet")]
        [DisplayName("StringUdregnet")]
        [MaxLength(4000)]
        public string dg_StringUdregnet {
            get {
                return GetAttributeValue<string>("dg_stringudregnet");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Ticket price</para>
        /// </summary>
        [AttributeLogicalName("dg_ticketprice")]
        [DisplayName("Ticket price")]
        public decimal? dg_Ticketprice {
            get {
                return GetMoneyValue("dg_ticketprice");
            }
            set {
                SetMoneyValue("dg_ticketprice", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Total allowance</para>
        /// </summary>
        [AttributeLogicalName("dg_totalallowance")]
        [DisplayName("Total allowance")]
        public decimal? dg_Totalallowance {
            get {
                return GetMoneyValue("dg_totalallowance");
            }
        }
        
        /// <summary>
        /// <para>Last Updated time of rollup field Total allowance.</para>
        /// <para>Display Name: Total allowance (Last Updated On)</para>
        /// </summary>
        [AttributeLogicalName("dg_totalallowance_date")]
        [DisplayName("Total allowance (Last Updated On)")]
        public DateTime? dg_Totalallowance_Date {
            get {
                return GetAttributeValue<DateTime?>("dg_totalallowance_date");
            }
        }
        
        /// <summary>
        /// <para>State of rollup field Total allowance.</para>
        /// <para>Display Name: Total allowance (State)</para>
        /// </summary>
        [AttributeLogicalName("dg_totalallowance_state")]
        [DisplayName("Total allowance (State)")]
        [Range(-2147483648, 2147483647)]
        public int? dg_Totalallowance_State {
            get {
                return GetAttributeValue<int?>("dg_totalallowance_state");
            }
        }
        
        /// <summary>
        /// <para>Display Name: TrimLeft</para>
        /// </summary>
        [AttributeLogicalName("dg_trimleft")]
        [DisplayName("TrimLeft")]
        [MaxLength(4000)]
        public string dg_TrimLeft {
            get {
                return GetAttributeValue<string>("dg_trimleft");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Udkørselsdato</para>
        /// </summary>
        [AttributeLogicalName("dg_udkoerselsdato")]
        [DisplayName("Udkørselsdato")]
        public DateTime? dg_Udkoerselsdato {
            get {
                return GetAttributeValue<DateTime?>("dg_udkoerselsdato");
            }
            set {
                SetAttributeValue("dg_udkoerselsdato", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Udregnet</para>
        /// </summary>
        [AttributeLogicalName("dg_udregnet")]
        [DisplayName("Udregnet")]
        public decimal? dg_Udregnet {
            get {
                return GetMoneyValue("dg_udregnet");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Whole numberUdregnet</para>
        /// </summary>
        [AttributeLogicalName("dg_wholenumberudregnet")]
        [DisplayName("Whole numberUdregnet")]
        [Range(-2147483648, 2147483647)]
        public int? dg_WholenumberUdregnet {
            get {
                return GetAttributeValue<int?>("dg_wholenumberudregnet");
            }
        }
        
        /// <summary>
        /// <para>Display Name: asdasasdasds</para>
        /// </summary>
        [AttributeLogicalName("dg_asdas")]
        [DisplayName("asdasasdasds")]
        public decimal? dg_asdas {
            get {
                return GetMoneyValue("dg_asdas");
            }
        }
        
        /// <summary>
        /// <para>Value of the asdas in base currency.</para>
        /// <para>Display Name: asdas (Base)</para>
        /// </summary>
        [AttributeLogicalName("dg_asdas_base")]
        [DisplayName("asdas (Base)")]
        public decimal? dg_asdas_Base {
            get {
                return GetMoneyValue("dg_asdas_base");
            }
        }
        
        /// <summary>
        /// <para>Last Updated time of rollup field asdas.</para>
        /// <para>Display Name: asdas (Last Updated On)</para>
        /// </summary>
        [AttributeLogicalName("dg_asdas_date")]
        [DisplayName("asdas (Last Updated On)")]
        public DateTime? dg_asdas_Date {
            get {
                return GetAttributeValue<DateTime?>("dg_asdas_date");
            }
        }
        
        /// <summary>
        /// <para>State of rollup field asdas.</para>
        /// <para>Display Name: asdas (State)</para>
        /// </summary>
        [AttributeLogicalName("dg_asdas_state")]
        [DisplayName("asdas (State)")]
        [Range(-2147483648, 2147483647)]
        public int? dg_asdas_State {
            get {
                return GetAttributeValue<int?>("dg_asdas_state");
            }
        }
        
        /// <summary>
        /// <para>Value of the AvgAllowance in base currency.</para>
        /// <para>Display Name: AvgAllowance (Base)</para>
        /// </summary>
        [AttributeLogicalName("dg_avgallowance_base")]
        [DisplayName("AvgAllowance (Base)")]
        public decimal? dg_avgallowance_Base {
            get {
                return GetMoneyValue("dg_avgallowance_base");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Dokumenttyper</para>
        /// </summary>
        [AttributeLogicalName("dg_dokumenttyper")]
        [DisplayName("Dokumenttyper")]
        public IEnumerable<dg_dokumenttyper> dg_dokumenttyper {
            get {
                return GetOptionSetCollectionValue<dg_dokumenttyper>("dg_dokumenttyper");
            }
            set {
                SetOptionSetCollectionValue("dg_dokumenttyper", value);
            }
        }
        
        /// <summary>
        /// <para>Value of the EndnuUdregnet in base currency.</para>
        /// <para>Display Name: EndnuUdregnet (Base)</para>
        /// </summary>
        [AttributeLogicalName("dg_endnuudregnet_base")]
        [DisplayName("EndnuUdregnet (Base)")]
        public decimal? dg_endnuudregnet_Base {
            get {
                return GetMoneyValue("dg_endnuudregnet_base");
            }
        }
        
        /// <summary>
        /// <para>Value of the MaxAllowance in base currency.</para>
        /// <para>Display Name: MaxAllowance (Base)</para>
        /// </summary>
        [AttributeLogicalName("dg_maxallowance_base")]
        [DisplayName("MaxAllowance (Base)")]
        public decimal? dg_maxallowance_Base {
            get {
                return GetMoneyValue("dg_maxallowance_base");
            }
        }
        
        /// <summary>
        /// <para>Value of the MinAllowance in base currency.</para>
        /// <para>Display Name: MinAllowance (Base)</para>
        /// </summary>
        [AttributeLogicalName("dg_minallowance_base")]
        [DisplayName("MinAllowance (Base)")]
        public decimal? dg_minallowance_Base {
            get {
                return GetMoneyValue("dg_minallowance_base");
            }
        }
        
        /// <summary>
        /// <para>The name of the custom entity.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("dg_name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string dg_name {
            get {
                return GetAttributeValue<string>("dg_name");
            }
            set {
                SetAttributeValue("dg_name", value);
            }
        }
        
        /// <summary>
        /// <para>Value of the Ticket price in base currency.</para>
        /// <para>Display Name: Ticket price (Base)</para>
        /// </summary>
        [AttributeLogicalName("dg_ticketprice_base")]
        [DisplayName("Ticket price (Base)")]
        public decimal? dg_ticketprice_Base {
            get {
                return GetMoneyValue("dg_ticketprice_base");
            }
        }
        
        /// <summary>
        /// <para>Value of the Total allowance in base currency.</para>
        /// <para>Display Name: Total allowance (Base)</para>
        /// </summary>
        [AttributeLogicalName("dg_totalallowance_base")]
        [DisplayName("Total allowance (Base)")]
        public decimal? dg_totalallowance_Base {
            get {
                return GetMoneyValue("dg_totalallowance_base");
            }
        }
        
        /// <summary>
        /// <para>Value of the Udregnet in base currency.</para>
        /// <para>Display Name: Udregnet (Base)</para>
        /// </summary>
        [AttributeLogicalName("dg_udregnet_base")]
        [DisplayName("Udregnet (Base)")]
        public decimal? dg_udregnet_Base {
            get {
                return GetMoneyValue("dg_udregnet_base");
            }
        }
        
        /// <summary>
        /// <para>Status of the Bus</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public dg_busState? statecode {
            get {
                return GetOptionSetValue<dg_busState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the Bus</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public dg_bus_statuscode? statuscode {
            get {
                return GetOptionSetValue<dg_bus_statuscode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        [AttributeLogicalName("transactioncurrencyid")]
        [RelationshipSchemaName("TransactionCurrency_dg_bus")]
        public TransactionCurrency TransactionCurrency_dg_bus {
            get {
                return GetRelatedEntity<TransactionCurrency>("TransactionCurrency_dg_bus", null);
            }
            set {
                SetRelatedEntity("TransactionCurrency_dg_bus", null, value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_dg_bus")]
        public BusinessUnit business_unit_dg_bus {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_dg_bus", null);
            }
            set {
                SetRelatedEntity("business_unit_dg_bus", null, value);
            }
        }
        
        [RelationshipSchemaName("dg_HasRidden")]
        public IEnumerable<dg_child> dg_HasRidden {
            get {
                return GetRelatedEntities<dg_child>("dg_HasRidden", null);
            }
            set {
                SetRelatedEntities("dg_HasRidden", null, value);
            }
        }
        
        [RelationshipSchemaName("dg_bus_SyncErrors")]
        public IEnumerable<SyncError> dg_bus_SyncErrors {
            get {
                return GetRelatedEntities<SyncError>("dg_bus_SyncErrors", null);
            }
            set {
                SetRelatedEntities("dg_bus_SyncErrors", null, value);
            }
        }
        
        [RelationshipSchemaName("dg_bus_connections1")]
        public IEnumerable<Connection> dg_bus_connections1 {
            get {
                return GetRelatedEntities<Connection>("dg_bus_connections1", null);
            }
            set {
                SetRelatedEntities("dg_bus_connections1", null, value);
            }
        }
        
        [RelationshipSchemaName("dg_bus_connections2")]
        public IEnumerable<Connection> dg_bus_connections2 {
            get {
                return GetRelatedEntities<Connection>("dg_bus_connections2", null);
            }
            set {
                SetRelatedEntities("dg_bus_connections2", null, value);
            }
        }
        
        [RelationshipSchemaName("dg_bus_parental")]
        public IEnumerable<dg_child> dg_bus_parental {
            get {
                return GetRelatedEntities<dg_child>("dg_bus_parental", null);
            }
            set {
                SetRelatedEntities("dg_bus_parental", null, value);
            }
        }
        
        [RelationshipSchemaName("dg_dg_bus_dg_child_Skolebus")]
        public IEnumerable<dg_child> dg_dg_bus_dg_child_Skolebus {
            get {
                return GetRelatedEntities<dg_child>("dg_dg_bus_dg_child_Skolebus", null);
            }
            set {
                SetRelatedEntities("dg_dg_bus_dg_child_Skolebus", null, value);
            }
        }
        
        [AttributeLogicalName("dg_driver")]
        [RelationshipSchemaName("dg_dg_man_dg_bus_Driver")]
        public dg_man dg_dg_man_dg_bus_Driver {
            get {
                return GetRelatedEntity<dg_man>("dg_dg_man_dg_bus_Driver", null);
            }
            set {
                SetRelatedEntity("dg_dg_man_dg_bus_Driver", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_dg_bus_createdby")]
        public SystemUser lk_dg_bus_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dg_bus_createdby", null);
            }
            set {
                SetRelatedEntity("lk_dg_bus_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_dg_bus_createdonbehalfby")]
        public SystemUser lk_dg_bus_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dg_bus_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_dg_bus_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_dg_bus_modifiedby")]
        public SystemUser lk_dg_bus_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dg_bus_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_dg_bus_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_dg_bus_modifiedonbehalfby")]
        public SystemUser lk_dg_bus_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dg_bus_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_dg_bus_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_dg_bus")]
        public Team team_dg_bus {
            get {
                return GetRelatedEntity<Team>("team_dg_bus", null);
            }
            set {
                SetRelatedEntity("team_dg_bus", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_dg_bus")]
        public SystemUser user_dg_bus {
            get {
                return GetRelatedEntity<SystemUser>("user_dg_bus", null);
            }
            set {
                SetRelatedEntity("user_dg_bus", null, value);
            }
        }
        
        public static dg_bus Retrieve(IOrganizationService service, Guid id, params Expression<Func<dg_bus,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Child</para>
    /// </summary>
    [EntityLogicalName("dg_child")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class dg_child : ExtendedEntity<dg_childState, dg_child_statuscode> {
        
        public const string EntityLogicalName = "dg_child";
        
        public const int EntityTypeCode = 10014;
        
        public dg_child() : 
                base(EntityLogicalName) {
        }
        
        public dg_child(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("dg_name");
            }
        }
        
        [AttributeLogicalName("dg_childid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("dg_childid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for entity instances</para>
        /// <para>Display Name: Child</para>
        /// </summary>
        [AttributeLogicalName("dg_childid")]
        [DisplayName("Child")]
        public Guid? dg_childId {
            get {
                return GetAttributeValue<Guid?>("dg_childid");
            }
            set {
                SetId("dg_childid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the record.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        [AttributeLogicalName("entityimageid")]
        public Guid? EntityImageId {
            get {
                return GetAttributeValue<Guid?>("entityimageid");
            }
        }
        
        /// <summary>
        /// <para>Exchange rate for the currency associated with the entity with respect to the base currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("Exchange Rate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who modified the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who modified the record.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Owner Id</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the business unit that owns the record</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the team that owns the record.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the user that owns the record.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>The name of the custom entity.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("dg_name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("dg_name");
            }
            set {
                SetAttributeValue("dg_name", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the currency associated with the entity.</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Allowance</para>
        /// </summary>
        [AttributeLogicalName("dg_allowance")]
        [DisplayName("Allowance")]
        public decimal? dg_Allowance {
            get {
                return GetMoneyValue("dg_allowance");
            }
            set {
                SetMoneyValue("dg_allowance", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Anonymized</para>
        /// </summary>
        [AttributeLogicalName("dg_anonymized")]
        [DisplayName("Anonymized")]
        public DateTime? dg_Anonymized {
            get {
                return GetAttributeValue<DateTime?>("dg_anonymized");
            }
            set {
                SetAttributeValue("dg_anonymized", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Primary Contact</para>
        /// </summary>
        [AttributeLogicalName("dg_primarycontact")]
        [DisplayName("Primary Contact")]
        public EntityReference dg_PrimaryContact {
            get {
                return GetAttributeValue<EntityReference>("dg_primarycontact");
            }
            set {
                SetAttributeValue("dg_primarycontact", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Skolebus</para>
        /// </summary>
        [AttributeLogicalName("dg_skolebus")]
        [DisplayName("Skolebus")]
        public EntityReference dg_Skolebus {
            get {
                return GetAttributeValue<EntityReference>("dg_skolebus");
            }
            set {
                SetAttributeValue("dg_skolebus", value);
            }
        }
        
        /// <summary>
        /// <para>Value of the Allowance in base currency.</para>
        /// <para>Display Name: Allowance (Base)</para>
        /// </summary>
        [AttributeLogicalName("dg_allowance_base")]
        [DisplayName("Allowance (Base)")]
        public decimal? dg_allowance_Base {
            get {
                return GetMoneyValue("dg_allowance_base");
            }
        }
        
        /// <summary>
        /// <para>The name of the custom entity.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("dg_name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string dg_name {
            get {
                return GetAttributeValue<string>("dg_name");
            }
            set {
                SetAttributeValue("dg_name", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for Bus associated with Child.</para>
        /// <para>Display Name: parentBus</para>
        /// </summary>
        [AttributeLogicalName("dg_parentbusid")]
        [DisplayName("parentBus")]
        public EntityReference dg_parentBusId {
            get {
                return GetAttributeValue<EntityReference>("dg_parentbusid");
            }
            set {
                SetAttributeValue("dg_parentbusid", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the Child</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public dg_childState? statecode {
            get {
                return GetOptionSetValue<dg_childState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the Child</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public dg_child_statuscode? statuscode {
            get {
                return GetOptionSetValue<dg_child_statuscode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        [AttributeLogicalName("transactioncurrencyid")]
        [RelationshipSchemaName("TransactionCurrency_dg_child")]
        public TransactionCurrency TransactionCurrency_dg_child {
            get {
                return GetRelatedEntity<TransactionCurrency>("TransactionCurrency_dg_child", null);
            }
            set {
                SetRelatedEntity("TransactionCurrency_dg_child", null, value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_dg_child")]
        public BusinessUnit business_unit_dg_child {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_dg_child", null);
            }
            set {
                SetRelatedEntity("business_unit_dg_child", null, value);
            }
        }
        
        [RelationshipSchemaName("dg_HasRidden")]
        public IEnumerable<dg_bus> dg_HasRidden {
            get {
                return GetRelatedEntities<dg_bus>("dg_HasRidden", null);
            }
            set {
                SetRelatedEntities("dg_HasRidden", null, value);
            }
        }
        
        [AttributeLogicalName("dg_parentbusid")]
        [RelationshipSchemaName("dg_bus_parental")]
        public dg_bus dg_bus_parental {
            get {
                return GetRelatedEntity<dg_bus>("dg_bus_parental", null);
            }
            set {
                SetRelatedEntity("dg_bus_parental", null, value);
            }
        }
        
        [AttributeLogicalName("dg_primarycontact")]
        [RelationshipSchemaName("dg_child_PrimaryContact_Contact")]
        public Contact dg_child_PrimaryContact_Contact {
            get {
                return GetRelatedEntity<Contact>("dg_child_PrimaryContact_Contact", null);
            }
            set {
                SetRelatedEntity("dg_child_PrimaryContact_Contact", null, value);
            }
        }
        
        [RelationshipSchemaName("dg_child_SyncErrors")]
        public IEnumerable<SyncError> dg_child_SyncErrors {
            get {
                return GetRelatedEntities<SyncError>("dg_child_SyncErrors", null);
            }
            set {
                SetRelatedEntities("dg_child_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("dg_skolebus")]
        [RelationshipSchemaName("dg_dg_bus_dg_child_Skolebus")]
        public dg_bus dg_dg_bus_dg_child_Skolebus {
            get {
                return GetRelatedEntity<dg_bus>("dg_dg_bus_dg_child_Skolebus", null);
            }
            set {
                SetRelatedEntity("dg_dg_bus_dg_child_Skolebus", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_dg_child_createdby")]
        public SystemUser lk_dg_child_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dg_child_createdby", null);
            }
            set {
                SetRelatedEntity("lk_dg_child_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_dg_child_createdonbehalfby")]
        public SystemUser lk_dg_child_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dg_child_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_dg_child_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_dg_child_modifiedby")]
        public SystemUser lk_dg_child_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dg_child_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_dg_child_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_dg_child_modifiedonbehalfby")]
        public SystemUser lk_dg_child_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dg_child_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_dg_child_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_dg_child")]
        public Team team_dg_child {
            get {
                return GetRelatedEntity<Team>("team_dg_child", null);
            }
            set {
                SetRelatedEntity("team_dg_child", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_dg_child")]
        public SystemUser user_dg_child {
            get {
                return GetRelatedEntity<SystemUser>("user_dg_child", null);
            }
            set {
                SetRelatedEntity("user_dg_child", null, value);
            }
        }
        
        public static dg_child Retrieve(IOrganizationService service, Guid id, params Expression<Func<dg_child,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Configuration</para>
    /// </summary>
    [EntityLogicalName("dg_configuration")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class dg_configuration : ExtendedEntity<dg_configurationState, dg_configuration_statuscode> {
        
        public const string EntityLogicalName = "dg_configuration";
        
        public const int EntityTypeCode = 10305;
        
        public dg_configuration() : 
                base(EntityLogicalName) {
        }
        
        public dg_configuration(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("dg_name");
            }
        }
        
        [AttributeLogicalName("dg_configurationid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("dg_configurationid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for entity instances</para>
        /// <para>Display Name: Configuration</para>
        /// </summary>
        [AttributeLogicalName("dg_configurationid")]
        [DisplayName("Configuration")]
        public Guid? dg_configurationId {
            get {
                return GetAttributeValue<Guid?>("dg_configurationid");
            }
            set {
                SetId("dg_configurationid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the record.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who modified the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who modified the record.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Owner Id</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the business unit that owns the record</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the team that owns the record.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the user that owns the record.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>The name of the custom entity.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("dg_name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("dg_name");
            }
            set {
                SetAttributeValue("dg_name", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version Number</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Ref Account</para>
        /// </summary>
        [AttributeLogicalName("dg_refaccount")]
        [DisplayName("Ref Account")]
        public EntityReference dg_RefAccount {
            get {
                return GetAttributeValue<EntityReference>("dg_refaccount");
            }
            set {
                SetAttributeValue("dg_refaccount", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Whole Number</para>
        /// </summary>
        [AttributeLogicalName("dg_wholenumber")]
        [DisplayName("Whole Number")]
        [Range(-2147483648, 2147483647)]
        public int? dg_WholeNumber {
            get {
                return GetAttributeValue<int?>("dg_wholenumber");
            }
            set {
                SetAttributeValue("dg_wholenumber", value);
            }
        }
        
        /// <summary>
        /// <para>The name of the custom entity.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("dg_name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string dg_name {
            get {
                return GetAttributeValue<string>("dg_name");
            }
            set {
                SetAttributeValue("dg_name", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the Configuration</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public dg_configurationState? statecode {
            get {
                return GetOptionSetValue<dg_configurationState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the Configuration</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public dg_configuration_statuscode? statuscode {
            get {
                return GetOptionSetValue<dg_configuration_statuscode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_dg_configuration")]
        public BusinessUnit business_unit_dg_configuration {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_dg_configuration", null);
            }
            set {
                SetRelatedEntity("business_unit_dg_configuration", null, value);
            }
        }
        
        [AttributeLogicalName("dg_refaccount")]
        [RelationshipSchemaName("dg_account_dg_configuration_RefAccount")]
        public Account dg_account_dg_configuration_RefAccount {
            get {
                return GetRelatedEntity<Account>("dg_account_dg_configuration_RefAccount", null);
            }
            set {
                SetRelatedEntity("dg_account_dg_configuration_RefAccount", null, value);
            }
        }
        
        [RelationshipSchemaName("dg_configuration_SyncErrors")]
        public IEnumerable<SyncError> dg_configuration_SyncErrors {
            get {
                return GetRelatedEntities<SyncError>("dg_configuration_SyncErrors", null);
            }
            set {
                SetRelatedEntities("dg_configuration_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_dg_configuration_createdby")]
        public SystemUser lk_dg_configuration_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dg_configuration_createdby", null);
            }
            set {
                SetRelatedEntity("lk_dg_configuration_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_dg_configuration_createdonbehalfby")]
        public SystemUser lk_dg_configuration_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dg_configuration_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_dg_configuration_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_dg_configuration_modifiedby")]
        public SystemUser lk_dg_configuration_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dg_configuration_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_dg_configuration_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_dg_configuration_modifiedonbehalfby")]
        public SystemUser lk_dg_configuration_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dg_configuration_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_dg_configuration_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_dg_configuration")]
        public Team team_dg_configuration {
            get {
                return GetRelatedEntity<Team>("team_dg_configuration", null);
            }
            set {
                SetRelatedEntity("team_dg_configuration", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_dg_configuration")]
        public SystemUser user_dg_configuration {
            get {
                return GetRelatedEntity<SystemUser>("user_dg_configuration", null);
            }
            set {
                SetRelatedEntity("user_dg_configuration", null, value);
            }
        }
        
        public static dg_configuration Retrieve(IOrganizationService service, Guid id, params Expression<Func<dg_configuration,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    [EntityLogicalName("dg_contact_dg_country")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class dg_contact_dg_country : ExtendedEntity<EmptyEnum, EmptyEnum> {
        
        public const string EntityLogicalName = "dg_contact_dg_country";
        
        public const string RelationshipSchemaName = "dg_contact_dg_country";
        
        public const int EntityTypeCode = 10304;
        
        public dg_contact_dg_country() : 
                base(EntityLogicalName) {
        }
        
        public dg_contact_dg_country(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay(null);
            }
        }
        
        [AttributeLogicalName("dg_contact_dg_countryid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("dg_contact_dg_countryid", value);
            }
        }
        
        [AttributeLogicalName("dg_contact_dg_countryid")]
        public Guid? dg_contact_dg_countryId {
            get {
                return GetAttributeValue<Guid?>("dg_contact_dg_countryid");
            }
            set {
                SetId("dg_contact_dg_countryid", value);
            }
        }
        
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        [AttributeLogicalName("contactid")]
        public Guid? contactid {
            get {
                return GetAttributeValue<Guid?>("contactid");
            }
        }
        
        [AttributeLogicalName("dg_countryid")]
        public Guid? dg_countryid {
            get {
                return GetAttributeValue<Guid?>("dg_countryid");
            }
        }
        
        public static dg_contact_dg_country Retrieve(IOrganizationService service, Guid id, params Expression<Func<dg_contact_dg_country,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Country</para>
    /// </summary>
    [EntityLogicalName("dg_country")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class dg_country : ExtendedEntity<dg_countryState, dg_country_statuscode> {
        
        public const string EntityLogicalName = "dg_country";
        
        public const int EntityTypeCode = 10031;
        
        public dg_country() : 
                base(EntityLogicalName) {
        }
        
        public dg_country(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("dg_country");
            }
        }
        
        [AttributeLogicalName("dg_countryid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("dg_countryid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for entity instances</para>
        /// <para>Display Name: Country</para>
        /// </summary>
        [AttributeLogicalName("dg_countryid")]
        [DisplayName("Country")]
        public Guid? dg_countryId {
            get {
                return GetAttributeValue<Guid?>("dg_countryid");
            }
            set {
                SetId("dg_countryid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the record.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who modified the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who modified the record.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Owner Id</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the business unit that owns the record</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the team that owns the record.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the user that owns the record.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>The name of the custom entity.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("dg_country")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("dg_country");
            }
            set {
                SetAttributeValue("dg_country", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version Number</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>The name of the custom entity.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("dg_country")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string dg_country_1 {
            get {
                return GetAttributeValue<string>("dg_country");
            }
            set {
                SetAttributeValue("dg_country", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the Country</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public dg_countryState? statecode {
            get {
                return GetOptionSetValue<dg_countryState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the Country</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public dg_country_statuscode? statuscode {
            get {
                return GetOptionSetValue<dg_country_statuscode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_dg_country")]
        public BusinessUnit business_unit_dg_country {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_dg_country", null);
            }
            set {
                SetRelatedEntity("business_unit_dg_country", null, value);
            }
        }
        
        [RelationshipSchemaName("dg_contact_dg_country")]
        public IEnumerable<Contact> dg_contact_dg_country {
            get {
                return GetRelatedEntities<Contact>("dg_contact_dg_country", null);
            }
            set {
                SetRelatedEntities("dg_contact_dg_country", null, value);
            }
        }
        
        [RelationshipSchemaName("dg_country_SyncErrors")]
        public IEnumerable<SyncError> dg_country_SyncErrors {
            get {
                return GetRelatedEntities<SyncError>("dg_country_SyncErrors", null);
            }
            set {
                SetRelatedEntities("dg_country_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_dg_country_createdby")]
        public SystemUser lk_dg_country_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dg_country_createdby", null);
            }
            set {
                SetRelatedEntity("lk_dg_country_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_dg_country_createdonbehalfby")]
        public SystemUser lk_dg_country_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dg_country_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_dg_country_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_dg_country_modifiedby")]
        public SystemUser lk_dg_country_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dg_country_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_dg_country_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_dg_country_modifiedonbehalfby")]
        public SystemUser lk_dg_country_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dg_country_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_dg_country_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_dg_country")]
        public Team team_dg_country {
            get {
                return GetRelatedEntity<Team>("team_dg_country", null);
            }
            set {
                SetRelatedEntity("team_dg_country", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_dg_country")]
        public SystemUser user_dg_country {
            get {
                return GetRelatedEntity<SystemUser>("user_dg_country", null);
            }
            set {
                SetRelatedEntity("user_dg_country", null, value);
            }
        }
        
        public static dg_country Retrieve(IOrganizationService service, Guid id, params Expression<Func<dg_country,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Event</para>
    /// </summary>
    [EntityLogicalName("dg_event")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class dg_event : ExtendedEntity<dg_eventState, dg_event_statuscode> {
        
        public const string EntityLogicalName = "dg_event";
        
        public const int EntityTypeCode = 10007;
        
        public dg_event() : 
                base(EntityLogicalName) {
        }
        
        public dg_event(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("dg_name");
            }
        }
        
        [AttributeLogicalName("dg_eventid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("dg_eventid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for entity instances</para>
        /// <para>Display Name: Event</para>
        /// </summary>
        [AttributeLogicalName("dg_eventid")]
        [DisplayName("Event")]
        public Guid? dg_eventId {
            get {
                return GetAttributeValue<Guid?>("dg_eventid");
            }
            set {
                SetId("dg_eventid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the record.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who modified the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who modified the record.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Owner Id</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the business unit that owns the record</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the team that owns the record.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the user that owns the record.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>The name of the custom entity.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("dg_name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("dg_name");
            }
            set {
                SetAttributeValue("dg_name", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Description</para>
        /// </summary>
        [AttributeLogicalName("dg_description")]
        [DisplayName("Description")]
        public string dg_Description {
            get {
                return GetAttributeValue<string>("dg_description");
            }
            set {
                SetAttributeValue("dg_description", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: End Date</para>
        /// </summary>
        [AttributeLogicalName("dg_enddate")]
        [DisplayName("End Date")]
        public DateTime? dg_EndDate {
            get {
                return GetAttributeValue<DateTime?>("dg_enddate");
            }
            set {
                SetAttributeValue("dg_enddate", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Maximum participants</para>
        /// </summary>
        [AttributeLogicalName("dg_maxparticipants")]
        [DisplayName("Maximum participants")]
        [Range(0, 2147483647)]
        public int? dg_MaxParticipants {
            get {
                return GetAttributeValue<int?>("dg_maxparticipants");
            }
            set {
                SetAttributeValue("dg_maxparticipants", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Start Date</para>
        /// </summary>
        [AttributeLogicalName("dg_startdate")]
        [DisplayName("Start Date")]
        public DateTime? dg_StartDate {
            get {
                return GetAttributeValue<DateTime?>("dg_startdate");
            }
            set {
                SetAttributeValue("dg_startdate", value);
            }
        }
        
        /// <summary>
        /// <para>The name of the custom entity.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("dg_name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string dg_name {
            get {
                return GetAttributeValue<string>("dg_name");
            }
            set {
                SetAttributeValue("dg_name", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the Event</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public dg_eventState? statecode {
            get {
                return GetOptionSetValue<dg_eventState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the Event</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public dg_event_statuscode? statuscode {
            get {
                return GetOptionSetValue<dg_event_statuscode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_dg_event")]
        public BusinessUnit business_unit_dg_event {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_dg_event", null);
            }
            set {
                SetRelatedEntity("business_unit_dg_event", null, value);
            }
        }
        
        [RelationshipSchemaName("dg_dg_event_dg_participant_Event")]
        public IEnumerable<dg_participant> dg_dg_event_dg_participant_Event {
            get {
                return GetRelatedEntities<dg_participant>("dg_dg_event_dg_participant_Event", null);
            }
            set {
                SetRelatedEntities("dg_dg_event_dg_participant_Event", null, value);
            }
        }
        
        [RelationshipSchemaName("dg_event_ActivityPointers")]
        public IEnumerable<ActivityPointer> dg_event_ActivityPointers {
            get {
                return GetRelatedEntities<ActivityPointer>("dg_event_ActivityPointers", null);
            }
            set {
                SetRelatedEntities("dg_event_ActivityPointers", null, value);
            }
        }
        
        [RelationshipSchemaName("dg_event_Appointments")]
        public IEnumerable<Appointment> dg_event_Appointments {
            get {
                return GetRelatedEntities<Appointment>("dg_event_Appointments", null);
            }
            set {
                SetRelatedEntities("dg_event_Appointments", null, value);
            }
        }
        
        [RelationshipSchemaName("dg_event_Emails")]
        public IEnumerable<Email> dg_event_Emails {
            get {
                return GetRelatedEntities<Email>("dg_event_Emails", null);
            }
            set {
                SetRelatedEntities("dg_event_Emails", null, value);
            }
        }
        
        [RelationshipSchemaName("dg_event_Faxes")]
        public IEnumerable<Fax> dg_event_Faxes {
            get {
                return GetRelatedEntities<Fax>("dg_event_Faxes", null);
            }
            set {
                SetRelatedEntities("dg_event_Faxes", null, value);
            }
        }
        
        [RelationshipSchemaName("dg_event_Letters")]
        public IEnumerable<Letter> dg_event_Letters {
            get {
                return GetRelatedEntities<Letter>("dg_event_Letters", null);
            }
            set {
                SetRelatedEntities("dg_event_Letters", null, value);
            }
        }
        
        [RelationshipSchemaName("dg_event_PhoneCalls")]
        public IEnumerable<PhoneCall> dg_event_PhoneCalls {
            get {
                return GetRelatedEntities<PhoneCall>("dg_event_PhoneCalls", null);
            }
            set {
                SetRelatedEntities("dg_event_PhoneCalls", null, value);
            }
        }
        
        [RelationshipSchemaName("dg_event_RecurringAppointmentMasters")]
        public IEnumerable<RecurringAppointmentMaster> dg_event_RecurringAppointmentMasters {
            get {
                return GetRelatedEntities<RecurringAppointmentMaster>("dg_event_RecurringAppointmentMasters", null);
            }
            set {
                SetRelatedEntities("dg_event_RecurringAppointmentMasters", null, value);
            }
        }
        
        [RelationshipSchemaName("dg_event_ServiceAppointments")]
        public IEnumerable<ServiceAppointment> dg_event_ServiceAppointments {
            get {
                return GetRelatedEntities<ServiceAppointment>("dg_event_ServiceAppointments", null);
            }
            set {
                SetRelatedEntities("dg_event_ServiceAppointments", null, value);
            }
        }
        
        [RelationshipSchemaName("dg_event_SocialActivities")]
        public IEnumerable<SocialActivity> dg_event_SocialActivities {
            get {
                return GetRelatedEntities<SocialActivity>("dg_event_SocialActivities", null);
            }
            set {
                SetRelatedEntities("dg_event_SocialActivities", null, value);
            }
        }
        
        [RelationshipSchemaName("dg_event_SyncErrors")]
        public IEnumerable<SyncError> dg_event_SyncErrors {
            get {
                return GetRelatedEntities<SyncError>("dg_event_SyncErrors", null);
            }
            set {
                SetRelatedEntities("dg_event_SyncErrors", null, value);
            }
        }
        
        [RelationshipSchemaName("dg_event_Tasks")]
        public IEnumerable<Task> dg_event_Tasks {
            get {
                return GetRelatedEntities<Task>("dg_event_Tasks", null);
            }
            set {
                SetRelatedEntities("dg_event_Tasks", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_dg_event_createdby")]
        public SystemUser lk_dg_event_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dg_event_createdby", null);
            }
            set {
                SetRelatedEntity("lk_dg_event_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_dg_event_createdonbehalfby")]
        public SystemUser lk_dg_event_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dg_event_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_dg_event_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_dg_event_modifiedby")]
        public SystemUser lk_dg_event_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dg_event_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_dg_event_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_dg_event_modifiedonbehalfby")]
        public SystemUser lk_dg_event_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dg_event_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_dg_event_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_dg_event")]
        public Team team_dg_event {
            get {
                return GetRelatedEntity<Team>("team_dg_event", null);
            }
            set {
                SetRelatedEntity("team_dg_event", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_dg_event")]
        public SystemUser user_dg_event {
            get {
                return GetRelatedEntity<SystemUser>("user_dg_event", null);
            }
            set {
                SetRelatedEntity("user_dg_event", null, value);
            }
        }
        
        public static dg_event Retrieve(IOrganizationService service, Guid id, params Expression<Func<dg_event,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Field</para>
    /// </summary>
    [EntityLogicalName("dg_field")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class dg_field : ExtendedEntity<dg_fieldState, dg_field_statuscode> {
        
        public const string EntityLogicalName = "dg_field";
        
        public const int EntityTypeCode = 10011;
        
        public dg_field() : 
                base(EntityLogicalName) {
        }
        
        public dg_field(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("dg_name");
            }
        }
        
        [AttributeLogicalName("dg_fieldid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("dg_fieldid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for entity instances</para>
        /// <para>Display Name: Field</para>
        /// </summary>
        [AttributeLogicalName("dg_fieldid")]
        [DisplayName("Field")]
        public Guid? dg_fieldId {
            get {
                return GetAttributeValue<Guid?>("dg_fieldid");
            }
            set {
                SetId("dg_fieldid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the record.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who modified the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who modified the record.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Owner Id</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the business unit that owns the record</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the team that owns the record.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the user that owns the record.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>The name of the custom entity.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("dg_name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("dg_name");
            }
            set {
                SetAttributeValue("dg_name", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>The name of the custom entity.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("dg_name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string dg_name {
            get {
                return GetAttributeValue<string>("dg_name");
            }
            set {
                SetAttributeValue("dg_name", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the Field</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public dg_fieldState? statecode {
            get {
                return GetOptionSetValue<dg_fieldState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the Field</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public dg_field_statuscode? statuscode {
            get {
                return GetOptionSetValue<dg_field_statuscode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_dg_field")]
        public BusinessUnit business_unit_dg_field {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_dg_field", null);
            }
            set {
                SetRelatedEntity("business_unit_dg_field", null, value);
            }
        }
        
        [RelationshipSchemaName("dg_field_SyncErrors")]
        public IEnumerable<SyncError> dg_field_SyncErrors {
            get {
                return GetRelatedEntities<SyncError>("dg_field_SyncErrors", null);
            }
            set {
                SetRelatedEntities("dg_field_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_dg_field_createdby")]
        public SystemUser lk_dg_field_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dg_field_createdby", null);
            }
            set {
                SetRelatedEntity("lk_dg_field_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_dg_field_createdonbehalfby")]
        public SystemUser lk_dg_field_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dg_field_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_dg_field_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_dg_field_modifiedby")]
        public SystemUser lk_dg_field_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dg_field_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_dg_field_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_dg_field_modifiedonbehalfby")]
        public SystemUser lk_dg_field_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dg_field_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_dg_field_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_dg_field")]
        public Team team_dg_field {
            get {
                return GetRelatedEntity<Team>("team_dg_field", null);
            }
            set {
                SetRelatedEntity("team_dg_field", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_dg_field")]
        public SystemUser user_dg_field {
            get {
                return GetRelatedEntity<SystemUser>("user_dg_field", null);
            }
            set {
                SetRelatedEntity("user_dg_field", null, value);
            }
        }
        
        public static dg_field Retrieve(IOrganizationService service, Guid id, params Expression<Func<dg_field,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Food</para>
    /// </summary>
    [EntityLogicalName("dg_food")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class dg_food : ExtendedEntity<dg_foodState, dg_food_statuscode> {
        
        public const string EntityLogicalName = "dg_food";
        
        public const int EntityTypeCode = 10402;
        
        public dg_food() : 
                base(EntityLogicalName) {
        }
        
        public dg_food(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("dg_name");
            }
        }
        
        [AttributeLogicalName("dg_foodid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("dg_foodid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for entity instances</para>
        /// <para>Display Name: Food</para>
        /// </summary>
        [AttributeLogicalName("dg_foodid")]
        [DisplayName("Food")]
        public Guid? dg_foodId {
            get {
                return GetAttributeValue<Guid?>("dg_foodid");
            }
            set {
                SetId("dg_foodid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the record.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who modified the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who modified the record.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Owner Id</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the business unit that owns the record</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the team that owns the record.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the user that owns the record.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>The name of the custom entity.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("dg_name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("dg_name");
            }
            set {
                SetAttributeValue("dg_name", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version Number</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>The name of the custom entity.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("dg_name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string dg_name {
            get {
                return GetAttributeValue<string>("dg_name");
            }
            set {
                SetAttributeValue("dg_name", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the Food</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public dg_foodState? statecode {
            get {
                return GetOptionSetValue<dg_foodState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the Food</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public dg_food_statuscode? statuscode {
            get {
                return GetOptionSetValue<dg_food_statuscode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_dg_food")]
        public BusinessUnit business_unit_dg_food {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_dg_food", null);
            }
            set {
                SetRelatedEntity("business_unit_dg_food", null, value);
            }
        }
        
        [RelationshipSchemaName("dg_dg_food_dg_animalfood")]
        public IEnumerable<dg_animalfood> dg_dg_food_dg_animalfood {
            get {
                return GetRelatedEntities<dg_animalfood>("dg_dg_food_dg_animalfood", null);
            }
            set {
                SetRelatedEntities("dg_dg_food_dg_animalfood", null, value);
            }
        }
        
        [RelationshipSchemaName("dg_food_SyncErrors")]
        public IEnumerable<SyncError> dg_food_SyncErrors {
            get {
                return GetRelatedEntities<SyncError>("dg_food_SyncErrors", null);
            }
            set {
                SetRelatedEntities("dg_food_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_dg_food_createdby")]
        public SystemUser lk_dg_food_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dg_food_createdby", null);
            }
            set {
                SetRelatedEntity("lk_dg_food_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_dg_food_createdonbehalfby")]
        public SystemUser lk_dg_food_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dg_food_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_dg_food_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_dg_food_modifiedby")]
        public SystemUser lk_dg_food_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dg_food_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_dg_food_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_dg_food_modifiedonbehalfby")]
        public SystemUser lk_dg_food_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dg_food_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_dg_food_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_dg_food")]
        public Team team_dg_food {
            get {
                return GetRelatedEntity<Team>("team_dg_food", null);
            }
            set {
                SetRelatedEntity("team_dg_food", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_dg_food")]
        public SystemUser user_dg_food {
            get {
                return GetRelatedEntity<SystemUser>("user_dg_food", null);
            }
            set {
                SetRelatedEntity("user_dg_food", null, value);
            }
        }
        
        public static dg_food Retrieve(IOrganizationService service, Guid id, params Expression<Func<dg_food,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Man</para>
    /// </summary>
    [EntityLogicalName("dg_man")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class dg_man : ExtendedEntity<dg_manState, dg_man_statuscode> {
        
        public const string EntityLogicalName = "dg_man";
        
        public const int EntityTypeCode = 10013;
        
        public dg_man() : 
                base(EntityLogicalName) {
        }
        
        public dg_man(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("dg_name");
            }
        }
        
        [AttributeLogicalName("dg_manid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("dg_manid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for entity instances</para>
        /// <para>Display Name: Man</para>
        /// </summary>
        [AttributeLogicalName("dg_manid")]
        [DisplayName("Man")]
        public Guid? dg_manId {
            get {
                return GetAttributeValue<Guid?>("dg_manid");
            }
            set {
                SetId("dg_manid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the record.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who modified the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who modified the record.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Owner Id</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the business unit that owns the record</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the team that owns the record.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the user that owns the record.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>The name of the custom entity.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("dg_name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("dg_name");
            }
            set {
                SetAttributeValue("dg_name", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>The name of the custom entity.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("dg_name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string dg_name {
            get {
                return GetAttributeValue<string>("dg_name");
            }
            set {
                SetAttributeValue("dg_name", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: testbool</para>
        /// </summary>
        [AttributeLogicalName("dg_testbool")]
        [DisplayName("testbool")]
        public bool? dg_testbool {
            get {
                return GetAttributeValue<bool?>("dg_testbool");
            }
            set {
                SetAttributeValue("dg_testbool", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: testoption</para>
        /// </summary>
        [AttributeLogicalName("dg_testoption")]
        [DisplayName("testoption")]
        public dg_threeoptionset? dg_testoption {
            get {
                return GetOptionSetValue<dg_threeoptionset>("dg_testoption");
            }
            set {
                SetOptionSetValue("dg_testoption", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the Man</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public dg_manState? statecode {
            get {
                return GetOptionSetValue<dg_manState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the Man</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public dg_man_statuscode? statuscode {
            get {
                return GetOptionSetValue<dg_man_statuscode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_dg_man")]
        public BusinessUnit business_unit_dg_man {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_dg_man", null);
            }
            set {
                SetRelatedEntity("business_unit_dg_man", null, value);
            }
        }
        
        [RelationshipSchemaName("dg_dg_man_dg_bus_Driver")]
        public IEnumerable<dg_bus> dg_dg_man_dg_bus_Driver {
            get {
                return GetRelatedEntities<dg_bus>("dg_dg_man_dg_bus_Driver", null);
            }
            set {
                SetRelatedEntities("dg_dg_man_dg_bus_Driver", null, value);
            }
        }
        
        [RelationshipSchemaName("dg_man_SyncErrors")]
        public IEnumerable<SyncError> dg_man_SyncErrors {
            get {
                return GetRelatedEntities<SyncError>("dg_man_SyncErrors", null);
            }
            set {
                SetRelatedEntities("dg_man_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_dg_man_createdby")]
        public SystemUser lk_dg_man_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dg_man_createdby", null);
            }
            set {
                SetRelatedEntity("lk_dg_man_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_dg_man_createdonbehalfby")]
        public SystemUser lk_dg_man_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dg_man_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_dg_man_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_dg_man_modifiedby")]
        public SystemUser lk_dg_man_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dg_man_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_dg_man_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_dg_man_modifiedonbehalfby")]
        public SystemUser lk_dg_man_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dg_man_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_dg_man_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_dg_man")]
        public Team team_dg_man {
            get {
                return GetRelatedEntity<Team>("team_dg_man", null);
            }
            set {
                SetRelatedEntity("team_dg_man", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_dg_man")]
        public SystemUser user_dg_man {
            get {
                return GetRelatedEntity<SystemUser>("user_dg_man", null);
            }
            set {
                SetRelatedEntity("user_dg_man", null, value);
            }
        }
        
        public static dg_man Retrieve(IOrganizationService service, Guid id, params Expression<Func<dg_man,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Mild</para>
    /// </summary>
    [EntityLogicalName("dg_mild")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class dg_mild : ExtendedEntity<dg_mildState, dg_mild_statuscode> {
        
        public const string EntityLogicalName = "dg_mild";
        
        public const int EntityTypeCode = 10015;
        
        public dg_mild() : 
                base(EntityLogicalName) {
        }
        
        public dg_mild(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("dg_name");
            }
        }
        
        [AttributeLogicalName("dg_mildid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("dg_mildid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for entity instances</para>
        /// <para>Display Name: Mild</para>
        /// </summary>
        [AttributeLogicalName("dg_mildid")]
        [DisplayName("Mild")]
        public Guid? dg_mildId {
            get {
                return GetAttributeValue<Guid?>("dg_mildid");
            }
            set {
                SetId("dg_mildid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the record.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who modified the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who modified the record.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Owner Id</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the business unit that owns the record</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the team that owns the record.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the user that owns the record.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>The name of the custom entity.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("dg_name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("dg_name");
            }
            set {
                SetAttributeValue("dg_name", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>The name of the custom entity.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("dg_name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string dg_name {
            get {
                return GetAttributeValue<string>("dg_name");
            }
            set {
                SetAttributeValue("dg_name", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the Mild</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public dg_mildState? statecode {
            get {
                return GetOptionSetValue<dg_mildState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the Mild</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public dg_mild_statuscode? statuscode {
            get {
                return GetOptionSetValue<dg_mild_statuscode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_dg_mild")]
        public BusinessUnit business_unit_dg_mild {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_dg_mild", null);
            }
            set {
                SetRelatedEntity("business_unit_dg_mild", null, value);
            }
        }
        
        [RelationshipSchemaName("dg_mild_SyncErrors")]
        public IEnumerable<SyncError> dg_mild_SyncErrors {
            get {
                return GetRelatedEntities<SyncError>("dg_mild_SyncErrors", null);
            }
            set {
                SetRelatedEntities("dg_mild_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_dg_mild_createdby")]
        public SystemUser lk_dg_mild_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dg_mild_createdby", null);
            }
            set {
                SetRelatedEntity("lk_dg_mild_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_dg_mild_createdonbehalfby")]
        public SystemUser lk_dg_mild_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dg_mild_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_dg_mild_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_dg_mild_modifiedby")]
        public SystemUser lk_dg_mild_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dg_mild_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_dg_mild_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_dg_mild_modifiedonbehalfby")]
        public SystemUser lk_dg_mild_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dg_mild_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_dg_mild_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_dg_mild")]
        public Team team_dg_mild {
            get {
                return GetRelatedEntity<Team>("team_dg_mild", null);
            }
            set {
                SetRelatedEntity("team_dg_mild", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_dg_mild")]
        public SystemUser user_dg_mild {
            get {
                return GetRelatedEntity<SystemUser>("user_dg_mild", null);
            }
            set {
                SetRelatedEntity("user_dg_mild", null, value);
            }
        }
        
        public static dg_mild Retrieve(IOrganizationService service, Guid id, params Expression<Func<dg_mild,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Participant</para>
    /// </summary>
    [EntityLogicalName("dg_participant")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class dg_participant : ExtendedEntity<dg_participantState, dg_participant_statuscode> {
        
        public const string EntityLogicalName = "dg_participant";
        
        public const int EntityTypeCode = 10008;
        
        public dg_participant() : 
                base(EntityLogicalName) {
        }
        
        public dg_participant(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("dg_name");
            }
        }
        
        [AttributeLogicalName("dg_participantid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("dg_participantid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for entity instances</para>
        /// <para>Display Name: Participant</para>
        /// </summary>
        [AttributeLogicalName("dg_participantid")]
        [DisplayName("Participant")]
        public Guid? dg_participantId {
            get {
                return GetAttributeValue<Guid?>("dg_participantid");
            }
            set {
                SetId("dg_participantid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the record.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who modified the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who modified the record.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Owner Id</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the business unit that owns the record</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the team that owns the record.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the user that owns the record.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>The name of the custom entity.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("dg_name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("dg_name");
            }
            set {
                SetAttributeValue("dg_name", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Age</para>
        /// </summary>
        [AttributeLogicalName("dg_age")]
        [DisplayName("Age")]
        [Range(0, 300)]
        public int? dg_Age {
            get {
                return GetAttributeValue<int?>("dg_age");
            }
            set {
                SetAttributeValue("dg_age", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Event</para>
        /// </summary>
        [AttributeLogicalName("dg_event")]
        [DisplayName("Event")]
        public EntityReference dg_Event {
            get {
                return GetAttributeValue<EntityReference>("dg_event");
            }
            set {
                SetAttributeValue("dg_event", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Food Preference</para>
        /// </summary>
        [AttributeLogicalName("dg_foodpreference")]
        [DisplayName("Food Preference")]
        public dg_foodpreference? dg_FoodPreference {
            get {
                return GetOptionSetValue<dg_foodpreference>("dg_foodpreference");
            }
            set {
                SetOptionSetValue("dg_foodpreference", value);
            }
        }
        
        /// <summary>
        /// <para>The name of the custom entity.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("dg_name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string dg_name {
            get {
                return GetAttributeValue<string>("dg_name");
            }
            set {
                SetAttributeValue("dg_name", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Email</para>
        /// </summary>
        [AttributeLogicalName("new_email")]
        [DisplayName("Email")]
        [MaxLength(100)]
        public string new_Email {
            get {
                return GetAttributeValue<string>("new_email");
            }
            set {
                SetAttributeValue("new_email", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the Participant</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public dg_participantState? statecode {
            get {
                return GetOptionSetValue<dg_participantState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the Participant</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public dg_participant_statuscode? statuscode {
            get {
                return GetOptionSetValue<dg_participant_statuscode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_dg_participant")]
        public BusinessUnit business_unit_dg_participant {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_dg_participant", null);
            }
            set {
                SetRelatedEntity("business_unit_dg_participant", null, value);
            }
        }
        
        [AttributeLogicalName("dg_event")]
        [RelationshipSchemaName("dg_dg_event_dg_participant_Event")]
        public dg_event dg_dg_event_dg_participant_Event {
            get {
                return GetRelatedEntity<dg_event>("dg_dg_event_dg_participant_Event", null);
            }
            set {
                SetRelatedEntity("dg_dg_event_dg_participant_Event", null, value);
            }
        }
        
        [RelationshipSchemaName("dg_participant_ActivityPointers")]
        public IEnumerable<ActivityPointer> dg_participant_ActivityPointers {
            get {
                return GetRelatedEntities<ActivityPointer>("dg_participant_ActivityPointers", null);
            }
            set {
                SetRelatedEntities("dg_participant_ActivityPointers", null, value);
            }
        }
        
        [RelationshipSchemaName("dg_participant_Appointments")]
        public IEnumerable<Appointment> dg_participant_Appointments {
            get {
                return GetRelatedEntities<Appointment>("dg_participant_Appointments", null);
            }
            set {
                SetRelatedEntities("dg_participant_Appointments", null, value);
            }
        }
        
        [RelationshipSchemaName("dg_participant_Emails")]
        public IEnumerable<Email> dg_participant_Emails {
            get {
                return GetRelatedEntities<Email>("dg_participant_Emails", null);
            }
            set {
                SetRelatedEntities("dg_participant_Emails", null, value);
            }
        }
        
        [RelationshipSchemaName("dg_participant_Faxes")]
        public IEnumerable<Fax> dg_participant_Faxes {
            get {
                return GetRelatedEntities<Fax>("dg_participant_Faxes", null);
            }
            set {
                SetRelatedEntities("dg_participant_Faxes", null, value);
            }
        }
        
        [RelationshipSchemaName("dg_participant_Letters")]
        public IEnumerable<Letter> dg_participant_Letters {
            get {
                return GetRelatedEntities<Letter>("dg_participant_Letters", null);
            }
            set {
                SetRelatedEntities("dg_participant_Letters", null, value);
            }
        }
        
        [RelationshipSchemaName("dg_participant_PhoneCalls")]
        public IEnumerable<PhoneCall> dg_participant_PhoneCalls {
            get {
                return GetRelatedEntities<PhoneCall>("dg_participant_PhoneCalls", null);
            }
            set {
                SetRelatedEntities("dg_participant_PhoneCalls", null, value);
            }
        }
        
        [RelationshipSchemaName("dg_participant_RecurringAppointmentMasters")]
        public IEnumerable<RecurringAppointmentMaster> dg_participant_RecurringAppointmentMasters {
            get {
                return GetRelatedEntities<RecurringAppointmentMaster>("dg_participant_RecurringAppointmentMasters", null);
            }
            set {
                SetRelatedEntities("dg_participant_RecurringAppointmentMasters", null, value);
            }
        }
        
        [RelationshipSchemaName("dg_participant_ServiceAppointments")]
        public IEnumerable<ServiceAppointment> dg_participant_ServiceAppointments {
            get {
                return GetRelatedEntities<ServiceAppointment>("dg_participant_ServiceAppointments", null);
            }
            set {
                SetRelatedEntities("dg_participant_ServiceAppointments", null, value);
            }
        }
        
        [RelationshipSchemaName("dg_participant_SocialActivities")]
        public IEnumerable<SocialActivity> dg_participant_SocialActivities {
            get {
                return GetRelatedEntities<SocialActivity>("dg_participant_SocialActivities", null);
            }
            set {
                SetRelatedEntities("dg_participant_SocialActivities", null, value);
            }
        }
        
        [RelationshipSchemaName("dg_participant_SyncErrors")]
        public IEnumerable<SyncError> dg_participant_SyncErrors {
            get {
                return GetRelatedEntities<SyncError>("dg_participant_SyncErrors", null);
            }
            set {
                SetRelatedEntities("dg_participant_SyncErrors", null, value);
            }
        }
        
        [RelationshipSchemaName("dg_participant_Tasks")]
        public IEnumerable<Task> dg_participant_Tasks {
            get {
                return GetRelatedEntities<Task>("dg_participant_Tasks", null);
            }
            set {
                SetRelatedEntities("dg_participant_Tasks", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_dg_participant_createdby")]
        public SystemUser lk_dg_participant_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dg_participant_createdby", null);
            }
            set {
                SetRelatedEntity("lk_dg_participant_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_dg_participant_createdonbehalfby")]
        public SystemUser lk_dg_participant_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dg_participant_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_dg_participant_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_dg_participant_modifiedby")]
        public SystemUser lk_dg_participant_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dg_participant_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_dg_participant_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_dg_participant_modifiedonbehalfby")]
        public SystemUser lk_dg_participant_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dg_participant_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_dg_participant_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_dg_participant")]
        public Team team_dg_participant {
            get {
                return GetRelatedEntity<Team>("team_dg_participant", null);
            }
            set {
                SetRelatedEntity("team_dg_participant", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_dg_participant")]
        public SystemUser user_dg_participant {
            get {
                return GetRelatedEntity<SystemUser>("user_dg_participant", null);
            }
            set {
                SetRelatedEntity("user_dg_participant", null, value);
            }
        }
        
        public static dg_participant Retrieve(IOrganizationService service, Guid id, params Expression<Func<dg_participant,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>This entity is used by the security role tests, to ensure that XrmMockup handles security roles and privilege correct in its database.</para>
    /// <para>Display Name: Security Role Test</para>
    /// </summary>
    [EntityLogicalName("dg_secroletest")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class dg_secroletest : ExtendedEntity<dg_secroletestState, dg_secroletest_statuscode> {
        
        public const string EntityLogicalName = "dg_secroletest";
        
        public const int EntityTypeCode = 10345;
        
        public dg_secroletest() : 
                base(EntityLogicalName) {
        }
        
        public dg_secroletest(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("dg_name");
            }
        }
        
        [AttributeLogicalName("dg_secroletestid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("dg_secroletestid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for entity instances</para>
        /// <para>Display Name: Security Role Test</para>
        /// </summary>
        [AttributeLogicalName("dg_secroletestid")]
        [DisplayName("Security Role Test")]
        public Guid? dg_secroletestId {
            get {
                return GetAttributeValue<Guid?>("dg_secroletestid");
            }
            set {
                SetId("dg_secroletestid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the record.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who modified the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who modified the record.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Owner Id</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the business unit that owns the record</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the team that owns the record.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the user that owns the record.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>The name of the custom entity.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("dg_name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("dg_name");
            }
            set {
                SetAttributeValue("dg_name", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version Number</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>The name of the custom entity.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("dg_name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string dg_name {
            get {
                return GetAttributeValue<string>("dg_name");
            }
            set {
                SetAttributeValue("dg_name", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the Security Role Test</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public dg_secroletestState? statecode {
            get {
                return GetOptionSetValue<dg_secroletestState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the Security Role Test</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public dg_secroletest_statuscode? statuscode {
            get {
                return GetOptionSetValue<dg_secroletest_statuscode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_dg_secroletest")]
        public BusinessUnit business_unit_dg_secroletest {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_dg_secroletest", null);
            }
            set {
                SetRelatedEntity("business_unit_dg_secroletest", null, value);
            }
        }
        
        [RelationshipSchemaName("dg_secroletest_SyncErrors")]
        public IEnumerable<SyncError> dg_secroletest_SyncErrors {
            get {
                return GetRelatedEntities<SyncError>("dg_secroletest_SyncErrors", null);
            }
            set {
                SetRelatedEntities("dg_secroletest_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_dg_secroletest_createdby")]
        public SystemUser lk_dg_secroletest_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dg_secroletest_createdby", null);
            }
            set {
                SetRelatedEntity("lk_dg_secroletest_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_dg_secroletest_createdonbehalfby")]
        public SystemUser lk_dg_secroletest_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dg_secroletest_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_dg_secroletest_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_dg_secroletest_modifiedby")]
        public SystemUser lk_dg_secroletest_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dg_secroletest_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_dg_secroletest_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_dg_secroletest_modifiedonbehalfby")]
        public SystemUser lk_dg_secroletest_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dg_secroletest_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_dg_secroletest_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_dg_secroletest")]
        public Team team_dg_secroletest {
            get {
                return GetRelatedEntity<Team>("team_dg_secroletest", null);
            }
            set {
                SetRelatedEntity("team_dg_secroletest", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_dg_secroletest")]
        public SystemUser user_dg_secroletest {
            get {
                return GetRelatedEntity<SystemUser>("user_dg_secroletest", null);
            }
            set {
                SetRelatedEntity("user_dg_secroletest", null, value);
            }
        }
        
        public static dg_secroletest Retrieve(IOrganizationService service, Guid id, params Expression<Func<dg_secroletest,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Sheep</para>
    /// </summary>
    [EntityLogicalName("dg_sheep")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class dg_sheep : ExtendedEntity<dg_sheepState, dg_sheep_statuscode> {
        
        public const string EntityLogicalName = "dg_sheep";
        
        public const int EntityTypeCode = 10010;
        
        public dg_sheep() : 
                base(EntityLogicalName) {
        }
        
        public dg_sheep(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("dg_name");
            }
        }
        
        [AttributeLogicalName("dg_sheepid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("dg_sheepid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for entity instances</para>
        /// <para>Display Name: Sheep</para>
        /// </summary>
        [AttributeLogicalName("dg_sheepid")]
        [DisplayName("Sheep")]
        public Guid? dg_sheepId {
            get {
                return GetAttributeValue<Guid?>("dg_sheepid");
            }
            set {
                SetId("dg_sheepid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the record.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who modified the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who modified the record.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Owner Id</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the business unit that owns the record</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the team that owns the record.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the user that owns the record.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>The name of the custom entity.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("dg_name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("dg_name");
            }
            set {
                SetAttributeValue("dg_name", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Another Date</para>
        /// </summary>
        [AttributeLogicalName("dg_anotherdate")]
        [DisplayName("Another Date")]
        public DateTime? dg_AnotherDate {
            get {
                return GetAttributeValue<DateTime?>("dg_anotherdate");
            }
            set {
                SetAttributeValue("dg_anotherdate", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: One date</para>
        /// </summary>
        [AttributeLogicalName("dg_onedate")]
        [DisplayName("One date")]
        public DateTime? dg_Onedate {
            get {
                return GetAttributeValue<DateTime?>("dg_onedate");
            }
            set {
                SetAttributeValue("dg_onedate", value);
            }
        }
        
        /// <summary>
        /// <para>The name of the custom entity.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("dg_name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string dg_name {
            get {
                return GetAttributeValue<string>("dg_name");
            }
            set {
                SetAttributeValue("dg_name", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the Sheep</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public dg_sheepState? statecode {
            get {
                return GetOptionSetValue<dg_sheepState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the Sheep</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public dg_sheep_statuscode? statuscode {
            get {
                return GetOptionSetValue<dg_sheep_statuscode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_dg_sheep")]
        public BusinessUnit business_unit_dg_sheep {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_dg_sheep", null);
            }
            set {
                SetRelatedEntity("business_unit_dg_sheep", null, value);
            }
        }
        
        [RelationshipSchemaName("dg_sheep_SyncErrors")]
        public IEnumerable<SyncError> dg_sheep_SyncErrors {
            get {
                return GetRelatedEntities<SyncError>("dg_sheep_SyncErrors", null);
            }
            set {
                SetRelatedEntities("dg_sheep_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_dg_sheep_createdby")]
        public SystemUser lk_dg_sheep_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dg_sheep_createdby", null);
            }
            set {
                SetRelatedEntity("lk_dg_sheep_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_dg_sheep_createdonbehalfby")]
        public SystemUser lk_dg_sheep_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dg_sheep_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_dg_sheep_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_dg_sheep_modifiedby")]
        public SystemUser lk_dg_sheep_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dg_sheep_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_dg_sheep_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_dg_sheep_modifiedonbehalfby")]
        public SystemUser lk_dg_sheep_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dg_sheep_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_dg_sheep_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_dg_sheep")]
        public Team team_dg_sheep {
            get {
                return GetRelatedEntity<Team>("team_dg_sheep", null);
            }
            set {
                SetRelatedEntity("team_dg_sheep", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_dg_sheep")]
        public SystemUser user_dg_sheep {
            get {
                return GetRelatedEntity<SystemUser>("user_dg_sheep", null);
            }
            set {
                SetRelatedEntity("user_dg_sheep", null, value);
            }
        }
        
        public static dg_sheep Retrieve(IOrganizationService service, Guid id, params Expression<Func<dg_sheep,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Tooth</para>
    /// </summary>
    [EntityLogicalName("dg_tooth")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class dg_tooth : ExtendedEntity<dg_toothState, dg_tooth_statuscode> {
        
        public const string EntityLogicalName = "dg_tooth";
        
        public const int EntityTypeCode = 10012;
        
        public dg_tooth() : 
                base(EntityLogicalName) {
        }
        
        public dg_tooth(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("dg_name");
            }
        }
        
        [AttributeLogicalName("dg_toothid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("dg_toothid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for entity instances</para>
        /// <para>Display Name: Tooth</para>
        /// </summary>
        [AttributeLogicalName("dg_toothid")]
        [DisplayName("Tooth")]
        public Guid? dg_toothId {
            get {
                return GetAttributeValue<Guid?>("dg_toothid");
            }
            set {
                SetId("dg_toothid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the record.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who modified the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who modified the record.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Owner Id</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the business unit that owns the record</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the team that owns the record.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the user that owns the record.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>The name of the custom entity.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("dg_name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("dg_name");
            }
            set {
                SetAttributeValue("dg_name", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>The name of the custom entity.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("dg_name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string dg_name {
            get {
                return GetAttributeValue<string>("dg_name");
            }
            set {
                SetAttributeValue("dg_name", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the Tooth</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public dg_toothState? statecode {
            get {
                return GetOptionSetValue<dg_toothState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the Tooth</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public dg_tooth_statuscode? statuscode {
            get {
                return GetOptionSetValue<dg_tooth_statuscode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_dg_tooth")]
        public BusinessUnit business_unit_dg_tooth {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_dg_tooth", null);
            }
            set {
                SetRelatedEntity("business_unit_dg_tooth", null, value);
            }
        }
        
        [RelationshipSchemaName("dg_tooth_SyncErrors")]
        public IEnumerable<SyncError> dg_tooth_SyncErrors {
            get {
                return GetRelatedEntities<SyncError>("dg_tooth_SyncErrors", null);
            }
            set {
                SetRelatedEntities("dg_tooth_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_dg_tooth_createdby")]
        public SystemUser lk_dg_tooth_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dg_tooth_createdby", null);
            }
            set {
                SetRelatedEntity("lk_dg_tooth_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_dg_tooth_createdonbehalfby")]
        public SystemUser lk_dg_tooth_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dg_tooth_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_dg_tooth_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_dg_tooth_modifiedby")]
        public SystemUser lk_dg_tooth_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dg_tooth_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_dg_tooth_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_dg_tooth_modifiedonbehalfby")]
        public SystemUser lk_dg_tooth_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dg_tooth_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_dg_tooth_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_dg_tooth")]
        public Team team_dg_tooth {
            get {
                return GetRelatedEntity<Team>("team_dg_tooth", null);
            }
            set {
                SetRelatedEntity("team_dg_tooth", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_dg_tooth")]
        public SystemUser user_dg_tooth {
            get {
                return GetRelatedEntity<SystemUser>("user_dg_tooth", null);
            }
            set {
                SetRelatedEntity("user_dg_tooth", null, value);
            }
        }
        
        public static dg_tooth Retrieve(IOrganizationService service, Guid id, params Expression<Func<dg_tooth,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Display Name: ZipCodeCity</para>
    /// </summary>
    [EntityLogicalName("dg_zipcodecity")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class dg_zipCodeCity : ExtendedEntity<dg_zipCodeCityState, dg_zipCodeCity_statuscode> {
        
        public const string EntityLogicalName = "dg_zipcodecity";
        
        public const int EntityTypeCode = 10055;
        
        public dg_zipCodeCity() : 
                base(EntityLogicalName) {
        }
        
        public dg_zipCodeCity(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("dg_name");
            }
        }
        
        [AttributeLogicalName("dg_zipcodecityid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("dg_zipcodecityid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for entity instances</para>
        /// <para>Display Name: ZipCodeCity</para>
        /// </summary>
        [AttributeLogicalName("dg_zipcodecityid")]
        [DisplayName("ZipCodeCity")]
        public Guid? dg_zipCodeCityId {
            get {
                return GetAttributeValue<Guid?>("dg_zipcodecityid");
            }
            set {
                SetId("dg_zipcodecityid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the record.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who modified the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who modified the record.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Owner Id</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the business unit that owns the record</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the team that owns the record.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the user that owns the record.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>The name of the custom entity.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("dg_name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("dg_name");
            }
            set {
                SetAttributeValue("dg_name", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version Number</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Display Name: City</para>
        /// </summary>
        [AttributeLogicalName("dg_city")]
        [DisplayName("City")]
        [MaxLength(100)]
        public string dg_City {
            get {
                return GetAttributeValue<string>("dg_city");
            }
            set {
                SetAttributeValue("dg_city", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: ZipCode</para>
        /// </summary>
        [AttributeLogicalName("dg_zipcode")]
        [DisplayName("ZipCode")]
        [MaxLength(100)]
        public string dg_ZipCode {
            get {
                return GetAttributeValue<string>("dg_zipcode");
            }
            set {
                SetAttributeValue("dg_zipcode", value);
            }
        }
        
        /// <summary>
        /// <para>The name of the custom entity.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("dg_name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string dg_name {
            get {
                return GetAttributeValue<string>("dg_name");
            }
            set {
                SetAttributeValue("dg_name", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the ZipCodeCity</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public dg_zipCodeCityState? statecode {
            get {
                return GetOptionSetValue<dg_zipCodeCityState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the ZipCodeCity</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public dg_zipCodeCity_statuscode? statuscode {
            get {
                return GetOptionSetValue<dg_zipCodeCity_statuscode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_dg_zipcodecity")]
        public BusinessUnit business_unit_dg_zipcodecity {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_dg_zipcodecity", null);
            }
            set {
                SetRelatedEntity("business_unit_dg_zipcodecity", null, value);
            }
        }
        
        [RelationshipSchemaName("dg_zipcodecity_SyncErrors")]
        public IEnumerable<SyncError> dg_zipcodecity_SyncErrors {
            get {
                return GetRelatedEntities<SyncError>("dg_zipcodecity_SyncErrors", null);
            }
            set {
                SetRelatedEntities("dg_zipcodecity_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_dg_zipcodecity_createdby")]
        public SystemUser lk_dg_zipcodecity_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dg_zipcodecity_createdby", null);
            }
            set {
                SetRelatedEntity("lk_dg_zipcodecity_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_dg_zipcodecity_createdonbehalfby")]
        public SystemUser lk_dg_zipcodecity_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dg_zipcodecity_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_dg_zipcodecity_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_dg_zipcodecity_modifiedby")]
        public SystemUser lk_dg_zipcodecity_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dg_zipcodecity_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_dg_zipcodecity_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_dg_zipcodecity_modifiedonbehalfby")]
        public SystemUser lk_dg_zipcodecity_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dg_zipcodecity_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_dg_zipcodecity_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_dg_zipcodecity")]
        public Team team_dg_zipcodecity {
            get {
                return GetRelatedEntity<Team>("team_dg_zipcodecity", null);
            }
            set {
                SetRelatedEntity("team_dg_zipcodecity", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_dg_zipcodecity")]
        public SystemUser user_dg_zipcodecity {
            get {
                return GetRelatedEntity<SystemUser>("user_dg_zipcodecity", null);
            }
            set {
                SetRelatedEntity("user_dg_zipcodecity", null, value);
            }
        }
        
        public static dg_zipCodeCity Retrieve(IOrganizationService service, Guid id, params Expression<Func<dg_zipCodeCity,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Contains user profile images that are stored as attachments and displayed in posts.</para>
    /// <para>Display Name: Profile Album</para>
    /// </summary>
    [EntityLogicalName("msdyn_postalbum")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class msdyn_PostAlbum : ExtendedEntity<msdyn_PostAlbumState, msdyn_PostAlbum_statuscode> {
        
        public const string EntityLogicalName = "msdyn_postalbum";
        
        public const int EntityTypeCode = 10000;
        
        public msdyn_PostAlbum() : 
                base(EntityLogicalName) {
        }
        
        public msdyn_PostAlbum(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("msdyn_name");
            }
        }
        
        [AttributeLogicalName("msdyn_postalbumid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("msdyn_postalbumid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for entity instances</para>
        /// <para>Display Name: Profile Album</para>
        /// </summary>
        [AttributeLogicalName("msdyn_postalbumid")]
        [DisplayName("Profile Album")]
        public Guid? msdyn_PostAlbumId {
            get {
                return GetAttributeValue<Guid?>("msdyn_postalbumid");
            }
            set {
                SetId("msdyn_postalbumid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the record.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who modified the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who modified the record.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Owner Id</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the business unit that owns the record</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the team that owns the record.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the user that owns the record.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>The name of the custom entity.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("msdyn_name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("msdyn_name");
            }
            set {
                SetAttributeValue("msdyn_name", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>The name of the custom entity.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("msdyn_name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string msdyn_name {
            get {
                return GetAttributeValue<string>("msdyn_name");
            }
            set {
                SetAttributeValue("msdyn_name", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the Profile Album</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public msdyn_PostAlbumState? statecode {
            get {
                return GetOptionSetValue<msdyn_PostAlbumState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the Profile Album</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public msdyn_PostAlbum_statuscode? statuscode {
            get {
                return GetOptionSetValue<msdyn_PostAlbum_statuscode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_msdyn_postalbum")]
        public BusinessUnit business_unit_msdyn_postalbum {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_msdyn_postalbum", null);
            }
            set {
                SetRelatedEntity("business_unit_msdyn_postalbum", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_msdyn_postalbum_createdby")]
        public SystemUser lk_msdyn_postalbum_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_msdyn_postalbum_createdby", null);
            }
            set {
                SetRelatedEntity("lk_msdyn_postalbum_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_msdyn_postalbum_createdonbehalfby")]
        public SystemUser lk_msdyn_postalbum_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_msdyn_postalbum_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_msdyn_postalbum_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_msdyn_postalbum_modifiedby")]
        public SystemUser lk_msdyn_postalbum_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_msdyn_postalbum_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_msdyn_postalbum_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_msdyn_postalbum_modifiedonbehalfby")]
        public SystemUser lk_msdyn_postalbum_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_msdyn_postalbum_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_msdyn_postalbum_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("msdyn_postalbum_ActivityPointers")]
        public IEnumerable<ActivityPointer> msdyn_postalbum_ActivityPointers {
            get {
                return GetRelatedEntities<ActivityPointer>("msdyn_postalbum_ActivityPointers", null);
            }
            set {
                SetRelatedEntities("msdyn_postalbum_ActivityPointers", null, value);
            }
        }
        
        [RelationshipSchemaName("msdyn_postalbum_Appointments")]
        public IEnumerable<Appointment> msdyn_postalbum_Appointments {
            get {
                return GetRelatedEntities<Appointment>("msdyn_postalbum_Appointments", null);
            }
            set {
                SetRelatedEntities("msdyn_postalbum_Appointments", null, value);
            }
        }
        
        [RelationshipSchemaName("msdyn_postalbum_Emails")]
        public IEnumerable<Email> msdyn_postalbum_Emails {
            get {
                return GetRelatedEntities<Email>("msdyn_postalbum_Emails", null);
            }
            set {
                SetRelatedEntities("msdyn_postalbum_Emails", null, value);
            }
        }
        
        [RelationshipSchemaName("msdyn_postalbum_Faxes")]
        public IEnumerable<Fax> msdyn_postalbum_Faxes {
            get {
                return GetRelatedEntities<Fax>("msdyn_postalbum_Faxes", null);
            }
            set {
                SetRelatedEntities("msdyn_postalbum_Faxes", null, value);
            }
        }
        
        [RelationshipSchemaName("msdyn_postalbum_Letters")]
        public IEnumerable<Letter> msdyn_postalbum_Letters {
            get {
                return GetRelatedEntities<Letter>("msdyn_postalbum_Letters", null);
            }
            set {
                SetRelatedEntities("msdyn_postalbum_Letters", null, value);
            }
        }
        
        [RelationshipSchemaName("msdyn_postalbum_PhoneCalls")]
        public IEnumerable<PhoneCall> msdyn_postalbum_PhoneCalls {
            get {
                return GetRelatedEntities<PhoneCall>("msdyn_postalbum_PhoneCalls", null);
            }
            set {
                SetRelatedEntities("msdyn_postalbum_PhoneCalls", null, value);
            }
        }
        
        [RelationshipSchemaName("msdyn_postalbum_RecurringAppointmentMasters")]
        public IEnumerable<RecurringAppointmentMaster> msdyn_postalbum_RecurringAppointmentMasters {
            get {
                return GetRelatedEntities<RecurringAppointmentMaster>("msdyn_postalbum_RecurringAppointmentMasters", null);
            }
            set {
                SetRelatedEntities("msdyn_postalbum_RecurringAppointmentMasters", null, value);
            }
        }
        
        [RelationshipSchemaName("msdyn_postalbum_ServiceAppointments")]
        public IEnumerable<ServiceAppointment> msdyn_postalbum_ServiceAppointments {
            get {
                return GetRelatedEntities<ServiceAppointment>("msdyn_postalbum_ServiceAppointments", null);
            }
            set {
                SetRelatedEntities("msdyn_postalbum_ServiceAppointments", null, value);
            }
        }
        
        [RelationshipSchemaName("msdyn_postalbum_SocialActivities")]
        public IEnumerable<SocialActivity> msdyn_postalbum_SocialActivities {
            get {
                return GetRelatedEntities<SocialActivity>("msdyn_postalbum_SocialActivities", null);
            }
            set {
                SetRelatedEntities("msdyn_postalbum_SocialActivities", null, value);
            }
        }
        
        [RelationshipSchemaName("msdyn_postalbum_SyncErrors")]
        public IEnumerable<SyncError> msdyn_postalbum_SyncErrors {
            get {
                return GetRelatedEntities<SyncError>("msdyn_postalbum_SyncErrors", null);
            }
            set {
                SetRelatedEntities("msdyn_postalbum_SyncErrors", null, value);
            }
        }
        
        [RelationshipSchemaName("msdyn_postalbum_Tasks")]
        public IEnumerable<Task> msdyn_postalbum_Tasks {
            get {
                return GetRelatedEntities<Task>("msdyn_postalbum_Tasks", null);
            }
            set {
                SetRelatedEntities("msdyn_postalbum_Tasks", null, value);
            }
        }
        
        [RelationshipSchemaName("msdyn_postalbum_connections1")]
        public IEnumerable<Connection> msdyn_postalbum_connections1 {
            get {
                return GetRelatedEntities<Connection>("msdyn_postalbum_connections1", null);
            }
            set {
                SetRelatedEntities("msdyn_postalbum_connections1", null, value);
            }
        }
        
        [RelationshipSchemaName("msdyn_postalbum_connections2")]
        public IEnumerable<Connection> msdyn_postalbum_connections2 {
            get {
                return GetRelatedEntities<Connection>("msdyn_postalbum_connections2", null);
            }
            set {
                SetRelatedEntities("msdyn_postalbum_connections2", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_msdyn_postalbum")]
        public Team team_msdyn_postalbum {
            get {
                return GetRelatedEntity<Team>("team_msdyn_postalbum", null);
            }
            set {
                SetRelatedEntity("team_msdyn_postalbum", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_msdyn_postalbum")]
        public SystemUser user_msdyn_postalbum {
            get {
                return GetRelatedEntity<SystemUser>("user_msdyn_postalbum", null);
            }
            set {
                SetRelatedEntity("user_msdyn_postalbum", null, value);
            }
        }
        
        public static msdyn_PostAlbum Retrieve(IOrganizationService service, Guid id, params Expression<Func<msdyn_PostAlbum,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Provides ability to store details about service agreements you have with your customers</para>
    /// <para>Display Name: Agreement</para>
    /// </summary>
    [EntityLogicalName("msdyn_agreement")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class msdyn_agreement : ExtendedEntity<msdyn_agreementState, msdyn_agreement_statuscode> {
        
        public const string EntityLogicalName = "msdyn_agreement";
        
        public const int EntityTypeCode = 10191;
        
        public msdyn_agreement() : 
                base(EntityLogicalName) {
        }
        
        public msdyn_agreement(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("msdyn_name");
            }
        }
        
        [AttributeLogicalName("msdyn_agreementid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("msdyn_agreementid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the entity instances.</para>
        /// <para>Display Name: Agreement</para>
        /// </summary>
        [AttributeLogicalName("msdyn_agreementid")]
        [DisplayName("Agreement")]
        public Guid? msdyn_agreementId {
            get {
                return GetAttributeValue<Guid?>("msdyn_agreementid");
            }
            set {
                SetId("msdyn_agreementid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record on behalf of another user.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Shows the sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who modified the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Shows who last updated the record on behalf of another user.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Owner Id</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the business unit that owns the record</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the team that owns the record.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the user that owns the record.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Agreement Number</para>
        /// </summary>
        [AttributeLogicalName("msdyn_name")]
        [DisplayName("Agreement Number")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("msdyn_name");
            }
            set {
                SetAttributeValue("msdyn_name", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version Number</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Shows the details of this agreement, as presented to the customer</para>
        /// <para>Display Name: Agreement Details</para>
        /// </summary>
        [AttributeLogicalName("msdyn_agreementdetails")]
        [DisplayName("Agreement Details")]
        public string msdyn_AgreementDetails {
            get {
                return GetAttributeValue<string>("msdyn_agreementdetails");
            }
            set {
                SetAttributeValue("msdyn_agreementdetails", value);
            }
        }
        
        /// <summary>
        /// <para>This field defines the time of day when Work Orders and Invoices are generated by the Agreement Booking Setups and Agreement Invoice Setups defined on this Agreement. If this field is blank, the logic will look to the overall setting on the Field Service Settings record.</para>
        /// <para>Display Name: Agreement Record Generation</para>
        /// </summary>
        [AttributeLogicalName("msdyn_agreementrecordgeneration")]
        [DisplayName("Agreement Record Generation")]
        public DateTime? msdyn_AgreementRecordGeneration {
            get {
                return GetAttributeValue<DateTime?>("msdyn_agreementrecordgeneration");
            }
            set {
                SetAttributeValue("msdyn_agreementrecordgeneration", value);
            }
        }
        
        /// <summary>
        /// <para>Internal field used to generate the next name upon entity creation. It is optionally copied to the msdyn_name field.</para>
        /// <para>Display Name: Auto-Numbering</para>
        /// </summary>
        [AttributeLogicalName("msdyn_autonumbering")]
        [DisplayName("Auto-Numbering")]
        [MaxLength(100)]
        public string msdyn_AutoNumbering {
            get {
                return GetAttributeValue<string>("msdyn_autonumbering");
            }
            set {
                SetAttributeValue("msdyn_autonumbering", value);
            }
        }
        
        /// <summary>
        /// <para>Account to be billed. If a billing account has been set on service account it will be populated by default. Otherwise, the billing account will be the same as the service account.</para>
        /// <para>Display Name: Billing Account</para>
        /// </summary>
        [AttributeLogicalName("msdyn_billingaccount")]
        [DisplayName("Billing Account")]
        public EntityReference msdyn_BillingAccount {
            get {
                return GetAttributeValue<EntityReference>("msdyn_billingaccount");
            }
            set {
                SetAttributeValue("msdyn_billingaccount", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Child Index</para>
        /// </summary>
        [AttributeLogicalName("msdyn_childindex")]
        [DisplayName("Child Index")]
        [Range(-2147483648, 2147483647)]
        public int? msdyn_ChildIndex {
            get {
                return GetAttributeValue<int?>("msdyn_childindex");
            }
            set {
                SetAttributeValue("msdyn_childindex", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the date this agreement was canceled.</para>
        /// <para>Display Name: Date Canceled</para>
        /// </summary>
        [AttributeLogicalName("msdyn_datecanceled")]
        [DisplayName("Date Canceled")]
        public DateTime? msdyn_DateCanceled {
            get {
                return GetAttributeValue<DateTime?>("msdyn_datecanceled");
            }
            set {
                SetAttributeValue("msdyn_datecanceled", value);
            }
        }
        
        /// <summary>
        /// <para>Type a description of the agreement.</para>
        /// <para>Display Name: Description</para>
        /// </summary>
        [AttributeLogicalName("msdyn_description")]
        [DisplayName("Description")]
        [MaxLength(200)]
        public string msdyn_Description {
            get {
                return GetAttributeValue<string>("msdyn_description");
            }
            set {
                SetAttributeValue("msdyn_description", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the duration how long this agreement is active.</para>
        /// <para>Display Name: Duration</para>
        /// </summary>
        [AttributeLogicalName("msdyn_duration")]
        [DisplayName("Duration")]
        [Range(0, 2147483647)]
        public int? msdyn_Duration {
            get {
                return GetAttributeValue<int?>("msdyn_duration");
            }
            set {
                SetAttributeValue("msdyn_duration", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the date when this agreement is no longer active.</para>
        /// <para>Display Name: End Date</para>
        /// </summary>
        [AttributeLogicalName("msdyn_enddate")]
        [DisplayName("End Date")]
        public DateTime? msdyn_EndDate {
            get {
                return GetAttributeValue<DateTime?>("msdyn_enddate");
            }
            set {
                SetAttributeValue("msdyn_enddate", value);
            }
        }
        
        /// <summary>
        /// <para>If this agreement originates from another agreement, you should specify the originating agreement here</para>
        /// <para>Display Name: Originating Agreement</para>
        /// </summary>
        [AttributeLogicalName("msdyn_originatingagreement")]
        [DisplayName("Originating Agreement")]
        public EntityReference msdyn_OriginatingAgreement {
            get {
                return GetAttributeValue<EntityReference>("msdyn_originatingagreement");
            }
            set {
                SetAttributeValue("msdyn_originatingagreement", value);
            }
        }
        
        /// <summary>
        /// <para>Price List that controls pricing for products added to this Agreement. By default the system will use the Price List specified on the account</para>
        /// <para>Display Name: Price List</para>
        /// </summary>
        [AttributeLogicalName("msdyn_pricelist")]
        [DisplayName("Price List")]
        public EntityReference msdyn_PriceList {
            get {
                return GetAttributeValue<EntityReference>("msdyn_pricelist");
            }
            set {
                SetAttributeValue("msdyn_pricelist", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only</para>
        /// <para>Display Name: Process Started On</para>
        /// </summary>
        [AttributeLogicalName("msdyn_processstartedon")]
        [DisplayName("Process Started On")]
        public DateTime? msdyn_ProcessStartedOn {
            get {
                return GetAttributeValue<DateTime?>("msdyn_processstartedon");
            }
            set {
                SetAttributeValue("msdyn_processstartedon", value);
            }
        }
        
        /// <summary>
        /// <para>Tax Code to be used to calculate tax when Agreement is taxable. By default the system will use the tax code specified on the service account</para>
        /// <para>Display Name: Sales Tax Code</para>
        /// </summary>
        [AttributeLogicalName("msdyn_salestaxcode")]
        [DisplayName("Sales Tax Code")]
        public EntityReference msdyn_SalesTaxCode {
            get {
                return GetAttributeValue<EntityReference>("msdyn_salestaxcode");
            }
            set {
                SetAttributeValue("msdyn_salestaxcode", value);
            }
        }
        
        /// <summary>
        /// <para>Account to be serviced</para>
        /// <para>Display Name: Service Account</para>
        /// </summary>
        [AttributeLogicalName("msdyn_serviceaccount")]
        [DisplayName("Service Account")]
        public EntityReference msdyn_ServiceAccount {
            get {
                return GetAttributeValue<EntityReference>("msdyn_serviceaccount");
            }
            set {
                SetAttributeValue("msdyn_serviceaccount", value);
            }
        }
        
        /// <summary>
        /// <para>The service territory this Agreement relates to. By default this will be set to the Service Territory defined on the service account</para>
        /// <para>Display Name: Service Territory</para>
        /// </summary>
        [AttributeLogicalName("msdyn_serviceterritory")]
        [DisplayName("Service Territory")]
        public EntityReference msdyn_ServiceTerritory {
            get {
                return GetAttributeValue<EntityReference>("msdyn_serviceterritory");
            }
            set {
                SetAttributeValue("msdyn_serviceterritory", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the date from when this agreement is active.</para>
        /// <para>Display Name: Start Date</para>
        /// </summary>
        [AttributeLogicalName("msdyn_startdate")]
        [DisplayName("Start Date")]
        public DateTime? msdyn_StartDate {
            get {
                return GetAttributeValue<DateTime?>("msdyn_startdate");
            }
            set {
                SetAttributeValue("msdyn_startdate", value);
            }
        }
        
        /// <summary>
        /// <para>Agreement Substatus</para>
        /// <para>Display Name: Substatus</para>
        /// </summary>
        [AttributeLogicalName("msdyn_substatus")]
        [DisplayName("Substatus")]
        public EntityReference msdyn_SubStatus {
            get {
                return GetAttributeValue<EntityReference>("msdyn_substatus");
            }
            set {
                SetAttributeValue("msdyn_substatus", value);
            }
        }
        
        /// <summary>
        /// <para>Tracks the current system status.</para>
        /// <para>Display Name: System Status</para>
        /// </summary>
        [AttributeLogicalName("msdyn_systemstatus")]
        [DisplayName("System Status")]
        public msdyn_agreementsystemstatus? msdyn_SystemStatus {
            get {
                return GetOptionSetValue<msdyn_agreementsystemstatus>("msdyn_systemstatus");
            }
            set {
                SetOptionSetValue("msdyn_systemstatus", value);
            }
        }
        
        /// <summary>
        /// <para>Specify if Agreement is taxable. By default an Agreement is taxable if billing account is not tax exempt, and Agreement type is taxable. If any of the above is false it will be set to non-taxable.</para>
        /// <para>Display Name: Taxable</para>
        /// </summary>
        [AttributeLogicalName("msdyn_taxable")]
        [DisplayName("Taxable")]
        public bool? msdyn_Taxable {
            get {
                return GetAttributeValue<bool?>("msdyn_taxable");
            }
            set {
                SetAttributeValue("msdyn_taxable", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Agreement Number</para>
        /// </summary>
        [AttributeLogicalName("msdyn_name")]
        [DisplayName("Agreement Number")]
        [MaxLength(100)]
        public string msdyn_name {
            get {
                return GetAttributeValue<string>("msdyn_name");
            }
            set {
                SetAttributeValue("msdyn_name", value);
            }
        }
        
        /// <summary>
        /// <para>Contains the ID of the process associated with the entity.</para>
        /// <para>Display Name: Process Id</para>
        /// </summary>
        [AttributeLogicalName("processid")]
        [DisplayName("Process Id")]
        public Guid? processid {
            get {
                return GetAttributeValue<Guid?>("processid");
            }
            set {
                SetAttributeValue("processid", value);
            }
        }
        
        /// <summary>
        /// <para>Contains the ID of the stage where the entity is located.</para>
        /// <para>Display Name: Stage Id</para>
        /// </summary>
        [AttributeLogicalName("stageid")]
        [DisplayName("Stage Id")]
        public Guid? stageid {
            get {
                return GetAttributeValue<Guid?>("stageid");
            }
            set {
                SetAttributeValue("stageid", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the Agreement</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public msdyn_agreementState? statecode {
            get {
                return GetOptionSetValue<msdyn_agreementState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the Agreement</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public msdyn_agreement_statuscode? statuscode {
            get {
                return GetOptionSetValue<msdyn_agreement_statuscode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>Shows a comma-separated list of string values that represent the unique identifiers of stages in a business process flow instance in the order that they occur.</para>
        /// <para>Display Name: Traversed Path</para>
        /// </summary>
        [AttributeLogicalName("traversedpath")]
        [DisplayName("Traversed Path")]
        [MaxLength(1250)]
        public string traversedpath {
            get {
                return GetAttributeValue<string>("traversedpath");
            }
            set {
                SetAttributeValue("traversedpath", value);
            }
        }
        
        [RelationshipSchemaName("msdyn_msdyn_agreement_msdyn_agreement_OriginatingAgreement", EntityRole.Referenced)]
        public IEnumerable<msdyn_agreement> Referencedmsdyn_msdyn_agreement_msdyn_agreement_OriginatingAgreement {
            get {
                return GetRelatedEntities<msdyn_agreement>("msdyn_msdyn_agreement_msdyn_agreement_OriginatingAgreement", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("msdyn_msdyn_agreement_msdyn_agreement_OriginatingAgreement", EntityRole.Referenced, value);
            }
        }
        
        [AttributeLogicalName("msdyn_originatingagreement")]
        [RelationshipSchemaName("msdyn_msdyn_agreement_msdyn_agreement_OriginatingAgreement", EntityRole.Referencing)]
        public msdyn_agreement Referencingmsdyn_msdyn_agreement_msdyn_agreement_OriginatingAgreement {
            get {
                return GetRelatedEntity<msdyn_agreement>("msdyn_msdyn_agreement_msdyn_agreement_OriginatingAgreement", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("msdyn_msdyn_agreement_msdyn_agreement_OriginatingAgreement", EntityRole.Referencing, value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_msdyn_agreement")]
        public BusinessUnit business_unit_msdyn_agreement {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_msdyn_agreement", null);
            }
            set {
                SetRelatedEntity("business_unit_msdyn_agreement", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_msdyn_agreement_createdby")]
        public SystemUser lk_msdyn_agreement_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_msdyn_agreement_createdby", null);
            }
            set {
                SetRelatedEntity("lk_msdyn_agreement_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_msdyn_agreement_createdonbehalfby")]
        public SystemUser lk_msdyn_agreement_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_msdyn_agreement_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_msdyn_agreement_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_msdyn_agreement_modifiedby")]
        public SystemUser lk_msdyn_agreement_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_msdyn_agreement_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_msdyn_agreement_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_msdyn_agreement_modifiedonbehalfby")]
        public SystemUser lk_msdyn_agreement_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_msdyn_agreement_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_msdyn_agreement_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("msdyn_billingaccount")]
        [RelationshipSchemaName("msdyn_account_msdyn_agreement_BillingAccount")]
        public Account msdyn_account_msdyn_agreement_BillingAccount {
            get {
                return GetRelatedEntity<Account>("msdyn_account_msdyn_agreement_BillingAccount", null);
            }
            set {
                SetRelatedEntity("msdyn_account_msdyn_agreement_BillingAccount", null, value);
            }
        }
        
        [AttributeLogicalName("msdyn_serviceaccount")]
        [RelationshipSchemaName("msdyn_account_msdyn_agreement_ServiceAccount")]
        public Account msdyn_account_msdyn_agreement_ServiceAccount {
            get {
                return GetRelatedEntity<Account>("msdyn_account_msdyn_agreement_ServiceAccount", null);
            }
            set {
                SetRelatedEntity("msdyn_account_msdyn_agreement_ServiceAccount", null, value);
            }
        }
        
        [RelationshipSchemaName("msdyn_agreement_ActivityPointers")]
        public IEnumerable<ActivityPointer> msdyn_agreement_ActivityPointers {
            get {
                return GetRelatedEntities<ActivityPointer>("msdyn_agreement_ActivityPointers", null);
            }
            set {
                SetRelatedEntities("msdyn_agreement_ActivityPointers", null, value);
            }
        }
        
        [RelationshipSchemaName("msdyn_agreement_Appointments")]
        public IEnumerable<Appointment> msdyn_agreement_Appointments {
            get {
                return GetRelatedEntities<Appointment>("msdyn_agreement_Appointments", null);
            }
            set {
                SetRelatedEntities("msdyn_agreement_Appointments", null, value);
            }
        }
        
        [RelationshipSchemaName("msdyn_agreement_Emails")]
        public IEnumerable<Email> msdyn_agreement_Emails {
            get {
                return GetRelatedEntities<Email>("msdyn_agreement_Emails", null);
            }
            set {
                SetRelatedEntities("msdyn_agreement_Emails", null, value);
            }
        }
        
        [RelationshipSchemaName("msdyn_agreement_Faxes")]
        public IEnumerable<Fax> msdyn_agreement_Faxes {
            get {
                return GetRelatedEntities<Fax>("msdyn_agreement_Faxes", null);
            }
            set {
                SetRelatedEntities("msdyn_agreement_Faxes", null, value);
            }
        }
        
        [RelationshipSchemaName("msdyn_agreement_Letters")]
        public IEnumerable<Letter> msdyn_agreement_Letters {
            get {
                return GetRelatedEntities<Letter>("msdyn_agreement_Letters", null);
            }
            set {
                SetRelatedEntities("msdyn_agreement_Letters", null, value);
            }
        }
        
        [RelationshipSchemaName("msdyn_agreement_PhoneCalls")]
        public IEnumerable<PhoneCall> msdyn_agreement_PhoneCalls {
            get {
                return GetRelatedEntities<PhoneCall>("msdyn_agreement_PhoneCalls", null);
            }
            set {
                SetRelatedEntities("msdyn_agreement_PhoneCalls", null, value);
            }
        }
        
        [RelationshipSchemaName("msdyn_agreement_RecurringAppointmentMasters")]
        public IEnumerable<RecurringAppointmentMaster> msdyn_agreement_RecurringAppointmentMasters {
            get {
                return GetRelatedEntities<RecurringAppointmentMaster>("msdyn_agreement_RecurringAppointmentMasters", null);
            }
            set {
                SetRelatedEntities("msdyn_agreement_RecurringAppointmentMasters", null, value);
            }
        }
        
        [RelationshipSchemaName("msdyn_agreement_ServiceAppointments")]
        public IEnumerable<ServiceAppointment> msdyn_agreement_ServiceAppointments {
            get {
                return GetRelatedEntities<ServiceAppointment>("msdyn_agreement_ServiceAppointments", null);
            }
            set {
                SetRelatedEntities("msdyn_agreement_ServiceAppointments", null, value);
            }
        }
        
        [RelationshipSchemaName("msdyn_agreement_SharePointDocumentLocations")]
        public IEnumerable<SharePointDocumentLocation> msdyn_agreement_SharePointDocumentLocations {
            get {
                return GetRelatedEntities<SharePointDocumentLocation>("msdyn_agreement_SharePointDocumentLocations", null);
            }
            set {
                SetRelatedEntities("msdyn_agreement_SharePointDocumentLocations", null, value);
            }
        }
        
        [RelationshipSchemaName("msdyn_agreement_SocialActivities")]
        public IEnumerable<SocialActivity> msdyn_agreement_SocialActivities {
            get {
                return GetRelatedEntities<SocialActivity>("msdyn_agreement_SocialActivities", null);
            }
            set {
                SetRelatedEntities("msdyn_agreement_SocialActivities", null, value);
            }
        }
        
        [RelationshipSchemaName("msdyn_agreement_SyncErrors")]
        public IEnumerable<SyncError> msdyn_agreement_SyncErrors {
            get {
                return GetRelatedEntities<SyncError>("msdyn_agreement_SyncErrors", null);
            }
            set {
                SetRelatedEntities("msdyn_agreement_SyncErrors", null, value);
            }
        }
        
        [RelationshipSchemaName("msdyn_agreement_Tasks")]
        public IEnumerable<Task> msdyn_agreement_Tasks {
            get {
                return GetRelatedEntities<Task>("msdyn_agreement_Tasks", null);
            }
            set {
                SetRelatedEntities("msdyn_agreement_Tasks", null, value);
            }
        }
        
        [RelationshipSchemaName("msdyn_agreement_connections1")]
        public IEnumerable<Connection> msdyn_agreement_connections1 {
            get {
                return GetRelatedEntities<Connection>("msdyn_agreement_connections1", null);
            }
            set {
                SetRelatedEntities("msdyn_agreement_connections1", null, value);
            }
        }
        
        [RelationshipSchemaName("msdyn_agreement_connections2")]
        public IEnumerable<Connection> msdyn_agreement_connections2 {
            get {
                return GetRelatedEntities<Connection>("msdyn_agreement_connections2", null);
            }
            set {
                SetRelatedEntities("msdyn_agreement_connections2", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_msdyn_agreement")]
        public Team team_msdyn_agreement {
            get {
                return GetRelatedEntity<Team>("team_msdyn_agreement", null);
            }
            set {
                SetRelatedEntity("team_msdyn_agreement", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_msdyn_agreement")]
        public SystemUser user_msdyn_agreement {
            get {
                return GetRelatedEntity<SystemUser>("user_msdyn_agreement", null);
            }
            set {
                SetRelatedEntity("user_msdyn_agreement", null, value);
            }
        }
        
        public static msdyn_agreement Retrieve(IOrganizationService service, Guid id, params Expression<Func<msdyn_agreement,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Contains user personalization information regarding which of the administrator’s selected views to display on a user’s personal wall.</para>
    /// <para>Display Name: Filter</para>
    /// </summary>
    [EntityLogicalName("msdyn_wallsavedqueryusersettings")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class msdyn_wallsavedqueryusersettings : ExtendedEntity<msdyn_wallsavedqueryusersettingsState, msdyn_wallsavedqueryusersettings_statuscode> {
        
        public const string EntityLogicalName = "msdyn_wallsavedqueryusersettings";
        
        public const int EntityTypeCode = 10004;
        
        public msdyn_wallsavedqueryusersettings() : 
                base(EntityLogicalName) {
        }
        
        public msdyn_wallsavedqueryusersettings(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("msdyn_entityname");
            }
        }
        
        [AttributeLogicalName("msdyn_wallsavedqueryusersettingsid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("msdyn_wallsavedqueryusersettingsid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for entity instances</para>
        /// <para>Display Name: Filter</para>
        /// </summary>
        [AttributeLogicalName("msdyn_wallsavedqueryusersettingsid")]
        [DisplayName("Filter")]
        public Guid? msdyn_wallsavedqueryusersettingsId {
            get {
                return GetAttributeValue<Guid?>("msdyn_wallsavedqueryusersettingsid");
            }
            set {
                SetId("msdyn_wallsavedqueryusersettingsid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the record.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who modified the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who modified the record.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Owner Id</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the business unit that owns the record</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the team that owns the record.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the user that owns the record.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Name of the entity to which the corresponding views belong.</para>
        /// <para>Display Name: Entity Name</para>
        /// </summary>
        [AttributeLogicalName("msdyn_entityname")]
        [DisplayName("Entity Name")]
        [MaxLength(128)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("msdyn_entityname");
            }
            set {
                SetAttributeValue("msdyn_entityname", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Indicates that the record is virtual</para>
        /// <para>Display Name: Is Virtual</para>
        /// </summary>
        [AttributeLogicalName("msdyn_isvirtual")]
        [DisplayName("Is Virtual")]
        public bool? msdyn_IsVirtual {
            get {
                return GetAttributeValue<bool?>("msdyn_isvirtual");
            }
            set {
                SetAttributeValue("msdyn_isvirtual", value);
            }
        }
        
        /// <summary>
        /// <para>XML blob that stores personalization data for the user.</para>
        /// <para>Display Name: Data</para>
        /// </summary>
        [AttributeLogicalName("msdyn_data")]
        [DisplayName("Data")]
        public string msdyn_data {
            get {
                return GetAttributeValue<string>("msdyn_data");
            }
            set {
                SetAttributeValue("msdyn_data", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates that view is selected by default if value is greater than 0. Also contains information which specific filter is applied.</para>
        /// <para>Display Name: Default</para>
        /// </summary>
        [AttributeLogicalName("msdyn_default")]
        [DisplayName("Default")]
        [Range(0, 2147483647)]
        public int? msdyn_default {
            get {
                return GetAttributeValue<int?>("msdyn_default");
            }
            set {
                SetAttributeValue("msdyn_default", value);
            }
        }
        
        /// <summary>
        /// <para>Display name of the entity to which the corresponding views belong.</para>
        /// <para>Display Name: Entity Display Name</para>
        /// </summary>
        [AttributeLogicalName("msdyn_entitydisplayname")]
        [DisplayName("Entity Display Name")]
        [MaxLength(128)]
        public string msdyn_entitydisplayname {
            get {
                return GetAttributeValue<string>("msdyn_entitydisplayname");
            }
            set {
                SetAttributeValue("msdyn_entitydisplayname", value);
            }
        }
        
        /// <summary>
        /// <para>Name of the entity to which the corresponding views belong.</para>
        /// <para>Display Name: Entity Name</para>
        /// </summary>
        [AttributeLogicalName("msdyn_entityname")]
        [DisplayName("Entity Name")]
        [MaxLength(128)]
        public string msdyn_entityname {
            get {
                return GetAttributeValue<string>("msdyn_entityname");
            }
            set {
                SetAttributeValue("msdyn_entityname", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates that wall should be included in response to avoid roundtrips to server</para>
        /// <para>Display Name: Include Wall in response</para>
        /// </summary>
        [AttributeLogicalName("msdyn_includewallinresponse")]
        [DisplayName("Include Wall in response")]
        public bool? msdyn_includewallinresponse {
            get {
                return GetAttributeValue<bool?>("msdyn_includewallinresponse");
            }
            set {
                SetAttributeValue("msdyn_includewallinresponse", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates that corresponding view is following view</para>
        /// <para>Display Name: Is Following</para>
        /// </summary>
        [AttributeLogicalName("msdyn_isfollowing")]
        [DisplayName("Is Following")]
        public bool? msdyn_isfollowing {
            get {
                return GetAttributeValue<bool?>("msdyn_isfollowing");
            }
            set {
                SetAttributeValue("msdyn_isfollowing", value);
            }
        }
        
        /// <summary>
        /// <para>Information that indicates whether the corresponding view should be displayed on the personal wall for this user.</para>
        /// <para>Display Name: Display on the wall</para>
        /// </summary>
        [AttributeLogicalName("msdyn_isvisible")]
        [DisplayName("Display on the wall")]
        public bool? msdyn_isvisible {
            get {
                return GetAttributeValue<bool?>("msdyn_isvisible");
            }
            set {
                SetAttributeValue("msdyn_isvisible", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Is Visible bit</para>
        /// </summary>
        [AttributeLogicalName("msdyn_isvisiblebit")]
        [DisplayName("Is Visible bit")]
        [Range(-2147483648, 2147483647)]
        public int? msdyn_isvisiblebit {
            get {
                return GetAttributeValue<int?>("msdyn_isvisiblebit");
            }
            set {
                SetAttributeValue("msdyn_isvisiblebit", value);
            }
        }
        
        /// <summary>
        /// <para>Virtual column which contains entity type code for the entities returned by corresponding savedquery</para>
        /// <para>Display Name: Entity Type</para>
        /// </summary>
        [AttributeLogicalName("msdyn_otc")]
        [DisplayName("Entity Type")]
        [Range(0, 2147483647)]
        public int? msdyn_otc {
            get {
                return GetAttributeValue<int?>("msdyn_otc");
            }
            set {
                SetAttributeValue("msdyn_otc", value);
            }
        }
        
        /// <summary>
        /// <para>Name of the corresponding view.</para>
        /// <para>Display Name: View Name</para>
        /// </summary>
        [AttributeLogicalName("msdyn_savedqueryname")]
        [DisplayName("View Name")]
        [MaxLength(100)]
        public string msdyn_savedqueryname {
            get {
                return GetAttributeValue<string>("msdyn_savedqueryname");
            }
            set {
                SetAttributeValue("msdyn_savedqueryname", value);
            }
        }
        
        /// <summary>
        /// <para>Sort order to be used when displaying the filter on the user’s personal wall.</para>
        /// <para>Display Name: Sort Order</para>
        /// </summary>
        [AttributeLogicalName("msdyn_sortorder")]
        [DisplayName("Sort Order")]
        [Range(0, 2147483647)]
        public int? msdyn_sortorder {
            get {
                return GetAttributeValue<int?>("msdyn_sortorder");
            }
            set {
                SetAttributeValue("msdyn_sortorder", value);
            }
        }
        
        /// <summary>
        /// <para>Reserved to support different view types. Currently not used.</para>
        /// <para>Display Name: Type</para>
        /// </summary>
        [AttributeLogicalName("msdyn_type")]
        [DisplayName("Type")]
        [Range(0, 2147483647)]
        public int? msdyn_type {
            get {
                return GetAttributeValue<int?>("msdyn_type");
            }
            set {
                SetAttributeValue("msdyn_type", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for User associated with Wall View User Setting.</para>
        /// <para>Display Name: User Id</para>
        /// </summary>
        [AttributeLogicalName("msdyn_userid")]
        [DisplayName("User Id")]
        public EntityReference msdyn_userid {
            get {
                return GetAttributeValue<EntityReference>("msdyn_userid");
            }
            set {
                SetAttributeValue("msdyn_userid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for Wall View associated with Wall View User Setting.</para>
        /// <para>Display Name: Wall View Id</para>
        /// </summary>
        [AttributeLogicalName("msdyn_wallsavedqueryid")]
        [DisplayName("Wall View Id")]
        public EntityReference msdyn_wallsavedqueryid {
            get {
                return GetAttributeValue<EntityReference>("msdyn_wallsavedqueryid");
            }
            set {
                SetAttributeValue("msdyn_wallsavedqueryid", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the Wall View User Setting</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public msdyn_wallsavedqueryusersettingsState? statecode {
            get {
                return GetOptionSetValue<msdyn_wallsavedqueryusersettingsState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the Wall View User Setting</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public msdyn_wallsavedqueryusersettings_statuscode? statuscode {
            get {
                return GetOptionSetValue<msdyn_wallsavedqueryusersettings_statuscode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_msdyn_wallsavedqueryusersettings")]
        public BusinessUnit business_unit_msdyn_wallsavedqueryusersettings {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_msdyn_wallsavedqueryusersettings", null);
            }
            set {
                SetRelatedEntity("business_unit_msdyn_wallsavedqueryusersettings", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_msdyn_wallsavedqueryusersettings_createdby")]
        public SystemUser lk_msdyn_wallsavedqueryusersettings_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_msdyn_wallsavedqueryusersettings_createdby", null);
            }
            set {
                SetRelatedEntity("lk_msdyn_wallsavedqueryusersettings_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_msdyn_wallsavedqueryusersettings_createdonbehalfby")]
        public SystemUser lk_msdyn_wallsavedqueryusersettings_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_msdyn_wallsavedqueryusersettings_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_msdyn_wallsavedqueryusersettings_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_msdyn_wallsavedqueryusersettings_modifiedby")]
        public SystemUser lk_msdyn_wallsavedqueryusersettings_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_msdyn_wallsavedqueryusersettings_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_msdyn_wallsavedqueryusersettings_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_msdyn_wallsavedqueryusersettings_modifiedonbehalfby")]
        public SystemUser lk_msdyn_wallsavedqueryusersettings_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_msdyn_wallsavedqueryusersettings_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_msdyn_wallsavedqueryusersettings_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("msdyn_userid")]
        [RelationshipSchemaName("msdyn_systemuser_wallsavedqueryusersettings_userid")]
        public SystemUser msdyn_systemuser_wallsavedqueryusersettings_userid {
            get {
                return GetRelatedEntity<SystemUser>("msdyn_systemuser_wallsavedqueryusersettings_userid", null);
            }
            set {
                SetRelatedEntity("msdyn_systemuser_wallsavedqueryusersettings_userid", null, value);
            }
        }
        
        [RelationshipSchemaName("msdyn_wallsavedqueryusersettings_SyncErrors")]
        public IEnumerable<SyncError> msdyn_wallsavedqueryusersettings_SyncErrors {
            get {
                return GetRelatedEntities<SyncError>("msdyn_wallsavedqueryusersettings_SyncErrors", null);
            }
            set {
                SetRelatedEntities("msdyn_wallsavedqueryusersettings_SyncErrors", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_msdyn_wallsavedqueryusersettings")]
        public Team team_msdyn_wallsavedqueryusersettings {
            get {
                return GetRelatedEntity<Team>("team_msdyn_wallsavedqueryusersettings", null);
            }
            set {
                SetRelatedEntity("team_msdyn_wallsavedqueryusersettings", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_msdyn_wallsavedqueryusersettings")]
        public SystemUser user_msdyn_wallsavedqueryusersettings {
            get {
                return GetRelatedEntity<SystemUser>("user_msdyn_wallsavedqueryusersettings", null);
            }
            set {
                SetRelatedEntity("user_msdyn_wallsavedqueryusersettings", null, value);
            }
        }
        
        public static msdyn_wallsavedqueryusersettings Retrieve(IOrganizationService service, Guid id, params Expression<Func<msdyn_wallsavedqueryusersettings,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    public partial class Xrm : ExtendedOrganizationServiceContext {
        
        public Xrm(IOrganizationService service) : 
                base(service) {
        }
        
        public IQueryable<Account> AccountSet {
            get {
                return CreateQuery<Account>();
            }
        }
        
        public IQueryable<AccountLeads> AccountLeadsSet {
            get {
                return CreateQuery<AccountLeads>();
            }
        }
        
        public IQueryable<ActivityParty> ActivityPartySet {
            get {
                return CreateQuery<ActivityParty>();
            }
        }
        
        public IQueryable<ActivityPointer> ActivityPointerSet {
            get {
                return CreateQuery<ActivityPointer>();
            }
        }
        
        public IQueryable<Appointment> AppointmentSet {
            get {
                return CreateQuery<Appointment>();
            }
        }
        
        public IQueryable<BookableResource> BookableResourceSet {
            get {
                return CreateQuery<BookableResource>();
            }
        }
        
        public IQueryable<BookableResourceBooking> BookableResourceBookingSet {
            get {
                return CreateQuery<BookableResourceBooking>();
            }
        }
        
        public IQueryable<BookableResourceBookingHeader> BookableResourceBookingHeaderSet {
            get {
                return CreateQuery<BookableResourceBookingHeader>();
            }
        }
        
        public IQueryable<BookableResourceCategory> BookableResourceCategorySet {
            get {
                return CreateQuery<BookableResourceCategory>();
            }
        }
        
        public IQueryable<BookableResourceCategoryAssn> BookableResourceCategoryAssnSet {
            get {
                return CreateQuery<BookableResourceCategoryAssn>();
            }
        }
        
        public IQueryable<BookableResourceCharacteristic> BookableResourceCharacteristicSet {
            get {
                return CreateQuery<BookableResourceCharacteristic>();
            }
        }
        
        public IQueryable<BookableResourceGroup> BookableResourceGroupSet {
            get {
                return CreateQuery<BookableResourceGroup>();
            }
        }
        
        public IQueryable<BookingStatus> BookingStatusSet {
            get {
                return CreateQuery<BookingStatus>();
            }
        }
        
        public IQueryable<BulkOperationLog> BulkOperationLogSet {
            get {
                return CreateQuery<BulkOperationLog>();
            }
        }
        
        public IQueryable<BusinessUnit> BusinessUnitSet {
            get {
                return CreateQuery<BusinessUnit>();
            }
        }
        
        public IQueryable<Calendar> CalendarSet {
            get {
                return CreateQuery<Calendar>();
            }
        }
        
        public IQueryable<Campaign> CampaignSet {
            get {
                return CreateQuery<Campaign>();
            }
        }
        
        public IQueryable<CampaignActivity> CampaignActivitySet {
            get {
                return CreateQuery<CampaignActivity>();
            }
        }
        
        public IQueryable<CampaignActivityItem> CampaignActivityItemSet {
            get {
                return CreateQuery<CampaignActivityItem>();
            }
        }
        
        public IQueryable<CampaignItem> CampaignItemSet {
            get {
                return CreateQuery<CampaignItem>();
            }
        }
        
        public IQueryable<CampaignResponse> CampaignResponseSet {
            get {
                return CreateQuery<CampaignResponse>();
            }
        }
        
        public IQueryable<Characteristic> CharacteristicSet {
            get {
                return CreateQuery<Characteristic>();
            }
        }
        
        public IQueryable<Connection> ConnectionSet {
            get {
                return CreateQuery<Connection>();
            }
        }
        
        public IQueryable<Contact> ContactSet {
            get {
                return CreateQuery<Contact>();
            }
        }
        
        public IQueryable<ContactInvoices> ContactInvoicesSet {
            get {
                return CreateQuery<ContactInvoices>();
            }
        }
        
        public IQueryable<ContactLeads> ContactLeadsSet {
            get {
                return CreateQuery<ContactLeads>();
            }
        }
        
        public IQueryable<ContactOrders> ContactOrdersSet {
            get {
                return CreateQuery<ContactOrders>();
            }
        }
        
        public IQueryable<ContactQuotes> ContactQuotesSet {
            get {
                return CreateQuery<ContactQuotes>();
            }
        }
        
        public IQueryable<Contract> ContractSet {
            get {
                return CreateQuery<Contract>();
            }
        }
        
        public IQueryable<CustomerAddress> CustomerAddressSet {
            get {
                return CreateQuery<CustomerAddress>();
            }
        }
        
        public IQueryable<Email> EmailSet {
            get {
                return CreateQuery<Email>();
            }
        }
        
        public IQueryable<EmailServerProfile> EmailServerProfileSet {
            get {
                return CreateQuery<EmailServerProfile>();
            }
        }
        
        public IQueryable<Entitlement> EntitlementSet {
            get {
                return CreateQuery<Entitlement>();
            }
        }
        
        public IQueryable<EntitlementContacts> EntitlementContactsSet {
            get {
                return CreateQuery<EntitlementContacts>();
            }
        }
        
        public IQueryable<Fax> FaxSet {
            get {
                return CreateQuery<Fax>();
            }
        }
        
        public IQueryable<Goal> GoalSet {
            get {
                return CreateQuery<Goal>();
            }
        }
        
        public IQueryable<Incident> IncidentSet {
            get {
                return CreateQuery<Incident>();
            }
        }
        
        public IQueryable<IncidentResolution> IncidentResolutionSet {
            get {
                return CreateQuery<IncidentResolution>();
            }
        }
        
        public IQueryable<Invoice> InvoiceSet {
            get {
                return CreateQuery<Invoice>();
            }
        }
        
        public IQueryable<KnowledgeArticle> KnowledgeArticleSet {
            get {
                return CreateQuery<KnowledgeArticle>();
            }
        }
        
        public IQueryable<Lead> LeadSet {
            get {
                return CreateQuery<Lead>();
            }
        }
        
        public IQueryable<Letter> LetterSet {
            get {
                return CreateQuery<Letter>();
            }
        }
        
        public IQueryable<List> ListSet {
            get {
                return CreateQuery<List>();
            }
        }
        
        public IQueryable<ListMember> ListMemberSet {
            get {
                return CreateQuery<ListMember>();
            }
        }
        
        public IQueryable<Mailbox> MailboxSet {
            get {
                return CreateQuery<Mailbox>();
            }
        }
        
        public IQueryable<Opportunity> OpportunitySet {
            get {
                return CreateQuery<Opportunity>();
            }
        }
        
        public IQueryable<OpportunityClose> OpportunityCloseSet {
            get {
                return CreateQuery<OpportunityClose>();
            }
        }
        
        public IQueryable<OpportunitySalesProcess> OpportunitySalesProcessSet {
            get {
                return CreateQuery<OpportunitySalesProcess>();
            }
        }
        
        public IQueryable<Organization> OrganizationSet {
            get {
                return CreateQuery<Organization>();
            }
        }
        
        public IQueryable<PhoneCall> PhoneCallSet {
            get {
                return CreateQuery<PhoneCall>();
            }
        }
        
        public IQueryable<QueueItem> QueueItemSet {
            get {
                return CreateQuery<QueueItem>();
            }
        }
        
        public IQueryable<Quote> QuoteSet {
            get {
                return CreateQuery<Quote>();
            }
        }
        
        public IQueryable<RatingModel> RatingModelSet {
            get {
                return CreateQuery<RatingModel>();
            }
        }
        
        public IQueryable<RatingValue> RatingValueSet {
            get {
                return CreateQuery<RatingValue>();
            }
        }
        
        public IQueryable<RecurringAppointmentMaster> RecurringAppointmentMasterSet {
            get {
                return CreateQuery<RecurringAppointmentMaster>();
            }
        }
        
        public IQueryable<SLA> SLASet {
            get {
                return CreateQuery<SLA>();
            }
        }
        
        public IQueryable<SalesOrder> SalesOrderSet {
            get {
                return CreateQuery<SalesOrder>();
            }
        }
        
        public IQueryable<ServiceAppointment> ServiceAppointmentSet {
            get {
                return CreateQuery<ServiceAppointment>();
            }
        }
        
        public IQueryable<ServiceContractContacts> ServiceContractContactsSet {
            get {
                return CreateQuery<ServiceContractContacts>();
            }
        }
        
        public IQueryable<SharePointDocumentLocation> SharePointDocumentLocationSet {
            get {
                return CreateQuery<SharePointDocumentLocation>();
            }
        }
        
        public IQueryable<SharePointSite> SharePointSiteSet {
            get {
                return CreateQuery<SharePointSite>();
            }
        }
        
        public IQueryable<SocialActivity> SocialActivitySet {
            get {
                return CreateQuery<SocialActivity>();
            }
        }
        
        public IQueryable<SyncError> SyncErrorSet {
            get {
                return CreateQuery<SyncError>();
            }
        }
        
        public IQueryable<SystemUser> SystemUserSet {
            get {
                return CreateQuery<SystemUser>();
            }
        }
        
        public IQueryable<Task> TaskSet {
            get {
                return CreateQuery<Task>();
            }
        }
        
        public IQueryable<Team> TeamSet {
            get {
                return CreateQuery<Team>();
            }
        }
        
        public IQueryable<TeamMembership> TeamMembershipSet {
            get {
                return CreateQuery<TeamMembership>();
            }
        }
        
        public IQueryable<TransactionCurrency> TransactionCurrencySet {
            get {
                return CreateQuery<TransactionCurrency>();
            }
        }
        
        public IQueryable<Workflow> WorkflowSet {
            get {
                return CreateQuery<Workflow>();
            }
        }
        
        public IQueryable<dg_HasRidden> dg_HasRiddenSet {
            get {
                return CreateQuery<dg_HasRidden>();
            }
        }
        
        public IQueryable<dg_account_account> dg_account_accountSet {
            get {
                return CreateQuery<dg_account_account>();
            }
        }
        
        public IQueryable<dg_account_contact> dg_account_contactSet {
            get {
                return CreateQuery<dg_account_contact>();
            }
        }
        
        public IQueryable<dg_animal> dg_animalSet {
            get {
                return CreateQuery<dg_animal>();
            }
        }
        
        public IQueryable<dg_animalfood> dg_animalfoodSet {
            get {
                return CreateQuery<dg_animalfood>();
            }
        }
        
        public IQueryable<dg_bus> dg_busSet {
            get {
                return CreateQuery<dg_bus>();
            }
        }
        
        public IQueryable<dg_child> dg_childSet {
            get {
                return CreateQuery<dg_child>();
            }
        }
        
        public IQueryable<dg_configuration> dg_configurationSet {
            get {
                return CreateQuery<dg_configuration>();
            }
        }
        
        public IQueryable<dg_contact_dg_country> dg_contact_dg_countrySet {
            get {
                return CreateQuery<dg_contact_dg_country>();
            }
        }
        
        public IQueryable<dg_country> dg_countrySet {
            get {
                return CreateQuery<dg_country>();
            }
        }
        
        public IQueryable<dg_event> dg_eventSet {
            get {
                return CreateQuery<dg_event>();
            }
        }
        
        public IQueryable<dg_field> dg_fieldSet {
            get {
                return CreateQuery<dg_field>();
            }
        }
        
        public IQueryable<dg_food> dg_foodSet {
            get {
                return CreateQuery<dg_food>();
            }
        }
        
        public IQueryable<dg_man> dg_manSet {
            get {
                return CreateQuery<dg_man>();
            }
        }
        
        public IQueryable<dg_mild> dg_mildSet {
            get {
                return CreateQuery<dg_mild>();
            }
        }
        
        public IQueryable<dg_participant> dg_participantSet {
            get {
                return CreateQuery<dg_participant>();
            }
        }
        
        public IQueryable<dg_secroletest> dg_secroletestSet {
            get {
                return CreateQuery<dg_secroletest>();
            }
        }
        
        public IQueryable<dg_sheep> dg_sheepSet {
            get {
                return CreateQuery<dg_sheep>();
            }
        }
        
        public IQueryable<dg_tooth> dg_toothSet {
            get {
                return CreateQuery<dg_tooth>();
            }
        }
        
        public IQueryable<dg_zipCodeCity> dg_zipCodeCitySet {
            get {
                return CreateQuery<dg_zipCodeCity>();
            }
        }
        
        public IQueryable<msdyn_PostAlbum> msdyn_PostAlbumSet {
            get {
                return CreateQuery<msdyn_PostAlbum>();
            }
        }
        
        public IQueryable<msdyn_agreement> msdyn_agreementSet {
            get {
                return CreateQuery<msdyn_agreement>();
            }
        }
        
        public IQueryable<msdyn_wallsavedqueryusersettings> msdyn_wallsavedqueryusersettingsSet {
            get {
                return CreateQuery<msdyn_wallsavedqueryusersettings>();
            }
        }
    }
    
    [DataContract()]
    public enum AccountState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum Account_AccountCategoryCode {
        
        [EnumMember()]
        [OptionSetMetadata("Preferred Customer", Index=0, Lcid=1033)]
        PreferredCustomer = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Standard", Index=1, Lcid=1033)]
        Standard = 2,
    }
    
    [DataContract()]
    public enum Account_AccountClassificationCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Account_AccountRatingCode {
        
        [EnumMember()]
        [OptionSetMetadata("Low", Index=0, Lcid=1033, Color="")]
        Low = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Medium", Index=1, Lcid=1033, Color="#0000ff")]
        Medium = 100000000,
        
        [EnumMember()]
        [OptionSetMetadata("High", Index=2, Lcid=1033, Color="#0000ff")]
        High = 100000001,
    }
    
    [DataContract()]
    public enum Account_Address1_AddressTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Bill To", Index=0, Lcid=1033)]
        BillTo = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Ship To", Index=1, Lcid=1033)]
        ShipTo = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Primary", Index=2, Lcid=1033)]
        Primary = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Other", Index=3, Lcid=1033)]
        Other = 4,
    }
    
    [DataContract()]
    public enum Account_Address1_FreightTermsCode {
        
        [EnumMember()]
        [OptionSetMetadata("FOB", Index=0, Lcid=1033)]
        FOB = 1,
        
        [EnumMember()]
        [OptionSetMetadata("No Charge", Index=1, Lcid=1033)]
        NoCharge = 2,
    }
    
    [DataContract()]
    public enum Account_Address1_ShippingMethodCode {
        
        [EnumMember()]
        [OptionSetMetadata("Airborne", Index=0, Lcid=1033)]
        Airborne = 1,
        
        [EnumMember()]
        [OptionSetMetadata("DHL", Index=1, Lcid=1033)]
        DHL = 2,
        
        [EnumMember()]
        [OptionSetMetadata("FedEx", Index=2, Lcid=1033)]
        FedEx = 3,
        
        [EnumMember()]
        [OptionSetMetadata("UPS", Index=3, Lcid=1033)]
        UPS = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Postal Mail", Index=4, Lcid=1033)]
        PostalMail = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Full Load", Index=5, Lcid=1033)]
        FullLoad = 6,
        
        [EnumMember()]
        [OptionSetMetadata("Will Call", Index=6, Lcid=1033)]
        WillCall = 7,
    }
    
    [DataContract()]
    public enum Account_Address2_AddressTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Account_Address2_FreightTermsCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Account_Address2_ShippingMethodCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Account_BusinessTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Account_CustomerSizeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Account_CustomerTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Competitor", Index=0, Lcid=1033)]
        Competitor = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Consultant", Index=1, Lcid=1033)]
        Consultant = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Customer", Index=2, Lcid=1033)]
        Customer = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Investor", Index=3, Lcid=1033)]
        Investor = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Partner", Index=4, Lcid=1033)]
        Partner = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Influencer", Index=5, Lcid=1033)]
        Influencer = 6,
        
        [EnumMember()]
        [OptionSetMetadata("Press", Index=6, Lcid=1033)]
        Press = 7,
        
        [EnumMember()]
        [OptionSetMetadata("Prospect", Index=7, Lcid=1033)]
        Prospect = 8,
        
        [EnumMember()]
        [OptionSetMetadata("Reseller", Index=8, Lcid=1033)]
        Reseller = 9,
        
        [EnumMember()]
        [OptionSetMetadata("Supplier", Index=9, Lcid=1033)]
        Supplier = 10,
        
        [EnumMember()]
        [OptionSetMetadata("Vendor", Index=10, Lcid=1033)]
        Vendor = 11,
        
        [EnumMember()]
        [OptionSetMetadata("Other", Index=11, Lcid=1033)]
        Other = 12,
    }
    
    [DataContract()]
    public enum Account_IndustryCode {
        
        [EnumMember()]
        [OptionSetMetadata("Accounting", Index=0, Lcid=1033)]
        Accounting = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Agriculture and Non-petrol Natural Resource Extraction", Index=1, Lcid=1033)]
        AgricultureandNonpetrolNaturalResourceExtraction = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Broadcasting Printing and Publishing", Index=2, Lcid=1033)]
        BroadcastingPrintingandPublishing = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Brokers", Index=3, Lcid=1033)]
        Brokers = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Building Supply Retail", Index=4, Lcid=1033)]
        BuildingSupplyRetail = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Business Services", Index=5, Lcid=1033)]
        BusinessServices = 6,
        
        [EnumMember()]
        [OptionSetMetadata("Consulting", Index=6, Lcid=1033)]
        Consulting = 7,
        
        [EnumMember()]
        [OptionSetMetadata("Consumer Services", Index=7, Lcid=1033)]
        ConsumerServices = 8,
        
        [EnumMember()]
        [OptionSetMetadata("Design, Direction and Creative Management", Index=8, Lcid=1033)]
        DesignDirectionandCreativeManagement = 9,
        
        [EnumMember()]
        [OptionSetMetadata("Distributors, Dispatchers and Processors", Index=9, Lcid=1033)]
        DistributorsDispatchersandProcessors = 10,
        
        [EnumMember()]
        [OptionSetMetadata("Doctor\'s Offices and Clinics", Index=10, Lcid=1033)]
        DoctorsOfficesandClinics = 11,
        
        [EnumMember()]
        [OptionSetMetadata("Durable Manufacturing", Index=11, Lcid=1033)]
        DurableManufacturing = 12,
        
        [EnumMember()]
        [OptionSetMetadata("Eating and Drinking Places", Index=12, Lcid=1033)]
        EatingandDrinkingPlaces = 13,
        
        [EnumMember()]
        [OptionSetMetadata("Entertainment Retail", Index=13, Lcid=1033)]
        EntertainmentRetail = 14,
        
        [EnumMember()]
        [OptionSetMetadata("Equipment Rental and Leasing", Index=14, Lcid=1033)]
        EquipmentRentalandLeasing = 15,
        
        [EnumMember()]
        [OptionSetMetadata("Financial", Index=15, Lcid=1033)]
        Financial = 16,
        
        [EnumMember()]
        [OptionSetMetadata("Food and Tobacco Processing", Index=16, Lcid=1033)]
        FoodandTobaccoProcessing = 17,
        
        [EnumMember()]
        [OptionSetMetadata("Inbound Capital Intensive Processing", Index=17, Lcid=1033)]
        InboundCapitalIntensiveProcessing = 18,
        
        [EnumMember()]
        [OptionSetMetadata("Inbound Repair and Services", Index=18, Lcid=1033)]
        InboundRepairandServices = 19,
        
        [EnumMember()]
        [OptionSetMetadata("Insurance", Index=19, Lcid=1033)]
        Insurance = 20,
        
        [EnumMember()]
        [OptionSetMetadata("Legal Services", Index=20, Lcid=1033)]
        LegalServices = 21,
        
        [EnumMember()]
        [OptionSetMetadata("Non-Durable Merchandise Retail", Index=21, Lcid=1033)]
        NonDurableMerchandiseRetail = 22,
        
        [EnumMember()]
        [OptionSetMetadata("Outbound Consumer Service", Index=22, Lcid=1033)]
        OutboundConsumerService = 23,
        
        [EnumMember()]
        [OptionSetMetadata("Petrochemical Extraction and Distribution", Index=23, Lcid=1033)]
        PetrochemicalExtractionandDistribution = 24,
        
        [EnumMember()]
        [OptionSetMetadata("Service Retail", Index=24, Lcid=1033)]
        ServiceRetail = 25,
        
        [EnumMember()]
        [OptionSetMetadata("SIG Affiliations", Index=25, Lcid=1033)]
        SIGAffiliations = 26,
        
        [EnumMember()]
        [OptionSetMetadata("Social Services", Index=26, Lcid=1033)]
        SocialServices = 27,
        
        [EnumMember()]
        [OptionSetMetadata("Special Outbound Trade Contractors", Index=27, Lcid=1033)]
        SpecialOutboundTradeContractors = 28,
        
        [EnumMember()]
        [OptionSetMetadata("Specialty Realty", Index=28, Lcid=1033)]
        SpecialtyRealty = 29,
        
        [EnumMember()]
        [OptionSetMetadata("Transportation", Index=29, Lcid=1033)]
        Transportation = 30,
        
        [EnumMember()]
        [OptionSetMetadata("Utility Creation and Distribution", Index=30, Lcid=1033)]
        UtilityCreationandDistribution = 31,
        
        [EnumMember()]
        [OptionSetMetadata("Vehicle Retail", Index=31, Lcid=1033)]
        VehicleRetail = 32,
        
        [EnumMember()]
        [OptionSetMetadata("Wholesale", Index=32, Lcid=1033)]
        Wholesale = 33,
    }
    
    [DataContract()]
    public enum Account_OwnershipCode {
        
        [EnumMember()]
        [OptionSetMetadata("Public", Index=0, Lcid=1033)]
        Public = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Private", Index=1, Lcid=1033)]
        Private = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Subsidiary", Index=2, Lcid=1033)]
        Subsidiary = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Other", Index=3, Lcid=1033)]
        Other = 4,
    }
    
    [DataContract()]
    public enum Account_PaymentTermsCode {
        
        [EnumMember()]
        [OptionSetMetadata("Net 30", Index=0, Lcid=1033)]
        Net30 = 1,
        
        [EnumMember()]
        [OptionSetMetadata("2% 10, Net 30", Index=1, Lcid=1033)]
        _210Net30 = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Net 45", Index=2, Lcid=1033)]
        Net45 = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Net 60", Index=3, Lcid=1033)]
        Net60 = 4,
    }
    
    [DataContract()]
    public enum Account_PreferredAppointmentDayCode {
        
        [EnumMember()]
        [OptionSetMetadata("Sunday", Index=0, Lcid=1033)]
        Sunday = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Monday", Index=1, Lcid=1033)]
        Monday = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Tuesday", Index=2, Lcid=1033)]
        Tuesday = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Wednesday", Index=3, Lcid=1033)]
        Wednesday = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Thursday", Index=4, Lcid=1033)]
        Thursday = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Friday", Index=5, Lcid=1033)]
        Friday = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Saturday", Index=6, Lcid=1033)]
        Saturday = 6,
    }
    
    [DataContract()]
    public enum Account_PreferredAppointmentTimeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Morning", Index=0, Lcid=1033)]
        Morning = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Afternoon", Index=1, Lcid=1033)]
        Afternoon = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Evening", Index=2, Lcid=1033)]
        Evening = 3,
    }
    
    [DataContract()]
    public enum Account_PreferredContactMethodCode {
        
        [EnumMember()]
        [OptionSetMetadata("Any", Index=0, Lcid=1033)]
        Any = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Email", Index=1, Lcid=1033)]
        Email = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Phone", Index=2, Lcid=1033)]
        Phone = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Fax", Index=3, Lcid=1033)]
        Fax = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Mail", Index=4, Lcid=1033)]
        Mail = 5,
    }
    
    [DataContract()]
    public enum Account_ShippingMethodCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Account_StatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033, Color="#0000ff")]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=2, Lcid=1033, Color="#0000ff")]
        Inactive = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Some status", Index=1, Lcid=1033, Color="#0000ff")]
        Somestatus = 122930000,
    }
    
    [DataContract()]
    public enum Account_TerritoryCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Account_dg_Multiselect {
        
        [EnumMember()]
        [OptionSetMetadata("Item 1", Index=2, Lcid=1033, Color="#0000ff")]
        Item1 = 122930000,
        
        [EnumMember()]
        [OptionSetMetadata("Item 2", Index=3, Lcid=1033, Color="#0000ff")]
        Item2 = 122930001,
        
        [EnumMember()]
        [OptionSetMetadata("Item 3", Index=4, Lcid=1033, Color="#0000ff")]
        Item3 = 122930002,
        
        [EnumMember()]
        [OptionSetMetadata("Item 4", Index=5, Lcid=1033, Color="#0000ff")]
        Item4 = 122930003,
        
        [EnumMember()]
        [OptionSetMetadata(" checkmark", Index=0, Lcid=1033, Color="#0000ff")]
        checkmark = 122930004,
        
        [EnumMember()]
        [OptionSetMetadata("Item", Index=1, Lcid=1033, Color="#0000ff")]
        Item = 122930005,
    }
    
    [DataContract()]
    public enum ActivityParty_InstanceTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Not Recurring", Index=0, Lcid=1033)]
        NotRecurring = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Recurring Master", Index=1, Lcid=1033)]
        RecurringMaster = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Recurring Instance", Index=2, Lcid=1033)]
        RecurringInstance = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Recurring Exception", Index=3, Lcid=1033)]
        RecurringException = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Recurring Future Exception", Index=4, Lcid=1033)]
        RecurringFutureException = 4,
    }
    
    [DataContract()]
    public enum ActivityParty_ParticipationTypeMask {
        
        [EnumMember()]
        [OptionSetMetadata("Sender", Index=0, Lcid=1033)]
        Sender = 1,
        
        [EnumMember()]
        [OptionSetMetadata("To Recipient", Index=1, Lcid=1033)]
        ToRecipient = 2,
        
        [EnumMember()]
        [OptionSetMetadata("CC Recipient", Index=2, Lcid=1033)]
        CCRecipient = 3,
        
        [EnumMember()]
        [OptionSetMetadata("BCC Recipient", Index=3, Lcid=1033)]
        BCCRecipient = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Required attendee", Index=4, Lcid=1033)]
        Requiredattendee = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Optional attendee", Index=5, Lcid=1033)]
        Optionalattendee = 6,
        
        [EnumMember()]
        [OptionSetMetadata("Organizer", Index=6, Lcid=1033)]
        Organizer = 7,
        
        [EnumMember()]
        [OptionSetMetadata("Regarding", Index=7, Lcid=1033)]
        Regarding = 8,
        
        [EnumMember()]
        [OptionSetMetadata("Owner", Index=8, Lcid=1033)]
        Owner = 9,
        
        [EnumMember()]
        [OptionSetMetadata("Resource", Index=9, Lcid=1033)]
        Resource = 10,
        
        [EnumMember()]
        [OptionSetMetadata("Customer", Index=10, Lcid=1033)]
        Customer = 11,
    }
    
    [DataContract()]
    public enum ActivityPointerState {
        
        [EnumMember()]
        [OptionSetMetadata("Open", Index=0, Lcid=1033)]
        Open = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Completed", Index=1, Lcid=1033)]
        Completed = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Canceled", Index=2, Lcid=1033)]
        Canceled = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Scheduled", Index=3, Lcid=1033)]
        Scheduled = 3,
    }
    
    [DataContract()]
    public enum ActivityPointer_InstanceTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Not Recurring", Index=0, Lcid=1033)]
        NotRecurring = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Recurring Master", Index=1, Lcid=1033)]
        RecurringMaster = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Recurring Instance", Index=2, Lcid=1033)]
        RecurringInstance = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Recurring Exception", Index=3, Lcid=1033)]
        RecurringException = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Recurring Future Exception", Index=4, Lcid=1033)]
        RecurringFutureException = 4,
    }
    
    [DataContract()]
    public enum ActivityPointer_PriorityCode {
        
        [EnumMember()]
        [OptionSetMetadata("Low", Index=0, Lcid=1033)]
        Low = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Normal", Index=1, Lcid=1033)]
        Normal = 1,
        
        [EnumMember()]
        [OptionSetMetadata("High", Index=2, Lcid=1033)]
        High = 2,
    }
    
    [DataContract()]
    public enum ActivityPointer_StatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("Open", Index=0, Lcid=1033)]
        Open = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Completed", Index=1, Lcid=1033)]
        Completed = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Canceled", Index=2, Lcid=1033)]
        Canceled = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Scheduled", Index=3, Lcid=1033)]
        Scheduled = 4,
    }
    
    [DataContract()]
    public enum AppointmentState {
        
        [EnumMember()]
        [OptionSetMetadata("Open", Index=0, Lcid=1033)]
        Open = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Completed", Index=1, Lcid=1033)]
        Completed = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Canceled", Index=2, Lcid=1033)]
        Canceled = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Scheduled", Index=3, Lcid=1033)]
        Scheduled = 3,
    }
    
    [DataContract()]
    public enum Appointment_AttachmentErrors {
        
        [EnumMember()]
        [OptionSetMetadata("None", Index=0, Lcid=1033)]
        None = 0,
        
        [EnumMember()]
        [OptionSetMetadata("The appointment was saved as a Microsoft Dynamics 365 appointment record, but not" +
            " all the attachments could be saved with it. An attachment cannot be saved if it" +
            " is blocked or if its file type is invalid.", Index=1, Lcid=1033)]
        TheappointmentwassavedasaMicrosoftDynamics365appointmentrecordbutnotalltheattachmentscouldbesavedwithitAnattachmentcannotbesavedifitisblockedorifitsfiletypeisinvalid = 1,
    }
    
    [DataContract()]
    public enum Appointment_InstanceTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Not Recurring", Index=0, Lcid=1033)]
        NotRecurring = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Recurring Master", Index=1, Lcid=1033)]
        RecurringMaster = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Recurring Instance", Index=2, Lcid=1033)]
        RecurringInstance = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Recurring Exception", Index=3, Lcid=1033)]
        RecurringException = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Recurring Future Exception", Index=4, Lcid=1033)]
        RecurringFutureException = 4,
    }
    
    [DataContract()]
    public enum Appointment_PriorityCode {
        
        [EnumMember()]
        [OptionSetMetadata("Low", Index=0, Lcid=1033)]
        Low = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Normal", Index=1, Lcid=1033)]
        Normal = 1,
        
        [EnumMember()]
        [OptionSetMetadata("High", Index=2, Lcid=1033)]
        High = 2,
    }
    
    [DataContract()]
    public enum Appointment_StatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("Free", Index=0, Lcid=1033, Color="#3b79b7")]
        Free = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Tentative", Index=1, Lcid=1033, Color="#db3923")]
        Tentative = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Completed", Index=2, Lcid=1033, Color="#358717")]
        Completed = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Canceled", Index=3, Lcid=1033, Color="#666666")]
        Canceled = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Busy", Index=4, Lcid=1033, Color="#ea0600")]
        Busy = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Out of Office", Index=5, Lcid=1033, Color="#6a1e7a")]
        OutofOffice = 6,
    }
    
    [DataContract()]
    public enum BookableResourceState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum BookableResource_ResourceType {
        
        [EnumMember()]
        [OptionSetMetadata("Generic", Index=0, Lcid=1033)]
        Generic = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Contact", Index=1, Lcid=1033)]
        Contact = 2,
        
        [EnumMember()]
        [OptionSetMetadata("User", Index=2, Lcid=1033)]
        User = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Equipment", Index=3, Lcid=1033)]
        Equipment = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Account", Index=4, Lcid=1033)]
        Account = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Crew", Index=5, Lcid=1033)]
        Crew = 6,
        
        [EnumMember()]
        [OptionSetMetadata("Facility", Index=6, Lcid=1033)]
        Facility = 7,
        
        [EnumMember()]
        [OptionSetMetadata("Pool", Index=7, Lcid=1033)]
        Pool = 8,
    }
    
    [DataContract()]
    public enum BookableResource_StatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum BookableResourceBookingState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum BookableResourceBooking_BookingType {
        
        [EnumMember()]
        [OptionSetMetadata("Solid", Index=1, Lcid=1033)]
        Solid = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Liquid", Index=0, Lcid=1033)]
        Liquid = 2,
    }
    
    [DataContract()]
    public enum BookableResourceBooking_StatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum BookableResourceBookingHeaderState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum BookableResourceBookingHeader_StatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum BookableResourceBookingHeader_msdyn_BookingType {
        
        [EnumMember()]
        [OptionSetMetadata("Solid", Index=0, Lcid=1033, Color="#0000ff")]
        Solid = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Liquid", Index=1, Lcid=1033, Color="#0000ff")]
        Liquid = 2,
    }
    
    [DataContract()]
    public enum BookableResourceCategoryState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum BookableResourceCategory_StatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum BookableResourceCategoryAssnState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum BookableResourceCategoryAssn_StatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum BookableResourceCharacteristicState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum BookableResourceCharacteristic_StatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum BookableResourceGroupState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum BookableResourceGroup_StatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum BookingStatusState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum BookingStatus_Status {
        
        [EnumMember()]
        [OptionSetMetadata("Proposed", Index=0, Lcid=1033)]
        Proposed = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Committed", Index=1, Lcid=1033)]
        Committed = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Canceled", Index=2, Lcid=1033)]
        Canceled = 3,
    }
    
    [DataContract()]
    public enum BookingStatus_StatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum BusinessUnit_Address1_AddressTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum BusinessUnit_Address1_ShippingMethodCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum BusinessUnit_Address2_AddressTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum BusinessUnit_Address2_ShippingMethodCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Calendar_Type {
        
        [EnumMember()]
        [OptionSetMetadata("Inner Calendar type", Index=3, Lcid=1033)]
        InnerCalendartype = -1,
        
        [EnumMember()]
        [OptionSetMetadata("Default", Index=0, Lcid=1033)]
        Default = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Customer Service", Index=1, Lcid=1033)]
        CustomerService = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Holiday Schedule", Index=2, Lcid=1033)]
        HolidaySchedule = 2,
    }
    
    [DataContract()]
    public enum CampaignState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum Campaign_StatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("Proposed", Index=0, Lcid=1033)]
        Proposed = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Ready To Launch", Index=1, Lcid=1033)]
        ReadyToLaunch = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Launched", Index=2, Lcid=1033)]
        Launched = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Completed", Index=3, Lcid=1033)]
        Completed = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Canceled", Index=4, Lcid=1033)]
        Canceled = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Suspended", Index=5, Lcid=1033)]
        Suspended = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=6, Lcid=1033)]
        Inactive = 6,
    }
    
    [DataContract()]
    public enum Campaign_TypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Advertisement", Index=0, Lcid=1033)]
        Advertisement = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Direct Marketing", Index=1, Lcid=1033)]
        DirectMarketing = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Event", Index=2, Lcid=1033)]
        Event = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Co-branding", Index=3, Lcid=1033)]
        Cobranding = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Other", Index=4, Lcid=1033)]
        Other = 5,
    }
    
    [DataContract()]
    public enum CampaignActivityState {
        
        [EnumMember()]
        [OptionSetMetadata("Open", Index=1, Lcid=1033)]
        Open = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Closed", Index=2, Lcid=1033)]
        Closed = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Canceled", Index=3, Lcid=1033)]
        Canceled = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Scheduled", Index=0, Lcid=1033)]
        Scheduled = 3,
    }
    
    [DataContract()]
    public enum CampaignActivity_ChannelTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Phone", Index=0, Lcid=1033)]
        Phone = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Appointment", Index=1, Lcid=1033)]
        Appointment = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Letter", Index=2, Lcid=1033)]
        Letter = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Letter via Mail Merge(deprecated)", Index=3, Lcid=1033)]
        LetterviaMailMergedeprecated = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Fax", Index=4, Lcid=1033)]
        Fax = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Fax via Mail Merge(deprecated)", Index=5, Lcid=1033)]
        FaxviaMailMergedeprecated = 6,
        
        [EnumMember()]
        [OptionSetMetadata("Email", Index=6, Lcid=1033)]
        Email = 7,
        
        [EnumMember()]
        [OptionSetMetadata("Email via Mail Merge(deprecated)", Index=7, Lcid=1033)]
        EmailviaMailMergedeprecated = 8,
        
        [EnumMember()]
        [OptionSetMetadata("Other", Index=8, Lcid=1033)]
        Other = 9,
    }
    
    [DataContract()]
    public enum CampaignActivity_InstanceTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Not Recurring", Index=0, Lcid=1033)]
        NotRecurring = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Recurring Master", Index=1, Lcid=1033)]
        RecurringMaster = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Recurring Instance", Index=2, Lcid=1033)]
        RecurringInstance = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Recurring Exception", Index=3, Lcid=1033)]
        RecurringException = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Recurring Future Exception", Index=4, Lcid=1033)]
        RecurringFutureException = 4,
    }
    
    [DataContract()]
    public enum CampaignActivity_PriorityCode {
        
        [EnumMember()]
        [OptionSetMetadata("Low", Index=0, Lcid=1033)]
        Low = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Normal", Index=1, Lcid=1033)]
        Normal = 1,
        
        [EnumMember()]
        [OptionSetMetadata("High", Index=2, Lcid=1033)]
        High = 2,
    }
    
    [DataContract()]
    public enum CampaignActivity_StatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("In Progress", Index=1, Lcid=1033)]
        InProgress = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Proposed", Index=0, Lcid=1033)]
        Proposed = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Closed", Index=2, Lcid=1033)]
        Closed = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Canceled", Index=3, Lcid=1033)]
        Canceled = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Pending", Index=4, Lcid=1033)]
        Pending = 4,
        
        [EnumMember()]
        [OptionSetMetadata("System Aborted", Index=5, Lcid=1033)]
        SystemAborted = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Completed", Index=6, Lcid=1033)]
        Completed = 6,
    }
    
    [DataContract()]
    public enum CampaignActivity_TypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Research", Index=0, Lcid=1033)]
        Research = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Content Preparation", Index=1, Lcid=1033)]
        ContentPreparation = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Target Marketing List Creation", Index=2, Lcid=1033)]
        TargetMarketingListCreation = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Lead Qualification", Index=3, Lcid=1033)]
        LeadQualification = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Content Distribution", Index=4, Lcid=1033)]
        ContentDistribution = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Direct Initial Contact", Index=5, Lcid=1033)]
        DirectInitialContact = 6,
        
        [EnumMember()]
        [OptionSetMetadata("Direct Follow-Up Contact", Index=6, Lcid=1033)]
        DirectFollowUpContact = 7,
        
        [EnumMember()]
        [OptionSetMetadata("Reminder Distribution", Index=7, Lcid=1033)]
        ReminderDistribution = 8,
    }
    
    [DataContract()]
    public enum CampaignResponseState {
        
        [EnumMember()]
        [OptionSetMetadata("Open", Index=1, Lcid=1033)]
        Open = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Closed", Index=2, Lcid=1033)]
        Closed = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Canceled", Index=3, Lcid=1033)]
        Canceled = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Scheduled", Index=0, Lcid=1033)]
        Scheduled = 3,
    }
    
    [DataContract()]
    public enum CampaignResponse_ChannelTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Email", Index=0, Lcid=1033)]
        Email = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Phone", Index=1, Lcid=1033)]
        Phone = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Fax", Index=2, Lcid=1033)]
        Fax = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Letter", Index=3, Lcid=1033)]
        Letter = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Appointment", Index=4, Lcid=1033)]
        Appointment = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Others", Index=5, Lcid=1033)]
        Others = 6,
    }
    
    [DataContract()]
    public enum CampaignResponse_InstanceTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Not Recurring", Index=0, Lcid=1033)]
        NotRecurring = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Recurring Master", Index=1, Lcid=1033)]
        RecurringMaster = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Recurring Instance", Index=2, Lcid=1033)]
        RecurringInstance = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Recurring Exception", Index=3, Lcid=1033)]
        RecurringException = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Recurring Future Exception", Index=4, Lcid=1033)]
        RecurringFutureException = 4,
    }
    
    [DataContract()]
    public enum CampaignResponse_PriorityCode {
        
        [EnumMember()]
        [OptionSetMetadata("Low", Index=0, Lcid=1033)]
        Low = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Normal", Index=1, Lcid=1033)]
        Normal = 1,
        
        [EnumMember()]
        [OptionSetMetadata("High", Index=2, Lcid=1033)]
        High = 2,
    }
    
    [DataContract()]
    public enum CampaignResponse_ResponseCode {
        
        [EnumMember()]
        [OptionSetMetadata("Interested", Index=0, Lcid=1033)]
        Interested = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Not Interested", Index=1, Lcid=1033)]
        NotInterested = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Do Not Send Marketing Materials", Index=2, Lcid=1033)]
        DoNotSendMarketingMaterials = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Error", Index=3, Lcid=1033)]
        Error = 4,
    }
    
    [DataContract()]
    public enum CampaignResponse_StatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("Open", Index=1, Lcid=1033)]
        Open = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Closed", Index=2, Lcid=1033)]
        Closed = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Canceled", Index=3, Lcid=1033)]
        Canceled = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Scheduled", Index=0, Lcid=1033)]
        Scheduled = 4,
    }
    
    [DataContract()]
    public enum CharacteristicState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum Characteristic_StatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum ConnectionState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum Connection_Record1ObjectTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Account", Index=76, Lcid=1033, Description="Business that represents a customer or potential customer. The company that is bi" +
            "lled in business transactions.")]
        Account = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Contact", Index=90, Lcid=1033, Description="Person with whom a business unit has a relationship, such as customer, supplier, " +
            "and colleague.")]
        Contact = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Opportunity", Index=32, Lcid=1033, Description="Potential revenue-generating event, or sale to an account, which needs to be trac" +
            "ked through a sales process to completion.")]
        Opportunity = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Lead", Index=48, Lcid=1033, Description="Prospect or potential sales opportunity. Leads are converted into accounts, conta" +
            "cts, or opportunities when they are qualified. Otherwise, they are deleted or ar" +
            "chived.")]
        Lead = 4,
        
        [EnumMember()]
        [OptionSetMetadata("User", Index=57, Lcid=1033, Description="Person with access to the Microsoft CRM system and who owns objects in the Micros" +
            "oft CRM database.")]
        User = 8,
        
        [EnumMember()]
        [OptionSetMetadata("Team", Index=66, Lcid=1033, Description="Collection of system users that routinely collaborate. Teams can be used to simpl" +
            "ify record sharing and provide team members with common access to organization d" +
            "ata when team members belong to different Business Units.")]
        Team = 9,
        
        [EnumMember()]
        [OptionSetMetadata("Position", Index=83, Lcid=1033, Description="Position of a user in the hierarchy")]
        Position = 50,
        
        [EnumMember()]
        [OptionSetMetadata("Social Profile", Index=86, Lcid=1033, Description="This entity is used to store social profile information of its associated account" +
            " and contacts on different social channels.")]
        SocialProfile = 99,
        
        [EnumMember()]
        [OptionSetMetadata("Case", Index=35, Lcid=1033, Description="Service request case associated with a contract.")]
        Case = 112,
        
        [EnumMember()]
        [OptionSetMetadata("Competitor", Index=37, Lcid=1033, Description="Business competing for the sale represented by a lead or opportunity.")]
        Competitor = 123,
        
        [EnumMember()]
        [OptionSetMetadata("Contract", Index=54, Lcid=1033, Description="Agreement to provide customer service during a specified amount of time or number" +
            " of cases.")]
        Contract = 1010,
        
        [EnumMember()]
        [OptionSetMetadata("Price List", Index=43, Lcid=1033, Description="Entity that defines pricing levels.")]
        PriceList = 1022,
        
        [EnumMember()]
        [OptionSetMetadata("Product", Index=42, Lcid=1033, Description="Information about products and their pricing information.")]
        Product = 1024,
        
        [EnumMember()]
        [OptionSetMetadata("Quote", Index=33, Lcid=1033, Description="Formal offer for products and/or services, proposed at specific prices and relate" +
            "d payment terms, which is sent to a prospective customer.")]
        Quote = 1084,
        
        [EnumMember()]
        [OptionSetMetadata("Order", Index=30, Lcid=1033, Description="Quote that has been accepted.")]
        Order = 1088,
        
        [EnumMember()]
        [OptionSetMetadata("Invoice", Index=31, Lcid=1033, Description="Order that has been billed.")]
        Invoice = 1090,
        
        [EnumMember()]
        [OptionSetMetadata("Territory", Index=52, Lcid=1033, Description="Territory represents sales regions.")]
        Territory = 2013,
        
        [EnumMember()]
        [OptionSetMetadata("Facility/Equipment", Index=56, Lcid=1033, Description="Resource that can be scheduled.")]
        FacilityEquipment = 4000,
        
        [EnumMember()]
        [OptionSetMetadata("Scheduling Group", Index=55, Lcid=1033, Description="Resource group or team whose members can be scheduled for a service.")]
        SchedulingGroup = 4005,
        
        [EnumMember()]
        [OptionSetMetadata("Resource Group", Index=36, Lcid=1033, Description="Group or collection of people, equipment, and/or facilities that can be scheduled" +
            ".")]
        ResourceGroup = 4007,
        
        [EnumMember()]
        [OptionSetMetadata("Activity", Index=82, Lcid=1033, Description="Task performed, or to be performed, by a user. An activity is any action for whic" +
            "h an entry can be made on a calendar.")]
        Activity = 4200,
        
        [EnumMember()]
        [OptionSetMetadata("Appointment", Index=88, Lcid=1033, Description="Commitment representing a time interval with start/end times and duration.")]
        Appointment = 4201,
        
        [EnumMember()]
        [OptionSetMetadata("Email", Index=89, Lcid=1033, Description="Activity that is delivered using email protocols.")]
        Email = 4202,
        
        [EnumMember()]
        [OptionSetMetadata("Fax", Index=87, Lcid=1033, Description="Activity that tracks call outcome and number of pages for a fax and optionally st" +
            "ores an electronic copy of the document.")]
        Fax = 4204,
        
        [EnumMember()]
        [OptionSetMetadata("Letter", Index=81, Lcid=1033, Description="Activity that tracks the delivery of a letter. The activity can contain the elect" +
            "ronic copy of the letter.")]
        Letter = 4207,
        
        [EnumMember()]
        [OptionSetMetadata("Phone Call", Index=65, Lcid=1033, Description="Activity to track a telephone call.")]
        PhoneCall = 4210,
        
        [EnumMember()]
        [OptionSetMetadata("Task", Index=85, Lcid=1033, Description="Generic activity representing work needed to be done.")]
        Task = 4212,
        
        [EnumMember()]
        [OptionSetMetadata("Service Activity", Index=53, Lcid=1033, Description="Activity offered by the organization to satisfy its customer\'s needs. Each servic" +
            "e activity includes date, time, duration, and required resources.")]
        ServiceActivity = 4214,
        
        [EnumMember()]
        [OptionSetMetadata("Social Activity", Index=77, Lcid=1033, Description="For internal use only.")]
        SocialActivity = 4216,
        
        [EnumMember()]
        [OptionSetMetadata("Recurring Appointment", Index=84, Lcid=1033, Description="The Master appointment of a recurring appointment series.")]
        RecurringAppointment = 4251,
        
        [EnumMember()]
        [OptionSetMetadata("Marketing List", Index=46, Lcid=1033, Description="Group of existing or potential customers created for a marketing campaign or othe" +
            "r sales purposes.")]
        MarketingList = 4300,
        
        [EnumMember()]
        [OptionSetMetadata("Campaign", Index=47, Lcid=1033, Description="Container for campaign activities and responses, sales literature, products, and " +
            "lists to create, plan, execute, and track the results of a specific marketing ca" +
            "mpaign through its life.")]
        Campaign = 4400,
        
        [EnumMember()]
        [OptionSetMetadata("Campaign Activity", Index=45, Lcid=1033, Description="Task performed, or to be performed, by a user for planning or running a campaign." +
            "")]
        CampaignActivity = 4402,
        
        [EnumMember()]
        [OptionSetMetadata("Process Session", Index=64, Lcid=1033, Description="Information that is generated when a dialog is run. Every time that you run a dia" +
            "log, a dialog session is created.")]
        ProcessSession = 4710,
        
        [EnumMember()]
        [OptionSetMetadata("Channel Access Profile Rule", Index=67, Lcid=1033, Description="Defines the rules for automatically associating channel access profiles to extern" +
            "al party records.For internal use only")]
        ChannelAccessProfileRule = 9400,
        
        [EnumMember()]
        [OptionSetMetadata("Goal", Index=79, Lcid=1033, Description="Target objective for a user or a team for a specified time period.")]
        Goal = 9600,
        
        [EnumMember()]
        [OptionSetMetadata("Entitlement", Index=59, Lcid=1033, Description="Defines the amount and type of support a customer should receive.")]
        Entitlement = 9700,
        
        [EnumMember()]
        [OptionSetMetadata("Entitlement Channel", Index=34, Lcid=1033, Description="Defines the amount and type of support for a channel.")]
        EntitlementChannel = 9701,
        
        [EnumMember()]
        [OptionSetMetadata("Entitlement Template Channel", Index=58, Lcid=1033, Description="Contains predefined support terms for a channel to create entitlements for custom" +
            "ers.")]
        EntitlementTemplateChannel = 9703,
        
        [EnumMember()]
        [OptionSetMetadata("Knowledge Base Record", Index=78, Lcid=1033, Description="Metadata of knowledge base (KB) articles associated with Microsoft Dynamics 365 e" +
            "ntities.")]
        KnowledgeBaseRecord = 9930,
        
        [EnumMember()]
        [OptionSetMetadata("Knowledge Article", Index=80, Lcid=1033, Description="Organizational knowledge for internal and external use.")]
        KnowledgeArticle = 9953,
        
        [EnumMember()]
        [OptionSetMetadata("Profile Album", Index=118, Lcid=1033, Description="Contains user profile images that are stored as attachments and displayed in post" +
            "s.")]
        ProfileAlbum = 10000,
        
        [EnumMember()]
        [OptionSetMetadata("Bus", Index=2, Lcid=1033, Description="")]
        Bus = 10016,
        
        [EnumMember()]
        [OptionSetMetadata("Eniro Config", Index=113, Lcid=1033, Description="")]
        EniroConfig = 10019,
        
        [EnumMember()]
        [OptionSetMetadata("Eniro Log", Index=98, Lcid=1033, Description="")]
        EniroLog = 10020,
        
        [EnumMember()]
        [OptionSetMetadata("Customer Voice survey invite", Index=62, Lcid=1033, Description="Activity that tracks a survey invitation sent to a person.")]
        CustomerVoicesurveyinvite = 10086,
        
        [EnumMember()]
        [OptionSetMetadata("Customer Voice survey response", Index=14, Lcid=1033, Description="Response to a survey.")]
        CustomerVoicesurveyresponse = 10087,
        
        [EnumMember()]
        [OptionSetMetadata("inMail", Index=50, Lcid=1033, Description="Custom Activity entity to store LinkedIn inMail records.")]
        inMail = 10145,
        
        [EnumMember()]
        [OptionSetMetadata("Message", Index=99, Lcid=1033, Description="Custom Activity entity to store LinkedIn Message records.")]
        Message = 10146,
        
        [EnumMember()]
        [OptionSetMetadata("Smart Links Content Viewed", Index=96, Lcid=1033, Description="Custom Activity entity to store Smart Links Content Viewed records.")]
        SmartLinksContentViewed = 10147,
        
        [EnumMember()]
        [OptionSetMetadata("Booking Alert", Index=100, Lcid=1033, Description="Alerts that notify schedule board users of booking issues or information.")]
        BookingAlert = 10164,
        
        [EnumMember()]
        [OptionSetMetadata("Booking Alert Status", Index=102, Lcid=1033, Description="The status of a booking alert.")]
        BookingAlertStatus = 10165,
        
        [EnumMember()]
        [OptionSetMetadata("Booking Rule", Index=29, Lcid=1033, Description="Specify custom rules to be validated by the system before saving a booking record" +
            ".")]
        BookingRule = 10167,
        
        [EnumMember()]
        [OptionSetMetadata("Resource Territory", Index=16, Lcid=1033, Description="Allows to specify for which territory a resource could provide services for")]
        ResourceTerritory = 10183,
        
        [EnumMember()]
        [OptionSetMetadata("System User Scheduler Setting", Index=19, Lcid=1033, Description="Stores user-specific settings for the schedule board.")]
        SystemUserSchedulerSetting = 10186,
        
        [EnumMember()]
        [OptionSetMetadata("Fulfillment Preference", Index=93, Lcid=1033, Description="Specify time groups consisting of multiple time windows to be used for scheduling" +
            ", for example.")]
        FulfillmentPreference = 10187,
        
        [EnumMember()]
        [OptionSetMetadata("Time Group Detail", Index=114, Lcid=1033, Description="Specify individual time windows under a time group.")]
        TimeGroupDetail = 10188,
        
        [EnumMember()]
        [OptionSetMetadata("Agreement", Index=95, Lcid=1033, Description="Provides ability to store details about service agreements you have with your cus" +
            "tomers")]
        Agreement = 10191,
        
        [EnumMember()]
        [OptionSetMetadata("Agreement Booking Date", Index=107, Lcid=1033, Description="Specify the maintenance booking dates for the agreement.")]
        AgreementBookingDate = 10192,
        
        [EnumMember()]
        [OptionSetMetadata("Agreement Booking Incident", Index=7, Lcid=1033, Description="Specify the booking incident for the agreement.")]
        AgreementBookingIncident = 10193,
        
        [EnumMember()]
        [OptionSetMetadata("Agreement Booking Product", Index=21, Lcid=1033, Description="Specify the booking product for the agreement.")]
        AgreementBookingProduct = 10194,
        
        [EnumMember()]
        [OptionSetMetadata("Agreement Booking Service", Index=26, Lcid=1033, Description="Specify the booking service for the agreement.")]
        AgreementBookingService = 10195,
        
        [EnumMember()]
        [OptionSetMetadata("Agreement Booking Service Task", Index=101, Lcid=1033, Description="Specify the booking service task for the agreement.")]
        AgreementBookingServiceTask = 10196,
        
        [EnumMember()]
        [OptionSetMetadata("Agreement Booking Setup", Index=18, Lcid=1033, Description="Specify the maintenance bookings for the agreement.")]
        AgreementBookingSetup = 10197,
        
        [EnumMember()]
        [OptionSetMetadata("Agreement Invoice Date", Index=10, Lcid=1033, Description="Specify the invoice dates for the agreement.")]
        AgreementInvoiceDate = 10198,
        
        [EnumMember()]
        [OptionSetMetadata("Agreement Invoice Product", Index=119, Lcid=1033, Description="Specify the booking product invoice for the agreement.")]
        AgreementInvoiceProduct = 10199,
        
        [EnumMember()]
        [OptionSetMetadata("Agreement Invoice Setup", Index=5, Lcid=1033, Description="Specify the invoices for this agreement.")]
        AgreementInvoiceSetup = 10200,
        
        [EnumMember()]
        [OptionSetMetadata("Booking Timestamp", Index=75, Lcid=1033, Description="Tracks status changes of bookings and timestamps the change of the status")]
        BookingTimestamp = 10203,
        
        [EnumMember()]
        [OptionSetMetadata("Customer Asset", Index=0, Lcid=1033, Description="Specify Customer Asset.")]
        CustomerAsset = 10208,
        
        [EnumMember()]
        [OptionSetMetadata("Incident Type Characteristic", Index=109, Lcid=1033, Description="Specify characteristic insident type.")]
        IncidentTypeCharacteristic = 10216,
        
        [EnumMember()]
        [OptionSetMetadata("Incident Type Product", Index=116, Lcid=1033, Description="This entity gives the ability to pre-configure products to be added to a work ord" +
            "er when the related incident is added to the work order")]
        IncidentTypeProduct = 10217,
        
        [EnumMember()]
        [OptionSetMetadata("Incident Type Service", Index=6, Lcid=1033, Description="This entity gives the ability to pre-configure services to be added to a work ord" +
            "er when the related incident is added to the work order")]
        IncidentTypeService = 10218,
        
        [EnumMember()]
        [OptionSetMetadata("Inventory Adjustment", Index=27, Lcid=1033, Description="Records inventory adjustments")]
        InventoryAdjustment = 10222,
        
        [EnumMember()]
        [OptionSetMetadata("Inventory Adjustment Product", Index=61, Lcid=1033, Description="Records product affected by an inventory adjustment or inventory transfer")]
        InventoryAdjustmentProduct = 10223,
        
        [EnumMember()]
        [OptionSetMetadata("Inventory Journal", Index=23, Lcid=1033, Description="Inventory change tracking")]
        InventoryJournal = 10224,
        
        [EnumMember()]
        [OptionSetMetadata("Inventory Transfer", Index=103, Lcid=1033, Description="Records inventory adjustments")]
        InventoryTransfer = 10225,
        
        [EnumMember()]
        [OptionSetMetadata("Payment", Index=71, Lcid=1033, Description="Specify payment.")]
        Payment = 10230,
        
        [EnumMember()]
        [OptionSetMetadata("Payment Detail", Index=1, Lcid=1033, Description="Specify payment details.")]
        PaymentDetail = 10231,
        
        [EnumMember()]
        [OptionSetMetadata("Payment Method", Index=91, Lcid=1033, Description="Specify payment method.")]
        PaymentMethod = 10232,
        
        [EnumMember()]
        [OptionSetMetadata("Payment Term", Index=4, Lcid=1033, Description="Specify payment terms used for billing.")]
        PaymentTerm = 10233,
        
        [EnumMember()]
        [OptionSetMetadata("Postal Code", Index=92, Lcid=1033, Description="Specify postal codes and their relationship to territories.")]
        PostalCode = 10234,
        
        [EnumMember()]
        [OptionSetMetadata("Product Inventory", Index=25, Lcid=1033, Description="Inventory Record")]
        ProductInventory = 10235,
        
        [EnumMember()]
        [OptionSetMetadata("Purchase Order", Index=28, Lcid=1033, Description="Record Purchase Orders pertaining to Work Orders or otherwise")]
        PurchaseOrder = 10236,
        
        [EnumMember()]
        [OptionSetMetadata("Purchase Order Bill", Index=3, Lcid=1033, Description="Specify purchase order bill.")]
        PurchaseOrderBill = 10237,
        
        [EnumMember()]
        [OptionSetMetadata("Purchase Order Product", Index=17, Lcid=1033, Description="Record products to be ordered on purchase order")]
        PurchaseOrderProduct = 10238,
        
        [EnumMember()]
        [OptionSetMetadata("Purchase Order Receipt", Index=110, Lcid=1033, Description="Specify purchase order receipt.")]
        PurchaseOrderReceipt = 10239,
        
        [EnumMember()]
        [OptionSetMetadata("Purchase Order Receipt Product", Index=104, Lcid=1033, Description="Specify product for purchase order receipt.")]
        PurchaseOrderReceiptProduct = 10240,
        
        [EnumMember()]
        [OptionSetMetadata("Purchase Order SubStatus", Index=9, Lcid=1033, Description="Specify custom PO Substatuses, which can be used to specify the current PO status" +
            " more precisely.")]
        PurchaseOrderSubStatus = 10241,
        
        [EnumMember()]
        [OptionSetMetadata("Quote Booking Incident", Index=20, Lcid=1033, Description="Stores the Incidents associated with Quote and Quote Booking Setup")]
        QuoteBookingIncident = 10242,
        
        [EnumMember()]
        [OptionSetMetadata("Quote Booking Product", Index=15, Lcid=1033, Description="Provides ability to store information about the products that are associated with" +
            " Quote Booking Setup")]
        QuoteBookingProduct = 10243,
        
        [EnumMember()]
        [OptionSetMetadata("Quote Booking Service", Index=51, Lcid=1033, Description="Stores details about the services associated with Quote Booking Setup ")]
        QuoteBookingService = 10244,
        
        [EnumMember()]
        [OptionSetMetadata("Quote Booking Service Task", Index=68, Lcid=1033, Description="")]
        QuoteBookingServiceTask = 10245,
        
        [EnumMember()]
        [OptionSetMetadata("RMA", Index=72, Lcid=1033, Description="Records RMAs for products to be retuned from customers")]
        RMA = 10250,
        
        [EnumMember()]
        [OptionSetMetadata("RMA Product", Index=111, Lcid=1033, Description="Records products to be returned on an RMA")]
        RMAProduct = 10251,
        
        [EnumMember()]
        [OptionSetMetadata("RMA Receipt", Index=108, Lcid=1033, Description="Specify RMA receipt.")]
        RMAReceipt = 10252,
        
        [EnumMember()]
        [OptionSetMetadata("RMA Receipt Product", Index=69, Lcid=1033, Description="Specify RMA receipt product.")]
        RMAReceiptProduct = 10253,
        
        [EnumMember()]
        [OptionSetMetadata("RMA SubStatus", Index=11, Lcid=1033, Description="Specify custom RMA substatuses, which can be used to specify the current RMA stat" +
            "us more precisely.")]
        RMASubStatus = 10254,
        
        [EnumMember()]
        [OptionSetMetadata("RTV", Index=112, Lcid=1033, Description="Records RTVs for products to be retuned to vendors")]
        RTV = 10255,
        
        [EnumMember()]
        [OptionSetMetadata("RTV Product", Index=115, Lcid=1033, Description="Records products to be returned on an RTV")]
        RTVProduct = 10256,
        
        [EnumMember()]
        [OptionSetMetadata("RTV Substatus", Index=70, Lcid=1033, Description="Specify custom RTV substatuses, which can be used to specify the current RTV stat" +
            "us more precisely.")]
        RTVSubstatus = 10257,
        
        [EnumMember()]
        [OptionSetMetadata("Ship Via", Index=117, Lcid=1033, Description="Specify the different shipping methods used.")]
        ShipVia = 10259,
        
        [EnumMember()]
        [OptionSetMetadata("Tax Code", Index=94, Lcid=1033, Description="Store tax related information. Each tax code could contain multiple child tax cod" +
            "es, and in that case the tax rate will be determined by the total tax of all chi" +
            "ldren.")]
        TaxCode = 10260,
        
        [EnumMember()]
        [OptionSetMetadata("Time Off Request", Index=63, Lcid=1033, Description="Specify time resource time off request.")]
        TimeOffRequest = 10262,
        
        [EnumMember()]
        [OptionSetMetadata("Warehouse", Index=105, Lcid=1033, Description="Warehouses where inventory products are stored and managed")]
        Warehouse = 10264,
        
        [EnumMember()]
        [OptionSetMetadata("Work Order", Index=8, Lcid=1033, Description="Work orders store all information about the job performed for an account. Stores " +
            "incident details, resource, expenses, tasks, communications, billing and more")]
        WorkOrder = 10265,
        
        [EnumMember()]
        [OptionSetMetadata("Work Order Characteristic (Deprecated)", Index=13, Lcid=1033, Description="This entity is deprecated.")]
        WorkOrderCharacteristicDeprecated = 10266,
        
        [EnumMember()]
        [OptionSetMetadata("Work Order Incident", Index=97, Lcid=1033, Description="Specify work order incidents reported to you by the client. These are also referr" +
            "ed to as problem codes.")]
        WorkOrderIncident = 10268,
        
        [EnumMember()]
        [OptionSetMetadata("Work Order Product", Index=24, Lcid=1033, Description="In this entity you record all the products proposed and used for a work order")]
        WorkOrderProduct = 10269,
        
        [EnumMember()]
        [OptionSetMetadata("Resource Restriction (Deprecated)", Index=106, Lcid=1033, Description="This entity is deprecated.")]
        ResourceRestrictionDeprecated = 10270,
        
        [EnumMember()]
        [OptionSetMetadata("Work Order Service", Index=49, Lcid=1033, Description="Record all services proposed and performed for work order")]
        WorkOrderService = 10271,
        
        [EnumMember()]
        [OptionSetMetadata("Work Order Service Task", Index=120, Lcid=1033, Description="Store service tasks that are to be performed for this work order")]
        WorkOrderServiceTask = 10272,
        
        [EnumMember()]
        [OptionSetMetadata("IoT Alert", Index=22, Lcid=1033, Description="")]
        IoTAlert = 10276,
        
        [EnumMember()]
        [OptionSetMetadata("IoT Device", Index=73, Lcid=1033, Description="Represents a connected device that can be registered with an IoT provider.")]
        IoTDevice = 10277,
        
        [EnumMember()]
        [OptionSetMetadata("IoT Device Category", Index=12, Lcid=1033, Description="Used to categorize IoT devices.")]
        IoTDeviceCategory = 10278,
        
        [EnumMember()]
        [OptionSetMetadata("IoT Device Command", Index=74, Lcid=1033, Description="Represents an outgoing message to a device connected to an IoT provider.")]
        IoTDeviceCommand = 10279,
        
        [EnumMember()]
        [OptionSetMetadata("IoT Device Registration History", Index=60, Lcid=1033, Description="Tracks registration activities on an IoT device.")]
        IoTDeviceRegistrationHistory = 10283,
        
        [EnumMember()]
        [OptionSetMetadata("Sequence", Index=44, Lcid=1033, Description="")]
        Sequence = 10374,
        
        [EnumMember()]
        [OptionSetMetadata("Sequence Target", Index=41, Lcid=1033, Description="")]
        SequenceTarget = 10375,
        
        [EnumMember()]
        [OptionSetMetadata("Customer Voice alert", Index=38, Lcid=1033, Description="")]
        CustomerVoicealert = 10416,
        
        [EnumMember()]
        [OptionSetMetadata("Assignment Rule", Index=39, Lcid=1033, Description="Defines criteria based on which Entities are routed to Users or Sales Team")]
        AssignmentRule = 10537,
        
        [EnumMember()]
        [OptionSetMetadata("Assignment Map", Index=40, Lcid=1033, Description="")]
        AssignmentMap = 10540,
    }
    
    [DataContract()]
    public enum Connection_Record2ObjectTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Account", Index=76, Lcid=1033, Description="Business that represents a customer or potential customer. The company that is bi" +
            "lled in business transactions.")]
        Account = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Contact", Index=85, Lcid=1033, Description="Person with whom a business unit has a relationship, such as customer, supplier, " +
            "and colleague.")]
        Contact = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Opportunity", Index=32, Lcid=1033, Description="Potential revenue-generating event, or sale to an account, which needs to be trac" +
            "ked through a sales process to completion.")]
        Opportunity = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Lead", Index=48, Lcid=1033, Description="Prospect or potential sales opportunity. Leads are converted into accounts, conta" +
            "cts, or opportunities when they are qualified. Otherwise, they are deleted or ar" +
            "chived.")]
        Lead = 4,
        
        [EnumMember()]
        [OptionSetMetadata("User", Index=52, Lcid=1033, Description="Person with access to the Microsoft CRM system and who owns objects in the Micros" +
            "oft CRM database.")]
        User = 8,
        
        [EnumMember()]
        [OptionSetMetadata("Team", Index=86, Lcid=1033, Description="Collection of system users that routinely collaborate. Teams can be used to simpl" +
            "ify record sharing and provide team members with common access to organization d" +
            "ata when team members belong to different Business Units.")]
        Team = 9,
        
        [EnumMember()]
        [OptionSetMetadata("Position", Index=89, Lcid=1033, Description="Position of a user in the hierarchy")]
        Position = 50,
        
        [EnumMember()]
        [OptionSetMetadata("Social Profile", Index=80, Lcid=1033, Description="This entity is used to store social profile information of its associated account" +
            " and contacts on different social channels.")]
        SocialProfile = 99,
        
        [EnumMember()]
        [OptionSetMetadata("Case", Index=58, Lcid=1033, Description="Service request case associated with a contract.")]
        Case = 112,
        
        [EnumMember()]
        [OptionSetMetadata("Competitor", Index=33, Lcid=1033, Description="Business competing for the sale represented by a lead or opportunity.")]
        Competitor = 123,
        
        [EnumMember()]
        [OptionSetMetadata("Contract", Index=54, Lcid=1033, Description="Agreement to provide customer service during a specified amount of time or number" +
            " of cases.")]
        Contract = 1010,
        
        [EnumMember()]
        [OptionSetMetadata("Price List", Index=43, Lcid=1033, Description="Entity that defines pricing levels.")]
        PriceList = 1022,
        
        [EnumMember()]
        [OptionSetMetadata("Product", Index=42, Lcid=1033, Description="Information about products and their pricing information.")]
        Product = 1024,
        
        [EnumMember()]
        [OptionSetMetadata("Quote", Index=31, Lcid=1033, Description="Formal offer for products and/or services, proposed at specific prices and relate" +
            "d payment terms, which is sent to a prospective customer.")]
        Quote = 1084,
        
        [EnumMember()]
        [OptionSetMetadata("Order", Index=36, Lcid=1033, Description="Quote that has been accepted.")]
        Order = 1088,
        
        [EnumMember()]
        [OptionSetMetadata("Invoice", Index=30, Lcid=1033, Description="Order that has been billed.")]
        Invoice = 1090,
        
        [EnumMember()]
        [OptionSetMetadata("Territory", Index=37, Lcid=1033, Description="Territory represents sales regions.")]
        Territory = 2013,
        
        [EnumMember()]
        [OptionSetMetadata("Facility/Equipment", Index=34, Lcid=1033, Description="Resource that can be scheduled.")]
        FacilityEquipment = 4000,
        
        [EnumMember()]
        [OptionSetMetadata("Scheduling Group", Index=55, Lcid=1033, Description="Resource group or team whose members can be scheduled for a service.")]
        SchedulingGroup = 4005,
        
        [EnumMember()]
        [OptionSetMetadata("Resource Group", Index=56, Lcid=1033, Description="Group or collection of people, equipment, and/or facilities that can be scheduled" +
            ".")]
        ResourceGroup = 4007,
        
        [EnumMember()]
        [OptionSetMetadata("Activity", Index=82, Lcid=1033, Description="Task performed, or to be performed, by a user. An activity is any action for whic" +
            "h an entry can be made on a calendar.")]
        Activity = 4200,
        
        [EnumMember()]
        [OptionSetMetadata("Appointment", Index=79, Lcid=1033, Description="Commitment representing a time interval with start/end times and duration.")]
        Appointment = 4201,
        
        [EnumMember()]
        [OptionSetMetadata("Email", Index=66, Lcid=1033, Description="Activity that is delivered using email protocols.")]
        Email = 4202,
        
        [EnumMember()]
        [OptionSetMetadata("Fax", Index=90, Lcid=1033, Description="Activity that tracks call outcome and number of pages for a fax and optionally st" +
            "ores an electronic copy of the document.")]
        Fax = 4204,
        
        [EnumMember()]
        [OptionSetMetadata("Letter", Index=65, Lcid=1033, Description="Activity that tracks the delivery of a letter. The activity can contain the elect" +
            "ronic copy of the letter.")]
        Letter = 4207,
        
        [EnumMember()]
        [OptionSetMetadata("Phone Call", Index=84, Lcid=1033, Description="Activity to track a telephone call.")]
        PhoneCall = 4210,
        
        [EnumMember()]
        [OptionSetMetadata("Task", Index=78, Lcid=1033, Description="Generic activity representing work needed to be done.")]
        Task = 4212,
        
        [EnumMember()]
        [OptionSetMetadata("Service Activity", Index=57, Lcid=1033, Description="Activity offered by the organization to satisfy its customer\'s needs. Each servic" +
            "e activity includes date, time, duration, and required resources.")]
        ServiceActivity = 4214,
        
        [EnumMember()]
        [OptionSetMetadata("Social Activity", Index=64, Lcid=1033, Description="For internal use only.")]
        SocialActivity = 4216,
        
        [EnumMember()]
        [OptionSetMetadata("Recurring Appointment", Index=87, Lcid=1033, Description="The Master appointment of a recurring appointment series.")]
        RecurringAppointment = 4251,
        
        [EnumMember()]
        [OptionSetMetadata("Marketing List", Index=46, Lcid=1033, Description="Group of existing or potential customers created for a marketing campaign or othe" +
            "r sales purposes.")]
        MarketingList = 4300,
        
        [EnumMember()]
        [OptionSetMetadata("Campaign", Index=45, Lcid=1033, Description="Container for campaign activities and responses, sales literature, products, and " +
            "lists to create, plan, execute, and track the results of a specific marketing ca" +
            "mpaign through its life.")]
        Campaign = 4400,
        
        [EnumMember()]
        [OptionSetMetadata("Campaign Activity", Index=47, Lcid=1033, Description="Task performed, or to be performed, by a user for planning or running a campaign." +
            "")]
        CampaignActivity = 4402,
        
        [EnumMember()]
        [OptionSetMetadata("Process Session", Index=83, Lcid=1033, Description="Information that is generated when a dialog is run. Every time that you run a dia" +
            "log, a dialog session is created.")]
        ProcessSession = 4710,
        
        [EnumMember()]
        [OptionSetMetadata("Channel Access Profile Rule", Index=88, Lcid=1033, Description="Defines the rules for automatically associating channel access profiles to extern" +
            "al party records.For internal use only")]
        ChannelAccessProfileRule = 9400,
        
        [EnumMember()]
        [OptionSetMetadata("Goal", Index=81, Lcid=1033, Description="Target objective for a user or a team for a specified time period.")]
        Goal = 9600,
        
        [EnumMember()]
        [OptionSetMetadata("Entitlement", Index=59, Lcid=1033, Description="Defines the amount and type of support a customer should receive.")]
        Entitlement = 9700,
        
        [EnumMember()]
        [OptionSetMetadata("Entitlement Channel", Index=53, Lcid=1033, Description="Defines the amount and type of support for a channel.")]
        EntitlementChannel = 9701,
        
        [EnumMember()]
        [OptionSetMetadata("Entitlement Template Channel", Index=35, Lcid=1033, Description="Contains predefined support terms for a channel to create entitlements for custom" +
            "ers.")]
        EntitlementTemplateChannel = 9703,
        
        [EnumMember()]
        [OptionSetMetadata("Knowledge Base Record", Index=77, Lcid=1033, Description="Metadata of knowledge base (KB) articles associated with Microsoft Dynamics 365 e" +
            "ntities.")]
        KnowledgeBaseRecord = 9930,
        
        [EnumMember()]
        [OptionSetMetadata("Knowledge Article", Index=67, Lcid=1033, Description="Organizational knowledge for internal and external use.")]
        KnowledgeArticle = 9953,
        
        [EnumMember()]
        [OptionSetMetadata("Profile Album", Index=108, Lcid=1033, Description="Contains user profile images that are stored as attachments and displayed in post" +
            "s.")]
        ProfileAlbum = 10000,
        
        [EnumMember()]
        [OptionSetMetadata("Bus", Index=102, Lcid=1033, Description="")]
        Bus = 10016,
        
        [EnumMember()]
        [OptionSetMetadata("Eniro Config", Index=91, Lcid=1033, Description="")]
        EniroConfig = 10019,
        
        [EnumMember()]
        [OptionSetMetadata("Eniro Log", Index=74, Lcid=1033, Description="")]
        EniroLog = 10020,
        
        [EnumMember()]
        [OptionSetMetadata("Customer Voice survey invite", Index=115, Lcid=1033, Description="Activity that tracks a survey invitation sent to a person.")]
        CustomerVoicesurveyinvite = 10086,
        
        [EnumMember()]
        [OptionSetMetadata("Customer Voice survey response", Index=71, Lcid=1033, Description="Response to a survey.")]
        CustomerVoicesurveyresponse = 10087,
        
        [EnumMember()]
        [OptionSetMetadata("inMail", Index=75, Lcid=1033, Description="Custom Activity entity to store LinkedIn inMail records.")]
        inMail = 10145,
        
        [EnumMember()]
        [OptionSetMetadata("Message", Index=26, Lcid=1033, Description="Custom Activity entity to store LinkedIn Message records.")]
        Message = 10146,
        
        [EnumMember()]
        [OptionSetMetadata("Smart Links Content Viewed", Index=27, Lcid=1033, Description="Custom Activity entity to store Smart Links Content Viewed records.")]
        SmartLinksContentViewed = 10147,
        
        [EnumMember()]
        [OptionSetMetadata("Booking Alert", Index=120, Lcid=1033, Description="Alerts that notify schedule board users of booking issues or information.")]
        BookingAlert = 10164,
        
        [EnumMember()]
        [OptionSetMetadata("Booking Alert Status", Index=110, Lcid=1033, Description="The status of a booking alert.")]
        BookingAlertStatus = 10165,
        
        [EnumMember()]
        [OptionSetMetadata("Booking Rule", Index=97, Lcid=1033, Description="Specify custom rules to be validated by the system before saving a booking record" +
            ".")]
        BookingRule = 10167,
        
        [EnumMember()]
        [OptionSetMetadata("Resource Territory", Index=103, Lcid=1033, Description="Allows to specify for which territory a resource could provide services for")]
        ResourceTerritory = 10183,
        
        [EnumMember()]
        [OptionSetMetadata("System User Scheduler Setting", Index=95, Lcid=1033, Description="Stores user-specific settings for the schedule board.")]
        SystemUserSchedulerSetting = 10186,
        
        [EnumMember()]
        [OptionSetMetadata("Fulfillment Preference", Index=69, Lcid=1033, Description="Specify time groups consisting of multiple time windows to be used for scheduling" +
            ", for example.")]
        FulfillmentPreference = 10187,
        
        [EnumMember()]
        [OptionSetMetadata("Time Group Detail", Index=72, Lcid=1033, Description="Specify individual time windows under a time group.")]
        TimeGroupDetail = 10188,
        
        [EnumMember()]
        [OptionSetMetadata("Agreement", Index=98, Lcid=1033, Description="Provides ability to store details about service agreements you have with your cus" +
            "tomers")]
        Agreement = 10191,
        
        [EnumMember()]
        [OptionSetMetadata("Agreement Booking Date", Index=114, Lcid=1033, Description="Specify the maintenance booking dates for the agreement.")]
        AgreementBookingDate = 10192,
        
        [EnumMember()]
        [OptionSetMetadata("Agreement Booking Incident", Index=21, Lcid=1033, Description="Specify the booking incident for the agreement.")]
        AgreementBookingIncident = 10193,
        
        [EnumMember()]
        [OptionSetMetadata("Agreement Booking Product", Index=118, Lcid=1033, Description="Specify the booking product for the agreement.")]
        AgreementBookingProduct = 10194,
        
        [EnumMember()]
        [OptionSetMetadata("Agreement Booking Service", Index=119, Lcid=1033, Description="Specify the booking service for the agreement.")]
        AgreementBookingService = 10195,
        
        [EnumMember()]
        [OptionSetMetadata("Agreement Booking Service Task", Index=61, Lcid=1033, Description="Specify the booking service task for the agreement.")]
        AgreementBookingServiceTask = 10196,
        
        [EnumMember()]
        [OptionSetMetadata("Agreement Booking Setup", Index=117, Lcid=1033, Description="Specify the maintenance bookings for the agreement.")]
        AgreementBookingSetup = 10197,
        
        [EnumMember()]
        [OptionSetMetadata("Agreement Invoice Date", Index=62, Lcid=1033, Description="Specify the invoice dates for the agreement.")]
        AgreementInvoiceDate = 10198,
        
        [EnumMember()]
        [OptionSetMetadata("Agreement Invoice Product", Index=49, Lcid=1033, Description="Specify the booking product invoice for the agreement.")]
        AgreementInvoiceProduct = 10199,
        
        [EnumMember()]
        [OptionSetMetadata("Agreement Invoice Setup", Index=3, Lcid=1033, Description="Specify the invoices for this agreement.")]
        AgreementInvoiceSetup = 10200,
        
        [EnumMember()]
        [OptionSetMetadata("Booking Timestamp", Index=24, Lcid=1033, Description="Tracks status changes of bookings and timestamps the change of the status")]
        BookingTimestamp = 10203,
        
        [EnumMember()]
        [OptionSetMetadata("Customer Asset", Index=13, Lcid=1033, Description="Specify Customer Asset.")]
        CustomerAsset = 10208,
        
        [EnumMember()]
        [OptionSetMetadata("Incident Type Characteristic", Index=68, Lcid=1033, Description="Specify characteristic insident type.")]
        IncidentTypeCharacteristic = 10216,
        
        [EnumMember()]
        [OptionSetMetadata("Incident Type Product", Index=12, Lcid=1033, Description="This entity gives the ability to pre-configure products to be added to a work ord" +
            "er when the related incident is added to the work order")]
        IncidentTypeProduct = 10217,
        
        [EnumMember()]
        [OptionSetMetadata("Incident Type Service", Index=99, Lcid=1033, Description="This entity gives the ability to pre-configure services to be added to a work ord" +
            "er when the related incident is added to the work order")]
        IncidentTypeService = 10218,
        
        [EnumMember()]
        [OptionSetMetadata("Inventory Adjustment", Index=9, Lcid=1033, Description="Records inventory adjustments")]
        InventoryAdjustment = 10222,
        
        [EnumMember()]
        [OptionSetMetadata("Inventory Adjustment Product", Index=109, Lcid=1033, Description="Records product affected by an inventory adjustment or inventory transfer")]
        InventoryAdjustmentProduct = 10223,
        
        [EnumMember()]
        [OptionSetMetadata("Inventory Journal", Index=29, Lcid=1033, Description="Inventory change tracking")]
        InventoryJournal = 10224,
        
        [EnumMember()]
        [OptionSetMetadata("Inventory Transfer", Index=93, Lcid=1033, Description="Records inventory adjustments")]
        InventoryTransfer = 10225,
        
        [EnumMember()]
        [OptionSetMetadata("Payment", Index=104, Lcid=1033, Description="Specify payment.")]
        Payment = 10230,
        
        [EnumMember()]
        [OptionSetMetadata("Payment Detail", Index=60, Lcid=1033, Description="Specify payment details.")]
        PaymentDetail = 10231,
        
        [EnumMember()]
        [OptionSetMetadata("Payment Method", Index=10, Lcid=1033, Description="Specify payment method.")]
        PaymentMethod = 10232,
        
        [EnumMember()]
        [OptionSetMetadata("Payment Term", Index=105, Lcid=1033, Description="Specify payment terms used for billing.")]
        PaymentTerm = 10233,
        
        [EnumMember()]
        [OptionSetMetadata("Postal Code", Index=15, Lcid=1033, Description="Specify postal codes and their relationship to territories.")]
        PostalCode = 10234,
        
        [EnumMember()]
        [OptionSetMetadata("Product Inventory", Index=28, Lcid=1033, Description="Inventory Record")]
        ProductInventory = 10235,
        
        [EnumMember()]
        [OptionSetMetadata("Purchase Order", Index=0, Lcid=1033, Description="Record Purchase Orders pertaining to Work Orders or otherwise")]
        PurchaseOrder = 10236,
        
        [EnumMember()]
        [OptionSetMetadata("Purchase Order Bill", Index=14, Lcid=1033, Description="Specify purchase order bill.")]
        PurchaseOrderBill = 10237,
        
        [EnumMember()]
        [OptionSetMetadata("Purchase Order Product", Index=50, Lcid=1033, Description="Record products to be ordered on purchase order")]
        PurchaseOrderProduct = 10238,
        
        [EnumMember()]
        [OptionSetMetadata("Purchase Order Receipt", Index=25, Lcid=1033, Description="Specify purchase order receipt.")]
        PurchaseOrderReceipt = 10239,
        
        [EnumMember()]
        [OptionSetMetadata("Purchase Order Receipt Product", Index=4, Lcid=1033, Description="Specify product for purchase order receipt.")]
        PurchaseOrderReceiptProduct = 10240,
        
        [EnumMember()]
        [OptionSetMetadata("Purchase Order SubStatus", Index=73, Lcid=1033, Description="Specify custom PO Substatuses, which can be used to specify the current PO status" +
            " more precisely.")]
        PurchaseOrderSubStatus = 10241,
        
        [EnumMember()]
        [OptionSetMetadata("Quote Booking Incident", Index=112, Lcid=1033, Description="Stores the Incidents associated with Quote and Quote Booking Setup")]
        QuoteBookingIncident = 10242,
        
        [EnumMember()]
        [OptionSetMetadata("Quote Booking Product", Index=18, Lcid=1033, Description="Provides ability to store information about the products that are associated with" +
            " Quote Booking Setup")]
        QuoteBookingProduct = 10243,
        
        [EnumMember()]
        [OptionSetMetadata("Quote Booking Service", Index=116, Lcid=1033, Description="Stores details about the services associated with Quote Booking Setup ")]
        QuoteBookingService = 10244,
        
        [EnumMember()]
        [OptionSetMetadata("Quote Booking Service Task", Index=96, Lcid=1033, Description="")]
        QuoteBookingServiceTask = 10245,
        
        [EnumMember()]
        [OptionSetMetadata("RMA", Index=23, Lcid=1033, Description="Records RMAs for products to be retuned from customers")]
        RMA = 10250,
        
        [EnumMember()]
        [OptionSetMetadata("RMA Product", Index=8, Lcid=1033, Description="Records products to be returned on an RMA")]
        RMAProduct = 10251,
        
        [EnumMember()]
        [OptionSetMetadata("RMA Receipt", Index=19, Lcid=1033, Description="Specify RMA receipt.")]
        RMAReceipt = 10252,
        
        [EnumMember()]
        [OptionSetMetadata("RMA Receipt Product", Index=5, Lcid=1033, Description="Specify RMA receipt product.")]
        RMAReceiptProduct = 10253,
        
        [EnumMember()]
        [OptionSetMetadata("RMA SubStatus", Index=92, Lcid=1033, Description="Specify custom RMA substatuses, which can be used to specify the current RMA stat" +
            "us more precisely.")]
        RMASubStatus = 10254,
        
        [EnumMember()]
        [OptionSetMetadata("RTV", Index=63, Lcid=1033, Description="Records RTVs for products to be retuned to vendors")]
        RTV = 10255,
        
        [EnumMember()]
        [OptionSetMetadata("RTV Product", Index=22, Lcid=1033, Description="Records products to be returned on an RTV")]
        RTVProduct = 10256,
        
        [EnumMember()]
        [OptionSetMetadata("RTV Substatus", Index=16, Lcid=1033, Description="Specify custom RTV substatuses, which can be used to specify the current RTV stat" +
            "us more precisely.")]
        RTVSubstatus = 10257,
        
        [EnumMember()]
        [OptionSetMetadata("Ship Via", Index=100, Lcid=1033, Description="Specify the different shipping methods used.")]
        ShipVia = 10259,
        
        [EnumMember()]
        [OptionSetMetadata("Tax Code", Index=2, Lcid=1033, Description="Store tax related information. Each tax code could contain multiple child tax cod" +
            "es, and in that case the tax rate will be determined by the total tax of all chi" +
            "ldren.")]
        TaxCode = 10260,
        
        [EnumMember()]
        [OptionSetMetadata("Time Off Request", Index=17, Lcid=1033, Description="Specify time resource time off request.")]
        TimeOffRequest = 10262,
        
        [EnumMember()]
        [OptionSetMetadata("Warehouse", Index=1, Lcid=1033, Description="Warehouses where inventory products are stored and managed")]
        Warehouse = 10264,
        
        [EnumMember()]
        [OptionSetMetadata("Work Order", Index=101, Lcid=1033, Description="Work orders store all information about the job performed for an account. Stores " +
            "incident details, resource, expenses, tasks, communications, billing and more")]
        WorkOrder = 10265,
        
        [EnumMember()]
        [OptionSetMetadata("Work Order Characteristic (Deprecated)", Index=113, Lcid=1033, Description="This entity is deprecated.")]
        WorkOrderCharacteristicDeprecated = 10266,
        
        [EnumMember()]
        [OptionSetMetadata("Work Order Incident", Index=6, Lcid=1033, Description="Specify work order incidents reported to you by the client. These are also referr" +
            "ed to as problem codes.")]
        WorkOrderIncident = 10268,
        
        [EnumMember()]
        [OptionSetMetadata("Work Order Product", Index=111, Lcid=1033, Description="In this entity you record all the products proposed and used for a work order")]
        WorkOrderProduct = 10269,
        
        [EnumMember()]
        [OptionSetMetadata("Resource Restriction (Deprecated)", Index=20, Lcid=1033, Description="This entity is deprecated.")]
        ResourceRestrictionDeprecated = 10270,
        
        [EnumMember()]
        [OptionSetMetadata("Work Order Service", Index=7, Lcid=1033, Description="Record all services proposed and performed for work order")]
        WorkOrderService = 10271,
        
        [EnumMember()]
        [OptionSetMetadata("Work Order Service Task", Index=11, Lcid=1033, Description="Store service tasks that are to be performed for this work order")]
        WorkOrderServiceTask = 10272,
        
        [EnumMember()]
        [OptionSetMetadata("IoT Alert", Index=94, Lcid=1033, Description="")]
        IoTAlert = 10276,
        
        [EnumMember()]
        [OptionSetMetadata("IoT Device", Index=70, Lcid=1033, Description="Represents a connected device that can be registered with an IoT provider.")]
        IoTDevice = 10277,
        
        [EnumMember()]
        [OptionSetMetadata("IoT Device Category", Index=106, Lcid=1033, Description="Used to categorize IoT devices.")]
        IoTDeviceCategory = 10278,
        
        [EnumMember()]
        [OptionSetMetadata("IoT Device Command", Index=51, Lcid=1033, Description="Represents an outgoing message to a device connected to an IoT provider.")]
        IoTDeviceCommand = 10279,
        
        [EnumMember()]
        [OptionSetMetadata("IoT Device Registration History", Index=107, Lcid=1033, Description="Tracks registration activities on an IoT device.")]
        IoTDeviceRegistrationHistory = 10283,
        
        [EnumMember()]
        [OptionSetMetadata("Sequence", Index=44, Lcid=1033, Description="")]
        Sequence = 10374,
        
        [EnumMember()]
        [OptionSetMetadata("Sequence Target", Index=41, Lcid=1033, Description="")]
        SequenceTarget = 10375,
        
        [EnumMember()]
        [OptionSetMetadata("Customer Voice alert", Index=38, Lcid=1033, Description="")]
        CustomerVoicealert = 10416,
        
        [EnumMember()]
        [OptionSetMetadata("Assignment Rule", Index=39, Lcid=1033, Description="Defines criteria based on which Entities are routed to Users or Sales Team")]
        AssignmentRule = 10537,
        
        [EnumMember()]
        [OptionSetMetadata("Assignment Map", Index=40, Lcid=1033, Description="")]
        AssignmentMap = 10540,
    }
    
    [DataContract()]
    public enum Connection_StatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum ContactState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum Contact_AccountRoleCode {
        
        [EnumMember()]
        [OptionSetMetadata("Decision Maker", Index=0, Lcid=1033)]
        DecisionMaker = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Employee", Index=1, Lcid=1033)]
        Employee = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Influencer", Index=2, Lcid=1033)]
        Influencer = 3,
    }
    
    [DataContract()]
    public enum Contact_Address1_AddressTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Bill To", Index=0, Lcid=1033)]
        BillTo = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Ship To", Index=1, Lcid=1033)]
        ShipTo = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Primary", Index=2, Lcid=1033)]
        Primary = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Other", Index=3, Lcid=1033)]
        Other = 4,
    }
    
    [DataContract()]
    public enum Contact_Address1_FreightTermsCode {
        
        [EnumMember()]
        [OptionSetMetadata("FOB", Index=0, Lcid=1033)]
        FOB = 1,
        
        [EnumMember()]
        [OptionSetMetadata("No Charge", Index=1, Lcid=1033)]
        NoCharge = 2,
    }
    
    [DataContract()]
    public enum Contact_Address1_ShippingMethodCode {
        
        [EnumMember()]
        [OptionSetMetadata("Airborne", Index=0, Lcid=1033)]
        Airborne = 1,
        
        [EnumMember()]
        [OptionSetMetadata("DHL", Index=1, Lcid=1033)]
        DHL = 2,
        
        [EnumMember()]
        [OptionSetMetadata("FedEx", Index=2, Lcid=1033)]
        FedEx = 3,
        
        [EnumMember()]
        [OptionSetMetadata("UPS", Index=3, Lcid=1033)]
        UPS = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Postal Mail", Index=4, Lcid=1033)]
        PostalMail = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Full Load", Index=5, Lcid=1033)]
        FullLoad = 6,
        
        [EnumMember()]
        [OptionSetMetadata("Will Call", Index=6, Lcid=1033)]
        WillCall = 7,
    }
    
    [DataContract()]
    public enum Contact_Address2_AddressTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Contact_Address2_FreightTermsCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Contact_Address2_ShippingMethodCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Contact_Address3_AddressTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Contact_Address3_FreightTermsCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Contact_Address3_ShippingMethodCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Contact_CustomerSizeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Contact_CustomerTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Contact_EducationCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Contact_FamilyStatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("Single", Index=0, Lcid=1033)]
        Single = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Married", Index=1, Lcid=1033)]
        Married = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Divorced", Index=2, Lcid=1033)]
        Divorced = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Widowed", Index=3, Lcid=1033)]
        Widowed = 4,
    }
    
    [DataContract()]
    public enum Contact_GenderCode {
        
        [EnumMember()]
        [OptionSetMetadata("Male", Index=0, Lcid=1033)]
        Male = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Female", Index=1, Lcid=1033)]
        Female = 2,
    }
    
    [DataContract()]
    public enum Contact_HasChildrenCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Contact_LeadSourceCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Contact_PaymentTermsCode {
        
        [EnumMember()]
        [OptionSetMetadata("Net 30", Index=0, Lcid=1033)]
        Net30 = 1,
        
        [EnumMember()]
        [OptionSetMetadata("2% 10, Net 30", Index=1, Lcid=1033)]
        _210Net30 = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Net 45", Index=2, Lcid=1033)]
        Net45 = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Net 60", Index=3, Lcid=1033)]
        Net60 = 4,
    }
    
    [DataContract()]
    public enum Contact_PreferredAppointmentDayCode {
        
        [EnumMember()]
        [OptionSetMetadata("Sunday", Index=0, Lcid=1033)]
        Sunday = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Monday", Index=1, Lcid=1033)]
        Monday = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Tuesday", Index=2, Lcid=1033)]
        Tuesday = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Wednesday", Index=3, Lcid=1033)]
        Wednesday = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Thursday", Index=4, Lcid=1033)]
        Thursday = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Friday", Index=5, Lcid=1033)]
        Friday = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Saturday", Index=6, Lcid=1033)]
        Saturday = 6,
    }
    
    [DataContract()]
    public enum Contact_PreferredAppointmentTimeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Morning", Index=0, Lcid=1033)]
        Morning = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Afternoon", Index=1, Lcid=1033)]
        Afternoon = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Evening", Index=2, Lcid=1033)]
        Evening = 3,
    }
    
    [DataContract()]
    public enum Contact_PreferredContactMethodCode {
        
        [EnumMember()]
        [OptionSetMetadata("Any", Index=0, Lcid=1033)]
        Any = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Email", Index=1, Lcid=1033)]
        Email = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Phone", Index=2, Lcid=1033)]
        Phone = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Fax", Index=3, Lcid=1033)]
        Fax = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Mail", Index=4, Lcid=1033)]
        Mail = 5,
    }
    
    [DataContract()]
    public enum Contact_ShippingMethodCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Contact_StatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033, Color="#0000ff")]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033, Color="#0000ff")]
        Inactive = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Another status", Index=2, Lcid=1033, Color="#0000ff")]
        Anotherstatus = 123500000,
    }
    
    [DataContract()]
    public enum Contact_TerritoryCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Contact_msdyn_orgchangestatus {
        
        [EnumMember()]
        [OptionSetMetadata("No Feedback", Index=0, Lcid=1033, Color="#0000ff")]
        NoFeedback = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Not at Company", Index=1, Lcid=1033, Color="#0000ff")]
        NotatCompany = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Ignore", Index=2, Lcid=1033, Color="#0000ff")]
        Ignore = 2,
    }
    
    [DataContract()]
    public enum ContractState {
        
        [EnumMember()]
        [OptionSetMetadata("Draft", Index=0, Lcid=1033)]
        Draft = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Invoiced", Index=1, Lcid=1033)]
        Invoiced = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=2, Lcid=1033)]
        Active = 2,
        
        [EnumMember()]
        [OptionSetMetadata("On Hold", Index=3, Lcid=1033)]
        OnHold = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Canceled", Index=4, Lcid=1033)]
        Canceled = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Expired", Index=5, Lcid=1033)]
        Expired = 5,
    }
    
    [DataContract()]
    public enum Contract_AllotmentTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Number of Cases", Index=0, Lcid=1033)]
        NumberofCases = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Time", Index=1, Lcid=1033)]
        Time = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Coverage Dates", Index=2, Lcid=1033)]
        CoverageDates = 3,
    }
    
    [DataContract()]
    public enum Contract_BillingFrequencyCode {
        
        [EnumMember()]
        [OptionSetMetadata("Monthly", Index=0, Lcid=1033)]
        Monthly = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Bimonthly", Index=1, Lcid=1033)]
        Bimonthly = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Quarterly", Index=2, Lcid=1033)]
        Quarterly = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Semiannually", Index=3, Lcid=1033)]
        Semiannually = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Annually", Index=4, Lcid=1033)]
        Annually = 5,
    }
    
    [DataContract()]
    public enum Contract_ContractServiceLevelCode {
        
        [EnumMember()]
        [OptionSetMetadata("Gold", Index=0, Lcid=1033)]
        Gold = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Silver", Index=1, Lcid=1033)]
        Silver = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Bronze", Index=2, Lcid=1033)]
        Bronze = 3,
    }
    
    [DataContract()]
    public enum Contract_StatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("Draft", Index=0, Lcid=1033)]
        Draft = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Invoiced", Index=1, Lcid=1033)]
        Invoiced = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=2, Lcid=1033)]
        Active = 3,
        
        [EnumMember()]
        [OptionSetMetadata("On Hold", Index=3, Lcid=1033)]
        OnHold = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Canceled", Index=4, Lcid=1033)]
        Canceled = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Expired", Index=5, Lcid=1033)]
        Expired = 6,
    }
    
    [DataContract()]
    public enum CustomerAddress_AddressTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Bill To", Index=0, Lcid=1033)]
        BillTo = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Ship To", Index=1, Lcid=1033)]
        ShipTo = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Primary", Index=2, Lcid=1033)]
        Primary = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Other", Index=3, Lcid=1033)]
        Other = 4,
    }
    
    [DataContract()]
    public enum CustomerAddress_FreightTermsCode {
        
        [EnumMember()]
        [OptionSetMetadata("FOB", Index=0, Lcid=1033)]
        FOB = 1,
        
        [EnumMember()]
        [OptionSetMetadata("No Charge", Index=1, Lcid=1033)]
        NoCharge = 2,
    }
    
    [DataContract()]
    public enum CustomerAddress_ObjectTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Account", Index=0, Lcid=1033)]
        Account = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Contact", Index=1, Lcid=1033)]
        Contact = 2,
    }
    
    [DataContract()]
    public enum CustomerAddress_ShippingMethodCode {
        
        [EnumMember()]
        [OptionSetMetadata("Airborne", Index=0, Lcid=1033)]
        Airborne = 1,
        
        [EnumMember()]
        [OptionSetMetadata("DHL", Index=1, Lcid=1033)]
        DHL = 2,
        
        [EnumMember()]
        [OptionSetMetadata("FedEx", Index=2, Lcid=1033)]
        FedEx = 3,
        
        [EnumMember()]
        [OptionSetMetadata("UPS", Index=3, Lcid=1033)]
        UPS = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Postal Mail", Index=4, Lcid=1033)]
        PostalMail = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Full Load", Index=5, Lcid=1033)]
        FullLoad = 6,
        
        [EnumMember()]
        [OptionSetMetadata("Will Call", Index=6, Lcid=1033)]
        WillCall = 7,
    }
    
    [DataContract()]
    public enum EmailState {
        
        [EnumMember()]
        [OptionSetMetadata("Open", Index=0, Lcid=1033)]
        Open = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Completed", Index=1, Lcid=1033)]
        Completed = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Canceled", Index=2, Lcid=1033)]
        Canceled = 2,
    }
    
    [DataContract()]
    public enum Email_CorrelationMethod {
        
        [EnumMember()]
        [OptionSetMetadata("None", Index=0, Lcid=1033)]
        None = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Skipped", Index=1, Lcid=1033)]
        Skipped = 1,
        
        [EnumMember()]
        [OptionSetMetadata("XHeader", Index=2, Lcid=1033)]
        XHeader = 2,
        
        [EnumMember()]
        [OptionSetMetadata("InReplyTo", Index=3, Lcid=1033)]
        InReplyTo = 3,
        
        [EnumMember()]
        [OptionSetMetadata("TrackingToken", Index=4, Lcid=1033)]
        TrackingToken = 4,
        
        [EnumMember()]
        [OptionSetMetadata("ConversationIndex", Index=5, Lcid=1033)]
        ConversationIndex = 5,
        
        [EnumMember()]
        [OptionSetMetadata("SmartMatching", Index=6, Lcid=1033)]
        SmartMatching = 6,
        
        [EnumMember()]
        [OptionSetMetadata("CustomCorrelation", Index=7, Lcid=1033)]
        CustomCorrelation = 7,
    }
    
    [DataContract()]
    public enum Email_EmailReminderStatus {
        
        [EnumMember()]
        [OptionSetMetadata("NotSet", Index=0, Lcid=1033)]
        NotSet = 0,
        
        [EnumMember()]
        [OptionSetMetadata("ReminderSet", Index=1, Lcid=1033)]
        ReminderSet = 1,
        
        [EnumMember()]
        [OptionSetMetadata("ReminderExpired", Index=2, Lcid=1033)]
        ReminderExpired = 2,
        
        [EnumMember()]
        [OptionSetMetadata("ReminderInvalid", Index=3, Lcid=1033)]
        ReminderInvalid = 3,
    }
    
    [DataContract()]
    public enum Email_EmailReminderType {
        
        [EnumMember()]
        [OptionSetMetadata("If I do not receive a reply by", Index=0, Lcid=1033)]
        IfIdonotreceiveareplyby = 0,
        
        [EnumMember()]
        [OptionSetMetadata("If the email is not opened by", Index=1, Lcid=1033)]
        Iftheemailisnotopenedby = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Remind me anyways at", Index=2, Lcid=1033)]
        Remindmeanywaysat = 2,
    }
    
    [DataContract()]
    public enum Email_Notifications {
        
        [EnumMember()]
        [OptionSetMetadata("None", Index=0, Lcid=1033)]
        None = 0,
        
        [EnumMember()]
        [OptionSetMetadata("The message was saved as a Microsoft Dynamics 365 email record, but not all the a" +
            "ttachments could be saved with it. An attachment cannot be saved if it is blocke" +
            "d or if its file type is invalid.", Index=1, Lcid=1033)]
        ThemessagewassavedasaMicrosoftDynamics365emailrecordbutnotalltheattachmentscouldbesavedwithitAnattachmentcannotbesavedifitisblockedorifitsfiletypeisinvalid = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Truncated body.", Index=2, Lcid=1033)]
        Truncatedbody = 2,
    }
    
    [DataContract()]
    public enum Email_PriorityCode {
        
        [EnumMember()]
        [OptionSetMetadata("Low", Index=0, Lcid=1033)]
        Low = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Normal", Index=1, Lcid=1033)]
        Normal = 1,
        
        [EnumMember()]
        [OptionSetMetadata("High", Index=2, Lcid=1033)]
        High = 2,
    }
    
    [DataContract()]
    public enum Email_StatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("Draft", Index=0, Lcid=1033, Color="#3b79b7")]
        Draft = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Completed", Index=1, Lcid=1033, Color="#358717")]
        Completed = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Sent", Index=2, Lcid=1033, Color="#358717")]
        Sent = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Received", Index=3, Lcid=1033, Color="#358717")]
        Received = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Canceled", Index=4, Lcid=1033, Color="#666666")]
        Canceled = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Pending Send", Index=5, Lcid=1033, Color="#bf991f")]
        PendingSend = 6,
        
        [EnumMember()]
        [OptionSetMetadata("Sending", Index=6, Lcid=1033, Color="#bf991f")]
        Sending = 7,
        
        [EnumMember()]
        [OptionSetMetadata("Failed", Index=7, Lcid=1033, Color="#ea0600")]
        Failed = 8,
    }
    
    [DataContract()]
    public enum EmailServerProfileState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum EmailServerProfile_ExchangeVersion {
        
        [EnumMember()]
        [OptionSetMetadata("Exchange 2007", Index=0, Lcid=1033)]
        Exchange2007 = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Exchange 2007 SP1", Index=1, Lcid=1033)]
        Exchange2007SP1 = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Exchange 2010", Index=2, Lcid=1033)]
        Exchange2010 = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Exchange 2010 SP1", Index=3, Lcid=1033)]
        Exchange2010SP1 = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Exchange 2010 SP2", Index=4, Lcid=1033)]
        Exchange2010SP2 = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Exchange 2013", Index=5, Lcid=1033)]
        Exchange2013 = 5,
    }
    
    [DataContract()]
    public enum EmailServerProfile_IncomingCredentialRetrieval {
        
        [EnumMember()]
        [OptionSetMetadata("Credentials Specified by a User or Queue", Index=0, Lcid=1033)]
        CredentialsSpecifiedbyaUserorQueue = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Credentials Specified in Email Server Profile", Index=1, Lcid=1033)]
        CredentialsSpecifiedinEmailServerProfile = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Server to Server Authentication", Index=2, Lcid=1033)]
        ServertoServerAuthentication = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Windows Integrated Authentication", Index=3, Lcid=1033)]
        WindowsIntegratedAuthentication = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Without Credentials (Anonymous)", Index=4, Lcid=1033)]
        WithoutCredentialsAnonymous = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Gmail OAuth", Index=5, Lcid=1033)]
        GmailOAuth = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Exchange Hybrid Modern Auth (HMA)", Index=6, Lcid=1033)]
        ExchangeHybridModernAuthHMA = 6,
        
        [EnumMember()]
        [OptionSetMetadata("Azure Active Directory OAuth", Index=7, Lcid=1033)]
        AzureActiveDirectoryOAuth = 7,
    }
    
    [DataContract()]
    public enum EmailServerProfile_LastAuthorizationStatus {
        
        [EnumMember()]
        [OptionSetMetadata("Failure", Index=0, Lcid=1033)]
        Failure = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Success", Index=1, Lcid=1033)]
        Success = 1,
    }
    
    [DataContract()]
    public enum EmailServerProfile_LastTestExecutionStatus {
        
        [EnumMember()]
        [OptionSetMetadata("Failure", Index=0, Lcid=1033)]
        Failure = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Success", Index=1, Lcid=1033)]
        Success = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Warning", Index=2, Lcid=1033)]
        Warning = 2,
    }
    
    [DataContract()]
    public enum EmailServerProfile_LastTestValidationStatus {
        
        [EnumMember()]
        [OptionSetMetadata("Failure", Index=0, Lcid=1033)]
        Failure = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Success", Index=1, Lcid=1033)]
        Success = 1,
    }
    
    [DataContract()]
    public enum EmailServerProfile_OutgoingCredentialRetrieval {
        
        [EnumMember()]
        [OptionSetMetadata("Credentials Specified by a User or Queue", Index=0, Lcid=1033)]
        CredentialsSpecifiedbyaUserorQueue = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Credentials Specified in Email Server Profile", Index=1, Lcid=1033)]
        CredentialsSpecifiedinEmailServerProfile = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Server to Server Authentication", Index=2, Lcid=1033)]
        ServertoServerAuthentication = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Windows Integrated Authentication", Index=3, Lcid=1033)]
        WindowsIntegratedAuthentication = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Without Credentials (Anonymous)", Index=4, Lcid=1033)]
        WithoutCredentialsAnonymous = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Gmail OAuth", Index=5, Lcid=1033)]
        GmailOAuth = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Exchange Hybrid Modern Auth (HMA)", Index=6, Lcid=1033)]
        ExchangeHybridModernAuthHMA = 6,
        
        [EnumMember()]
        [OptionSetMetadata("Azure Active Directory OAuth", Index=7, Lcid=1033)]
        AzureActiveDirectoryOAuth = 7,
    }
    
    [DataContract()]
    public enum EmailServerProfile_ServerType {
        
        [EnumMember()]
        [OptionSetMetadata("Exchange Server", Index=0, Lcid=1033)]
        ExchangeServer = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Other (POP3/SMTP)", Index=1, Lcid=1033)]
        OtherPOP3SMTP = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Exchange Server (Hybrid)", Index=2, Lcid=1033)]
        ExchangeServerHybrid = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Exchange Online (Hybrid)", Index=3, Lcid=1033)]
        ExchangeOnlineHybrid = 3,
        
        [EnumMember()]
        [OptionSetMetadata("IMAP/SMTP", Index=4, Lcid=1033)]
        IMAPSMTP = 4,
    }
    
    [DataContract()]
    public enum EmailServerProfile_StatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum EntitlementState {
        
        [EnumMember()]
        [OptionSetMetadata("Draft", Index=0, Lcid=1033)]
        Draft = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=1, Lcid=1033)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Cancelled", Index=2, Lcid=1033)]
        Cancelled = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Expired", Index=3, Lcid=1033)]
        Expired = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Waiting", Index=4, Lcid=1033)]
        Waiting = 4,
    }
    
    [DataContract()]
    public enum Entitlement_AllocationTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Number of cases", Index=0, Lcid=1033, Description="Number of cases", Color="")]
        Numberofcases = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Number of hours", Index=1, Lcid=1033, Description="Number of hours", Color="")]
        Numberofhours = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Discount % and Price List", Index=2, Lcid=1033, Description="Discount % and Price List", Color="#0000ff")]
        DiscountandPriceList = 192350000,
    }
    
    [DataContract()]
    public enum Entitlement_DecreaseRemainingOn {
        
        [EnumMember()]
        [OptionSetMetadata("Case Resolution", Index=0, Lcid=1033)]
        CaseResolution = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Case Creation", Index=1, Lcid=1033)]
        CaseCreation = 1,
    }
    
    [DataContract()]
    public enum Entitlement_KbAccessLevel {
        
        [EnumMember()]
        [OptionSetMetadata("Standard", Index=0, Lcid=1033, Description="Standard")]
        Standard = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Premium", Index=1, Lcid=1033, Description="Premium")]
        Premium = 1,
        
        [EnumMember()]
        [OptionSetMetadata("None", Index=2, Lcid=1033, Description="None")]
        None = 2,
    }
    
    [DataContract()]
    public enum Entitlement_StatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("Draft", Index=0, Lcid=1033)]
        Draft = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=1, Lcid=1033)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Cancelled", Index=2, Lcid=1033)]
        Cancelled = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Expired", Index=3, Lcid=1033)]
        Expired = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Waiting", Index=4, Lcid=1033)]
        Waiting = 1200,
    }
    
    [DataContract()]
    public enum FaxState {
        
        [EnumMember()]
        [OptionSetMetadata("Open", Index=0, Lcid=1033)]
        Open = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Completed", Index=1, Lcid=1033)]
        Completed = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Canceled", Index=2, Lcid=1033)]
        Canceled = 2,
    }
    
    [DataContract()]
    public enum Fax_PriorityCode {
        
        [EnumMember()]
        [OptionSetMetadata("Low", Index=0, Lcid=1033)]
        Low = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Normal", Index=1, Lcid=1033)]
        Normal = 1,
        
        [EnumMember()]
        [OptionSetMetadata("High", Index=2, Lcid=1033)]
        High = 2,
    }
    
    [DataContract()]
    public enum Fax_StatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("Open", Index=0, Lcid=1033)]
        Open = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Completed", Index=1, Lcid=1033)]
        Completed = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Sent", Index=2, Lcid=1033)]
        Sent = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Received", Index=3, Lcid=1033)]
        Received = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Canceled", Index=4, Lcid=1033)]
        Canceled = 5,
    }
    
    [DataContract()]
    public enum GoalState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum Goal_StatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("Open", Index=0, Lcid=1033)]
        Open = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Closed", Index=1, Lcid=1033)]
        Closed = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Discarded", Index=2, Lcid=1033)]
        Discarded = 2,
    }
    
    [DataContract()]
    public enum IncidentState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Resolved", Index=1, Lcid=1033)]
        Resolved = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Canceled", Index=2, Lcid=1033)]
        Canceled = 2,
    }
    
    [DataContract()]
    public enum Incident_CaseTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Question", Index=0, Lcid=1033, Color="#FF8C00")]
        Question = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Problem", Index=1, Lcid=1033, Color="#E71022")]
        Problem = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Request", Index=2, Lcid=1033, Color="#0072C6")]
        Request = 3,
    }
    
    [DataContract()]
    public enum Incident_ContractServiceLevelCode {
        
        [EnumMember()]
        [OptionSetMetadata("Gold", Index=0, Lcid=1033)]
        Gold = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Silver", Index=1, Lcid=1033)]
        Silver = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Bronze", Index=2, Lcid=1033)]
        Bronze = 3,
    }
    
    [DataContract()]
    public enum Incident_CustomerSatisfactionCode {
        
        [EnumMember()]
        [OptionSetMetadata("Very Dissatisfied", Index=4, Lcid=1033)]
        VeryDissatisfied = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Dissatisfied", Index=3, Lcid=1033)]
        Dissatisfied = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Neutral", Index=2, Lcid=1033)]
        Neutral = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Satisfied", Index=1, Lcid=1033)]
        Satisfied = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Very Satisfied", Index=0, Lcid=1033)]
        VerySatisfied = 5,
    }
    
    [DataContract()]
    public enum Incident_FirstResponseSLAStatus {
        
        [EnumMember()]
        [OptionSetMetadata("In Progress", Index=0, Lcid=1033)]
        InProgress = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Nearing Noncompliance", Index=1, Lcid=1033)]
        NearingNoncompliance = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Succeeded", Index=2, Lcid=1033)]
        Succeeded = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Noncompliant", Index=3, Lcid=1033)]
        Noncompliant = 4,
    }
    
    [DataContract()]
    public enum Incident_IncidentStageCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Incident_PriorityCode {
        
        [EnumMember()]
        [OptionSetMetadata("High", Index=0, Lcid=1033)]
        High = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Normal", Index=1, Lcid=1033)]
        Normal = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Low", Index=2, Lcid=1033)]
        Low = 3,
    }
    
    [DataContract()]
    public enum Incident_ResolveBySLAStatus {
        
        [EnumMember()]
        [OptionSetMetadata("In Progress", Index=0, Lcid=1033)]
        InProgress = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Nearing Noncompliance", Index=1, Lcid=1033)]
        NearingNoncompliance = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Succeeded", Index=2, Lcid=1033)]
        Succeeded = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Noncompliant", Index=3, Lcid=1033)]
        Noncompliant = 4,
    }
    
    [DataContract()]
    public enum Incident_SeverityCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Incident_StatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("In Progress", Index=0, Lcid=1033, Color="#0072C6")]
        InProgress = 1,
        
        [EnumMember()]
        [OptionSetMetadata("On Hold", Index=1, Lcid=1033, Color="#FF8C00")]
        OnHold = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Waiting for Details", Index=2, Lcid=1033, Color="#FCD116")]
        WaitingforDetails = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Researching", Index=3, Lcid=1033, Color="#00B294")]
        Researching = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Problem Solved", Index=4, Lcid=1033, Color="#0000ff")]
        ProblemSolved = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Canceled", Index=6, Lcid=1033, Color="#0000ff")]
        Canceled = 6,
        
        [EnumMember()]
        [OptionSetMetadata("Information Provided", Index=5, Lcid=1033, Color="#0000ff")]
        InformationProvided = 1000,
        
        [EnumMember()]
        [OptionSetMetadata("Merged", Index=7, Lcid=1033, Color="#0000ff")]
        Merged = 2000,
    }
    
    [DataContract()]
    public enum IncidentResolutionState {
        
        [EnumMember()]
        [OptionSetMetadata("Open", Index=1, Lcid=1033)]
        Open = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Completed", Index=2, Lcid=1033)]
        Completed = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Canceled", Index=3, Lcid=1033)]
        Canceled = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Scheduled", Index=0, Lcid=1033)]
        Scheduled = 3,
    }
    
    [DataContract()]
    public enum IncidentResolution_InstanceTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Not Recurring", Index=0, Lcid=1033)]
        NotRecurring = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Recurring Master", Index=1, Lcid=1033)]
        RecurringMaster = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Recurring Instance", Index=2, Lcid=1033)]
        RecurringInstance = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Recurring Exception", Index=3, Lcid=1033)]
        RecurringException = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Recurring Future Exception", Index=4, Lcid=1033)]
        RecurringFutureException = 4,
    }
    
    [DataContract()]
    public enum IncidentResolution_PriorityCode {
        
        [EnumMember()]
        [OptionSetMetadata("Low", Index=0, Lcid=1033)]
        Low = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Normal", Index=1, Lcid=1033)]
        Normal = 1,
        
        [EnumMember()]
        [OptionSetMetadata("High", Index=2, Lcid=1033)]
        High = 2,
    }
    
    [DataContract()]
    public enum IncidentResolution_ResolutionTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Problem Solved", Index=0, Lcid=1033)]
        ProblemSolved = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Information Provided", Index=1, Lcid=1033)]
        InformationProvided = 1000,
    }
    
    [DataContract()]
    public enum IncidentResolution_StatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("Open", Index=1, Lcid=1033)]
        Open = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Closed", Index=2, Lcid=1033)]
        Closed = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Canceled", Index=3, Lcid=1033)]
        Canceled = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Scheduled", Index=0, Lcid=1033)]
        Scheduled = 4,
    }
    
    [DataContract()]
    public enum InvoiceState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Closed (deprecated)", Index=1, Lcid=1033)]
        Closeddeprecated = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Paid", Index=2, Lcid=1033)]
        Paid = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Canceled", Index=3, Lcid=1033)]
        Canceled = 3,
    }
    
    [DataContract()]
    public enum Invoice_PaymentTermsCode {
        
        [EnumMember()]
        [OptionSetMetadata("Net 30", Index=0, Lcid=1033)]
        Net30 = 1,
        
        [EnumMember()]
        [OptionSetMetadata("2% 10, Net 30", Index=1, Lcid=1033)]
        _210Net30 = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Net 45", Index=2, Lcid=1033)]
        Net45 = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Net 60", Index=3, Lcid=1033)]
        Net60 = 4,
    }
    
    [DataContract()]
    public enum Invoice_PriorityCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Invoice_ShipTo_FreightTermsCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Invoice_ShippingMethodCode {
        
        [EnumMember()]
        [OptionSetMetadata("Airborne", Index=0, Lcid=1033)]
        Airborne = 1,
        
        [EnumMember()]
        [OptionSetMetadata("DHL", Index=1, Lcid=1033)]
        DHL = 2,
        
        [EnumMember()]
        [OptionSetMetadata("FedEx", Index=2, Lcid=1033)]
        FedEx = 3,
        
        [EnumMember()]
        [OptionSetMetadata("UPS", Index=3, Lcid=1033)]
        UPS = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Postal Mail", Index=4, Lcid=1033)]
        PostalMail = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Full Load", Index=5, Lcid=1033)]
        FullLoad = 6,
        
        [EnumMember()]
        [OptionSetMetadata("Will Call", Index=6, Lcid=1033)]
        WillCall = 7,
    }
    
    [DataContract()]
    public enum Invoice_StatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("New", Index=0, Lcid=1033)]
        New = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Partially Shipped", Index=1, Lcid=1033)]
        PartiallyShipped = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Canceled (deprecated)", Index=5, Lcid=1033)]
        Canceleddeprecated = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Billed", Index=2, Lcid=1033)]
        Billed = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Booked (applies to services)", Index=3, Lcid=1033)]
        Bookedappliestoservices = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Installed (applies to services)", Index=4, Lcid=1033)]
        Installedappliestoservices = 6,
        
        [EnumMember()]
        [OptionSetMetadata("Paid in Full (deprecated)", Index=6, Lcid=1033)]
        PaidinFulldeprecated = 7,
        
        [EnumMember()]
        [OptionSetMetadata("Complete", Index=7, Lcid=1033)]
        Complete = 100001,
        
        [EnumMember()]
        [OptionSetMetadata("Partial", Index=8, Lcid=1033)]
        Partial = 100002,
        
        [EnumMember()]
        [OptionSetMetadata("Canceled", Index=9, Lcid=1033)]
        Canceled = 100003,
    }
    
    [DataContract()]
    public enum Invoice_msdyn_OrderType {
        
        [EnumMember()]
        [OptionSetMetadata("Item based", Index=0, Lcid=1033)]
        Itembased = 192350000,
        
        [EnumMember()]
        [OptionSetMetadata("Service-Maintenance Based", Index=1, Lcid=1033)]
        ServiceMaintenanceBased = 690970002,
    }
    
    [DataContract()]
    public enum KnowledgeArticleState {
        
        [EnumMember()]
        [OptionSetMetadata("Draft", Index=0, Lcid=1033)]
        Draft = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Approved", Index=1, Lcid=1033)]
        Approved = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Scheduled", Index=2, Lcid=1033)]
        Scheduled = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Published", Index=3, Lcid=1033)]
        Published = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Expired", Index=4, Lcid=1033)]
        Expired = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Archived", Index=5, Lcid=1033)]
        Archived = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Discarded", Index=6, Lcid=1033)]
        Discarded = 6,
    }
    
    [DataContract()]
    public enum KnowledgeArticle_ExpiredReviewOptions {
        
        [EnumMember()]
        [OptionSetMetadata("Needs Updating", Index=0, Lcid=1033)]
        NeedsUpdating = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Republish", Index=1, Lcid=1033)]
        Republish = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Archive", Index=2, Lcid=1033)]
        Archive = 2,
    }
    
    [DataContract()]
    public enum KnowledgeArticle_Review {
        
        [EnumMember()]
        [OptionSetMetadata("Approved", Index=0, Lcid=1033)]
        Approved = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Rejected", Index=1, Lcid=1033)]
        Rejected = 1,
    }
    
    [DataContract()]
    public enum KnowledgeArticle_StatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("Proposed", Index=0, Lcid=1033, Color="#3B79B7")]
        Proposed = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Draft", Index=1, Lcid=1033, Color="#D43900")]
        Draft = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Needs review", Index=2, Lcid=1033, Color="#8C24B5")]
        Needsreview = 3,
        
        [EnumMember()]
        [OptionSetMetadata("In review", Index=3, Lcid=1033, Color="#007A7C")]
        Inreview = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Approved", Index=4, Lcid=1033, Color="#358717")]
        Approved = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Scheduled", Index=5, Lcid=1033, Color="#806C00")]
        Scheduled = 6,
        
        [EnumMember()]
        [OptionSetMetadata("Published", Index=6, Lcid=1033, Color="#358717")]
        Published = 7,
        
        [EnumMember()]
        [OptionSetMetadata("Needs review", Index=7, Lcid=1033, Color="#8C24B5")]
        Needsreview_2 = 8,
        
        [EnumMember()]
        [OptionSetMetadata("Updating", Index=8, Lcid=1033, Color="#007A7C")]
        Updating = 9,
        
        [EnumMember()]
        [OptionSetMetadata("Expired", Index=9, Lcid=1033, Color="#D91E18")]
        Expired = 10,
        
        [EnumMember()]
        [OptionSetMetadata("Rejected", Index=10, Lcid=1033, Color="#D91E18")]
        Rejected = 11,
        
        [EnumMember()]
        [OptionSetMetadata("Archived", Index=11, Lcid=1033, Color="#666666")]
        Archived = 12,
        
        [EnumMember()]
        [OptionSetMetadata("Discarded", Index=12, Lcid=1033, Color="#666666")]
        Discarded = 13,
        
        [EnumMember()]
        [OptionSetMetadata("Rejected", Index=13, Lcid=1033, Color="#D91E18")]
        Rejected_2 = 14,
    }
    
    [DataContract()]
    public enum LeadState {
        
        [EnumMember()]
        [OptionSetMetadata("Open", Index=0, Lcid=1033)]
        Open = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Qualified", Index=1, Lcid=1033)]
        Qualified = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Disqualified", Index=2, Lcid=1033)]
        Disqualified = 2,
    }
    
    [DataContract()]
    public enum Lead_Address1_AddressTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Lead_Address1_ShippingMethodCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Lead_Address2_AddressTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Lead_Address2_ShippingMethodCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Lead_IndustryCode {
        
        [EnumMember()]
        [OptionSetMetadata("Accounting", Index=0, Lcid=1033)]
        Accounting = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Agriculture and Non-petrol Natural Resource Extraction", Index=1, Lcid=1033)]
        AgricultureandNonpetrolNaturalResourceExtraction = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Broadcasting Printing and Publishing", Index=2, Lcid=1033)]
        BroadcastingPrintingandPublishing = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Brokers", Index=3, Lcid=1033)]
        Brokers = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Building Supply Retail", Index=4, Lcid=1033)]
        BuildingSupplyRetail = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Business Services", Index=5, Lcid=1033)]
        BusinessServices = 6,
        
        [EnumMember()]
        [OptionSetMetadata("Consulting", Index=6, Lcid=1033)]
        Consulting = 7,
        
        [EnumMember()]
        [OptionSetMetadata("Consumer Services", Index=7, Lcid=1033)]
        ConsumerServices = 8,
        
        [EnumMember()]
        [OptionSetMetadata("Design, Direction and Creative Management", Index=8, Lcid=1033)]
        DesignDirectionandCreativeManagement = 9,
        
        [EnumMember()]
        [OptionSetMetadata("Distributors, Dispatchers and Processors", Index=9, Lcid=1033)]
        DistributorsDispatchersandProcessors = 10,
        
        [EnumMember()]
        [OptionSetMetadata("Doctor\'s Offices and Clinics", Index=10, Lcid=1033)]
        DoctorsOfficesandClinics = 11,
        
        [EnumMember()]
        [OptionSetMetadata("Durable Manufacturing", Index=11, Lcid=1033)]
        DurableManufacturing = 12,
        
        [EnumMember()]
        [OptionSetMetadata("Eating and Drinking Places", Index=12, Lcid=1033)]
        EatingandDrinkingPlaces = 13,
        
        [EnumMember()]
        [OptionSetMetadata("Entertainment Retail", Index=13, Lcid=1033)]
        EntertainmentRetail = 14,
        
        [EnumMember()]
        [OptionSetMetadata("Equipment Rental and Leasing", Index=14, Lcid=1033)]
        EquipmentRentalandLeasing = 15,
        
        [EnumMember()]
        [OptionSetMetadata("Financial", Index=15, Lcid=1033)]
        Financial = 16,
        
        [EnumMember()]
        [OptionSetMetadata("Food and Tobacco Processing", Index=16, Lcid=1033)]
        FoodandTobaccoProcessing = 17,
        
        [EnumMember()]
        [OptionSetMetadata("Inbound Capital Intensive Processing", Index=17, Lcid=1033)]
        InboundCapitalIntensiveProcessing = 18,
        
        [EnumMember()]
        [OptionSetMetadata("Inbound Repair and Services", Index=18, Lcid=1033)]
        InboundRepairandServices = 19,
        
        [EnumMember()]
        [OptionSetMetadata("Insurance", Index=19, Lcid=1033)]
        Insurance = 20,
        
        [EnumMember()]
        [OptionSetMetadata("Legal Services", Index=20, Lcid=1033)]
        LegalServices = 21,
        
        [EnumMember()]
        [OptionSetMetadata("Non-Durable Merchandise Retail", Index=21, Lcid=1033)]
        NonDurableMerchandiseRetail = 22,
        
        [EnumMember()]
        [OptionSetMetadata("Outbound Consumer Service", Index=22, Lcid=1033)]
        OutboundConsumerService = 23,
        
        [EnumMember()]
        [OptionSetMetadata("Petrochemical Extraction and Distribution", Index=23, Lcid=1033)]
        PetrochemicalExtractionandDistribution = 24,
        
        [EnumMember()]
        [OptionSetMetadata("Service Retail", Index=24, Lcid=1033)]
        ServiceRetail = 25,
        
        [EnumMember()]
        [OptionSetMetadata("SIG Affiliations", Index=25, Lcid=1033)]
        SIGAffiliations = 26,
        
        [EnumMember()]
        [OptionSetMetadata("Social Services", Index=26, Lcid=1033)]
        SocialServices = 27,
        
        [EnumMember()]
        [OptionSetMetadata("Special Outbound Trade Contractors", Index=27, Lcid=1033)]
        SpecialOutboundTradeContractors = 28,
        
        [EnumMember()]
        [OptionSetMetadata("Specialty Realty", Index=28, Lcid=1033)]
        SpecialtyRealty = 29,
        
        [EnumMember()]
        [OptionSetMetadata("Transportation", Index=29, Lcid=1033)]
        Transportation = 30,
        
        [EnumMember()]
        [OptionSetMetadata("Utility Creation and Distribution", Index=30, Lcid=1033)]
        UtilityCreationandDistribution = 31,
        
        [EnumMember()]
        [OptionSetMetadata("Vehicle Retail", Index=31, Lcid=1033)]
        VehicleRetail = 32,
        
        [EnumMember()]
        [OptionSetMetadata("Wholesale", Index=32, Lcid=1033)]
        Wholesale = 33,
    }
    
    [DataContract()]
    public enum Lead_LeadQualityCode {
        
        [EnumMember()]
        [OptionSetMetadata("Hot", Index=0, Lcid=1033)]
        Hot = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Warm", Index=1, Lcid=1033)]
        Warm = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Cold", Index=2, Lcid=1033)]
        Cold = 3,
    }
    
    [DataContract()]
    public enum Lead_LeadSourceCode {
        
        [EnumMember()]
        [OptionSetMetadata("Advertisement", Index=0, Lcid=1033)]
        Advertisement = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Employee Referral", Index=1, Lcid=1033)]
        EmployeeReferral = 2,
        
        [EnumMember()]
        [OptionSetMetadata("External Referral", Index=2, Lcid=1033)]
        ExternalReferral = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Partner", Index=3, Lcid=1033)]
        Partner = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Public Relations", Index=4, Lcid=1033)]
        PublicRelations = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Seminar", Index=5, Lcid=1033)]
        Seminar = 6,
        
        [EnumMember()]
        [OptionSetMetadata("Trade Show", Index=6, Lcid=1033)]
        TradeShow = 7,
        
        [EnumMember()]
        [OptionSetMetadata("Web", Index=7, Lcid=1033)]
        Web = 8,
        
        [EnumMember()]
        [OptionSetMetadata("Word of Mouth", Index=8, Lcid=1033)]
        WordofMouth = 9,
        
        [EnumMember()]
        [OptionSetMetadata("Other", Index=9, Lcid=1033)]
        Other = 10,
    }
    
    [DataContract()]
    public enum Lead_PreferredContactMethodCode {
        
        [EnumMember()]
        [OptionSetMetadata("Any", Index=0, Lcid=1033)]
        Any = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Email", Index=1, Lcid=1033)]
        Email = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Phone", Index=2, Lcid=1033)]
        Phone = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Fax", Index=3, Lcid=1033)]
        Fax = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Mail", Index=4, Lcid=1033)]
        Mail = 5,
    }
    
    [DataContract()]
    public enum Lead_PriorityCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Lead_SalesStageCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Lead_StatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("New", Index=0, Lcid=1033)]
        New = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Contacted", Index=1, Lcid=1033)]
        Contacted = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Qualified", Index=2, Lcid=1033)]
        Qualified = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Lost", Index=3, Lcid=1033)]
        Lost = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Cannot Contact", Index=4, Lcid=1033)]
        CannotContact = 5,
        
        [EnumMember()]
        [OptionSetMetadata("No Longer Interested", Index=5, Lcid=1033)]
        NoLongerInterested = 6,
        
        [EnumMember()]
        [OptionSetMetadata("Canceled", Index=6, Lcid=1033)]
        Canceled = 7,
    }
    
    [DataContract()]
    public enum Lead_msdyn_ordertype {
        
        [EnumMember()]
        [OptionSetMetadata("Item based", Index=0, Lcid=1033, Color="#0000ff")]
        Itembased = 192350000,
        
        [EnumMember()]
        [OptionSetMetadata("Service-Maintenance Based", Index=1, Lcid=1033, Color="#0000ff")]
        ServiceMaintenanceBased = 690970002,
    }
    
    [DataContract()]
    public enum Lead_msdyn_salesassignmentresult {
        
        [EnumMember()]
        [OptionSetMetadata("Succeeded", Index=0, Lcid=1033, Color="#0000ff")]
        Succeeded = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Failed", Index=1, Lcid=1033, Color="#000fff")]
        Failed = 1,
    }
    
    [DataContract()]
    public enum LetterState {
        
        [EnumMember()]
        [OptionSetMetadata("Open", Index=0, Lcid=1033)]
        Open = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Completed", Index=1, Lcid=1033)]
        Completed = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Canceled", Index=2, Lcid=1033)]
        Canceled = 2,
    }
    
    [DataContract()]
    public enum Letter_PriorityCode {
        
        [EnumMember()]
        [OptionSetMetadata("Low", Index=0, Lcid=1033)]
        Low = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Normal", Index=1, Lcid=1033)]
        Normal = 1,
        
        [EnumMember()]
        [OptionSetMetadata("High", Index=2, Lcid=1033)]
        High = 2,
    }
    
    [DataContract()]
    public enum Letter_StatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("Open", Index=0, Lcid=1033)]
        Open = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Draft", Index=1, Lcid=1033)]
        Draft = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Received", Index=2, Lcid=1033)]
        Received = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Sent", Index=3, Lcid=1033)]
        Sent = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Canceled", Index=4, Lcid=1033)]
        Canceled = 5,
    }
    
    [DataContract()]
    public enum ListState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum List_CreatedFromCode {
        
        [EnumMember()]
        [OptionSetMetadata("Account", Index=0, Lcid=1033)]
        Account = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Contact", Index=1, Lcid=1033)]
        Contact = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Lead", Index=2, Lcid=1033)]
        Lead = 4,
    }
    
    [DataContract()]
    public enum List_StatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum MailboxState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum Mailbox_ACTDeliveryMethod {
        
        [EnumMember()]
        [OptionSetMetadata("Microsoft Dynamics 365 for Outlook", Index=0, Lcid=1033)]
        MicrosoftDynamics365forOutlook = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Server-Side Synchronization", Index=1, Lcid=1033)]
        ServerSideSynchronization = 1,
        
        [EnumMember()]
        [OptionSetMetadata("None", Index=2, Lcid=1033)]
        None = 2,
    }
    
    [DataContract()]
    public enum Mailbox_ACTStatus {
        
        [EnumMember()]
        [OptionSetMetadata("Not Run", Index=0, Lcid=1033)]
        NotRun = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Success", Index=1, Lcid=1033)]
        Success = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Failure", Index=2, Lcid=1033)]
        Failure = 2,
    }
    
    [DataContract()]
    public enum Mailbox_EmailRouterAccessApproval {
        
        [EnumMember()]
        [OptionSetMetadata("Empty", Index=0, Lcid=1033)]
        Empty = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Approved", Index=1, Lcid=1033)]
        Approved = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Pending Approval", Index=2, Lcid=1033)]
        PendingApproval = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Rejected", Index=3, Lcid=1033)]
        Rejected = 3,
    }
    
    [DataContract()]
    public enum Mailbox_ExchangeContactsImportStatus {
        
        [EnumMember()]
        [OptionSetMetadata("NotImported", Index=0, Lcid=1033)]
        NotImported = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Imported", Index=1, Lcid=1033)]
        Imported = 1,
        
        [EnumMember()]
        [OptionSetMetadata("ImportFailed", Index=2, Lcid=1033)]
        ImportFailed = 2,
    }
    
    [DataContract()]
    public enum Mailbox_IncomingEmailDeliveryMethod {
        
        [EnumMember()]
        [OptionSetMetadata("None", Index=0, Lcid=1033)]
        None = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Microsoft Dynamics 365 for Outlook", Index=1, Lcid=1033)]
        MicrosoftDynamics365forOutlook = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Server-Side Synchronization or Email Router", Index=2, Lcid=1033)]
        ServerSideSynchronizationorEmailRouter = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Forward Mailbox", Index=3, Lcid=1033)]
        ForwardMailbox = 3,
    }
    
    [DataContract()]
    public enum Mailbox_IncomingEmailStatus {
        
        [EnumMember()]
        [OptionSetMetadata("Not Run", Index=0, Lcid=1033)]
        NotRun = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Success", Index=1, Lcid=1033)]
        Success = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Failure", Index=2, Lcid=1033)]
        Failure = 2,
    }
    
    [DataContract()]
    public enum Mailbox_MailboxStatus {
        
        [EnumMember()]
        [OptionSetMetadata("Not Run", Index=0, Lcid=1033)]
        NotRun = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Success", Index=1, Lcid=1033)]
        Success = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Failure", Index=2, Lcid=1033)]
        Failure = 2,
    }
    
    [DataContract()]
    public enum Mailbox_OfficeAppsDeploymentStatus {
        
        [EnumMember()]
        [OptionSetMetadata("NotInstalled", Index=0, Lcid=1033)]
        NotInstalled = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Installed", Index=1, Lcid=1033)]
        Installed = 1,
        
        [EnumMember()]
        [OptionSetMetadata("InstallFailed", Index=2, Lcid=1033)]
        InstallFailed = 2,
        
        [EnumMember()]
        [OptionSetMetadata("UninstallFailed", Index=3, Lcid=1033)]
        UninstallFailed = 3,
        
        [EnumMember()]
        [OptionSetMetadata("UpgradeRequired", Index=4, Lcid=1033)]
        UpgradeRequired = 4,
    }
    
    [DataContract()]
    public enum Mailbox_OutgoingEmailDeliveryMethod {
        
        [EnumMember()]
        [OptionSetMetadata("None", Index=0, Lcid=1033)]
        None = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Microsoft Dynamics 365 for Outlook", Index=1, Lcid=1033)]
        MicrosoftDynamics365forOutlook = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Server-Side Synchronization or Email Router", Index=2, Lcid=1033)]
        ServerSideSynchronizationorEmailRouter = 2,
    }
    
    [DataContract()]
    public enum Mailbox_OutgoingEmailStatus {
        
        [EnumMember()]
        [OptionSetMetadata("Not Run", Index=0, Lcid=1033)]
        NotRun = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Success", Index=1, Lcid=1033)]
        Success = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Failure", Index=2, Lcid=1033)]
        Failure = 2,
    }
    
    [DataContract()]
    public enum Mailbox_StatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum OpportunityState {
        
        [EnumMember()]
        [OptionSetMetadata("Open", Index=0, Lcid=1033)]
        Open = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Won", Index=1, Lcid=1033)]
        Won = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Lost", Index=2, Lcid=1033)]
        Lost = 2,
    }
    
    [DataContract()]
    public enum Opportunity_OpportunityRatingCode {
        
        [EnumMember()]
        [OptionSetMetadata("Hot", Index=0, Lcid=1033)]
        Hot = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Warm", Index=1, Lcid=1033)]
        Warm = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Cold", Index=2, Lcid=1033)]
        Cold = 3,
    }
    
    [DataContract()]
    public enum Opportunity_PriorityCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Opportunity_SalesStageCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Opportunity_StatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("In Progress", Index=0, Lcid=1033)]
        InProgress = 1,
        
        [EnumMember()]
        [OptionSetMetadata("On Hold", Index=1, Lcid=1033)]
        OnHold = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Won", Index=2, Lcid=1033)]
        Won = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Canceled", Index=3, Lcid=1033)]
        Canceled = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Out-Sold", Index=4, Lcid=1033)]
        OutSold = 5,
    }
    
    [DataContract()]
    public enum Opportunity_TimeLine {
        
        [EnumMember()]
        [OptionSetMetadata("Immediate", Index=0, Lcid=1033)]
        Immediate = 0,
        
        [EnumMember()]
        [OptionSetMetadata("This Quarter", Index=1, Lcid=1033)]
        ThisQuarter = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Next Quarter", Index=2, Lcid=1033)]
        NextQuarter = 2,
        
        [EnumMember()]
        [OptionSetMetadata("This Year", Index=3, Lcid=1033)]
        ThisYear = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Not known", Index=4, Lcid=1033)]
        Notknown = 4,
    }
    
    [DataContract()]
    public enum Opportunity_msdyn_OrderType {
        
        [EnumMember()]
        [OptionSetMetadata("Item based", Index=0, Lcid=1033, Color="")]
        Itembased = 192350000,
        
        [EnumMember()]
        [OptionSetMetadata("Service-Maintenance Based", Index=1, Lcid=1033, Color="")]
        ServiceMaintenanceBased = 690970002,
    }
    
    [DataContract()]
    public enum Opportunity_msdyn_forecastcategory {
        
        [EnumMember()]
        [OptionSetMetadata("Pipeline", Index=0, Lcid=1033, Color="#0000ff")]
        Pipeline = 100000001,
        
        [EnumMember()]
        [OptionSetMetadata("Best case", Index=1, Lcid=1033, Color="#0000ff")]
        Bestcase = 100000002,
        
        [EnumMember()]
        [OptionSetMetadata("Committed", Index=2, Lcid=1033, Color="#0000ff")]
        Committed = 100000003,
        
        [EnumMember()]
        [OptionSetMetadata("Omitted", Index=3, Lcid=1033, Color="#0000ff")]
        Omitted = 100000004,
        
        [EnumMember()]
        [OptionSetMetadata("Won", Index=4, Lcid=1033, Color="#0000ff")]
        Won = 100000005,
        
        [EnumMember()]
        [OptionSetMetadata("Lost", Index=5, Lcid=1033, Color="#0000ff")]
        Lost = 100000006,
    }
    
    [DataContract()]
    public enum OpportunityCloseState {
        
        [EnumMember()]
        [OptionSetMetadata("Open", Index=1, Lcid=1033)]
        Open = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Completed", Index=2, Lcid=1033)]
        Completed = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Canceled", Index=3, Lcid=1033)]
        Canceled = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Scheduled", Index=0, Lcid=1033)]
        Scheduled = 3,
    }
    
    [DataContract()]
    public enum OpportunityClose_InstanceTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Not Recurring", Index=0, Lcid=1033)]
        NotRecurring = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Recurring Master", Index=1, Lcid=1033)]
        RecurringMaster = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Recurring Instance", Index=2, Lcid=1033)]
        RecurringInstance = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Recurring Exception", Index=3, Lcid=1033)]
        RecurringException = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Recurring Future Exception", Index=4, Lcid=1033)]
        RecurringFutureException = 4,
    }
    
    [DataContract()]
    public enum OpportunityClose_OpportunityStateCode {
        
        [EnumMember()]
        [OptionSetMetadata("Open", Index=0, Lcid=1033)]
        Open = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Won", Index=1, Lcid=1033)]
        Won = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Lost", Index=2, Lcid=1033)]
        Lost = 2,
    }
    
    [DataContract()]
    public enum OpportunityClose_OpportunityStatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("In Progress", Index=0, Lcid=1033)]
        InProgress = 1,
        
        [EnumMember()]
        [OptionSetMetadata("On Hold", Index=1, Lcid=1033)]
        OnHold = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Won", Index=2, Lcid=1033)]
        Won = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Canceled", Index=3, Lcid=1033)]
        Canceled = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Out-Sold", Index=4, Lcid=1033)]
        OutSold = 5,
    }
    
    [DataContract()]
    public enum OpportunityClose_PriorityCode {
        
        [EnumMember()]
        [OptionSetMetadata("Low", Index=0, Lcid=1033)]
        Low = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Normal", Index=1, Lcid=1033)]
        Normal = 1,
        
        [EnumMember()]
        [OptionSetMetadata("High", Index=2, Lcid=1033)]
        High = 2,
    }
    
    [DataContract()]
    public enum OpportunityClose_StatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("Open", Index=1, Lcid=1033)]
        Open = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Completed", Index=2, Lcid=1033)]
        Completed = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Canceled", Index=3, Lcid=1033)]
        Canceled = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Scheduled", Index=0, Lcid=1033)]
        Scheduled = 4,
    }
    
    [DataContract()]
    public enum OpportunitySalesProcessState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum OpportunitySalesProcess_StatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Finished", Index=1, Lcid=1033)]
        Finished = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Aborted", Index=2, Lcid=1033)]
        Aborted = 3,
    }
    
    [DataContract()]
    public enum Organization_CurrencyDisplayOption {
        
        [EnumMember()]
        [OptionSetMetadata("Currency symbol", Index=0, Lcid=1033)]
        Currencysymbol = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Currency code", Index=1, Lcid=1033)]
        Currencycode = 1,
    }
    
    [DataContract()]
    public enum Organization_CurrencyFormatCode {
        
        [EnumMember()]
        [OptionSetMetadata("$123", Index=0, Lcid=1033)]
        _123 = 0,
        
        [EnumMember()]
        [OptionSetMetadata("123$", Index=1, Lcid=1033)]
        _123_2 = 1,
        
        [EnumMember()]
        [OptionSetMetadata("$ 123", Index=2, Lcid=1033)]
        _123_3 = 2,
        
        [EnumMember()]
        [OptionSetMetadata("123 $", Index=3, Lcid=1033)]
        _123_4 = 3,
    }
    
    [DataContract()]
    public enum Organization_DefaultRecurrenceEndRangeType {
        
        [EnumMember()]
        [OptionSetMetadata("No End Date", Index=0, Lcid=1033)]
        NoEndDate = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Number of Occurrences", Index=1, Lcid=1033)]
        NumberofOccurrences = 2,
        
        [EnumMember()]
        [OptionSetMetadata("End By Date", Index=2, Lcid=1033)]
        EndByDate = 3,
    }
    
    [DataContract()]
    public enum Organization_DiscountCalculationMethod {
        
        [EnumMember()]
        [OptionSetMetadata("Line item", Index=0, Lcid=1033)]
        Lineitem = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Per unit", Index=1, Lcid=1033)]
        Perunit = 1,
    }
    
    [DataContract()]
    public enum Organization_EmailConnectionChannel {
        
        [EnumMember()]
        [OptionSetMetadata("Server-Side Synchronization", Index=0, Lcid=1033)]
        ServerSideSynchronization = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Microsoft Dynamics 365 Email Router", Index=1, Lcid=1033)]
        MicrosoftDynamics365EmailRouter = 1,
    }
    
    [DataContract()]
    public enum Organization_FiscalPeriodFormatPeriod {
        
        [EnumMember()]
        [OptionSetMetadata("Quarter {0}", Index=0, Lcid=1033)]
        Quarter0 = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Q{0}", Index=1, Lcid=1033)]
        Q0 = 2,
        
        [EnumMember()]
        [OptionSetMetadata("P{0}", Index=2, Lcid=1033)]
        P0 = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Month {0}", Index=3, Lcid=1033)]
        Month0 = 4,
        
        [EnumMember()]
        [OptionSetMetadata("M{0}", Index=4, Lcid=1033)]
        M0 = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Semester {0}", Index=5, Lcid=1033)]
        Semester0 = 6,
        
        [EnumMember()]
        [OptionSetMetadata("Month Name", Index=6, Lcid=1033)]
        MonthName = 7,
    }
    
    [DataContract()]
    public enum Organization_FiscalYearFormatPrefix {
        
        [EnumMember()]
        [OptionSetMetadata("FY", Index=0, Lcid=1033)]
        FY = 1,
        
        [EnumMember()]
        [OptionSetMetadata("", Index=1, Lcid=1033)]
        _EmptyString = 2,
    }
    
    [DataContract()]
    public enum Organization_FiscalYearFormatSuffix {
        
        [EnumMember()]
        [OptionSetMetadata("FY", Index=0, Lcid=1033)]
        FY = 1,
        
        [EnumMember()]
        [OptionSetMetadata(" Fiscal Year", Index=1, Lcid=1033)]
        FiscalYear = 2,
        
        [EnumMember()]
        [OptionSetMetadata("", Index=2, Lcid=1033)]
        _EmptyString = 3,
    }
    
    [DataContract()]
    public enum Organization_FiscalYearFormatYear {
        
        [EnumMember()]
        [OptionSetMetadata("YYYY", Index=0, Lcid=1033)]
        YYYY = 1,
        
        [EnumMember()]
        [OptionSetMetadata("YY", Index=1, Lcid=1033)]
        YY = 2,
        
        [EnumMember()]
        [OptionSetMetadata("GGYY", Index=2, Lcid=1033)]
        GGYY = 3,
    }
    
    [DataContract()]
    public enum Organization_FullNameConventionCode {
        
        [EnumMember()]
        [OptionSetMetadata("Last Name, First Name", Index=0, Lcid=1033)]
        LastNameFirstName = 0,
        
        [EnumMember()]
        [OptionSetMetadata("First Name", Index=1, Lcid=1033)]
        FirstName = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Last Name, First Name, Middle Initial", Index=2, Lcid=1033)]
        LastNameFirstNameMiddleInitial = 2,
        
        [EnumMember()]
        [OptionSetMetadata("First Name, Middle Initial, Last Name", Index=3, Lcid=1033)]
        FirstNameMiddleInitialLastName = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Last Name, First Name, Middle Name", Index=4, Lcid=1033)]
        LastNameFirstNameMiddleName = 4,
        
        [EnumMember()]
        [OptionSetMetadata("First Name, Middle Name, Last Name", Index=5, Lcid=1033)]
        FirstNameMiddleNameLastName = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Last Name, space, First Name", Index=6, Lcid=1033)]
        LastNamespaceFirstName = 6,
        
        [EnumMember()]
        [OptionSetMetadata("Last Name, no space, First Name", Index=7, Lcid=1033)]
        LastNamenospaceFirstName = 7,
    }
    
    [DataContract()]
    public enum Organization_ISVIntegrationCode {
        
        [EnumMember()]
        [OptionSetMetadata("None", Index=0, Lcid=1033)]
        None = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Web", Index=1, Lcid=1033)]
        Web = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Outlook Workstation Client", Index=2, Lcid=1033)]
        OutlookWorkstationClient = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Web; Outlook Workstation Client", Index=3, Lcid=1033)]
        WebOutlookWorkstationClient = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Outlook Laptop Client", Index=4, Lcid=1033)]
        OutlookLaptopClient = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Web; Outlook Laptop Client", Index=5, Lcid=1033)]
        WebOutlookLaptopClient = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Outlook", Index=6, Lcid=1033)]
        Outlook = 6,
        
        [EnumMember()]
        [OptionSetMetadata("All", Index=7, Lcid=1033)]
        All = 7,
    }
    
    [DataContract()]
    public enum Organization_NegativeFormatCode {
        
        [EnumMember()]
        [OptionSetMetadata("Brackets", Index=0, Lcid=1033)]
        Brackets = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Dash", Index=1, Lcid=1033)]
        Dash = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Dash plus Space", Index=2, Lcid=1033)]
        DashplusSpace = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Trailing Dash", Index=3, Lcid=1033)]
        TrailingDash = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Space plus Trailing Dash", Index=4, Lcid=1033)]
        SpaceplusTrailingDash = 4,
    }
    
    [DataContract()]
    public enum Organization_OrganizationState {
        
        [EnumMember()]
        [OptionSetMetadata("Creating", Index=0, Lcid=1033)]
        Creating = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Upgrading", Index=1, Lcid=1033)]
        Upgrading = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Updating", Index=2, Lcid=1033)]
        Updating = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=3, Lcid=1033)]
        Active = 3,
    }
    
    [DataContract()]
    public enum Organization_PluginTraceLogSetting {
        
        [EnumMember()]
        [OptionSetMetadata("Off", Index=0, Lcid=1033)]
        Off = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Exception", Index=1, Lcid=1033)]
        Exception = 1,
        
        [EnumMember()]
        [OptionSetMetadata("All", Index=2, Lcid=1033)]
        All = 2,
    }
    
    [DataContract()]
    public enum Organization_ReportScriptErrors {
        
        [EnumMember()]
        [OptionSetMetadata("No preference for sending an error report to Microsoft about Microsoft Dynamics 3" +
            "65", Index=0, Lcid=1033)]
        NopreferenceforsendinganerrorreporttoMicrosoftaboutMicrosoftDynamics365 = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Ask me for permission to send an error report to Microsoft", Index=1, Lcid=1033)]
        AskmeforpermissiontosendanerrorreporttoMicrosoft = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Automatically send an error report to Microsoft without asking me for permission", Index=2, Lcid=1033)]
        AutomaticallysendanerrorreporttoMicrosoftwithoutaskingmeforpermission = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Never send an error report to Microsoft about Microsoft Dynamics 365", Index=3, Lcid=1033)]
        NeversendanerrorreporttoMicrosoftaboutMicrosoftDynamics365 = 3,
    }
    
    [DataContract()]
    public enum Organization_SchedulingEngine {
        
        [EnumMember()]
        [OptionSetMetadata("(Default) Scheduling Engine", Index=0, Lcid=1033)]
        DefaultSchedulingEngine = 0,
        
        [EnumMember()]
        [OptionSetMetadata("(Deprecated) Universal Resource Scheduling", Index=1, Lcid=1033)]
        DeprecatedUniversalResourceScheduling = 192350000,
    }
    
    [DataContract()]
    public enum Organization_SharePointDeploymentType {
        
        [EnumMember()]
        [OptionSetMetadata("Online", Index=0, Lcid=1033)]
        Online = 0,
        
        [EnumMember()]
        [OptionSetMetadata("On-Premises", Index=1, Lcid=1033)]
        OnPremises = 1,
    }
    
    [DataContract()]
    public enum Organization_SyncOptInSelectionStatus {
        
        [EnumMember()]
        [OptionSetMetadata("Processing", Index=0, Lcid=1033)]
        Processing = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Passed", Index=1, Lcid=1033)]
        Passed = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Failed", Index=2, Lcid=1033)]
        Failed = 3,
    }
    
    [DataContract()]
    public enum Organization_YammerPostMethod {
        
        [EnumMember()]
        [OptionSetMetadata("Public", Index=0, Lcid=1033)]
        Public = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Private", Index=1, Lcid=1033)]
        Private = 1,
    }
    
    [DataContract()]
    public enum PhoneCallState {
        
        [EnumMember()]
        [OptionSetMetadata("Open", Index=0, Lcid=1033)]
        Open = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Completed", Index=1, Lcid=1033)]
        Completed = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Canceled", Index=2, Lcid=1033)]
        Canceled = 2,
    }
    
    [DataContract()]
    public enum PhoneCall_PriorityCode {
        
        [EnumMember()]
        [OptionSetMetadata("Low", Index=0, Lcid=1033)]
        Low = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Normal", Index=1, Lcid=1033)]
        Normal = 1,
        
        [EnumMember()]
        [OptionSetMetadata("High", Index=2, Lcid=1033)]
        High = 2,
    }
    
    [DataContract()]
    public enum PhoneCall_StatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("Open", Index=0, Lcid=1033, Color="#3b79b7")]
        Open = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Made", Index=1, Lcid=1033, Color="#358717")]
        Made = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Canceled", Index=2, Lcid=1033, Color="#666666")]
        Canceled = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Received", Index=3, Lcid=1033, Color="#358717")]
        Received = 4,
    }
    
    [DataContract()]
    public enum QueueItemState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum QueueItem_ObjectTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Case", Index=9, Lcid=1033, Description="Service request case associated with a contract.")]
        Case = 112,
        
        [EnumMember()]
        [OptionSetMetadata("Activity", Index=19, Lcid=1033, Description="Task performed, or to be performed, by a user. An activity is any action for whic" +
            "h an entry can be made on a calendar.")]
        Activity = 4200,
        
        [EnumMember()]
        [OptionSetMetadata("Appointment", Index=23, Lcid=1033, Description="Commitment representing a time interval with start/end times and duration.")]
        Appointment = 4201,
        
        [EnumMember()]
        [OptionSetMetadata("Email", Index=33, Lcid=1033, Description="Activity that is delivered using email protocols.")]
        Email = 4202,
        
        [EnumMember()]
        [OptionSetMetadata("Fax", Index=24, Lcid=1033, Description="Activity that tracks call outcome and number of pages for a fax and optionally st" +
            "ores an electronic copy of the document.")]
        Fax = 4204,
        
        [EnumMember()]
        [OptionSetMetadata("Letter", Index=22, Lcid=1033, Description="Activity that tracks the delivery of a letter. The activity can contain the elect" +
            "ronic copy of the letter.")]
        Letter = 4207,
        
        [EnumMember()]
        [OptionSetMetadata("Phone Call", Index=21, Lcid=1033, Description="Activity to track a telephone call.")]
        PhoneCall = 4210,
        
        [EnumMember()]
        [OptionSetMetadata("Task", Index=20, Lcid=1033, Description="Generic activity representing work needed to be done.")]
        Task = 4212,
        
        [EnumMember()]
        [OptionSetMetadata("Service Activity", Index=10, Lcid=1033, Description="Activity offered by the organization to satisfy its customer\'s needs. Each servic" +
            "e activity includes date, time, duration, and required resources.")]
        ServiceActivity = 4214,
        
        [EnumMember()]
        [OptionSetMetadata("Social Activity", Index=26, Lcid=1033, Description="For internal use only.")]
        SocialActivity = 4216,
        
        [EnumMember()]
        [OptionSetMetadata("Recurring Appointment", Index=18, Lcid=1033, Description="The Master appointment of a recurring appointment series.")]
        RecurringAppointment = 4251,
        
        [EnumMember()]
        [OptionSetMetadata("Campaign Response", Index=13, Lcid=1033, Description="Response from an existing or a potential new customer for a campaign.")]
        CampaignResponse = 4401,
        
        [EnumMember()]
        [OptionSetMetadata("Campaign Activity", Index=16, Lcid=1033, Description="Task performed, or to be performed, by a user for planning or running a campaign." +
            "")]
        CampaignActivity = 4402,
        
        [EnumMember()]
        [OptionSetMetadata("Quick Campaign", Index=17, Lcid=1033, Description="System operation used to perform lengthy and asynchronous operations on large dat" +
            "a sets, such as distributing a campaign activity or quick campaign.")]
        QuickCampaign = 4406,
        
        [EnumMember()]
        [OptionSetMetadata("Knowledge Article", Index=25, Lcid=1033, Description="Organizational knowledge for internal and external use.")]
        KnowledgeArticle = 9953,
        
        [EnumMember()]
        [OptionSetMetadata("Customer Voice survey invite", Index=15, Lcid=1033, Description="Activity that tracks a survey invitation sent to a person.")]
        CustomerVoicesurveyinvite = 10086,
        
        [EnumMember()]
        [OptionSetMetadata("Customer Voice survey response", Index=2, Lcid=1033, Description="Response to a survey.")]
        CustomerVoicesurveyresponse = 10087,
        
        [EnumMember()]
        [OptionSetMetadata("inMail", Index=28, Lcid=1033, Description="Custom Activity entity to store LinkedIn inMail records.")]
        inMail = 10145,
        
        [EnumMember()]
        [OptionSetMetadata("Message", Index=4, Lcid=1033, Description="Custom Activity entity to store LinkedIn Message records.")]
        Message = 10146,
        
        [EnumMember()]
        [OptionSetMetadata("Smart Links Content Viewed", Index=3, Lcid=1033, Description="Custom Activity entity to store Smart Links Content Viewed records.")]
        SmartLinksContentViewed = 10147,
        
        [EnumMember()]
        [OptionSetMetadata("Booking Alert", Index=14, Lcid=1033, Description="Alerts that notify schedule board users of booking issues or information.")]
        BookingAlert = 10164,
        
        [EnumMember()]
        [OptionSetMetadata("Fulfillment Preference", Index=0, Lcid=1033, Description="Specify time groups consisting of multiple time windows to be used for scheduling" +
            ", for example.")]
        FulfillmentPreference = 10187,
        
        [EnumMember()]
        [OptionSetMetadata("Time Group Detail", Index=35, Lcid=1033, Description="Specify individual time windows under a time group.")]
        TimeGroupDetail = 10188,
        
        [EnumMember()]
        [OptionSetMetadata("Agreement Booking Date", Index=1, Lcid=1033, Description="Specify the maintenance booking dates for the agreement.")]
        AgreementBookingDate = 10192,
        
        [EnumMember()]
        [OptionSetMetadata("Agreement Booking Setup", Index=32, Lcid=1033, Description="Specify the maintenance bookings for the agreement.")]
        AgreementBookingSetup = 10197,
        
        [EnumMember()]
        [OptionSetMetadata("Agreement Invoice Date", Index=29, Lcid=1033, Description="Specify the invoice dates for the agreement.")]
        AgreementInvoiceDate = 10198,
        
        [EnumMember()]
        [OptionSetMetadata("Agreement Invoice Setup", Index=7, Lcid=1033, Description="Specify the invoices for this agreement.")]
        AgreementInvoiceSetup = 10200,
        
        [EnumMember()]
        [OptionSetMetadata("Inventory Adjustment", Index=27, Lcid=1033, Description="Records inventory adjustments")]
        InventoryAdjustment = 10222,
        
        [EnumMember()]
        [OptionSetMetadata("Inventory Transfer", Index=30, Lcid=1033, Description="Records inventory adjustments")]
        InventoryTransfer = 10225,
        
        [EnumMember()]
        [OptionSetMetadata("Work Order", Index=6, Lcid=1033, Description="Work orders store all information about the job performed for an account. Stores " +
            "incident details, resource, expenses, tasks, communications, billing and more")]
        WorkOrder = 10265,
        
        [EnumMember()]
        [OptionSetMetadata("Work Order Incident", Index=31, Lcid=1033, Description="Specify work order incidents reported to you by the client. These are also referr" +
            "ed to as problem codes.")]
        WorkOrderIncident = 10268,
        
        [EnumMember()]
        [OptionSetMetadata("Work Order Service", Index=34, Lcid=1033, Description="Record all services proposed and performed for work order")]
        WorkOrderService = 10271,
        
        [EnumMember()]
        [OptionSetMetadata("Work Order Service Task", Index=8, Lcid=1033, Description="Store service tasks that are to be performed for this work order")]
        WorkOrderServiceTask = 10272,
        
        [EnumMember()]
        [OptionSetMetadata("IoT Alert", Index=5, Lcid=1033, Description="")]
        IoTAlert = 10276,
        
        [EnumMember()]
        [OptionSetMetadata("Knowledge Article Template", Index=12, Lcid=1033, Description="Organizational Knowledge Article Template for Internal and external creation of K" +
            "nowledge Articles.")]
        KnowledgeArticleTemplate = 10309,
        
        [EnumMember()]
        [OptionSetMetadata("Customer Voice alert", Index=11, Lcid=1033, Description="")]
        CustomerVoicealert = 10416,
    }
    
    [DataContract()]
    public enum QueueItem_StatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=1, Lcid=1033)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=0, Lcid=1033)]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum QuoteState {
        
        [EnumMember()]
        [OptionSetMetadata("Draft", Index=0, Lcid=1033)]
        Draft = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=1, Lcid=1033)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Won", Index=2, Lcid=1033)]
        Won = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Closed", Index=3, Lcid=1033)]
        Closed = 3,
    }
    
    [DataContract()]
    public enum Quote_FreightTermsCode {
        
        [EnumMember()]
        [OptionSetMetadata("FOB", Index=0, Lcid=1033)]
        FOB = 1,
        
        [EnumMember()]
        [OptionSetMetadata("No Charge", Index=1, Lcid=1033)]
        NoCharge = 2,
    }
    
    [DataContract()]
    public enum Quote_PaymentTermsCode {
        
        [EnumMember()]
        [OptionSetMetadata("Net 30", Index=0, Lcid=1033)]
        Net30 = 1,
        
        [EnumMember()]
        [OptionSetMetadata("2% 10, Net 30", Index=1, Lcid=1033)]
        _210Net30 = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Net 45", Index=2, Lcid=1033)]
        Net45 = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Net 60", Index=3, Lcid=1033)]
        Net60 = 4,
    }
    
    [DataContract()]
    public enum Quote_ShipTo_FreightTermsCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Quote_ShippingMethodCode {
        
        [EnumMember()]
        [OptionSetMetadata("Airborne", Index=0, Lcid=1033)]
        Airborne = 1,
        
        [EnumMember()]
        [OptionSetMetadata("DHL", Index=1, Lcid=1033)]
        DHL = 2,
        
        [EnumMember()]
        [OptionSetMetadata("FedEx", Index=2, Lcid=1033)]
        FedEx = 3,
        
        [EnumMember()]
        [OptionSetMetadata("UPS", Index=3, Lcid=1033)]
        UPS = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Postal Mail", Index=4, Lcid=1033)]
        PostalMail = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Full Load", Index=5, Lcid=1033)]
        FullLoad = 6,
        
        [EnumMember()]
        [OptionSetMetadata("Will Call", Index=6, Lcid=1033)]
        WillCall = 7,
    }
    
    [DataContract()]
    public enum Quote_StatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("In Progress", Index=6, Lcid=1033)]
        InProgress_2 = 1,
        
        [EnumMember()]
        [OptionSetMetadata("In Progress", Index=0, Lcid=1033)]
        InProgress = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Open", Index=1, Lcid=1033)]
        Open = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Won", Index=2, Lcid=1033)]
        Won = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Lost", Index=3, Lcid=1033)]
        Lost = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Canceled", Index=4, Lcid=1033)]
        Canceled = 6,
        
        [EnumMember()]
        [OptionSetMetadata("Revised", Index=5, Lcid=1033)]
        Revised = 7,
    }
    
    [DataContract()]
    public enum Quote_msdyn_OrderType {
        
        [EnumMember()]
        [OptionSetMetadata("Item based", Index=0, Lcid=1033, Color="")]
        Itembased = 192350000,
        
        [EnumMember()]
        [OptionSetMetadata("Service-Maintenance Based", Index=1, Lcid=1033, Color="")]
        ServiceMaintenanceBased = 690970002,
    }
    
    [DataContract()]
    public enum RatingModelState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum RatingModel_StatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum RatingValueState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum RatingValue_StatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum RecurringAppointmentMasterState {
        
        [EnumMember()]
        [OptionSetMetadata("Open", Index=0, Lcid=1033)]
        Open = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Completed", Index=1, Lcid=1033)]
        Completed = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Canceled", Index=2, Lcid=1033)]
        Canceled = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Scheduled", Index=3, Lcid=1033)]
        Scheduled = 3,
    }
    
    [DataContract()]
    public enum RecurringAppointmentMaster_ExpansionStateCode {
        
        [EnumMember()]
        [OptionSetMetadata("Unexpanded", Index=0, Lcid=1033)]
        Unexpanded = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Partial", Index=1, Lcid=1033)]
        Partial = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Full", Index=2, Lcid=1033)]
        Full = 2,
    }
    
    [DataContract()]
    public enum RecurringAppointmentMaster_Instance {
        
        [EnumMember()]
        [OptionSetMetadata("First", Index=0, Lcid=1033)]
        First = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Second", Index=1, Lcid=1033)]
        Second = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Third", Index=2, Lcid=1033)]
        Third = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Fourth", Index=3, Lcid=1033)]
        Fourth = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Last", Index=4, Lcid=1033)]
        Last = 5,
    }
    
    [DataContract()]
    public enum RecurringAppointmentMaster_InstanceTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Not Recurring", Index=0, Lcid=1033)]
        NotRecurring = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Recurring Master", Index=1, Lcid=1033)]
        RecurringMaster = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Recurring Instance", Index=2, Lcid=1033)]
        RecurringInstance = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Recurring Exception", Index=3, Lcid=1033)]
        RecurringException = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Recurring Future Exception", Index=4, Lcid=1033)]
        RecurringFutureException = 4,
    }
    
    [DataContract()]
    public enum RecurringAppointmentMaster_PatternEndType {
        
        [EnumMember()]
        [OptionSetMetadata("No End Date", Index=0, Lcid=1033)]
        NoEndDate = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Occurrences", Index=1, Lcid=1033)]
        Occurrences = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Pattern End Date", Index=2, Lcid=1033)]
        PatternEndDate = 3,
    }
    
    [DataContract()]
    public enum RecurringAppointmentMaster_PriorityCode {
        
        [EnumMember()]
        [OptionSetMetadata("Low", Index=0, Lcid=1033)]
        Low = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Normal", Index=1, Lcid=1033)]
        Normal = 1,
        
        [EnumMember()]
        [OptionSetMetadata("High", Index=2, Lcid=1033)]
        High = 2,
    }
    
    [DataContract()]
    public enum RecurringAppointmentMaster_RecurrencePatternType {
        
        [EnumMember()]
        [OptionSetMetadata("Daily", Index=0, Lcid=1033)]
        Daily = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Weekly", Index=1, Lcid=1033)]
        Weekly = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Monthly", Index=2, Lcid=1033)]
        Monthly = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Yearly", Index=3, Lcid=1033)]
        Yearly = 3,
    }
    
    [DataContract()]
    public enum RecurringAppointmentMaster_StatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("Free", Index=0, Lcid=1033)]
        Free = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Tentative", Index=1, Lcid=1033)]
        Tentative = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Completed", Index=2, Lcid=1033)]
        Completed = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Canceled", Index=3, Lcid=1033)]
        Canceled = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Busy", Index=4, Lcid=1033)]
        Busy = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Out of Office", Index=5, Lcid=1033)]
        OutofOffice = 6,
    }
    
    [DataContract()]
    public enum SLAState {
        
        [EnumMember()]
        [OptionSetMetadata("Draft", Index=0, Lcid=1033)]
        Draft = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=1, Lcid=1033)]
        Active = 1,
    }
    
    [DataContract()]
    public enum SLA_ApplicableFromPickList {
        
        [EnumMember()]
        [OptionSetMetadata("No", Index=0, Lcid=1033)]
        No = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Yes", Index=1, Lcid=1033)]
        Yes = 2,
    }
    
    [DataContract()]
    public enum SLA_ObjectTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Account", Index=589, Lcid=1033, Description="Business that represents a customer or potential customer. The company that is bi" +
            "lled in business transactions.")]
        Account = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Contact", Index=627, Lcid=1033, Description="Person with whom a business unit has a relationship, such as customer, supplier, " +
            "and colleague.")]
        Contact = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Opportunity", Index=69, Lcid=1033, Description="Potential revenue-generating event, or sale to an account, which needs to be trac" +
            "ked through a sales process to completion.")]
        Opportunity = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Lead", Index=782, Lcid=1033, Description="Prospect or potential sales opportunity. Leads are converted into accounts, conta" +
            "cts, or opportunities when they are qualified. Otherwise, they are deleted or ar" +
            "chived.")]
        Lead = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Note", Index=593, Lcid=1033, Description="Note that is attached to one or more objects, including other notes.")]
        Note = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Business Unit Map", Index=636, Lcid=1033, Description="Stores mapping attributes for business units.")]
        BusinessUnitMap = 6,
        
        [EnumMember()]
        [OptionSetMetadata("Owner", Index=364, Lcid=1033, Description="Group of undeleted system users and undeleted teams. Owners can be used to contro" +
            "l access to specific objects.")]
        Owner = 7,
        
        [EnumMember()]
        [OptionSetMetadata("User", Index=239, Lcid=1033, Description="Person with access to the Microsoft CRM system and who owns objects in the Micros" +
            "oft CRM database.")]
        User = 8,
        
        [EnumMember()]
        [OptionSetMetadata("Team", Index=315, Lcid=1033, Description="Collection of system users that routinely collaborate. Teams can be used to simpl" +
            "ify record sharing and provide team members with common access to organization d" +
            "ata when team members belong to different Business Units.")]
        Team = 9,
        
        [EnumMember()]
        [OptionSetMetadata("Business Unit", Index=637, Lcid=1033, Description="Business, division, or department in the Microsoft Dynamics 365 database.")]
        BusinessUnit = 10,
        
        [EnumMember()]
        [OptionSetMetadata("System User Principal", Index=311, Lcid=1033, Description="For internal use only.")]
        SystemUserPrincipal = 14,
        
        [EnumMember()]
        [OptionSetMetadata("AccountLeads", Index=588, Lcid=1033, Description="description.")]
        AccountLeads = 16,
        
        [EnumMember()]
        [OptionSetMetadata("ContactInvoices", Index=623, Lcid=1033)]
        ContactInvoices = 17,
        
        [EnumMember()]
        [OptionSetMetadata("ContactQuotes", Index=626, Lcid=1033)]
        ContactQuotes = 18,
        
        [EnumMember()]
        [OptionSetMetadata("ContactOrders", Index=621, Lcid=1033)]
        ContactOrders = 19,
        
        [EnumMember()]
        [OptionSetMetadata("Service Contract Contact", Index=250, Lcid=1033, Description="Item in a Service contract.")]
        ServiceContractContact = 20,
        
        [EnumMember()]
        [OptionSetMetadata("ProductSalesLiterature", Index=352, Lcid=1033)]
        ProductSalesLiterature = 21,
        
        [EnumMember()]
        [OptionSetMetadata("ContactLeads", Index=622, Lcid=1033)]
        ContactLeads = 22,
        
        [EnumMember()]
        [OptionSetMetadata("LeadCompetitors", Index=780, Lcid=1033)]
        LeadCompetitors = 24,
        
        [EnumMember()]
        [OptionSetMetadata("OpportunityCompetitors", Index=73, Lcid=1033)]
        OpportunityCompetitors = 25,
        
        [EnumMember()]
        [OptionSetMetadata("CompetitorSalesLiterature", Index=610, Lcid=1033)]
        CompetitorSalesLiterature = 26,
        
        [EnumMember()]
        [OptionSetMetadata("LeadProduct", Index=785, Lcid=1033)]
        LeadProduct = 27,
        
        [EnumMember()]
        [OptionSetMetadata("Subscription", Index=226, Lcid=1033, Description="For internal use only.")]
        Subscription = 29,
        
        [EnumMember()]
        [OptionSetMetadata("Filter Template", Index=500, Lcid=1033, Description="Template for a filter.")]
        FilterTemplate = 30,
        
        [EnumMember()]
        [OptionSetMetadata("Privilege Object Type Code", Index=332, Lcid=1033, Description="For internal use only.")]
        PrivilegeObjectTypeCode = 31,
        
        [EnumMember()]
        [OptionSetMetadata("Sales Process Instance", Index=412, Lcid=1033, Description="Instance of a sales process.")]
        SalesProcessInstance = 32,
        
        [EnumMember()]
        [OptionSetMetadata("Subscription Synchronization Information", Index=247, Lcid=1033, Description="For internal use only.")]
        SubscriptionSynchronizationInformation = 33,
        
        [EnumMember()]
        [OptionSetMetadata("Tracking information for deleted entities", Index=246, Lcid=1033, Description="For internal use only.")]
        Trackinginformationfordeletedentities = 35,
        
        [EnumMember()]
        [OptionSetMetadata("Client update", Index=617, Lcid=1033, Description="Microsoft Dynamics 365 client for Outlook offline database update.")]
        Clientupdate = 36,
        
        [EnumMember()]
        [OptionSetMetadata("Subscription Manually Tracked Object", Index=224, Lcid=1033, Description="For internal use only.")]
        SubscriptionManuallyTrackedObject = 37,
        
        [EnumMember()]
        [OptionSetMetadata("SystemUser BusinessUnit Entity Map", Index=313, Lcid=1033, Description="Stores mapping attributes for business units.")]
        SystemUserBusinessUnitEntityMap = 42,
        
        [EnumMember()]
        [OptionSetMetadata("Field Sharing", Index=341, Lcid=1033, Description="Defines CRM security principals (users and teams) access rights to secured field " +
            "for an entity instance.")]
        FieldSharing = 44,
        
        [EnumMember()]
        [OptionSetMetadata("Subscription Statistic Offline", Index=234, Lcid=1033, Description="Subscription Statistic Offline")]
        SubscriptionStatisticOffline = 45,
        
        [EnumMember()]
        [OptionSetMetadata("Subscription Statistic Outlook", Index=244, Lcid=1033, Description="Subscription Statistic Outlook")]
        SubscriptionStatisticOutlook = 46,
        
        [EnumMember()]
        [OptionSetMetadata("Subscription Sync Entry Offline", Index=243, Lcid=1033, Description="Used for offline sync, internal use only.")]
        SubscriptionSyncEntryOffline = 47,
        
        [EnumMember()]
        [OptionSetMetadata("Subscription Sync Entry Outlook", Index=242, Lcid=1033, Description="Used for outlook sync, internal use only.")]
        SubscriptionSyncEntryOutlook = 48,
        
        [EnumMember()]
        [OptionSetMetadata("Position", Index=378, Lcid=1033, Description="Position of a user in the hierarchy")]
        Position = 50,
        
        [EnumMember()]
        [OptionSetMetadata("System User Manager Map", Index=312, Lcid=1033, Description="For internal use only.")]
        SystemUserManagerMap = 51,
        
        [EnumMember()]
        [OptionSetMetadata("User Search Facet", Index=299, Lcid=1033)]
        UserSearchFacet = 52,
        
        [EnumMember()]
        [OptionSetMetadata("Global Search Configuration", Index=523, Lcid=1033)]
        GlobalSearchConfiguration = 54,
        
        [EnumMember()]
        [OptionSetMetadata("FileAttachment", Index=501, Lcid=1033, Description="File Attachment")]
        FileAttachment = 55,
        
        [EnumMember()]
        [OptionSetMetadata("SystemUserAuthorizationChangeTracker", Index=238, Lcid=1033, Description="Internal authorization table to track user authorization changes")]
        SystemUserAuthorizationChangeTracker = 60,
        
        [EnumMember()]
        [OptionSetMetadata("Virtual Entity Data Provider", Index=550, Lcid=1033, Description="Developers can register plug-ins on a data provider to enable data access for vir" +
            "tual entities in the system.")]
        VirtualEntityDataProvider = 78,
        
        [EnumMember()]
        [OptionSetMetadata("Virtual Entity Data Source", Index=549, Lcid=1033, Description="Internal entity that stores data source information for all installed providers.")]
        VirtualEntityDataSource = 85,
        
        [EnumMember()]
        [OptionSetMetadata("Team template", Index=305, Lcid=1033, Description="Team template for an entity enabled for automatically created access teams.")]
        Teamtemplate = 92,
        
        [EnumMember()]
        [OptionSetMetadata("Social Profile", Index=267, Lcid=1033, Description="This entity is used to store social profile information of its associated account" +
            " and contacts on different social channels.")]
        SocialProfile = 99,
        
        [EnumMember()]
        [OptionSetMetadata("Service Plan", Index=254, Lcid=1033, Description="Service Plan")]
        ServicePlan = 101,
        
        [EnumMember()]
        [OptionSetMetadata("Case", Index=813, Lcid=1033, Description="Service request case associated with a contract.")]
        Case = 112,
        
        [EnumMember()]
        [OptionSetMetadata("Child Incident Count", Index=618, Lcid=1033, Description="For internal use only.")]
        ChildIncidentCount = 113,
        
        [EnumMember()]
        [OptionSetMetadata("Competitor", Index=607, Lcid=1033, Description="Business competing for the sale represented by a lead or opportunity.")]
        Competitor = 123,
        
        [EnumMember()]
        [OptionSetMetadata("Indexed Article", Index=458, Lcid=1033, Description="Article indexed for search purposes.")]
        IndexedArticle = 126,
        
        [EnumMember()]
        [OptionSetMetadata("Article", Index=822, Lcid=1033, Description="Structured content that is part of the knowledge base.")]
        Article = 127,
        
        [EnumMember()]
        [OptionSetMetadata("Subject", Index=221, Lcid=1033, Description="Information regarding subjects available in the system.")]
        Subject = 129,
        
        [EnumMember()]
        [OptionSetMetadata("Announcement", Index=635, Lcid=1033, Description="Announcement associated with an organization.")]
        Announcement = 132,
        
        [EnumMember()]
        [OptionSetMetadata("Activity Party", Index=580, Lcid=1033, Description="Person or group associated with an activity. An activity can have multiple activi" +
            "ty parties.")]
        ActivityParty = 135,
        
        [EnumMember()]
        [OptionSetMetadata("User Settings", Index=298, Lcid=1033, Description="User\'s preferred settings.")]
        UserSettings = 150,
        
        [EnumMember()]
        [OptionSetMetadata("Canvas App", Index=660, Lcid=1033, Description="An application built through a canvas-based editing experience.")]
        CanvasApp = 300,
        
        [EnumMember()]
        [OptionSetMetadata("Callback Registration", Index=638, Lcid=1033, Description="Callback Registration that stores configuration.")]
        CallbackRegistration = 301,
        
        [EnumMember()]
        [OptionSetMetadata("Connector", Index=675, Lcid=1033, Description="Connector Entity to support Solutioning Integration")]
        Connector_2 = 371,
        
        [EnumMember()]
        [OptionSetMetadata("Connector", Index=632, Lcid=1033, Description="Connector Entity to support Solutioning Integration")]
        Connector = 372,
        
        [EnumMember()]
        [OptionSetMetadata("Environment Variable Definition", Index=543, Lcid=1033, Description="Contains information about the settable variable: its type, default value, and et" +
            "c.")]
        EnvironmentVariableDefinition = 380,
        
        [EnumMember()]
        [OptionSetMetadata("Environment Variable Value", Index=542, Lcid=1033, Description="Holds the value for the associated EnvironmentVariableDefinition entity.")]
        EnvironmentVariableValue = 381,
        
        [EnumMember()]
        [OptionSetMetadata("AI Template", Index=828, Lcid=1033, Description="")]
        AITemplate = 400,
        
        [EnumMember()]
        [OptionSetMetadata("AI Model", Index=839, Lcid=1033, Description="")]
        AIModel = 401,
        
        [EnumMember()]
        [OptionSetMetadata("AI Configuration", Index=836, Lcid=1033, Description="")]
        AIConfiguration = 402,
        
        [EnumMember()]
        [OptionSetMetadata("Dataflow", Index=688, Lcid=1033, Description="")]
        Dataflow = 418,
        
        [EnumMember()]
        [OptionSetMetadata("Entity Analytics Config", Index=551, Lcid=1033, Description="This entity contains information about which entities are enabled for Azure Data " +
            "Lake Services integration")]
        EntityAnalyticsConfig = 430,
        
        [EnumMember()]
        [OptionSetMetadata("Image Attribute Configuration", Index=557, Lcid=1033, Description="Store configuration for each image attribute")]
        ImageAttributeConfiguration = 431,
        
        [EnumMember()]
        [OptionSetMetadata("Entity Image Configuration", Index=545, Lcid=1033, Description="Store image configuration for each entity")]
        EntityImageConfiguration = 432,
        
        [EnumMember()]
        [OptionSetMetadata("New Process", Index=80, Lcid=1033, Description="New Process Business Process Flow")]
        NewProcess = 950,
        
        [EnumMember()]
        [OptionSetMetadata("Translation Process", Index=285, Lcid=1033, Description="Translation Process Business Process Flow")]
        TranslationProcess = 951,
        
        [EnumMember()]
        [OptionSetMetadata("Phone To Case Process", Index=385, Lcid=1033, Description="Phone To Case Process Business Process Flow")]
        PhoneToCaseProcess = 952,
        
        [EnumMember()]
        [OptionSetMetadata("Opportunity Sales Process", Index=220, Lcid=1033, Description="Opportunity Sales Process Business Process Flow ")]
        OpportunitySalesProcess = 953,
        
        [EnumMember()]
        [OptionSetMetadata("Lead To Opportunity Sales Process", Index=784, Lcid=1033, Description="Lead To Opportunity Sales Process Business Process Flow ")]
        LeadToOpportunitySalesProcess = 954,
        
        [EnumMember()]
        [OptionSetMetadata("Expired Process", Index=504, Lcid=1033, Description="Expired Process Business Process Flow")]
        ExpiredProcess = 955,
        
        [EnumMember()]
        [OptionSetMetadata("Attachment", Index=582, Lcid=1033, Description="MIME attachment for an activity.")]
        Attachment_2 = 1001,
        
        [EnumMember()]
        [OptionSetMetadata("Attachment", Index=553, Lcid=1033, Description="Attachment for an email activity.")]
        Attachment = 1002,
        
        [EnumMember()]
        [OptionSetMetadata("Internal Address", Index=801, Lcid=1033, Description="Storage of addresses for a user, business unit, or site.")]
        InternalAddress = 1003,
        
        [EnumMember()]
        [OptionSetMetadata("Competitor Address", Index=612, Lcid=1033, Description="Additional addresses for a competitor. The first two addresses are stored in the " +
            "competitor object.")]
        CompetitorAddress = 1004,
        
        [EnumMember()]
        [OptionSetMetadata("Competitor Product", Index=611, Lcid=1033, Description="Association between a competitor and a product offered by the competitor.")]
        CompetitorProduct = 1006,
        
        [EnumMember()]
        [OptionSetMetadata("Image Descriptor", Index=511, Lcid=1033, Description="For internal use only.")]
        ImageDescriptor = 1007,
        
        [EnumMember()]
        [OptionSetMetadata("Contract", Index=625, Lcid=1033, Description="Agreement to provide customer service during a specified amount of time or number" +
            " of cases.")]
        Contract = 1010,
        
        [EnumMember()]
        [OptionSetMetadata("Contract Line", Index=624, Lcid=1033, Description="Line item in a contract that specifies the type of service a customer is entitled" +
            " to.")]
        ContractLine = 1011,
        
        [EnumMember()]
        [OptionSetMetadata("Discount", Index=468, Lcid=1033, Description="Price reduction made from the list price of a product or service based on the qua" +
            "ntity purchased.")]
        Discount = 1013,
        
        [EnumMember()]
        [OptionSetMetadata("Article Template", Index=826, Lcid=1033, Description="Template for a knowledge base article that contains the standard attributes of an" +
            " article.")]
        ArticleTemplate = 1016,
        
        [EnumMember()]
        [OptionSetMetadata("Lead Address", Index=781, Lcid=1033, Description="Address information for a lead.")]
        LeadAddress = 1017,
        
        [EnumMember()]
        [OptionSetMetadata("Organization", Index=366, Lcid=1033, Description="Top level of the Microsoft Dynamics 365 business hierarchy. The organization can " +
            "be a specific business, holding company, or corporation.")]
        Organization = 1019,
        
        [EnumMember()]
        [OptionSetMetadata("Organization UI", Index=361, Lcid=1033, Description="Entity customizations including form layout and icons. Includes current and past " +
            "versions.")]
        OrganizationUI = 1021,
        
        [EnumMember()]
        [OptionSetMetadata("Price List", Index=343, Lcid=1033, Description="Entity that defines pricing levels.")]
        PriceList = 1022,
        
        [EnumMember()]
        [OptionSetMetadata("Privilege", Index=333, Lcid=1033, Description="Permission to perform an action in Microsoft CRM. The platform checks for the pri" +
            "vilege and rejects the attempt if the user does not hold the privilege.")]
        Privilege = 1023,
        
        [EnumMember()]
        [OptionSetMetadata("Product", Index=344, Lcid=1033, Description="Information about products and their pricing information.")]
        Product = 1024,
        
        [EnumMember()]
        [OptionSetMetadata("Product Association", Index=354, Lcid=1033, Description="Instance of a product added to a bundle or kit.")]
        ProductAssociation = 1025,
        
        [EnumMember()]
        [OptionSetMetadata("Price List Item", Index=353, Lcid=1033, Description="Information about how to price a product in the specified price level, including " +
            "pricing method, rounding option, and discount type based on a specified product " +
            "unit.")]
        PriceListItem = 1026,
        
        [EnumMember()]
        [OptionSetMetadata("Product Relationship", Index=357, Lcid=1033, Description="Information about the selling relationship between two products, including the re" +
            "lationship type, such as up-sell, cross-sell, substitute, or accessory.")]
        ProductRelationship = 1028,
        
        [EnumMember()]
        [OptionSetMetadata("System Form", Index=240, Lcid=1033, Description="Organization-owned entity customizations including form layout and dashboards.")]
        SystemForm = 1030,
        
        [EnumMember()]
        [OptionSetMetadata("User Dashboard", Index=276, Lcid=1033, Description="User-owned dashboards.")]
        UserDashboard = 1031,
        
        [EnumMember()]
        [OptionSetMetadata("Security Role", Index=398, Lcid=1033, Description="Grouping of security privileges. Users are assigned roles that authorize their ac" +
            "cess to the Microsoft CRM system.")]
        SecurityRole = 1036,
        
        [EnumMember()]
        [OptionSetMetadata("Role Template", Index=397, Lcid=1033, Description="Template for a role. Defines initial attributes that will be used when creating a" +
            " new role.")]
        RoleTemplate = 1037,
        
        [EnumMember()]
        [OptionSetMetadata("Sales Literature", Index=399, Lcid=1033, Description="Storage of sales literature, which may contain one or more documents.")]
        SalesLiterature = 1038,
        
        [EnumMember()]
        [OptionSetMetadata("View", Index=410, Lcid=1033, Description="Saved query against the database.")]
        View = 1039,
        
        [EnumMember()]
        [OptionSetMetadata("String Map", Index=222, Lcid=1033, Description="Mapping between strings.")]
        StringMap = 1043,
        
        [EnumMember()]
        [OptionSetMetadata("Property", Index=459, Lcid=1033, Description="Information about a product property.")]
        Property = 1048,
        
        [EnumMember()]
        [OptionSetMetadata("Property Option Set Item", Index=532, Lcid=1033, Description="Item with a name and value in a property option set type.")]
        PropertyOptionSetItem = 1049,
        
        [EnumMember()]
        [OptionSetMetadata("Unit", Index=288, Lcid=1033, Description="Unit of measure.")]
        Unit = 1055,
        
        [EnumMember()]
        [OptionSetMetadata("Unit Group", Index=287, Lcid=1033, Description="Grouping of units.")]
        UnitGroup = 1056,
        
        [EnumMember()]
        [OptionSetMetadata("Sales Attachment", Index=409, Lcid=1033, Description="Item in the sales literature collection.")]
        SalesAttachment = 1070,
        
        [EnumMember()]
        [OptionSetMetadata("Address", Index=475, Lcid=1033, Description="Address and shipping information. Used to store additional addresses for an accou" +
            "nt or contact.")]
        Address = 1071,
        
        [EnumMember()]
        [OptionSetMetadata("Subscription Clients", Index=225, Lcid=1033, Description="For internal use only.")]
        SubscriptionClients = 1072,
        
        [EnumMember()]
        [OptionSetMetadata("Status Map", Index=223, Lcid=1033, Description="Mapping between statuses.")]
        StatusMap = 1075,
        
        [EnumMember()]
        [OptionSetMetadata("Discount List", Index=467, Lcid=1033, Description="Type of discount specified as either a percentage or an amount.")]
        DiscountList = 1080,
        
        [EnumMember()]
        [OptionSetMetadata("Article Comment", Index=827, Lcid=1033, Description="Comment on a knowledge base article.")]
        ArticleComment = 1082,
        
        [EnumMember()]
        [OptionSetMetadata("Opportunity Line", Index=72, Lcid=1033, Description="Association between an opportunity and a product.")]
        OpportunityLine = 1083,
        
        [EnumMember()]
        [OptionSetMetadata("Quote", Index=348, Lcid=1033, Description="Formal offer for products and/or services, proposed at specific prices and relate" +
            "d payment terms, which is sent to a prospective customer.")]
        Quote = 1084,
        
        [EnumMember()]
        [OptionSetMetadata("Quote Line", Index=422, Lcid=1033, Description="Product line item in a quote. The details include such information as product ID," +
            " description, quantity, and cost.")]
        QuoteLine = 1085,
        
        [EnumMember()]
        [OptionSetMetadata("User Fiscal Calendar", Index=277, Lcid=1033, Description="Custom fiscal calendar used for tracking sales quotas.")]
        UserFiscalCalendar = 1086,
        
        [EnumMember()]
        [OptionSetMetadata("Order", Index=408, Lcid=1033, Description="Quote that has been accepted.")]
        Order = 1088,
        
        [EnumMember()]
        [OptionSetMetadata("Order Line", Index=407, Lcid=1033, Description="Line item in a sales order.")]
        OrderLine = 1089,
        
        [EnumMember()]
        [OptionSetMetadata("Invoice", Index=814, Lcid=1033, Description="Order that has been billed.")]
        Invoice = 1090,
        
        [EnumMember()]
        [OptionSetMetadata("Invoice Product", Index=824, Lcid=1033, Description="Line item in an invoice containing detailed billing information for a product.")]
        InvoiceProduct = 1091,
        
        [EnumMember()]
        [OptionSetMetadata("Authorization Server", Index=565, Lcid=1033, Description="Authorization servers that trust this organization")]
        AuthorizationServer = 1094,
        
        [EnumMember()]
        [OptionSetMetadata("Partner Application", Index=372, Lcid=1033, Description="Partner applications registered for this organization")]
        PartnerApplication = 1095,
        
        [EnumMember()]
        [OptionSetMetadata("System Chart", Index=406, Lcid=1033, Description="System chart attached to an entity.")]
        SystemChart = 1111,
        
        [EnumMember()]
        [OptionSetMetadata("User Chart", Index=289, Lcid=1033, Description="Chart attached to an entity.")]
        UserChart = 1112,
        
        [EnumMember()]
        [OptionSetMetadata("Ribbon Tab To Command Mapping", Index=393, Lcid=1033, Description="A mapping between Tab Ids, and the Commands within those tabs.")]
        RibbonTabToCommandMapping = 1113,
        
        [EnumMember()]
        [OptionSetMetadata("Ribbon Context Group", Index=432, Lcid=1033, Description="Groupings of contextual tabs.")]
        RibbonContextGroup = 1115,
        
        [EnumMember()]
        [OptionSetMetadata("Ribbon Command", Index=433, Lcid=1033, Description="Ribbon Commands - the command definition, rules, etc.")]
        RibbonCommand = 1116,
        
        [EnumMember()]
        [OptionSetMetadata("Ribbon Rule", Index=394, Lcid=1033, Description="Ribbon rule definitions, used to enable and disable, show and hide ribbon element" +
            "s.")]
        RibbonRule = 1117,
        
        [EnumMember()]
        [OptionSetMetadata("Application Ribbons", Index=431, Lcid=1033, Description="Ribbon customizations for the application ribbon and entity ribbon templates.")]
        ApplicationRibbons = 1120,
        
        [EnumMember()]
        [OptionSetMetadata("Ribbon Difference", Index=413, Lcid=1033, Description="All layout customizations to be applied to the ribbons, which contain only the di" +
            "fferences from the base ribbon.")]
        RibbonDifference = 1130,
        
        [EnumMember()]
        [OptionSetMetadata("Replication Backlog", Index=418, Lcid=1033, Description="Entity to hold replication backlog tasks. For internal use only.")]
        ReplicationBacklog = 1140,
        
        [EnumMember()]
        [OptionSetMetadata("Characteristic", Index=619, Lcid=1033, Description="Skills and Characteristics for front line worker")]
        Characteristic = 1141,
        
        [EnumMember()]
        [OptionSetMetadata("Rating Value", Index=426, Lcid=1033, Description="A unique value associated with a rating model that allows providing a user friend" +
            "ly rating value.")]
        RatingValue = 1142,
        
        [EnumMember()]
        [OptionSetMetadata("Rating Model", Index=421, Lcid=1033, Description="Represents a model to evaluate skills or other related entities.")]
        RatingModel = 1144,
        
        [EnumMember()]
        [OptionSetMetadata("Bookable Resource Booking", Index=577, Lcid=1033, Description="Represents the line details of a resource booking.")]
        BookableResourceBooking = 1145,
        
        [EnumMember()]
        [OptionSetMetadata("Bookable Resource Booking Header", Index=572, Lcid=1033, Description="Reservation entity representing the summary of the associated resource bookings.")]
        BookableResourceBookingHeader = 1146,
        
        [EnumMember()]
        [OptionSetMetadata("Bookable Resource Category", Index=568, Lcid=1033, Description="Categorize resources that have capacity into categories such as roles.")]
        BookableResourceCategory = 1147,
        
        [EnumMember()]
        [OptionSetMetadata("Bookable Resource Characteristic", Index=566, Lcid=1033, Description="Associates resources with their characteristics and specifies the proficiency lev" +
            "el of a resource for that characteristic.")]
        BookableResourceCharacteristic = 1148,
        
        [EnumMember()]
        [OptionSetMetadata("Bookable Resource Category Assn", Index=567, Lcid=1033, Description="Association entity to model the categorization of resources.")]
        BookableResourceCategoryAssn = 1149,
        
        [EnumMember()]
        [OptionSetMetadata("Bookable Resource", Index=578, Lcid=1033, Description="Resource that has capacity which can be allocated to work.")]
        BookableResource = 1150,
        
        [EnumMember()]
        [OptionSetMetadata("Bookable Resource Group", Index=571, Lcid=1033, Description="Associates resources with resource groups that they are a member of.")]
        BookableResourceGroup = 1151,
        
        [EnumMember()]
        [OptionSetMetadata("Booking Status", Index=570, Lcid=1033, Description="Allows creation of multiple sub statuses mapped to a booking status option.")]
        BookingStatus = 1152,
        
        [EnumMember()]
        [OptionSetMetadata("Document Suggestions", Index=425, Lcid=1033, Description="Document Suggestions")]
        DocumentSuggestions = 1189,
        
        [EnumMember()]
        [OptionSetMetadata("SuggestionCardTemplate", Index=245, Lcid=1033, Description="Templates for Suggestion Card in Grid")]
        SuggestionCardTemplate = 1190,
        
        [EnumMember()]
        [OptionSetMetadata("Field Security Profile", Index=502, Lcid=1033, Description="Profile which defines access level for secured attributes")]
        FieldSecurityProfile = 1200,
        
        [EnumMember()]
        [OptionSetMetadata("Field Permission", Index=497, Lcid=1033, Description="Group of privileges used to categorize users to provide appropriate access to sec" +
            "ured columns.")]
        FieldPermission = 1201,
        
        [EnumMember()]
        [OptionSetMetadata("Team Profiles", Index=310, Lcid=1033, Description="Team Profiles")]
        TeamProfiles = 1203,
        
        [EnumMember()]
        [OptionSetMetadata("Channel Property Group", Index=614, Lcid=1033, Description="Group or collection of channel properties provided by the external channel for a " +
            "Microsoft Dynamics 365 activity.")]
        ChannelPropertyGroup = 1234,
        
        [EnumMember()]
        [OptionSetMetadata("Property Association", Index=534, Lcid=1033, Description="Association of a property definition with another entity in the system.")]
        PropertyAssociation = 1235,
        
        [EnumMember()]
        [OptionSetMetadata("Channel Property", Index=615, Lcid=1033, Description="Instance of a channel property containing its name and corresponding data type.")]
        ChannelProperty = 1236,
        
        [EnumMember()]
        [OptionSetMetadata("SocialInsightsConfiguration", Index=268, Lcid=1033, Description="Configuration for the social insights.")]
        SocialInsightsConfiguration = 1300,
        
        [EnumMember()]
        [OptionSetMetadata("Saved Organization Insights Configuration", Index=411, Lcid=1033, Description="Saved configuration for the organization insights")]
        SavedOrganizationInsightsConfiguration = 1309,
        
        [EnumMember()]
        [OptionSetMetadata("Property Instance", Index=533, Lcid=1033, Description="Instance of a property with its value.")]
        PropertyInstance = 1333,
        
        [EnumMember()]
        [OptionSetMetadata("Sync Attribute Mapping Profile", Index=237, Lcid=1033, Description="Profile which defines sync attribute mapping")]
        SyncAttributeMappingProfile = 1400,
        
        [EnumMember()]
        [OptionSetMetadata("Sync Attribute Mapping", Index=241, Lcid=1033, Description="Group of Sync-Attribute Mappings used to provide Attribute mappings during sync f" +
            "or a particular user")]
        SyncAttributeMapping = 1401,
        
        [EnumMember()]
        [OptionSetMetadata("Team Sync-Attribute Mapping Profiles", Index=306, Lcid=1033, Description="Team Sync-Attribute Mapping Profiles")]
        TeamSyncAttributeMappingProfiles = 1403,
        
        [EnumMember()]
        [OptionSetMetadata("Principal Sync Attribute Map", Index=337, Lcid=1033, Description="Maps security principals (users and teams) to sync attribute mappings.")]
        PrincipalSyncAttributeMap = 1404,
        
        [EnumMember()]
        [OptionSetMetadata("Annual Fiscal Calendar", Index=603, Lcid=1033, Description="Year long fiscal calendar of an organization. A span of time during which the fin" +
            "ancial activities of an organization are calculated.")]
        AnnualFiscalCalendar = 2000,
        
        [EnumMember()]
        [OptionSetMetadata("Semiannual Fiscal Calendar", Index=259, Lcid=1033, Description="Calendar representing the semi-annual span of time during which the financial act" +
            "ivities of an organization are calculated.")]
        SemiannualFiscalCalendar = 2001,
        
        [EnumMember()]
        [OptionSetMetadata("Quarterly Fiscal Calendar", Index=347, Lcid=1033, Description="Quarterly fiscal calendar of an organization. A span of time during which the fin" +
            "ancial activities of an organization are calculated.")]
        QuarterlyFiscalCalendar = 2002,
        
        [EnumMember()]
        [OptionSetMetadata("Monthly Fiscal Calendar", Index=864, Lcid=1033, Description="Monthly fiscal calendar of an organization. A span of time during which the finan" +
            "cial activities of an organization are calculated.")]
        MonthlyFiscalCalendar = 2003,
        
        [EnumMember()]
        [OptionSetMetadata("Fixed Monthly Fiscal Calendar", Index=510, Lcid=1033, Description="Fixed monthly fiscal calendar of an organization. A span of time during which the" +
            " financial activities of an organization are calculated.")]
        FixedMonthlyFiscalCalendar = 2004,
        
        [EnumMember()]
        [OptionSetMetadata("Email Template", Index=304, Lcid=1033, Description="Template for an email message that contains the standard attributes of an email m" +
            "essage.")]
        EmailTemplate = 2010,
        
        [EnumMember()]
        [OptionSetMetadata("Contract Template", Index=479, Lcid=1033, Description="Template for a contract containing the standard attributes of a contract.")]
        ContractTemplate = 2011,
        
        [EnumMember()]
        [OptionSetMetadata("Unresolved Address", Index=284, Lcid=1033, Description="For internal use only.")]
        UnresolvedAddress = 2012,
        
        [EnumMember()]
        [OptionSetMetadata("Territory", Index=309, Lcid=1033, Description="Territory represents sales regions.")]
        Territory = 2013,
        
        [EnumMember()]
        [OptionSetMetadata("Theme", Index=307, Lcid=1033, Description="Information that\'s used to set custom visual theme options for client application" +
            "s.")]
        Theme = 2015,
        
        [EnumMember()]
        [OptionSetMetadata("User Mapping", Index=281, Lcid=1033, Description="User Mapping")]
        UserMapping = 2016,
        
        [EnumMember()]
        [OptionSetMetadata("Queue", Index=346, Lcid=1033, Description="A list of records that require action, such as accounts, activities, and cases.")]
        Queue = 2020,
        
        [EnumMember()]
        [OptionSetMetadata("QueueItemCount", Index=350, Lcid=1033, Description="For internal use only.")]
        QueueItemCount = 2023,
        
        [EnumMember()]
        [OptionSetMetadata("QueueMemberCount", Index=349, Lcid=1033, Description="For internal use only.")]
        QueueMemberCount = 2024,
        
        [EnumMember()]
        [OptionSetMetadata("License", Index=773, Lcid=1033, Description="Stores information about a Microsoft CRM license.")]
        License = 2027,
        
        [EnumMember()]
        [OptionSetMetadata("Queue Item", Index=345, Lcid=1033, Description="A specific item in a queue, such as a case record or an activity record.")]
        QueueItem = 2029,
        
        [EnumMember()]
        [OptionSetMetadata("User Entity UI Settings", Index=278, Lcid=1033, Description="Stores user settings for entity views.")]
        UserEntityUISettings = 2500,
        
        [EnumMember()]
        [OptionSetMetadata("User Entity Instance Data", Index=282, Lcid=1033, Description="Per User item instance data")]
        UserEntityInstanceData = 2501,
        
        [EnumMember()]
        [OptionSetMetadata("Integration Status", Index=803, Lcid=1033, Description="Contains integration status information.")]
        IntegrationStatus = 3000,
        
        [EnumMember()]
        [OptionSetMetadata("Channel Access Profile", Index=652, Lcid=1033, Description="Information about permissions needed to access Dynamics 365 through external chan" +
            "nels.For internal use only")]
        ChannelAccessProfile = 3005,
        
        [EnumMember()]
        [OptionSetMetadata("External Party", Index=508, Lcid=1033, Description="Information about external parties that need to access Dynamics 365 from external" +
            " channels.For internal use only")]
        ExternalParty = 3008,
        
        [EnumMember()]
        [OptionSetMetadata("Connection Role", Index=628, Lcid=1033, Description="Role describing a relationship between a two records.")]
        ConnectionRole = 3231,
        
        [EnumMember()]
        [OptionSetMetadata("Connection Role Object Type Code", Index=633, Lcid=1033, Description="Specifies the entity type that can play specific role in a connection.")]
        ConnectionRoleObjectTypeCode = 3233,
        
        [EnumMember()]
        [OptionSetMetadata("Connection", Index=630, Lcid=1033, Description="Relationship between two entities.")]
        Connection = 3234,
        
        [EnumMember()]
        [OptionSetMetadata("Facility/Equipment", Index=524, Lcid=1033, Description="Resource that can be scheduled.")]
        FacilityEquipment = 4000,
        
        [EnumMember()]
        [OptionSetMetadata("Service", Index=255, Lcid=1033, Description="Activity that represents work done to satisfy a customer\'s need.")]
        Service = 4001,
        
        [EnumMember()]
        [OptionSetMetadata("Resource", Index=440, Lcid=1033, Description="User or facility/equipment that can be scheduled for a service.")]
        Resource = 4002,
        
        [EnumMember()]
        [OptionSetMetadata("Calendar", Index=640, Lcid=1033, Description="Calendar used by the scheduling system to define when an appointment or activity " +
            "is to occur.")]
        Calendar = 4003,
        
        [EnumMember()]
        [OptionSetMetadata("Calendar Rule", Index=639, Lcid=1033, Description="Defines free/busy times for a service and for resources or resource groups, such " +
            "as working, non-working, vacation, and blocked.")]
        CalendarRule = 4004,
        
        [EnumMember()]
        [OptionSetMetadata("Scheduling Group", Index=439, Lcid=1033, Description="Resource group or team whose members can be scheduled for a service.")]
        SchedulingGroup = 4005,
        
        [EnumMember()]
        [OptionSetMetadata("Resource Specification", Index=430, Lcid=1033, Description="Selection rule that allows the scheduling engine to select a number of resources " +
            "from a pool of resources. The rules can be associated with a service.")]
        ResourceSpecification = 4006,
        
        [EnumMember()]
        [OptionSetMetadata("Resource Group", Index=631, Lcid=1033, Description="Group or collection of people, equipment, and/or facilities that can be scheduled" +
            ".")]
        ResourceGroup = 4007,
        
        [EnumMember()]
        [OptionSetMetadata("Site", Index=274, Lcid=1033, Description="Location or branch office where an organization does business. An organization ca" +
            "n have multiple sites.")]
        Site = 4009,
        
        [EnumMember()]
        [OptionSetMetadata("Resource Expansion", Index=434, Lcid=1033, Description="Resource Expansions.")]
        ResourceExpansion = 4010,
        
        [EnumMember()]
        [OptionSetMetadata("Inter Process Lock", Index=805, Lcid=1033, Description="Inter Process Locks.")]
        InterProcessLock = 4011,
        
        [EnumMember()]
        [OptionSetMetadata("Email Hash", Index=536, Lcid=1033, Description="Email activity hashes used for correlation purposes.")]
        EmailHash = 4023,
        
        [EnumMember()]
        [OptionSetMetadata("Display String Map", Index=462, Lcid=1033, Description="Maps customized display strings to entities.")]
        DisplayStringMap = 4101,
        
        [EnumMember()]
        [OptionSetMetadata("Display String", Index=466, Lcid=1033, Description="Customized messages for an entity that has been renamed.")]
        DisplayString = 4102,
        
        [EnumMember()]
        [OptionSetMetadata("Notification", Index=79, Lcid=1033, Description="For internal use only.")]
        Notification = 4110,
        
        [EnumMember()]
        [OptionSetMetadata("Exchange Sync Id Mapping", Index=506, Lcid=1033, Description="The mapping used to keep track of the IDs for items synced between CRM and Exchan" +
            "ge.")]
        ExchangeSyncIdMapping = 4120,
        
        [EnumMember()]
        [OptionSetMetadata("Activity", Index=585, Lcid=1033, Description="Task performed, or to be performed, by a user. An activity is any action for whic" +
            "h an entry can be made on a calendar.")]
        Activity = 4200,
        
        [EnumMember()]
        [OptionSetMetadata("Appointment", Index=563, Lcid=1033, Description="Commitment representing a time interval with start/end times and duration.")]
        Appointment = 4201,
        
        [EnumMember()]
        [OptionSetMetadata("Email", Index=537, Lcid=1033, Description="Activity that is delivered using email protocols.")]
        Email = 4202,
        
        [EnumMember()]
        [OptionSetMetadata("Fax", Index=503, Lcid=1033, Description="Activity that tracks call outcome and number of pages for a fax and optionally st" +
            "ores an electronic copy of the document.")]
        Fax = 4204,
        
        [EnumMember()]
        [OptionSetMetadata("Case Resolution", Index=811, Lcid=1033, Description="Special type of activity that includes description of the resolution, billing sta" +
            "tus, and the duration of the case.")]
        CaseResolution = 4206,
        
        [EnumMember()]
        [OptionSetMetadata("Letter", Index=783, Lcid=1033, Description="Activity that tracks the delivery of a letter. The activity can contain the elect" +
            "ronic copy of the letter.")]
        Letter = 4207,
        
        [EnumMember()]
        [OptionSetMetadata("Opportunity Close", Index=74, Lcid=1033, Description="Activity that is created automatically when an opportunity is closed, containing " +
            "information such as the description of the closing and actual revenue.")]
        OpportunityClose = 4208,
        
        [EnumMember()]
        [OptionSetMetadata("Order Close", Index=367, Lcid=1033, Description="Activity generated automatically when an order is closed.")]
        OrderClose = 4209,
        
        [EnumMember()]
        [OptionSetMetadata("Phone Call", Index=380, Lcid=1033, Description="Activity to track a telephone call.")]
        PhoneCall = 4210,
        
        [EnumMember()]
        [OptionSetMetadata("Quote Close", Index=423, Lcid=1033, Description="Activity generated when a quote is closed.")]
        QuoteClose = 4211,
        
        [EnumMember()]
        [OptionSetMetadata("Task", Index=316, Lcid=1033, Description="Generic activity representing work needed to be done.")]
        Task = 4212,
        
        [EnumMember()]
        [OptionSetMetadata("Service Activity", Index=251, Lcid=1033, Description="Activity offered by the organization to satisfy its customer\'s needs. Each servic" +
            "e activity includes date, time, duration, and required resources.")]
        ServiceActivity = 4214,
        
        [EnumMember()]
        [OptionSetMetadata("Commitment", Index=608, Lcid=1033, Description="For internal use only.")]
        Commitment = 4215,
        
        [EnumMember()]
        [OptionSetMetadata("Social Activity", Index=263, Lcid=1033, Description="For internal use only.")]
        SocialActivity = 4216,
        
        [EnumMember()]
        [OptionSetMetadata("UntrackedEmail", Index=283, Lcid=1033, Description="Activity that is delivered using UntrackedEmail protocols.")]
        UntrackedEmail = 4220,
        
        [EnumMember()]
        [OptionSetMetadata("Saved View", Index=279, Lcid=1033, Description="Saved database query that is owned by a user.")]
        SavedView = 4230,
        
        [EnumMember()]
        [OptionSetMetadata("Metadata Difference", Index=787, Lcid=1033, Description="Metadata Difference")]
        MetadataDifference = 4231,
        
        [EnumMember()]
        [OptionSetMetadata("Business Data Localized Label", Index=645, Lcid=1033, Description="Business Data Localized Label")]
        BusinessDataLocalizedLabel = 4232,
        
        [EnumMember()]
        [OptionSetMetadata("Recurrence Rule", Index=424, Lcid=1033, Description="Recurrence Rule represents the pattern of incidence of recurring entities.")]
        RecurrenceRule = 4250,
        
        [EnumMember()]
        [OptionSetMetadata("Recurring Appointment", Index=420, Lcid=1033, Description="The Master appointment of a recurring appointment series.")]
        RecurringAppointment = 4251,
        
        [EnumMember()]
        [OptionSetMetadata("Email Search", Index=535, Lcid=1033, Description="Email Address Search Table.")]
        EmailSearch = 4299,
        
        [EnumMember()]
        [OptionSetMetadata("Marketing List", Index=778, Lcid=1033, Description="Group of existing or potential customers created for a marketing campaign or othe" +
            "r sales purposes.")]
        MarketingList = 4300,
        
        [EnumMember()]
        [OptionSetMetadata("Marketing List Member", Index=777, Lcid=1033, Description="Item in a marketing list.")]
        MarketingListMember = 4301,
        
        [EnumMember()]
        [OptionSetMetadata("Campaign", Index=648, Lcid=1033, Description="Container for campaign activities and responses, sales literature, products, and " +
            "lists to create, plan, execute, and track the results of a specific marketing ca" +
            "mpaign through its life.")]
        Campaign = 4400,
        
        [EnumMember()]
        [OptionSetMetadata("Campaign Response", Index=661, Lcid=1033, Description="Response from an existing or a potential new customer for a campaign.")]
        CampaignResponse = 4401,
        
        [EnumMember()]
        [OptionSetMetadata("Campaign Activity", Index=658, Lcid=1033, Description="Task performed, or to be performed, by a user for planning or running a campaign." +
            "")]
        CampaignActivity = 4402,
        
        [EnumMember()]
        [OptionSetMetadata("Campaign Item", Index=656, Lcid=1033, Description="Work item in a campaign, a list or sales literature.")]
        CampaignItem = 4403,
        
        [EnumMember()]
        [OptionSetMetadata("Campaign Activity Item", Index=657, Lcid=1033, Description="Work item of a campaign activity, such as a list or sales literature.")]
        CampaignActivityItem = 4404,
        
        [EnumMember()]
        [OptionSetMetadata("Bulk Operation Log", Index=646, Lcid=1033, Description="Log used to track bulk operation execution, successes, and failures.")]
        BulkOperationLog = 4405,
        
        [EnumMember()]
        [OptionSetMetadata("Quick Campaign", Index=647, Lcid=1033, Description="System operation used to perform lengthy and asynchronous operations on large dat" +
            "a sets, such as distributing a campaign activity or quick campaign.")]
        QuickCampaign = 4406,
        
        [EnumMember()]
        [OptionSetMetadata("Data Import", Index=516, Lcid=1033, Description="Status and ownership information for an import job.")]
        DataImport = 4410,
        
        [EnumMember()]
        [OptionSetMetadata("Data Map", Index=808, Lcid=1033, Description="Data map used in import.")]
        DataMap = 4411,
        
        [EnumMember()]
        [OptionSetMetadata("Import Source File", Index=662, Lcid=1033, Description="File name of file used for import.")]
        ImportSourceFile = 4412,
        
        [EnumMember()]
        [OptionSetMetadata("Import Data", Index=515, Lcid=1033, Description="Unprocessed data from imported files.")]
        ImportData = 4413,
        
        [EnumMember()]
        [OptionSetMetadata("Duplicate Detection Rule", Index=461, Lcid=1033, Description="Rule used to identify potential duplicates.")]
        DuplicateDetectionRule = 4414,
        
        [EnumMember()]
        [OptionSetMetadata("Duplicate Record", Index=456, Lcid=1033, Description="Potential duplicate record.")]
        DuplicateRecord = 4415,
        
        [EnumMember()]
        [OptionSetMetadata("Duplicate Rule Condition", Index=460, Lcid=1033, Description="Condition of a duplicate detection rule.")]
        DuplicateRuleCondition = 4416,
        
        [EnumMember()]
        [OptionSetMetadata("Column Mapping", Index=613, Lcid=1033, Description="Mapping for columns in a data map.")]
        ColumnMapping = 4417,
        
        [EnumMember()]
        [OptionSetMetadata("List Value Mapping", Index=384, Lcid=1033, Description="In a data map, maps list values from the source file to Microsoft Dynamics 365.")]
        ListValueMapping = 4418,
        
        [EnumMember()]
        [OptionSetMetadata("Lookup Mapping", Index=796, Lcid=1033, Description="In a data map, maps a lookup attribute in a source file to Microsoft Dynamics 365" +
            ".")]
        LookupMapping = 4419,
        
        [EnumMember()]
        [OptionSetMetadata("Owner Mapping", Index=363, Lcid=1033, Description="In a data map, maps ownership data from the source file to Microsoft Dynamics 365" +
            ".")]
        OwnerMapping = 4420,
        
        [EnumMember()]
        [OptionSetMetadata("BookableResourceBooking to Exchange Id Mapping", Index=576, Lcid=1033, Description="The mapping used to keep track of the IDs for items synced between CRM BookableRe" +
            "sourceBooking and Exchange.")]
        BookableResourceBookingtoExchangeIdMapping = 4421,
        
        [EnumMember()]
        [OptionSetMetadata("Import Log", Index=809, Lcid=1033, Description="Failure reason and other detailed information for a record that failed to import." +
            "")]
        ImportLog = 4423,
        
        [EnumMember()]
        [OptionSetMetadata("Bulk Delete Operation", Index=642, Lcid=1033, Description="User-submitted bulk deletion job.")]
        BulkDeleteOperation = 4424,
        
        [EnumMember()]
        [OptionSetMetadata("Bulk Delete Failure", Index=643, Lcid=1033, Description="Record that was not deleted during a bulk deletion job.")]
        BulkDeleteFailure = 4425,
        
        [EnumMember()]
        [OptionSetMetadata("Transformation Mapping", Index=321, Lcid=1033, Description="In a data map, maps the transformation of source attributes to Microsoft Dynamics" +
            " 365 attributes.")]
        TransformationMapping = 4426,
        
        [EnumMember()]
        [OptionSetMetadata("Transformation Parameter Mapping", Index=303, Lcid=1033, Description="In a data map, defines parameters for a transformation.")]
        TransformationParameterMapping = 4427,
        
        [EnumMember()]
        [OptionSetMetadata("Import Entity Mapping", Index=514, Lcid=1033, Description="Mapping for entities in a data map.")]
        ImportEntityMapping = 4428,
        
        [EnumMember()]
        [OptionSetMetadata("Data Performance Dashboard", Index=496, Lcid=1033, Description="Data Performance Dashboard.")]
        DataPerformanceDashboard = 4450,
        
        [EnumMember()]
        [OptionSetMetadata("Office Document", Index=75, Lcid=1033, Description="Used to store Office Documents in database in binary format.")]
        OfficeDocument = 4490,
        
        [EnumMember()]
        [OptionSetMetadata("Relationship Role", Index=414, Lcid=1033, Description="Relationship between an account or contact and an opportunity.")]
        RelationshipRole = 4500,
        
        [EnumMember()]
        [OptionSetMetadata("Relationship Role Map", Index=419, Lcid=1033, Description="Mapping of the primary associated objects between which the relationship role is " +
            "valid.")]
        RelationshipRoleMap = 4501,
        
        [EnumMember()]
        [OptionSetMetadata("Customer Relationship", Index=473, Lcid=1033, Description="Relationship between a customer and a partner in which either can be an account o" +
            "r contact.")]
        CustomerRelationship = 4502,
        
        [EnumMember()]
        [OptionSetMetadata("Opportunity Relationship", Index=474, Lcid=1033, Description="Relationship between an account or contact and an opportunity.")]
        OpportunityRelationship = 4503,
        
        [EnumMember()]
        [OptionSetMetadata("Entitlement Template Product", Index=547, Lcid=1033)]
        EntitlementTemplateProduct = 4545,
        
        [EnumMember()]
        [OptionSetMetadata("Auditing", Index=555, Lcid=1033, Description="Track changes to records for analysis, record keeping, and compliance.")]
        Auditing = 4567,
        
        [EnumMember()]
        [OptionSetMetadata("Ribbon Client Metadata.", Index=428, Lcid=1033, Description="A ribbon client metadata.")]
        RibbonClientMetadata = 4579,
        
        [EnumMember()]
        [OptionSetMetadata("Entity Map", Index=539, Lcid=1033, Description="Represents a mapping between two related entities so that data from one record ca" +
            "n be copied into the form of a new related record.")]
        EntityMap = 4600,
        
        [EnumMember()]
        [OptionSetMetadata("Attribute Map", Index=556, Lcid=1033, Description="Represents a mapping between attributes where the attribute values should be copi" +
            "ed from a record into the form of a new related record.")]
        AttributeMap = 4601,
        
        [EnumMember()]
        [OptionSetMetadata("Plug-in Type", Index=374, Lcid=1033, Description="Type that inherits from the IPlugin interface and is contained within a plug-in a" +
            "ssembly.")]
        PluginType = 4602,
        
        [EnumMember()]
        [OptionSetMetadata("Plug-in Type Statistic", Index=373, Lcid=1033, Description="Plug-in type statistic.")]
        PluginTypeStatistic = 4603,
        
        [EnumMember()]
        [OptionSetMetadata("Plug-in Assembly", Index=383, Lcid=1033, Description="Assembly that contains one or more plug-in types.")]
        PluginAssembly = 4605,
        
        [EnumMember()]
        [OptionSetMetadata("Sdk Message", Index=402, Lcid=1033, Description="Message that is supported by the SDK.")]
        SdkMessage = 4606,
        
        [EnumMember()]
        [OptionSetMetadata("Sdk Message Filter", Index=401, Lcid=1033, Description="Filter that defines which SDK messages are valid for each type of entity.")]
        SdkMessageFilter = 4607,
        
        [EnumMember()]
        [OptionSetMetadata("Sdk Message Processing Step", Index=405, Lcid=1033, Description="Stage in the execution pipeline that a plug-in is to execute.")]
        SdkMessageProcessingStep = 4608,
        
        [EnumMember()]
        [OptionSetMetadata("Sdk Message Request", Index=258, Lcid=1033, Description="For internal use only.")]
        SdkMessageRequest = 4609,
        
        [EnumMember()]
        [OptionSetMetadata("Sdk Message Response", Index=256, Lcid=1033, Description="For internal use only.")]
        SdkMessageResponse = 4610,
        
        [EnumMember()]
        [OptionSetMetadata("Sdk Message Response Field", Index=261, Lcid=1033, Description="For internal use only.")]
        SdkMessageResponseField = 4611,
        
        [EnumMember()]
        [OptionSetMetadata("Sdk Message Pair", Index=400, Lcid=1033, Description="For internal use only.")]
        SdkMessagePair = 4613,
        
        [EnumMember()]
        [OptionSetMetadata("Sdk Message Request Field", Index=257, Lcid=1033, Description="For internal use only.")]
        SdkMessageRequestField = 4614,
        
        [EnumMember()]
        [OptionSetMetadata("Sdk Message Processing Step Image", Index=404, Lcid=1033, Description="Copy of an entity\'s attributes before or after the core system operation.")]
        SdkMessageProcessingStepImage = 4615,
        
        [EnumMember()]
        [OptionSetMetadata("Sdk Message Processing Step Secure Configuration", Index=403, Lcid=1033, Description="Non-public custom configuration that is passed to a plug-in\'s constructor.")]
        SdkMessageProcessingStepSecureConfiguration = 4616,
        
        [EnumMember()]
        [OptionSetMetadata("Service Endpoint", Index=249, Lcid=1033, Description="Service endpoint that can be contacted.")]
        ServiceEndpoint = 4618,
        
        [EnumMember()]
        [OptionSetMetadata("Plug-in Trace Log", Index=375, Lcid=1033, Description="Trace and exception information generated by plug-ins and custom workflow activit" +
            "ies.")]
        PluginTraceLog = 4619,
        
        [EnumMember()]
        [OptionSetMetadata("System Job", Index=554, Lcid=1033, Description="Process whose execution can proceed independently or in the background.")]
        SystemJob = 4700,
        
        [EnumMember()]
        [OptionSetMetadata("Workflow Wait Subscription", Index=293, Lcid=1033, Description="For internal use only.")]
        WorkflowWaitSubscription = 4702,
        
        [EnumMember()]
        [OptionSetMetadata("Process", Index=291, Lcid=1033, Description="Set of logical rules that define the steps necessary to automate a specific busin" +
            "ess process, task, or set of actions to be performed.")]
        Process = 4703,
        
        [EnumMember()]
        [OptionSetMetadata("Process Dependency", Index=295, Lcid=1033, Description="Dependencies for a process.")]
        ProcessDependency = 4704,
        
        [EnumMember()]
        [OptionSetMetadata("ISV Config", Index=823, Lcid=1033, Description="An XML document used to configure client extension controls.")]
        ISVConfig = 4705,
        
        [EnumMember()]
        [OptionSetMetadata("Process Log", Index=294, Lcid=1033, Description="Log used to track process execution.")]
        ProcessLog = 4706,
        
        [EnumMember()]
        [OptionSetMetadata("Application File", Index=596, Lcid=1033, Description="Files used by the application")]
        ApplicationFile = 4707,
        
        [EnumMember()]
        [OptionSetMetadata("Organization Statistic", Index=365, Lcid=1033, Description="Statistics measuring the organization\'s usage of the Microsoft Dynamics 365 syste" +
            "m over the past 24 hours.")]
        OrganizationStatistic = 4708,
        
        [EnumMember()]
        [OptionSetMetadata("Site Map", Index=273, Lcid=1033, Description="XML data used to control the application navigation pane.")]
        SiteMap = 4709,
        
        [EnumMember()]
        [OptionSetMetadata("Process Session", Index=331, Lcid=1033, Description="Information that is generated when a dialog is run. Every time that you run a dia" +
            "log, a dialog session is created.")]
        ProcessSession = 4710,
        
        [EnumMember()]
        [OptionSetMetadata("Expander Event", Index=505, Lcid=1033, Description="For internal use only. An event that will be expanded into jobs whose executions " +
            "can proceed in the background.")]
        ExpanderEvent = 4711,
        
        [EnumMember()]
        [OptionSetMetadata("Process Trigger", Index=334, Lcid=1033, Description="Trigger that invoke a rule.")]
        ProcessTrigger = 4712,
        
        [EnumMember()]
        [OptionSetMetadata("Flow Session", Index=518, Lcid=1033, Description="Entity to store the information that is generated when a modern flow or UI flow r" +
            "uns.")]
        FlowSession = 4720,
        
        [EnumMember()]
        [OptionSetMetadata("Process Stage", Index=336, Lcid=1033, Description="Stage associated with a process.")]
        ProcessStage = 4724,
        
        [EnumMember()]
        [OptionSetMetadata("Business Process Flow Instance", Index=641, Lcid=1033, Description="Active path associated with every Business Process Flow instance")]
        BusinessProcessFlowInstance = 4725,
        
        [EnumMember()]
        [OptionSetMetadata("Web Wizard", Index=300, Lcid=1033, Description="Definition for a Web-based wizard.")]
        WebWizard = 4800,
        
        [EnumMember()]
        [OptionSetMetadata("Wizard Page", Index=292, Lcid=1033, Description="Page in a Web-based wizard.")]
        WizardPage = 4802,
        
        [EnumMember()]
        [OptionSetMetadata("Web Wizard Access Privilege", Index=296, Lcid=1033, Description="Privilege needed to access a Web-based wizard.")]
        WebWizardAccessPrivilege = 4803,
        
        [EnumMember()]
        [OptionSetMetadata("Time Zone Definition", Index=327, Lcid=1033, Description="Time zone definition, including name and time zone code.")]
        TimeZoneDefinition = 4810,
        
        [EnumMember()]
        [OptionSetMetadata("Time Zone Rule", Index=325, Lcid=1033, Description="Definition for time conversion between local time and Coordinated Universal Time " +
            "(UTC) for a particular time zone at a particular time period.")]
        TimeZoneRule = 4811,
        
        [EnumMember()]
        [OptionSetMetadata("Time Zone Localized Name", Index=326, Lcid=1033, Description="Localized name of the time zone.")]
        TimeZoneLocalizedName = 4812,
        
        [EnumMember()]
        [OptionSetMetadata("Entitlement Product", Index=528, Lcid=1033)]
        EntitlementProduct = 6363,
        
        [EnumMember()]
        [OptionSetMetadata("System Application Metadata", Index=235, Lcid=1033, Description="For internal use only.")]
        SystemApplicationMetadata = 7000,
        
        [EnumMember()]
        [OptionSetMetadata("User Application Metadata", Index=286, Lcid=1033, Description="For internal use only.")]
        UserApplicationMetadata = 7001,
        
        [EnumMember()]
        [OptionSetMetadata("Solution", Index=266, Lcid=1033, Description="A solution which contains CRM customizations.")]
        Solution = 7100,
        
        [EnumMember()]
        [OptionSetMetadata("Publisher", Index=355, Lcid=1033, Description="A publisher of a CRM solution.")]
        Publisher = 7101,
        
        [EnumMember()]
        [OptionSetMetadata("Publisher Address", Index=351, Lcid=1033, Description="Address and shipping information. Used to store additional addresses for a publis" +
            "her.")]
        PublisherAddress = 7102,
        
        [EnumMember()]
        [OptionSetMetadata("Solution Component", Index=248, Lcid=1033, Description="A component of a CRM solution.")]
        SolutionComponent = 7103,
        
        [EnumMember()]
        [OptionSetMetadata("Solution Component Definition", Index=233, Lcid=1033, Description="Contains all the information required to process a solution aware entity")]
        SolutionComponentDefinition = 7104,
        
        [EnumMember()]
        [OptionSetMetadata("Dependency", Index=494, Lcid=1033, Description="A component dependency in CRM.")]
        Dependency = 7105,
        
        [EnumMember()]
        [OptionSetMetadata("Dependency Node", Index=486, Lcid=1033, Description="The representation of a component dependency node in CRM.")]
        DependencyNode = 7106,
        
        [EnumMember()]
        [OptionSetMetadata("Invalid Dependency", Index=804, Lcid=1033, Description="An invalid dependency in the CRM system.")]
        InvalidDependency = 7107,
        
        [EnumMember()]
        [OptionSetMetadata("Dependency Feature", Index=490, Lcid=1033, Description="A dependency feature.")]
        DependencyFeature = 7108,
        
        [EnumMember()]
        [OptionSetMetadata("RuntimeDependency", Index=391, Lcid=1033, Description="Form Level dependencies in CRM.")]
        RuntimeDependency = 7200,
        
        [EnumMember()]
        [OptionSetMetadata("Entitlement Contact", Index=530, Lcid=1033)]
        EntitlementContact = 7272,
        
        [EnumMember()]
        [OptionSetMetadata("Post", Index=377, Lcid=1033, Description="An activity feed post.")]
        Post = 8000,
        
        [EnumMember()]
        [OptionSetMetadata("Post Role", Index=338, Lcid=1033, Description="Represents the objects with which an activity feed post is associated. For intern" +
            "al use only.")]
        PostRole = 8001,
        
        [EnumMember()]
        [OptionSetMetadata("Post Regarding", Index=339, Lcid=1033, Description="Represents which object an activity feed post is regarding. For internal use only" +
            ".")]
        PostRegarding = 8002,
        
        [EnumMember()]
        [OptionSetMetadata("Follow", Index=358, Lcid=1033, Description="Represents a user following the activity feed of an object.")]
        Follow = 8003,
        
        [EnumMember()]
        [OptionSetMetadata("Comment", Index=376, Lcid=1033, Description="A comment on an activity feed post.")]
        Comment = 8005,
        
        [EnumMember()]
        [OptionSetMetadata("Like", Index=340, Lcid=1033, Description="A like on an activity feed post.")]
        Like = 8006,
        
        [EnumMember()]
        [OptionSetMetadata("ACIViewMapper", Index=587, Lcid=1033, Description="Customized messages for an entity that has been renamed.")]
        ACIViewMapper = 8040,
        
        [EnumMember()]
        [OptionSetMetadata("Trace", Index=318, Lcid=1033, Description="A trace log.")]
        Trace = 8050,
        
        [EnumMember()]
        [OptionSetMetadata("Trace Association", Index=319, Lcid=1033, Description="Represents the objects with which a trace record is associated. For internal use " +
            "only.")]
        TraceAssociation = 8051,
        
        [EnumMember()]
        [OptionSetMetadata("Trace Regarding", Index=323, Lcid=1033, Description="Represents which object a trace record is regarding. For internal use only.")]
        TraceRegarding = 8052,
        
        [EnumMember()]
        [OptionSetMetadata("Routing Rule Set", Index=387, Lcid=1033, Description="Define Routing Rule to route cases to right people at the right time")]
        RoutingRuleSet = 8181,
        
        [EnumMember()]
        [OptionSetMetadata("Rule Item", Index=386, Lcid=1033, Description="Please provide the description for entity")]
        RuleItem = 8199,
        
        [EnumMember()]
        [OptionSetMetadata("AppModule Metadata", Index=579, Lcid=1033, Description="For internal use only.")]
        AppModuleMetadata = 8700,
        
        [EnumMember()]
        [OptionSetMetadata("AppModule Metadata Dependency", Index=561, Lcid=1033, Description="For internal use only.")]
        AppModuleMetadataDependency = 8701,
        
        [EnumMember()]
        [OptionSetMetadata("AppModule Metadata Async Operation", Index=560, Lcid=1033, Description="For internal use only.")]
        AppModuleMetadataAsyncOperation = 8702,
        
        [EnumMember()]
        [OptionSetMetadata("Hierarchy Rule", Index=517, Lcid=1033, Description="Organization-owned entity customizations including mapping Quick view form with R" +
            "elationship Id")]
        HierarchyRule = 8840,
        
        [EnumMember()]
        [OptionSetMetadata("Model-driven App", Index=594, Lcid=1033, Description="A role-based, modular business app that provides task-based functionality for a p" +
            "articular area of work.")]
        ModeldrivenApp = 9006,
        
        [EnumMember()]
        [OptionSetMetadata("App Module Component", Index=599, Lcid=1033, Description="A component available in a business app such as entity, dashboard, form, view, ch" +
            "art, and business process.")]
        AppModuleComponent = 9007,
        
        [EnumMember()]
        [OptionSetMetadata("App Module Roles", Index=559, Lcid=1033, Description="Security roles that have access to a business app.")]
        AppModuleRoles = 9009,
        
        [EnumMember()]
        [OptionSetMetadata("App Config Master", Index=604, Lcid=1033, Description="Contains the master list of all properties that can be customized for apps in Dyn" +
            "amics 365. For internal use only.")]
        AppConfigMaster = 9011,
        
        [EnumMember()]
        [OptionSetMetadata("App Configuration", Index=606, Lcid=1033, Description="Contains a mapping between an app configuration instance and an app, which define" +
            "s the properties that can be customized for the app. Optionally, also contains n" +
            "avigation setting for an app. For internal use only.")]
        AppConfiguration = 9012,
        
        [EnumMember()]
        [OptionSetMetadata("App Configuration Instance", Index=605, Lcid=1033, Description="Contains a property or a list of properties from the app configuration master lis" +
            "t that can be customized for any app in Dynamics 365. For internal use only.")]
        AppConfigurationInstance = 9013,
        
        [EnumMember()]
        [OptionSetMetadata("Report", Index=417, Lcid=1033, Description="Data summary in an easy-to-read layout.")]
        Report = 9100,
        
        [EnumMember()]
        [OptionSetMetadata("Report Related Entity", Index=437, Lcid=1033, Description="Entities related to a report. A report can be related to multiple entities.")]
        ReportRelatedEntity = 9101,
        
        [EnumMember()]
        [OptionSetMetadata("Report Related Category", Index=427, Lcid=1033, Description="Categories related to a report. A report can be related to multiple categories.")]
        ReportRelatedCategory = 9102,
        
        [EnumMember()]
        [OptionSetMetadata("Report Visibility", Index=435, Lcid=1033, Description="Area in which to show a report. A report can be shown in multiple areas.")]
        ReportVisibility = 9103,
        
        [EnumMember()]
        [OptionSetMetadata("Report Link", Index=436, Lcid=1033, Description="Links and dependencies between reports. A report may drill through to another rep" +
            "ort, or it may have another report as a sub-report.")]
        ReportLink = 9104,
        
        [EnumMember()]
        [OptionSetMetadata("Currency", Index=322, Lcid=1033, Description="Currency in which a financial transaction is carried out.")]
        Currency = 9105,
        
        [EnumMember()]
        [OptionSetMetadata("Mail Merge Template", Index=797, Lcid=1033, Description="Template for a mail merge document that contains the standard attributes of that " +
            "document.")]
        MailMergeTemplate = 9106,
        
        [EnumMember()]
        [OptionSetMetadata("Import Job", Index=810, Lcid=1033, Description="For internal use only.")]
        ImportJob = 9107,
        
        [EnumMember()]
        [OptionSetMetadata("LocalConfigStore", Index=786, Lcid=1033, Description="")]
        LocalConfigStore = 9201,
        
        [EnumMember()]
        [OptionSetMetadata("Record Creation and Update Rule", Index=477, Lcid=1033, Description="Defines the settings for automatic record creation.")]
        RecordCreationandUpdateRule = 9300,
        
        [EnumMember()]
        [OptionSetMetadata("Record Creation and Update Rule Item", Index=482, Lcid=1033, Description="Defines the individual conditions required for creating records automatically.")]
        RecordCreationandUpdateRuleItem = 9301,
        
        [EnumMember()]
        [OptionSetMetadata("Web Resource", Index=301, Lcid=1033, Description="Data equivalent to files used in Web development. Web resources provide client-si" +
            "de components that are used to provide custom user interface elements.")]
        WebResource = 9333,
        
        [EnumMember()]
        [OptionSetMetadata("Channel Access Profile Rule", Index=634, Lcid=1033, Description="Defines the rules for automatically associating channel access profiles to extern" +
            "al party records.For internal use only")]
        ChannelAccessProfileRule = 9400,
        
        [EnumMember()]
        [OptionSetMetadata("Channel Access Profile Rule Item", Index=616, Lcid=1033, Description="Defines the rule items of a profile rule set for the automated profile associatio" +
            "n.For internal use only")]
        ChannelAccessProfileRuleItem = 9401,
        
        [EnumMember()]
        [OptionSetMetadata("SharePoint Site", Index=270, Lcid=1033, Description="SharePoint site from where documents can be managed in Microsoft Dynamics 365.")]
        SharePointSite = 9502,
        
        [EnumMember()]
        [OptionSetMetadata("Sharepoint Document", Index=272, Lcid=1033, Description="Document libraries or folders on a SharePoint server from where documents can be " +
            "managed in Microsoft Dynamics 365.")]
        SharepointDocument = 9507,
        
        [EnumMember()]
        [OptionSetMetadata("Document Location", Index=271, Lcid=1033, Description="Document libraries or folders on a SharePoint server from where documents can be " +
            "managed in Microsoft Dynamics 365.")]
        DocumentLocation = 9508,
        
        [EnumMember()]
        [OptionSetMetadata("SharePoint Data", Index=262, Lcid=1033, Description="SharePoint\'s Data Corresponding to a user , Record , Location and Page")]
        SharePointData = 9509,
        
        [EnumMember()]
        [OptionSetMetadata("Rollup Properties", Index=388, Lcid=1033, Description="Stores properties related to rollup fields.")]
        RollupProperties = 9510,
        
        [EnumMember()]
        [OptionSetMetadata("Rollup Job", Index=392, Lcid=1033, Description="Stores rollup jobs.")]
        RollupJob = 9511,
        
        [EnumMember()]
        [OptionSetMetadata("Goal", Index=522, Lcid=1033, Description="Target objective for a user or a team for a specified time period.")]
        Goal = 9600,
        
        [EnumMember()]
        [OptionSetMetadata("Rollup Query", Index=521, Lcid=1033, Description="Query that is used to filter the results of the goal rollup.")]
        RollupQuery = 9602,
        
        [EnumMember()]
        [OptionSetMetadata("Goal Metric", Index=792, Lcid=1033, Description="Type of measurement for a goal, such as money amount or count.")]
        GoalMetric = 9603,
        
        [EnumMember()]
        [OptionSetMetadata("Rollup Field", Index=396, Lcid=1033, Description="Field to be rolled up to calculate the actual and in-progress values against the " +
            "goal.")]
        RollupField = 9604,
        
        [EnumMember()]
        [OptionSetMetadata("Email Server Profile", Index=531, Lcid=1033, Description="Holds the Email Server Profiles of an organization")]
        EmailServerProfile = 9605,
        
        [EnumMember()]
        [OptionSetMetadata("Mailbox", Index=795, Lcid=1033, Description="")]
        Mailbox = 9606,
        
        [EnumMember()]
        [OptionSetMetadata("Mailbox Statistics", Index=794, Lcid=1033, Description="Stores data regarding Mailbox processing cycles")]
        MailboxStatistics = 9607,
        
        [EnumMember()]
        [OptionSetMetadata("Mailbox Auto Tracking Folder", Index=798, Lcid=1033, Description="Stores data about what folders for a mailbox are auto tracked")]
        MailboxAutoTrackingFolder = 9608,
        
        [EnumMember()]
        [OptionSetMetadata("Mailbox Tracking Category", Index=799, Lcid=1033, Description="Stores data about what categories for a mailbox are tracked")]
        MailboxTrackingCategory = 9609,
        
        [EnumMember()]
        [OptionSetMetadata("Process Configuration", Index=620, Lcid=1033, Description="For internal use only.")]
        ProcessConfiguration = 9650,
        
        [EnumMember()]
        [OptionSetMetadata("Organization Insights Notification", Index=359, Lcid=1033, Description="Stores data regarding organization insights notification")]
        OrganizationInsightsNotification = 9690,
        
        [EnumMember()]
        [OptionSetMetadata("Organization Insights Metric", Index=360, Lcid=1033, Description="Stores data regarding organization insights metric")]
        OrganizationInsightsMetric = 9699,
        
        [EnumMember()]
        [OptionSetMetadata("Entitlement", Index=526, Lcid=1033, Description="Defines the amount and type of support a customer should receive.")]
        Entitlement = 9700,
        
        [EnumMember()]
        [OptionSetMetadata("Entitlement Channel", Index=525, Lcid=1033, Description="Defines the amount and type of support for a channel.")]
        EntitlementChannel = 9701,
        
        [EnumMember()]
        [OptionSetMetadata("Entitlement Template", Index=538, Lcid=1033, Description="Contains predefined customer support terms that can be used to created entitlemen" +
            "ts for customers.")]
        EntitlementTemplate = 9702,
        
        [EnumMember()]
        [OptionSetMetadata("Entitlement Template Channel", Index=548, Lcid=1033, Description="Contains predefined support terms for a channel to create entitlements for custom" +
            "ers.")]
        EntitlementTemplateChannel = 9703,
        
        [EnumMember()]
        [OptionSetMetadata("Entitlement Entity Allocation Type Mapping", Index=529, Lcid=1033, Description="Mapping to define which Allocation Types are available for Entity Type to be used" +
            " on Entitlement")]
        EntitlementEntityAllocationTypeMapping = 9704,
        
        [EnumMember()]
        [OptionSetMetadata("SLA", Index=269, Lcid=1033, Description="Contains information about the tracked service-level KPIs for cases that belong t" +
            "o different customers.")]
        SLA = 9750,
        
        [EnumMember()]
        [OptionSetMetadata("SLA Item", Index=265, Lcid=1033, Description="Contains information about a tracked support KPI for a specific customer.")]
        SLAItem = 9751,
        
        [EnumMember()]
        [OptionSetMetadata("SLA KPI Instance", Index=264, Lcid=1033, Description="Service level agreement (SLA) key performance indicator (KPI) instance that is tr" +
            "acked for an individual case")]
        SLAKPIInstance = 9752,
        
        [EnumMember()]
        [OptionSetMetadata("Custom Control", Index=472, Lcid=1033, Description="For internal use only.")]
        CustomControl = 9753,
        
        [EnumMember()]
        [OptionSetMetadata("Custom Control Resource", Index=470, Lcid=1033, Description="Custom Control Resource Id")]
        CustomControlResource = 9754,
        
        [EnumMember()]
        [OptionSetMetadata("Custom Control Default Config", Index=471, Lcid=1033, Description="For internal use only.")]
        CustomControlDefaultConfig = 9755,
        
        [EnumMember()]
        [OptionSetMetadata("Entity", Index=546, Lcid=1033)]
        Entity = 9800,
        
        [EnumMember()]
        [OptionSetMetadata("Attribute", Index=552, Lcid=1033)]
        Attribute = 9808,
        
        [EnumMember()]
        [OptionSetMetadata("OptionSet", Index=368, Lcid=1033)]
        OptionSet = 9809,
        
        [EnumMember()]
        [OptionSetMetadata("Entity Key", Index=540, Lcid=1033)]
        EntityKey = 9810,
        
        [EnumMember()]
        [OptionSetMetadata("Entity Relationship", Index=544, Lcid=1033)]
        EntityRelationship = 9811,
        
        [EnumMember()]
        [OptionSetMetadata("Managed Property", Index=789, Lcid=1033)]
        ManagedProperty = 9812,
        
        [EnumMember()]
        [OptionSetMetadata("Relationship Entity", Index=416, Lcid=1033)]
        RelationshipEntity = 9813,
        
        [EnumMember()]
        [OptionSetMetadata("Relationship Attribute", Index=415, Lcid=1033, Description="Stores relationship attributes mapping for Multi-predicate relationship")]
        RelationshipAttribute = 9814,
        
        [EnumMember()]
        [OptionSetMetadata("Entity Index", Index=541, Lcid=1033, Description="Metadata describing index of an entity")]
        EntityIndex = 9815,
        
        [EnumMember()]
        [OptionSetMetadata("Index Attribute", Index=807, Lcid=1033, Description="Stores index attributes")]
        IndexAttribute = 9816,
        
        [EnumMember()]
        [OptionSetMetadata("Mobile Offline Profile", Index=791, Lcid=1033, Description="Information to administer and manage the data available to mobile devices in offl" +
            "ine mode.")]
        MobileOfflineProfile = 9866,
        
        [EnumMember()]
        [OptionSetMetadata("Mobile Offline Profile Item", Index=790, Lcid=1033, Description="Information on entity availability to mobile devices in offline mode for a mobile" +
            " offline profile item.")]
        MobileOfflineProfileItem = 9867,
        
        [EnumMember()]
        [OptionSetMetadata("Mobile Offline Profile Item Association", Index=865, Lcid=1033, Description="Information on relationships to be used to follow related entity\'s records for mo" +
            "bile offline profile item.")]
        MobileOfflineProfileItemAssociation = 9868,
        
        [EnumMember()]
        [OptionSetMetadata("Sync Error", Index=236, Lcid=1033, Description="Failure reason and other detailed information for a record that failed to sync.")]
        SyncError = 9869,
        
        [EnumMember()]
        [OptionSetMetadata("Offline Command Definition", Index=70, Lcid=1033, Description="For internal use only.")]
        OfflineCommandDefinition = 9870,
        
        [EnumMember()]
        [OptionSetMetadata("Language Provisioning State", Index=800, Lcid=1033, Description="Container for language provisioning checkpoint states")]
        LanguageProvisioningState = 9875,
        
        [EnumMember()]
        [OptionSetMetadata("Ribbon Metadata To Process", Index=395, Lcid=1033, Description="Container for Ribbon Metadata To Process")]
        RibbonMetadataToProcess = 9880,
        
        [EnumMember()]
        [OptionSetMetadata("SolutionHistoryData", Index=231, Lcid=1033, Description="solution history data")]
        SolutionHistoryData = 9890,
        
        [EnumMember()]
        [OptionSetMetadata("Navigation Setting", Index=81, Lcid=1033, Description="Navigation Setting: A setting page or group of pages available for configuration " +
            "within an app. A record representing a group of pages is regarded as the parent " +
            "navigation setting of one or more other records. For internal use only.")]
        NavigationSetting = 9900,
        
        [EnumMember()]
        [OptionSetMetadata("MultiEntitySearch", Index=77, Lcid=1033, Description="Multi Entity Search.")]
        MultiEntitySearch = 9910,
        
        [EnumMember()]
        [OptionSetMetadata("Multi Select Option Value", Index=76, Lcid=1033, Description="Multi Select Option Value")]
        MultiSelectOptionValue = 9912,
        
        [EnumMember()]
        [OptionSetMetadata("Hierarchy Security Configuration", Index=513, Lcid=1033)]
        HierarchySecurityConfiguration = 9919,
        
        [EnumMember()]
        [OptionSetMetadata("Knowledge Base Record", Index=820, Lcid=1033, Description="Metadata of knowledge base (KB) articles associated with Microsoft Dynamics 365 e" +
            "ntities.")]
        KnowledgeBaseRecord = 9930,
        
        [EnumMember()]
        [OptionSetMetadata("Incident KnowledgeBaseRecord", Index=812, Lcid=1033)]
        IncidentKnowledgeBaseRecord = 9931,
        
        [EnumMember()]
        [OptionSetMetadata("Time Stamp Date Mapping", Index=317, Lcid=1033, Description="For internal use only.`")]
        TimeStampDateMapping = 9932,
        
        [EnumMember()]
        [OptionSetMetadata("Azure Service Connection", Index=573, Lcid=1033, Description="Stores connection information for an Azure service")]
        AzureServiceConnection = 9936,
        
        [EnumMember()]
        [OptionSetMetadata("Document Template", Index=457, Lcid=1033, Description="Used to store Document Templates in database in binary format.")]
        DocumentTemplate = 9940,
        
        [EnumMember()]
        [OptionSetMetadata("Personal Document Template", Index=381, Lcid=1033, Description="Used to store Personal Document Templates in database in binary format.")]
        PersonalDocumentTemplate = 9941,
        
        [EnumMember()]
        [OptionSetMetadata("Topic Model Configuration", Index=324, Lcid=1033, Description="Configuration settings for identification of topics using text analytics.")]
        TopicModelConfiguration = 9942,
        
        [EnumMember()]
        [OptionSetMetadata("Topic Model Execution History", Index=320, Lcid=1033, Description="Entity for Topic Model Execution History")]
        TopicModelExecutionHistory = 9943,
        
        [EnumMember()]
        [OptionSetMetadata("Topic Model", Index=328, Lcid=1033, Description="The model for automatic identification of topics using text analytics.")]
        TopicModel = 9944,
        
        [EnumMember()]
        [OptionSetMetadata("Text Analytics Entity Mapping", Index=308, Lcid=1033, Description="")]
        TextAnalyticsEntityMapping = 9945,
        
        [EnumMember()]
        [OptionSetMetadata("Topic History", Index=329, Lcid=1033, Description="Entity for Topic History")]
        TopicHistory = 9946,
        
        [EnumMember()]
        [OptionSetMetadata("Knowledge Search Model", Index=819, Lcid=1033, Description="Configuration for automatic suggestion of knowledge articles using text analytics" +
            " and search")]
        KnowledgeSearchModel = 9947,
        
        [EnumMember()]
        [OptionSetMetadata("Text Analytics Topic", Index=330, Lcid=1033, Description="Text Analytics Topics")]
        TextAnalyticsTopic = 9948,
        
        [EnumMember()]
        [OptionSetMetadata("Advanced Similarity Rule", Index=583, Lcid=1033, Description="A text match rule identifies similar records using keywords and key phrases deter" +
            "mined with text analytics")]
        AdvancedSimilarityRule = 9949,
        
        [EnumMember()]
        [OptionSetMetadata("Office Graph Document", Index=71, Lcid=1033, Description="Office Graph Documents Description")]
        OfficeGraphDocument = 9950,
        
        [EnumMember()]
        [OptionSetMetadata("Similarity Rule", Index=275, Lcid=1033, Description="")]
        SimilarityRule = 9951,
        
        [EnumMember()]
        [OptionSetMetadata("Knowledge Article", Index=821, Lcid=1033, Description="Organizational knowledge for internal and external use.")]
        KnowledgeArticle = 9953,
        
        [EnumMember()]
        [OptionSetMetadata("Knowledge Article Incident", Index=817, Lcid=1033, Description="Association between an knowledge article and incident.")]
        KnowledgeArticleIncident = 9954,
        
        [EnumMember()]
        [OptionSetMetadata("Knowledge Article Views", Index=815, Lcid=1033, Description="No of times an article is viewed per day")]
        KnowledgeArticleViews = 9955,
        
        [EnumMember()]
        [OptionSetMetadata("Language", Index=818, Lcid=1033, Description="Language")]
        Language = 9957,
        
        [EnumMember()]
        [OptionSetMetadata("Feedback", Index=498, Lcid=1033, Description="Container for feedback and ratings for knowledge articles.")]
        Feedback = 9958,
        
        [EnumMember()]
        [OptionSetMetadata("Category", Index=653, Lcid=1033, Description="Entity for categorizing records to make it easier for your customers to find them" +
            " on portals and through search.")]
        Category = 9959,
        
        [EnumMember()]
        [OptionSetMetadata("Knowledge Article Category", Index=816, Lcid=1033, Description="Category for a Knowledge Article.")]
        KnowledgeArticleCategory = 9960,
        
        [EnumMember()]
        [OptionSetMetadata("DelveActionHub", Index=495, Lcid=1033, Description="Delve Action Hubs Description")]
        DelveActionHub = 9961,
        
        [EnumMember()]
        [OptionSetMetadata("Action Card", Index=592, Lcid=1033, Description="Action card entity to show action cards.")]
        ActionCard = 9962,
        
        [EnumMember()]
        [OptionSetMetadata("ActionCardUserState", Index=590, Lcid=1033, Description="")]
        ActionCardUserState = 9968,
        
        [EnumMember()]
        [OptionSetMetadata("Action Card User Settings", Index=591, Lcid=1033, Description="Stores user settings for action cards")]
        ActionCardUserSettings = 9973,
        
        [EnumMember()]
        [OptionSetMetadata("Action Card Type", Index=655, Lcid=1033, Description="To provide master data for the card types list. For internal use only")]
        ActionCardType = 9983,
        
        [EnumMember()]
        [OptionSetMetadata("Interaction for Email", Index=802, Lcid=1033, Description="")]
        InteractionforEmail = 9986,
        
        [EnumMember()]
        [OptionSetMetadata("External Party Item", Index=507, Lcid=1033, Description="Information about external party items that need to access Dynamics 365 from exte" +
            "rnal channels.For internal use only")]
        ExternalPartyItem = 9987,
        
        [EnumMember()]
        [OptionSetMetadata("HolidayWrapper", Index=512, Lcid=1033, Description="")]
        HolidayWrapper = 9996,
        
        [EnumMember()]
        [OptionSetMetadata("Email Signature", Index=527, Lcid=1033, Description="Signature for email message")]
        EmailSignature = 9997,
        
        [EnumMember()]
        [OptionSetMetadata("Profile Album", Index=124, Lcid=1033, Description="Contains user profile images that are stored as attachments and displayed in post" +
            "s.")]
        ProfileAlbum = 10000,
        
        [EnumMember()]
        [OptionSetMetadata("Post Configuration", Index=128, Lcid=1033, Description="Enable or disable entities for Activity Feeds and Yammer collaboration.")]
        PostConfiguration = 10001,
        
        [EnumMember()]
        [OptionSetMetadata("Post Rule Configuration", Index=127, Lcid=1033, Description="Enable or disable system post rules for an entity for Activity Feeds and Yammer.")]
        PostRuleConfiguration = 10002,
        
        [EnumMember()]
        [OptionSetMetadata("Wall View", Index=84, Lcid=1033, Description="Contains information regarding which views are available for users to display on " +
            "their personal walls. Only an administrator can specify the views that users can" +
            " choose from to display on their personal walls.")]
        WallView = 10003,
        
        [EnumMember()]
        [OptionSetMetadata("Filter", Index=83, Lcid=1033, Description="Contains user personalization information regarding which of the administrator’s " +
            "selected views to display on a user’s personal wall.")]
        Filter = 10004,
        
        [EnumMember()]
        [OptionSetMetadata("Event", Index=448, Lcid=1033, Description="")]
        Event = 10007,
        
        [EnumMember()]
        [OptionSetMetadata("Participant", Index=446, Lcid=1033, Description="")]
        Participant = 10008,
        
        [EnumMember()]
        [OptionSetMetadata("Sheep", Index=465, Lcid=1033, Description="")]
        Sheep = 10010,
        
        [EnumMember()]
        [OptionSetMetadata("Field", Index=444, Lcid=1033, Description="")]
        Field = 10011,
        
        [EnumMember()]
        [OptionSetMetadata("Tooth", Index=464, Lcid=1033, Description="")]
        Tooth = 10012,
        
        [EnumMember()]
        [OptionSetMetadata("Man", Index=442, Lcid=1033, Description="")]
        Man = 10013,
        
        [EnumMember()]
        [OptionSetMetadata("Child", Index=487, Lcid=1033, Description="")]
        Child = 10014,
        
        [EnumMember()]
        [OptionSetMetadata("Mild", Index=447, Lcid=1033, Description="")]
        Mild = 10015,
        
        [EnumMember()]
        [OptionSetMetadata("Bus", Index=488, Lcid=1033, Description="")]
        Bus = 10016,
        
        [EnumMember()]
        [OptionSetMetadata("Eniro Config", Index=454, Lcid=1033, Description="")]
        EniroConfig = 10019,
        
        [EnumMember()]
        [OptionSetMetadata("Eniro Log", Index=453, Lcid=1033, Description="")]
        EniroLog = 10020,
        
        [EnumMember()]
        [OptionSetMetadata("Eniro Refresh", Index=452, Lcid=1033, Description="")]
        EniroRefresh = 10021,
        
        [EnumMember()]
        [OptionSetMetadata("OData v4 Data Source", Index=118, Lcid=1033, Description="Data sources used by the OData v4 data provider to access data from an external w" +
            "eb service.")]
        ODatav4DataSource = 10022,
        
        [EnumMember()]
        [OptionSetMetadata("msdyn_relationshipinsightsunifiedconfig", Index=175, Lcid=1033, Description="")]
        msdyn_relationshipinsightsunifiedconfig = 10023,
        
        [EnumMember()]
        [OptionSetMetadata("siconfig", Index=48, Lcid=1033, Description="")]
        siconfig = 10024,
        
        [EnumMember()]
        [OptionSetMetadata("Notes analysis Config", Index=155, Lcid=1033, Description="")]
        NotesanalysisConfig = 10025,
        
        [EnumMember()]
        [OptionSetMetadata("icebreakersconfig", Index=762, Lcid=1033, Description="")]
        icebreakersconfig = 10026,
        
        [EnumMember()]
        [OptionSetMetadata("UntrackedAppointment", Index=94, Lcid=1033, Description="")]
        UntrackedAppointment = 10027,
        
        [EnumMember()]
        [OptionSetMetadata("Country", Index=451, Lcid=1033, Description="")]
        Country = 10031,
        
        [EnumMember()]
        [OptionSetMetadata("EmailBlockerConfig", Index=450, Lcid=1033, Description="")]
        EmailBlockerConfig = 10032,
        
        [EnumMember()]
        [OptionSetMetadata("EmailBlockerLog", Index=449, Lcid=1033, Description="")]
        EmailBlockerLog = 10033,
        
        [EnumMember()]
        [OptionSetMetadata("admin_settings_entity", Index=584, Lcid=1033, Description="")]
        admin_settings_entity = 10034,
        
        [EnumMember()]
        [OptionSetMetadata("Microsoft Teams Collaboration entity", Index=25, Lcid=1033, Description="Entity which stores collaboration data of Dynamics 365 with Microsoft Teams")]
        MicrosoftTeamsCollaborationentity = 10037,
        
        [EnumMember()]
        [OptionSetMetadata("Playbook Callable Context", Index=712, Lcid=1033, Description="")]
        PlaybookCallableContext = 10040,
        
        [EnumMember()]
        [OptionSetMetadata("Playbook activity", Index=131, Lcid=1033, Description="Stores the details of the activities to be created when a playbook is launched.")]
        Playbookactivity = 10041,
        
        [EnumMember()]
        [OptionSetMetadata("Playbook activity attribute", Index=136, Lcid=1033, Description="Stores attribute names and values of the playbook activity.")]
        Playbookactivityattribute = 10042,
        
        [EnumMember()]
        [OptionSetMetadata("Playbook category", Index=135, Lcid=1033, Description="List of categories for which a playbook can be created.")]
        Playbookcategory = 10043,
        
        [EnumMember()]
        [OptionSetMetadata("Playbook", Index=134, Lcid=1033, Description="Actual instance of a playbook template once it is launched.")]
        Playbook = 10044,
        
        [EnumMember()]
        [OptionSetMetadata("Playbook template", Index=130, Lcid=1033, Description="Playbook templates contains the definition of the Playbook that helps to standard" +
            "ize a set of best practices or next best actions.")]
        Playbooktemplate = 10045,
        
        [EnumMember()]
        [OptionSetMetadata("ZipCodeCity", Index=463, Lcid=1033, Description="")]
        ZipCodeCity = 10055,
        
        [EnumMember()]
        [OptionSetMetadata("Solution History", Index=12, Lcid=1033, Description="")]
        SolutionHistory = 10062,
        
        [EnumMember()]
        [OptionSetMetadata("Solution History Data Source", Index=11, Lcid=1033, Description="")]
        SolutionHistoryDataSource = 10063,
        
        [EnumMember()]
        [OptionSetMetadata("Database Version", Index=689, Lcid=1033, Description="Stores the latest database version for a solution, for internal use only.")]
        DatabaseVersion = 10064,
        
        [EnumMember()]
        [OptionSetMetadata("Upgrade Run", Index=93, Lcid=1033, Description="Contains logging information about a run of a Package Deployer package that upgra" +
            "des a solution")]
        UpgradeRun = 10065,
        
        [EnumMember()]
        [OptionSetMetadata("Upgrade Step", Index=89, Lcid=1033, Description="One step during an upgrade, such as a single method or stored procedure.")]
        UpgradeStep = 10066,
        
        [EnumMember()]
        [OptionSetMetadata("Upgrade Version", Index=85, Lcid=1033, Description="Information about upgrading from one release to the next release")]
        UpgradeVersion = 10067,
        
        [EnumMember()]
        [OptionSetMetadata("Solution Component Summary", Index=27, Lcid=1033, Description="")]
        SolutionComponentSummary = 10078,
        
        [EnumMember()]
        [OptionSetMetadata("Solution Component Data Source", Index=45, Lcid=1033, Description="")]
        SolutionComponentDataSource = 10079,
        
        [EnumMember()]
        [OptionSetMetadata("Component Layer", Index=672, Lcid=1033, Description="")]
        ComponentLayer = 10080,
        
        [EnumMember()]
        [OptionSetMetadata("Component Layer Data Source", Index=671, Lcid=1033, Description="")]
        ComponentLayerDataSource = 10081,
        
        [EnumMember()]
        [OptionSetMetadata("Customer Voice survey email template", Index=67, Lcid=1033, Description="Template for an email message that contains the survey invitation link.")]
        CustomerVoicesurveyemailtemplate = 10082,
        
        [EnumMember()]
        [OptionSetMetadata("Customer Voice survey question", Index=57, Lcid=1033, Description="Question in a survey to collect feedback.")]
        CustomerVoicesurveyquestion = 10083,
        
        [EnumMember()]
        [OptionSetMetadata("Customer Voice survey question response", Index=56, Lcid=1033, Description="Response to a question in a survey.")]
        CustomerVoicesurveyquestionresponse = 10084,
        
        [EnumMember()]
        [OptionSetMetadata("Customer Voice survey", Index=60, Lcid=1033, Description="Set of questions to collect feedback.")]
        CustomerVoicesurvey = 10085,
        
        [EnumMember()]
        [OptionSetMetadata("Customer Voice survey invite", Index=59, Lcid=1033, Description="Activity that tracks a survey invitation sent to a person.")]
        CustomerVoicesurveyinvite = 10086,
        
        [EnumMember()]
        [OptionSetMetadata("Customer Voice survey response", Index=68, Lcid=1033, Description="Response to a survey.")]
        CustomerVoicesurveyresponse = 10087,
        
        [EnumMember()]
        [OptionSetMetadata("Customer Voice unsubscribed recipient", Index=78, Lcid=1033, Description="Email address of an unsubscribed respondent.")]
        CustomerVoiceunsubscribedrecipient = 10088,
        
        [EnumMember()]
        [OptionSetMetadata("Forecast definition", Index=751, Lcid=1033, Description="Defines the parameters used for forecasting.")]
        Forecastdefinition = 10142,
        
        [EnumMember()]
        [OptionSetMetadata("Forecast", Index=750, Lcid=1033, Description="Stores sales predictions for your team or organization. For internal use.")]
        Forecast = 10143,
        
        [EnumMember()]
        [OptionSetMetadata("Forecast recurrence", Index=749, Lcid=1033, Description="Stores recalculation information for each recurrence of the forecast hierarchy. F" +
            "or internal use.")]
        Forecastrecurrence = 10144,
        
        [EnumMember()]
        [OptionSetMetadata("inMail", Index=779, Lcid=1033, Description="Custom Activity entity to store LinkedIn inMail records.")]
        inMail = 10145,
        
        [EnumMember()]
        [OptionSetMetadata("Message", Index=775, Lcid=1033, Description="Custom Activity entity to store LinkedIn Message records.")]
        Message = 10146,
        
        [EnumMember()]
        [OptionSetMetadata("Smart Links Content Viewed", Index=774, Lcid=1033, Description="Custom Activity entity to store Smart Links Content Viewed records.")]
        SmartLinksContentViewed = 10147,
        
        [EnumMember()]
        [OptionSetMetadata("LinkedIn Sales Navigator Configuration", Index=390, Lcid=1033, Description="Optional configuration for LinkedIn Sales Navigator integration with Dynamics 365" +
            "")]
        LinkedInSalesNavigatorConfiguration = 10148,
        
        [EnumMember()]
        [OptionSetMetadata("Action Card Regarding", Index=866, Lcid=1033, Description="")]
        ActionCardRegarding = 10149,
        
        [EnumMember()]
        [OptionSetMetadata("Action Card Role Setting", Index=862, Lcid=1033, Description="")]
        ActionCardRoleSetting = 10150,
        
        [EnumMember()]
        [OptionSetMetadata("EntityRankingRule", Index=680, Lcid=1033, Description="")]
        EntityRankingRule = 10151,
        
        [EnumMember()]
        [OptionSetMetadata("flowcardtype", Index=747, Lcid=1033, Description="")]
        flowcardtype = 10152,
        
        [EnumMember()]
        [OptionSetMetadata("salesinsightssettings", Index=40, Lcid=1033, Description="Storing settings for studio feature")]
        salesinsightssettings = 10153,
        
        [EnumMember()]
        [OptionSetMetadata("Analysis Component", Index=833, Lcid=1033, Description="")]
        AnalysisComponent = 10154,
        
        [EnumMember()]
        [OptionSetMetadata("Analysis Job", Index=832, Lcid=1033, Description="")]
        AnalysisJob = 10155,
        
        [EnumMember()]
        [OptionSetMetadata("Analysis Result", Index=831, Lcid=1033, Description="")]
        AnalysisResult = 10156,
        
        [EnumMember()]
        [OptionSetMetadata("Analysis Result Detail", Index=841, Lcid=1033, Description="")]
        AnalysisResultDetail = 10157,
        
        [EnumMember()]
        [OptionSetMetadata("Solution Health Rule", Index=9, Lcid=1033, Description="")]
        SolutionHealthRule = 10158,
        
        [EnumMember()]
        [OptionSetMetadata("Solution Health Rule Argument", Index=8, Lcid=1033, Description="")]
        SolutionHealthRuleArgument = 10159,
        
        [EnumMember()]
        [OptionSetMetadata("Solution Health Rule Set", Index=7, Lcid=1033, Description="Represents a set that owns a number of solution health rules.")]
        SolutionHealthRuleSet = 10160,
        
        [EnumMember()]
        [OptionSetMetadata("Three-Dimensional Model", Index=863, Lcid=1033, Description="")]
        ThreeDimensionalModel = 10161,
        
        [EnumMember()]
        [OptionSetMetadata("Actual", Index=861, Lcid=1033, Description="")]
        Actual = 10162,
        
        [EnumMember()]
        [OptionSetMetadata("Bookable Resource Association", Index=699, Lcid=1033, Description="")]
        BookableResourceAssociation = 10163,
        
        [EnumMember()]
        [OptionSetMetadata("Booking Alert", Index=703, Lcid=1033, Description="Alerts that notify schedule board users of booking issues or information.")]
        BookingAlert = 10164,
        
        [EnumMember()]
        [OptionSetMetadata("Booking Alert Status", Index=702, Lcid=1033, Description="The status of a booking alert.")]
        BookingAlertStatus = 10165,
        
        [EnumMember()]
        [OptionSetMetadata("Booking Change", Index=701, Lcid=1033, Description="An internal entity used to track changes that affect the schedule board.")]
        BookingChange = 10166,
        
        [EnumMember()]
        [OptionSetMetadata("Booking Rule", Index=693, Lcid=1033, Description="Specify custom rules to be validated by the system before saving a booking record" +
            ".")]
        BookingRule = 10167,
        
        [EnumMember()]
        [OptionSetMetadata("Booking Setup Metadata", Index=692, Lcid=1033, Description="")]
        BookingSetupMetadata = 10168,
        
        [EnumMember()]
        [OptionSetMetadata("Business Closure", Index=713, Lcid=1033, Description="")]
        BusinessClosure = 10169,
        
        [EnumMember()]
        [OptionSetMetadata("Client Extension", Index=708, Lcid=1033, Description="")]
        ClientExtension = 10170,
        
        [EnumMember()]
        [OptionSetMetadata("Configuration", Index=670, Lcid=1033, Description="This entity is used to store queries and templates.")]
        Configuration_2 = 10171,
        
        [EnumMember()]
        [OptionSetMetadata("Organizational Unit", Index=111, Lcid=1033, Description="")]
        OrganizationalUnit = 10172,
        
        [EnumMember()]
        [OptionSetMetadata("Priority", Index=205, Lcid=1033, Description="Priorities to be used on bookings. In addition, a color could be specified for ea" +
            "ch priority type and the color selected will be shown visually on the schedule b" +
            "oard.")]
        Priority = 10173,
        
        [EnumMember()]
        [OptionSetMetadata("Requirement Characteristic", Index=171, Lcid=1033, Description="Requirement Characteristic")]
        RequirementCharacteristic = 10174,
        
        [EnumMember()]
        [OptionSetMetadata("Requirement Group", Index=166, Lcid=1033, Description="Service which has resource requirement offering periods")]
        RequirementGroup = 10175,
        
        [EnumMember()]
        [OptionSetMetadata("Requirement Organization Unit", Index=165, Lcid=1033, Description="Requirement of Organization Unit")]
        RequirementOrganizationUnit = 10176,
        
        [EnumMember()]
        [OptionSetMetadata("Requirement Relationship", Index=170, Lcid=1033, Description="Relationship of requirements in the group")]
        RequirementRelationship = 10177,
        
        [EnumMember()]
        [OptionSetMetadata("Requirement Resource Category", Index=169, Lcid=1033, Description="Requirement Resource Category")]
        RequirementResourceCategory = 10178,
        
        [EnumMember()]
        [OptionSetMetadata("Requirement Resource Preference", Index=168, Lcid=1033, Description="Requirement Resource Preference")]
        RequirementResourcePreference = 10179,
        
        [EnumMember()]
        [OptionSetMetadata("Requirement Status", Index=178, Lcid=1033, Description="Requirement Status")]
        RequirementStatus = 10180,
        
        [EnumMember()]
        [OptionSetMetadata("Resource Requirement", Index=186, Lcid=1033, Description="")]
        ResourceRequirement = 10181,
        
        [EnumMember()]
        [OptionSetMetadata("Resource Requirement Detail", Index=191, Lcid=1033, Description="Resource Requirement Time Detail")]
        ResourceRequirementDetail = 10182,
        
        [EnumMember()]
        [OptionSetMetadata("Resource Territory", Index=190, Lcid=1033, Description="Allows to specify for which territory a resource could provide services for")]
        ResourceTerritory = 10183,
        
        [EnumMember()]
        [OptionSetMetadata("Schedule Board Setting", Index=38, Lcid=1033, Description="To store settings of SB by user & tabs")]
        ScheduleBoardSetting = 10184,
        
        [EnumMember()]
        [OptionSetMetadata("Scheduling Parameter", Index=30, Lcid=1033, Description="Scheduling Parameters")]
        SchedulingParameter = 10185,
        
        [EnumMember()]
        [OptionSetMetadata("System User Scheduler Setting", Index=13, Lcid=1033, Description="Stores user-specific settings for the schedule board.")]
        SystemUserSchedulerSetting = 10186,
        
        [EnumMember()]
        [OptionSetMetadata("Fulfillment Preference", Index=19, Lcid=1033, Description="Specify time groups consisting of multiple time windows to be used for scheduling" +
            ", for example.")]
        FulfillmentPreference = 10187,
        
        [EnumMember()]
        [OptionSetMetadata("Time Group Detail", Index=18, Lcid=1033, Description="Specify individual time windows under a time group.")]
        TimeGroupDetail = 10188,
        
        [EnumMember()]
        [OptionSetMetadata("Transaction Origin", Index=91, Lcid=1033, Description="System entity used to record the source of a project cost or sales actual.")]
        TransactionOrigin = 10189,
        
        [EnumMember()]
        [OptionSetMetadata("Work Template", Index=86, Lcid=1033, Description="Template where resource working hours can be saved and reused.")]
        WorkTemplate = 10190,
        
        [EnumMember()]
        [OptionSetMetadata("Agreement", Index=859, Lcid=1033, Description="Provides ability to store details about service agreements you have with your cus" +
            "tomers")]
        Agreement = 10191,
        
        [EnumMember()]
        [OptionSetMetadata("Agreement Booking Date", Index=869, Lcid=1033, Description="Specify the maintenance booking dates for the agreement.")]
        AgreementBookingDate = 10192,
        
        [EnumMember()]
        [OptionSetMetadata("Agreement Booking Incident", Index=879, Lcid=1033, Description="Specify the booking incident for the agreement.")]
        AgreementBookingIncident = 10193,
        
        [EnumMember()]
        [OptionSetMetadata("Agreement Booking Product", Index=878, Lcid=1033, Description="Specify the booking product for the agreement.")]
        AgreementBookingProduct = 10194,
        
        [EnumMember()]
        [OptionSetMetadata("Agreement Booking Service", Index=877, Lcid=1033, Description="Specify the booking service for the agreement.")]
        AgreementBookingService = 10195,
        
        [EnumMember()]
        [OptionSetMetadata("Agreement Booking Service Task", Index=882, Lcid=1033, Description="Specify the booking service task for the agreement.")]
        AgreementBookingServiceTask = 10196,
        
        [EnumMember()]
        [OptionSetMetadata("Agreement Booking Setup", Index=881, Lcid=1033, Description="Specify the maintenance bookings for the agreement.")]
        AgreementBookingSetup = 10197,
        
        [EnumMember()]
        [OptionSetMetadata("Agreement Invoice Date", Index=880, Lcid=1033, Description="Specify the invoice dates for the agreement.")]
        AgreementInvoiceDate = 10198,
        
        [EnumMember()]
        [OptionSetMetadata("Agreement Invoice Product", Index=876, Lcid=1033, Description="Specify the booking product invoice for the agreement.")]
        AgreementInvoiceProduct = 10199,
        
        [EnumMember()]
        [OptionSetMetadata("Agreement Invoice Setup", Index=872, Lcid=1033, Description="Specify the invoices for this agreement.")]
        AgreementInvoiceSetup = 10200,
        
        [EnumMember()]
        [OptionSetMetadata("Agreement Substatus", Index=871, Lcid=1033, Description="Specify custom agreement substatuses, which can be used to specify the current ag" +
            "reement status more precisely.")]
        AgreementSubstatus = 10201,
        
        [EnumMember()]
        [OptionSetMetadata("Booking Journal", Index=697, Lcid=1033, Description="System generated journal to calculate the cost of the resource bookings")]
        BookingJournal = 10202,
        
        [EnumMember()]
        [OptionSetMetadata("Booking Timestamp", Index=691, Lcid=1033, Description="Tracks status changes of bookings and timestamps the change of the status")]
        BookingTimestamp = 10203,
        
        [EnumMember()]
        [OptionSetMetadata("Purchase Order Business Process", Index=696, Lcid=1033, Description="Base entity for process Purchase Order Business Process")]
        PurchaseOrderBusinessProcess = 10204,
        
        [EnumMember()]
        [OptionSetMetadata("Case to Work Order Business Process", Index=694, Lcid=1033, Description="Base entity for process Case to Work Order Business Process")]
        CasetoWorkOrderBusinessProcess = 10205,
        
        [EnumMember()]
        [OptionSetMetadata("Agreement Business Process", Index=704, Lcid=1033, Description="Base entity for process Agreement Business Process")]
        AgreementBusinessProcess = 10206,
        
        [EnumMember()]
        [OptionSetMetadata("Work Order Business Process", Index=714, Lcid=1033, Description="Base entity for process Work Order Business Process")]
        WorkOrderBusinessProcess = 10207,
        
        [EnumMember()]
        [OptionSetMetadata("Customer Asset", Index=664, Lcid=1033, Description="Specify Customer Asset.")]
        CustomerAsset = 10208,
        
        [EnumMember()]
        [OptionSetMetadata("Customer Asset Category", Index=668, Lcid=1033, Description="The Category of Customer Asset.")]
        CustomerAssetCategory = 10209,
        
        [EnumMember()]
        [OptionSetMetadata("Entitlement Application", Index=677, Lcid=1033, Description="Entitlement Application that will drive automatic application when the work was p" +
            "erformed for Service Account, Customer Asset, Asset Category, Incident Type and " +
            "Entitlement.")]
        EntitlementApplication = 10210,
        
        [EnumMember()]
        [OptionSetMetadata("Field Service Price List Item", Index=757, Lcid=1033, Description="Pricing options in addition to or above the Price List Items")]
        FieldServicePriceListItem = 10211,
        
        [EnumMember()]
        [OptionSetMetadata("Field Service Setting", Index=756, Lcid=1033, Description="Settings controlling functionality related to Field Service")]
        FieldServiceSetting = 10212,
        
        [EnumMember()]
        [OptionSetMetadata("Field Service SLA Configuration", Index=752, Lcid=1033, Description="Allows configuration of SLA Type and appropriate behavior based on creation and u" +
            "pdate of SLA KPI Instances related to Field Service entities.")]
        FieldServiceSLAConfiguration = 10213,
        
        [EnumMember()]
        [OptionSetMetadata("Field Service System Job", Index=748, Lcid=1033, Description="An internal entity used to track field service system jobs.")]
        FieldServiceSystemJob = 10214,
        
        [EnumMember()]
        [OptionSetMetadata("Incident Type", Index=761, Lcid=1033, Description="Incident types define the various types of incidents (issues) that a customer cou" +
            "ld report, on which work orders are based.")]
        IncidentType = 10215,
        
        [EnumMember()]
        [OptionSetMetadata("Incident Type Characteristic", Index=765, Lcid=1033, Description="Specify characteristic insident type.")]
        IncidentTypeCharacteristic = 10216,
        
        [EnumMember()]
        [OptionSetMetadata("Incident Type Product", Index=764, Lcid=1033, Description="This entity gives the ability to pre-configure products to be added to a work ord" +
            "er when the related incident is added to the work order")]
        IncidentTypeProduct = 10217,
        
        [EnumMember()]
        [OptionSetMetadata("Incident Type Service", Index=726, Lcid=1033, Description="This entity gives the ability to pre-configure services to be added to a work ord" +
            "er when the related incident is added to the work order")]
        IncidentTypeService = 10218,
        
        [EnumMember()]
        [OptionSetMetadata("Incident Type Service Task", Index=725, Lcid=1033, Description="In this entity you define all the default service tasks that should be added to t" +
            "he work order as soon as this incident type is added to the work order")]
        IncidentTypeServiceTask = 10219,
        
        [EnumMember()]
        [OptionSetMetadata("Incident Types Setup", Index=730, Lcid=1033, Description="Service entity necessary for the setup of the recurrent suggested duration calcul" +
            "ations for all the incident types.")]
        IncidentTypesSetup = 10220,
        
        [EnumMember()]
        [OptionSetMetadata("Incident Type Requirement Group", Index=760, Lcid=1033, Description="")]
        IncidentTypeRequirementGroup = 10221,
        
        [EnumMember()]
        [OptionSetMetadata("Inventory Adjustment", Index=718, Lcid=1033, Description="Records inventory adjustments")]
        InventoryAdjustment = 10222,
        
        [EnumMember()]
        [OptionSetMetadata("Inventory Adjustment Product", Index=723, Lcid=1033, Description="Records product affected by an inventory adjustment or inventory transfer")]
        InventoryAdjustmentProduct = 10223,
        
        [EnumMember()]
        [OptionSetMetadata("Inventory Journal", Index=722, Lcid=1033, Description="Inventory change tracking")]
        InventoryJournal = 10224,
        
        [EnumMember()]
        [OptionSetMetadata("Inventory Transfer", Index=721, Lcid=1033, Description="Records inventory adjustments")]
        InventoryTransfer = 10225,
        
        [EnumMember()]
        [OptionSetMetadata("Order Invoicing Date", Index=121, Lcid=1033, Description="")]
        OrderInvoicingDate = 10226,
        
        [EnumMember()]
        [OptionSetMetadata("Order Invoicing Product", Index=120, Lcid=1033, Description="")]
        OrderInvoicingProduct = 10227,
        
        [EnumMember()]
        [OptionSetMetadata("Order Invoicing Setup", Index=116, Lcid=1033, Description="")]
        OrderInvoicingSetup = 10228,
        
        [EnumMember()]
        [OptionSetMetadata("Order Invoicing Setup Date", Index=112, Lcid=1033, Description="")]
        OrderInvoicingSetupDate = 10229,
        
        [EnumMember()]
        [OptionSetMetadata("Payment", Index=113, Lcid=1033, Description="Specify payment.")]
        Payment = 10230,
        
        [EnumMember()]
        [OptionSetMetadata("Payment Detail", Index=123, Lcid=1033, Description="Specify payment details.")]
        PaymentDetail = 10231,
        
        [EnumMember()]
        [OptionSetMetadata("Payment Method", Index=133, Lcid=1033, Description="Specify payment method.")]
        PaymentMethod = 10232,
        
        [EnumMember()]
        [OptionSetMetadata("Payment Term", Index=132, Lcid=1033, Description="Specify payment terms used for billing.")]
        PaymentTerm = 10233,
        
        [EnumMember()]
        [OptionSetMetadata("Postal Code", Index=129, Lcid=1033, Description="Specify postal codes and their relationship to territories.")]
        PostalCode = 10234,
        
        [EnumMember()]
        [OptionSetMetadata("Product Inventory", Index=199, Lcid=1033, Description="Inventory Record")]
        ProductInventory = 10235,
        
        [EnumMember()]
        [OptionSetMetadata("Purchase Order", Index=217, Lcid=1033, Description="Record Purchase Orders pertaining to Work Orders or otherwise")]
        PurchaseOrder = 10236,
        
        [EnumMember()]
        [OptionSetMetadata("Purchase Order Bill", Index=213, Lcid=1033, Description="Specify purchase order bill.")]
        PurchaseOrderBill = 10237,
        
        [EnumMember()]
        [OptionSetMetadata("Purchase Order Product", Index=209, Lcid=1033, Description="Record products to be ordered on purchase order")]
        PurchaseOrderProduct = 10238,
        
        [EnumMember()]
        [OptionSetMetadata("Purchase Order Receipt", Index=208, Lcid=1033, Description="Specify purchase order receipt.")]
        PurchaseOrderReceipt = 10239,
        
        [EnumMember()]
        [OptionSetMetadata("Purchase Order Receipt Product", Index=207, Lcid=1033, Description="Specify product for purchase order receipt.")]
        PurchaseOrderReceiptProduct = 10240,
        
        [EnumMember()]
        [OptionSetMetadata("Purchase Order SubStatus", Index=212, Lcid=1033, Description="Specify custom PO Substatuses, which can be used to specify the current PO status" +
            " more precisely.")]
        PurchaseOrderSubStatus = 10241,
        
        [EnumMember()]
        [OptionSetMetadata("Quote Booking Incident", Index=211, Lcid=1033, Description="Stores the Incidents associated with Quote and Quote Booking Setup")]
        QuoteBookingIncident = 10242,
        
        [EnumMember()]
        [OptionSetMetadata("Quote Booking Product", Index=210, Lcid=1033, Description="Provides ability to store information about the products that are associated with" +
            " Quote Booking Setup")]
        QuoteBookingProduct = 10243,
        
        [EnumMember()]
        [OptionSetMetadata("Quote Booking Service", Index=192, Lcid=1033, Description="Stores details about the services associated with Quote Booking Setup ")]
        QuoteBookingService = 10244,
        
        [EnumMember()]
        [OptionSetMetadata("Quote Booking Service Task", Index=174, Lcid=1033, Description="")]
        QuoteBookingServiceTask = 10245,
        
        [EnumMember()]
        [OptionSetMetadata("Quote Booking Setup", Index=173, Lcid=1033, Description="Specify the maintenance bookings for the agreement.")]
        QuoteBookingSetup = 10246,
        
        [EnumMember()]
        [OptionSetMetadata("Quote Invoicing Product", Index=172, Lcid=1033, Description="")]
        QuoteInvoicingProduct = 10247,
        
        [EnumMember()]
        [OptionSetMetadata("Quote Invoicing Setup", Index=177, Lcid=1033, Description="")]
        QuoteInvoicingSetup = 10248,
        
        [EnumMember()]
        [OptionSetMetadata("Resource Pay Type", Index=187, Lcid=1033, Description="Pay Types of resources hourly rate to calculate the resource cost")]
        ResourcePayType = 10249,
        
        [EnumMember()]
        [OptionSetMetadata("RMA", Index=185, Lcid=1033, Description="Records RMAs for products to be retuned from customers")]
        RMA = 10250,
        
        [EnumMember()]
        [OptionSetMetadata("RMA Product", Index=181, Lcid=1033, Description="Records products to be returned on an RMA")]
        RMAProduct = 10251,
        
        [EnumMember()]
        [OptionSetMetadata("RMA Receipt", Index=180, Lcid=1033, Description="Specify RMA receipt.")]
        RMAReceipt = 10252,
        
        [EnumMember()]
        [OptionSetMetadata("RMA Receipt Product", Index=179, Lcid=1033, Description="Specify RMA receipt product.")]
        RMAReceiptProduct = 10253,
        
        [EnumMember()]
        [OptionSetMetadata("RMA SubStatus", Index=184, Lcid=1033, Description="Specify custom RMA substatuses, which can be used to specify the current RMA stat" +
            "us more precisely.")]
        RMASubStatus = 10254,
        
        [EnumMember()]
        [OptionSetMetadata("RTV", Index=183, Lcid=1033, Description="Records RTVs for products to be retuned to vendors")]
        RTV = 10255,
        
        [EnumMember()]
        [OptionSetMetadata("RTV Product", Index=182, Lcid=1033, Description="Records products to be returned on an RTV")]
        RTVProduct = 10256,
        
        [EnumMember()]
        [OptionSetMetadata("RTV Substatus", Index=37, Lcid=1033, Description="Specify custom RTV substatuses, which can be used to specify the current RTV stat" +
            "us more precisely.")]
        RTVSubstatus = 10257,
        
        [EnumMember()]
        [OptionSetMetadata("Service Task Type", Index=50, Lcid=1033, Description="Specify the different service task and labor types that your resources perform as" +
            " part of their work orders.")]
        ServiceTaskType = 10258,
        
        [EnumMember()]
        [OptionSetMetadata("Ship Via", Index=52, Lcid=1033, Description="Specify the different shipping methods used.")]
        ShipVia = 10259,
        
        [EnumMember()]
        [OptionSetMetadata("Tax Code", Index=23, Lcid=1033, Description="Store tax related information. Each tax code could contain multiple child tax cod" +
            "es, and in that case the tax rate will be determined by the total tax of all chi" +
            "ldren.")]
        TaxCode = 10260,
        
        [EnumMember()]
        [OptionSetMetadata("Tax Code Detail", Index=22, Lcid=1033, Description="In this entity you can link multiple tax codes together to form a group of tax co" +
            "des to be charged for the customer to form the total tax.")]
        TaxCodeDetail = 10261,
        
        [EnumMember()]
        [OptionSetMetadata("Time Off Request", Index=17, Lcid=1033, Description="Specify time resource time off request.")]
        TimeOffRequest = 10262,
        
        [EnumMember()]
        [OptionSetMetadata("Unique Number", Index=95, Lcid=1033, Description="Internal entity used to store unique number.")]
        UniqueNumber = 10263,
        
        [EnumMember()]
        [OptionSetMetadata("Warehouse", Index=88, Lcid=1033, Description="Warehouses where inventory products are stored and managed")]
        Warehouse = 10264,
        
        [EnumMember()]
        [OptionSetMetadata("Work Order", Index=96, Lcid=1033, Description="Work orders store all information about the job performed for an account. Stores " +
            "incident details, resource, expenses, tasks, communications, billing and more")]
        WorkOrder = 10265,
        
        [EnumMember()]
        [OptionSetMetadata("Work Order Characteristic (Deprecated)", Index=106, Lcid=1033, Description="This entity is deprecated.")]
        WorkOrderCharacteristicDeprecated = 10266,
        
        [EnumMember()]
        [OptionSetMetadata("Work Order Details Generation Queue (Deprecated)", Index=105, Lcid=1033, Description="Pool for WO Generation")]
        WorkOrderDetailsGenerationQueueDeprecated = 10267,
        
        [EnumMember()]
        [OptionSetMetadata("Work Order Incident", Index=104, Lcid=1033, Description="Specify work order incidents reported to you by the client. These are also referr" +
            "ed to as problem codes.")]
        WorkOrderIncident = 10268,
        
        [EnumMember()]
        [OptionSetMetadata("Work Order Product", Index=109, Lcid=1033, Description="In this entity you record all the products proposed and used for a work order")]
        WorkOrderProduct = 10269,
        
        [EnumMember()]
        [OptionSetMetadata("Resource Restriction (Deprecated)", Index=107, Lcid=1033, Description="This entity is deprecated.")]
        ResourceRestrictionDeprecated = 10270,
        
        [EnumMember()]
        [OptionSetMetadata("Work Order Service", Index=103, Lcid=1033, Description="Record all services proposed and performed for work order")]
        WorkOrderService = 10271,
        
        [EnumMember()]
        [OptionSetMetadata("Work Order Service Task", Index=99, Lcid=1033, Description="Store service tasks that are to be performed for this work order")]
        WorkOrderServiceTask = 10272,
        
        [EnumMember()]
        [OptionSetMetadata("Work Order Substatus", Index=98, Lcid=1033, Description="Specify custom work order substatuses, which can be used to specify the current w" +
            "ork order status more precisely.")]
        WorkOrderSubstatus = 10273,
        
        [EnumMember()]
        [OptionSetMetadata("Work Order Type", Index=97, Lcid=1033, Description="Create different work order types to reflect the different types of work that you" +
            "r company offers. Work Order types are used to control various settings on a wor" +
            "k order.")]
        WorkOrderType = 10274,
        
        [EnumMember()]
        [OptionSetMetadata("IoT Alert", Index=731, Lcid=1033, Description="")]
        IoTAlert = 10276,
        
        [EnumMember()]
        [OptionSetMetadata("IoT Device", Index=741, Lcid=1033, Description="Represents a connected device that can be registered with an IoT provider.")]
        IoTDevice = 10277,
        
        [EnumMember()]
        [OptionSetMetadata("IoT Device Category", Index=740, Lcid=1033, Description="Used to categorize IoT devices.")]
        IoTDeviceCategory = 10278,
        
        [EnumMember()]
        [OptionSetMetadata("IoT Device Command", Index=739, Lcid=1033, Description="Represents an outgoing message to a device connected to an IoT provider.")]
        IoTDeviceCommand = 10279,
        
        [EnumMember()]
        [OptionSetMetadata("IoT Device Command Definition", Index=744, Lcid=1033, Description="Metadata for commands that a device or a device category supports.")]
        IoTDeviceCommandDefinition = 10280,
        
        [EnumMember()]
        [OptionSetMetadata("IoT Device Data History", Index=743, Lcid=1033, Description="The name of the entity that holds the device data every time a device data pull o" +
            "ccurs between Dynamics 365 and an IoT provider")]
        IoTDeviceDataHistory = 10281,
        
        [EnumMember()]
        [OptionSetMetadata("IoT Device Property", Index=742, Lcid=1033, Description="Link entity between IoT Device Category and IoT Property Definition. This is used" +
            " to model properties and tags for devices.")]
        IoTDeviceProperty = 10282,
        
        [EnumMember()]
        [OptionSetMetadata("IoT Device Registration History", Index=738, Lcid=1033, Description="Tracks registration activities on an IoT device.")]
        IoTDeviceRegistrationHistory = 10283,
        
        [EnumMember()]
        [OptionSetMetadata("IoT Property Definition", Index=732, Lcid=1033, Description="Defines a device property or a parameter that can be used for one or more command" +
            " definitions.")]
        IoTPropertyDefinition = 10284,
        
        [EnumMember()]
        [OptionSetMetadata("IoT Provider", Index=737, Lcid=1033, Description="The IoT Provider where a device is registered and through which all interactions " +
            "with the device take place")]
        IoTProvider = 10285,
        
        [EnumMember()]
        [OptionSetMetadata("IoT Provider Instance", Index=736, Lcid=1033, Description="An instance of an IoT Provider.")]
        IoTProviderInstance = 10286,
        
        [EnumMember()]
        [OptionSetMetadata("IoT Settings", Index=735, Lcid=1033, Description="")]
        IoTSettings = 10287,
        
        [EnumMember()]
        [OptionSetMetadata("CFS - IoT Alert Process Flow", Index=695, Lcid=1033, Description="Base entity for process CFS - IoT Alert Process Flow")]
        CFSIoTAlertProcessFlow = 10290,
        
        [EnumMember()]
        [OptionSetMetadata("Entity Configuration", Index=682, Lcid=1033, Description="Enables records for an entity type to act as geofences or tracking points.")]
        EntityConfiguration = 10291,
        
        [EnumMember()]
        [OptionSetMetadata("Geofence", Index=768, Lcid=1033, Description="A radial boundary around a physical location that, when active, can be entered or" +
            " exited by geotracked records, in turn generating events.")]
        Geofence = 10292,
        
        [EnumMember()]
        [OptionSetMetadata("Geofence Event", Index=767, Lcid=1033, Description="Created when a geotracked record enters or exits a geofence.")]
        GeofenceEvent = 10293,
        
        [EnumMember()]
        [OptionSetMetadata("Geofencing Settings", Index=772, Lcid=1033, Description="Configure organization-wide settings for geofencing.")]
        GeofencingSettings = 10294,
        
        [EnumMember()]
        [OptionSetMetadata("AI Form Processing Document", Index=840, Lcid=1033, Description="")]
        AIFormProcessingDocument = 10295,
        
        [EnumMember()]
        [OptionSetMetadata("AI Object Detection Image", Index=838, Lcid=1033, Description="")]
        AIObjectDetectionImage = 10296,
        
        [EnumMember()]
        [OptionSetMetadata("AI Object Detection Label", Index=834, Lcid=1033, Description="")]
        AIObjectDetectionLabel = 10297,
        
        [EnumMember()]
        [OptionSetMetadata("AI Object Detection Bounding Box", Index=830, Lcid=1033, Description="")]
        AIObjectDetectionBoundingBox = 10298,
        
        [EnumMember()]
        [OptionSetMetadata("AI Object Detection Image Mapping", Index=829, Lcid=1033, Description="")]
        AIObjectDetectionImageMapping = 10299,
        
        [EnumMember()]
        [OptionSetMetadata("SI Key Value Config", Index=44, Lcid=1033, Description="")]
        SIKeyValueConfig = 10301,
        
        [EnumMember()]
        [OptionSetMetadata("Microsoft Teams Graph resource Entity", Index=690, Lcid=1033, Description="Entity which stores collaboration data of Dynamics 365 with Microsoft Teams")]
        MicrosoftTeamsGraphresourceEntity = 10302,
        
        [EnumMember()]
        [OptionSetMetadata("msdyn_msteamssetting", Index=152, Lcid=1033, Description="")]
        msdyn_msteamssetting = 10303,
        
        [EnumMember()]
        [OptionSetMetadata("Configuration", Index=469, Lcid=1033, Description="")]
        Configuration = 10305,
        
        [EnumMember()]
        [OptionSetMetadata("msdyn_msteamssettingsv2", Index=157, Lcid=1033, Description="")]
        msdyn_msteamssettingsv2 = 10307,
        
        [EnumMember()]
        [OptionSetMetadata("Knowledge Article Image", Index=144, Lcid=1033, Description="")]
        KnowledgeArticleImage = 10308,
        
        [EnumMember()]
        [OptionSetMetadata("Knowledge Article Template", Index=138, Lcid=1033, Description="Organizational Knowledge Article Template for Internal and external creation of K" +
            "nowledge Articles.")]
        KnowledgeArticleTemplate = 10309,
        
        [EnumMember()]
        [OptionSetMetadata("Profile Associations", Index=389, Lcid=1033, Description="For Internal Use Only.")]
        ProfileAssociations = 10310,
        
        [EnumMember()]
        [OptionSetMetadata("Workflow Binary", Index=290, Lcid=1033, Description="")]
        WorkflowBinary = 10311,
        
        [EnumMember()]
        [OptionSetMetadata("Help Page", Index=766, Lcid=1033, Description="")]
        HelpPage = 10312,
        
        [EnumMember()]
        [OptionSetMetadata("Forecast Configuration", Index=746, Lcid=1033, Description="")]
        ForecastConfiguration = 10313,
        
        [EnumMember()]
        [OptionSetMetadata("ApiSettings", Index=602, Lcid=1033, Description="This entity contains the mapping of entity to the mode with which bulk apis are e" +
            "xecuted")]
        ApiSettings = 10314,
        
        [EnumMember()]
        [OptionSetMetadata("Solution Component Attribute Configuration", Index=230, Lcid=1033, Description="")]
        SolutionComponentAttributeConfiguration = 10316,
        
        [EnumMember()]
        [OptionSetMetadata("Auto Capture Rule", Index=845, Lcid=1033, Description="")]
        AutoCaptureRule = 10317,
        
        [EnumMember()]
        [OptionSetMetadata("Auto Capture Settings", Index=700, Lcid=1033, Description="")]
        AutoCaptureSettings = 10318,
        
        [EnumMember()]
        [OptionSetMetadata("Suggested Activity", Index=10, Lcid=1033, Description="")]
        SuggestedActivity = 10319,
        
        [EnumMember()]
        [OptionSetMetadata("Suggested Activity Data Source", Index=6, Lcid=1033, Description="")]
        SuggestedActivityDataSource = 10320,
        
        [EnumMember()]
        [OptionSetMetadata("Suggested Contact", Index=2, Lcid=1033, Description="")]
        SuggestedContact = 10321,
        
        [EnumMember()]
        [OptionSetMetadata("Suggested contacts data source", Index=1, Lcid=1033, Description="")]
        Suggestedcontactsdatasource = 10322,
        
        [EnumMember()]
        [OptionSetMetadata("AI Builder Dataset", Index=870, Lcid=1033, Description="")]
        AIBuilderDataset = 10323,
        
        [EnumMember()]
        [OptionSetMetadata("AI Builder Dataset File", Index=875, Lcid=1033, Description="")]
        AIBuilderDatasetFile = 10324,
        
        [EnumMember()]
        [OptionSetMetadata("AI Builder Datasets Container", Index=873, Lcid=1033, Description="")]
        AIBuilderDatasetsContainer = 10325,
        
        [EnumMember()]
        [OptionSetMetadata("AI Builder File", Index=855, Lcid=1033, Description="")]
        AIBuilderFile = 10326,
        
        [EnumMember()]
        [OptionSetMetadata("AI Builder File Attached Data", Index=837, Lcid=1033, Description="")]
        AIBuilderFileAttachedData = 10327,
        
        [EnumMember()]
        [OptionSetMetadata("response", Index=445, Lcid=1033, Description="")]
        response = 10328,
        
        [EnumMember()]
        [OptionSetMetadata("Account KPI Item", Index=868, Lcid=1033, Description="")]
        AccountKPIItem = 10330,
        
        [EnumMember()]
        [OptionSetMetadata("Activity Analysis CleanUp State", Index=857, Lcid=1033, Description="")]
        ActivityAnalysisCleanUpState = 10331,
        
        [EnumMember()]
        [OptionSetMetadata("Relationship Analytics Config", Index=856, Lcid=1033, Description="")]
        RelationshipAnalyticsConfig = 10332,
        
        [EnumMember()]
        [OptionSetMetadata("Contact KPI Item", Index=674, Lcid=1033, Description="")]
        ContactKPIItem = 10333,
        
        [EnumMember()]
        [OptionSetMetadata("Lead KPI Item", Index=159, Lcid=1033, Description="")]
        LeadKPIItem = 10334,
        
        [EnumMember()]
        [OptionSetMetadata("Most Contacted", Index=154, Lcid=1033, Description="Most Contacted")]
        MostContacted = 10335,
        
        [EnumMember()]
        [OptionSetMetadata("Most Contacted By", Index=153, Lcid=1033, Description="Most Contacted By")]
        MostContactedBy = 10336,
        
        [EnumMember()]
        [OptionSetMetadata("Opportunity KPI Item", Index=117, Lcid=1033, Description="")]
        OpportunityKPIItem = 10337,
        
        [EnumMember()]
        [OptionSetMetadata("OpportunityModelConfig", Index=122, Lcid=1033, Description="")]
        OpportunityModelConfig = 10338,
        
        [EnumMember()]
        [OptionSetMetadata("LeadModelConfig", Index=164, Lcid=1033, Description="")]
        LeadModelConfig = 10339,
        
        [EnumMember()]
        [OptionSetMetadata("ModelPreviewStatus", Index=158, Lcid=1033, Description="")]
        ModelPreviewStatus = 10340,
        
        [EnumMember()]
        [OptionSetMetadata("wkwconfig", Index=87, Lcid=1033, Description="")]
        wkwconfig = 10341,
        
        [EnumMember()]
        [OptionSetMetadata("Action Card Usage", Index=867, Lcid=1033, Description="")]
        ActionCardUsage = 10342,
        
        [EnumMember()]
        [OptionSetMetadata("Action Card Usage Aggregation", Index=858, Lcid=1033, Description="")]
        ActionCardUsageAggregation = 10343,
        
        [EnumMember()]
        [OptionSetMetadata("Solution Component Configuration", Index=228, Lcid=1033, Description="")]
        SolutionComponentConfiguration = 10344,
        
        [EnumMember()]
        [OptionSetMetadata("Security Role Test", Index=455, Lcid=1033, Description="This entity is used by the security role tests, to ensure that XrmMockup handles " +
            "security roles and privilege correct in its database.")]
        SecurityRoleTest = 10345,
        
        [EnumMember()]
        [OptionSetMetadata("StageSolutionUpload", Index=227, Lcid=1033, Description="")]
        StageSolutionUpload = 10351,
        
        [EnumMember()]
        [OptionSetMetadata("ProcessStageParameter", Index=335, Lcid=1033, Description="")]
        ProcessStageParameter = 10352,
        
        [EnumMember()]
        [OptionSetMetadata("AI Builder Dataset Record", Index=874, Lcid=1033, Description="")]
        AIBuilderDatasetRecord = 10353,
        
        [EnumMember()]
        [OptionSetMetadata("IoT Device Visualization Configuration", Index=734, Lcid=1033, Description="IoT Device Visualization Configuration")]
        IoTDeviceVisualizationConfiguration = 10354,
        
        [EnumMember()]
        [OptionSetMetadata("IoT Field Mapping", Index=733, Lcid=1033, Description="")]
        IoTFieldMapping = 10355,
        
        [EnumMember()]
        [OptionSetMetadata("IoT Alert to Case Process", Index=441, Lcid=1033, Description="Base entity for process IoT to Case Process")]
        IoTAlerttoCaseProcess = 10356,
        
        [EnumMember()]
        [OptionSetMetadata("Data Analytics Admin Settings (Deprecated)", Index=851, Lcid=1033, Description="Data Analytics Admin Settings (Deprecated)")]
        DataAnalyticsAdminSettingsDeprecated = 10358,
        
        [EnumMember()]
        [OptionSetMetadata("Data Analytics Report", Index=667, Lcid=1033, Description="Data Analytics Reports")]
        DataAnalyticsReport = 10359,
        
        [EnumMember()]
        [OptionSetMetadata("[Deprecated] Dynamics Customer Service Analytics", Index=850, Lcid=1033, Description="[Deprecated] Controls access to Analytics Reporting Sitemap in Dynamics Customer " +
            "Service App")]
        DeprecatedDynamicsCustomerServiceAnalytics = 10360,
        
        [EnumMember()]
        [OptionSetMetadata("Service Configuration", Index=51, Lcid=1033, Description="")]
        ServiceConfiguration = 10361,
        
        [EnumMember()]
        [OptionSetMetadata("SLA KPI", Index=43, Lcid=1033, Description="")]
        SLAKPI = 10362,
        
        [EnumMember()]
        [OptionSetMetadata("AutoNumberEntity", Index=489, Lcid=1033, Description="")]
        AutoNumberEntity = 10363,
        
        [EnumMember()]
        [OptionSetMetadata("NonRelational Data Source", Index=156, Lcid=1033, Description="")]
        NonRelationalDataSource = 10364,
        
        [EnumMember()]
        [OptionSetMetadata("Data Lake Workspace", Index=492, Lcid=1033, Description="A workspace is a place to store data in Azure Data Lake.")]
        DataLakeWorkspace = 10365,
        
        [EnumMember()]
        [OptionSetMetadata("Data Lake Workspace Permission", Index=491, Lcid=1033, Description="")]
        DataLakeWorkspacePermission = 10366,
        
        [EnumMember()]
        [OptionSetMetadata("ApplicationUser", Index=595, Lcid=1033, Description="Application User that has non-interactive access to the CDS system")]
        ApplicationUser = 10367,
        
        [EnumMember()]
        [OptionSetMetadata("Customer Voice localized survey email template", Index=65, Lcid=1033, Description="Stores localized data for email templates.")]
        CustomerVoicelocalizedsurveyemailtemplate = 10369,
        
        [EnumMember()]
        [OptionSetMetadata("Customer Voice project", Index=61, Lcid=1033, Description="Set of surveys to collect feedback.")]
        CustomerVoiceproject = 10370,
        
        [EnumMember()]
        [OptionSetMetadata("Customer Voice satisfaction metric", Index=55, Lcid=1033, Description="Satisfaction metric defined for a project.")]
        CustomerVoicesatisfactionmetric = 10371,
        
        [EnumMember()]
        [OptionSetMetadata("Predictive Model Score", Index=202, Lcid=1033, Description="")]
        PredictiveModelScore = 10372,
        
        [EnumMember()]
        [OptionSetMetadata("Predictive Score", Index=201, Lcid=1033, Description="")]
        PredictiveScore = 10373,
        
        [EnumMember()]
        [OptionSetMetadata("Sequence", Index=33, Lcid=1033, Description="")]
        Sequence = 10374,
        
        [EnumMember()]
        [OptionSetMetadata("Sequence Target", Index=31, Lcid=1033, Description="")]
        SequenceTarget = 10375,
        
        [EnumMember()]
        [OptionSetMetadata("Sequence Target Step", Index=41, Lcid=1033, Description="")]
        SequenceTargetStep = 10376,
        
        [EnumMember()]
        [OptionSetMetadata("Sales Acceleration settings", Index=36, Lcid=1033, Description="")]
        SalesAccelerationsettings = 10377,
        
        [EnumMember()]
        [OptionSetMetadata("Work Queue Record", Index=102, Lcid=1033, Description="Entity created to store WorkQueue Data Model Records")]
        WorkQueueRecord = 10378,
        
        [EnumMember()]
        [OptionSetMetadata("WQDataSource", Index=82, Lcid=1033, Description="")]
        WQDataSource = 10379,
        
        [EnumMember()]
        [OptionSetMetadata("Solution Component Relationship Configuration", Index=232, Lcid=1033, Description="")]
        SolutionComponentRelationshipConfiguration = 10380,
        
        [EnumMember()]
        [OptionSetMetadata("List Operation", Index=776, Lcid=1033, Description="System operation used to perform lengthy and asynchronous list operations on larg" +
            "e data sets, such as adding members to a list.")]
        ListOperation = 10381,
        
        [EnumMember()]
        [OptionSetMetadata("Model-Driven App Element", Index=600, Lcid=1033, Description="Associates a model-driven app with its components.")]
        ModelDrivenAppElement = 10382,
        
        [EnumMember()]
        [OptionSetMetadata("Model-Driven App Component Node\'s Edge", Index=598, Lcid=1033, Description="Contains Model-Driven App Component Node\'s Edge Information.")]
        ModelDrivenAppComponentNodesEdge = 10383,
        
        [EnumMember()]
        [OptionSetMetadata("Model-Driven App Component Node", Index=597, Lcid=1033, Description="Contains Model-Driven App Component Node Information")]
        ModelDrivenAppComponentNode = 10384,
        
        [EnumMember()]
        [OptionSetMetadata("Model-Driven App Setting", Index=562, Lcid=1033, Description="Holds the value for the associated App Setting Definition.")]
        ModelDrivenAppSetting = 10385,
        
        [EnumMember()]
        [OptionSetMetadata("Setting Definition", Index=252, Lcid=1033, Description="Contains Setting Definitions")]
        SettingDefinition = 10386,
        
        [EnumMember()]
        [OptionSetMetadata("Connection Reference", Index=629, Lcid=1033, Description="")]
        ConnectionReference = 10387,
        
        [EnumMember()]
        [OptionSetMetadata("CanvasApp Extended Metadata", Index=659, Lcid=1033, Description="Holds extended metadata values for canvas apps that are not solution aware")]
        CanvasAppExtendedMetadata = 10388,
        
        [EnumMember()]
        [OptionSetMetadata("PDF Setting", Index=382, Lcid=1033, Description="PDF Settings to save enabled pdf entities")]
        PDFSetting = 10389,
        
        [EnumMember()]
        [OptionSetMetadata("Requirement Dependency", Index=167, Lcid=1033, Description="")]
        RequirementDependency = 10390,
        
        [EnumMember()]
        [OptionSetMetadata("Scheduling Feature Flag", Index=34, Lcid=1033, Description="Update records in this entity to enable a new feature.")]
        SchedulingFeatureFlag = 10391,
        
        [EnumMember()]
        [OptionSetMetadata("Time Entry", Index=15, Lcid=1033, Description="Entity used for time entry.")]
        TimeEntry = 10392,
        
        [EnumMember()]
        [OptionSetMetadata("Time Source", Index=14, Lcid=1033, Description="Settings for Time Entry.")]
        TimeSource = 10393,
        
        [EnumMember()]
        [OptionSetMetadata("Incident Type Suggestion Result", Index=763, Lcid=1033, Description="Incident Type Suggestion Results store all suggestion results.")]
        IncidentTypeSuggestionResult = 10394,
        
        [EnumMember()]
        [OptionSetMetadata("Incident Type Suggestion Run History", Index=745, Lcid=1033, Description="Incident Type Suggestion Run Histories store all suggestion job run histories.")]
        IncidentTypeSuggestionRunHistory = 10395,
        
        [EnumMember()]
        [OptionSetMetadata("ExportSolutionUpload", Index=509, Lcid=1033, Description="")]
        ExportSolutionUpload = 10396,
        
        [EnumMember()]
        [OptionSetMetadata("Rich Text Attachment", Index=189, Lcid=1033, Description="Image or file attached to a rich text field")]
        RichTextAttachment = 10397,
        
        [EnumMember()]
        [OptionSetMetadata("Work Queue Record State", Index=101, Lcid=1033, Description="Entity created to store WorkQueue Records state")]
        WorkQueueRecordState = 10398,
        
        [EnumMember()]
        [OptionSetMetadata("CascadeGrantRevokeAccessRecordsTracker", Index=651, Lcid=1033, Description="")]
        CascadeGrantRevokeAccessRecordsTracker = 10399,
        
        [EnumMember()]
        [OptionSetMetadata("CascadeGrantRevokeAccessVersionTracker", Index=650, Lcid=1033, Description="")]
        CascadeGrantRevokeAccessVersionTracker = 10400,
        
        [EnumMember()]
        [OptionSetMetadata("Food", Index=443, Lcid=1033, Description="")]
        Food = 10402,
        
        [EnumMember()]
        [OptionSetMetadata("AnimalFood", Index=484, Lcid=1033, Description="")]
        AnimalFood = 10403,
        
        [EnumMember()]
        [OptionSetMetadata("Animal", Index=485, Lcid=1033, Description="")]
        Animal = 10404,
        
        [EnumMember()]
        [OptionSetMetadata("Package", Index=362, Lcid=1033, Description="")]
        Package = 10405,
        
        [EnumMember()]
        [OptionSetMetadata("Knowledge Interaction Insight", Index=143, Lcid=1033, Description="Knowledge Interaction Insight")]
        KnowledgeInteractionInsight = 10407,
        
        [EnumMember()]
        [OptionSetMetadata("Knowledge Search Insight", Index=151, Lcid=1033, Description="Knowledge Search Insight")]
        KnowledgeSearchInsight = 10408,
        
        [EnumMember()]
        [OptionSetMetadata("BotContent", Index=64, Lcid=1033, Description="")]
        BotContent = 10409,
        
        [EnumMember()]
        [OptionSetMetadata("ConversationTranscript", Index=478, Lcid=1033, Description="Contains the transcripts of conversations between participants such as customers," +
            " Virtual Agents or Human agents.")]
        ConversationTranscript = 10410,
        
        [EnumMember()]
        [OptionSetMetadata("Chatbot", Index=569, Lcid=1033, Description="Represents a Power Virtual Agents Chatbot. https://powerva.microsoft.com/")]
        Chatbot = 10411,
        
        [EnumMember()]
        [OptionSetMetadata("Chatbot subcomponent", Index=644, Lcid=1033, Description="Holds key authoring components of a Chatbot such a topics, entities, variables, e" +
            "tc.")]
        Chatbotsubcomponent = 10412,
        
        [EnumMember()]
        [OptionSetMetadata("Customer Voice alert", Index=63, Lcid=1033, Description="")]
        CustomerVoicealert = 10416,
        
        [EnumMember()]
        [OptionSetMetadata("Customer Voice alert rule", Index=62, Lcid=1033, Description="")]
        CustomerVoicealertrule = 10417,
        
        [EnumMember()]
        [OptionSetMetadata("Work list user setting", Index=100, Lcid=1033, Description="Entity created to store work list user setting")]
        Worklistusersetting = 10418,
        
        [EnumMember()]
        [OptionSetMetadata("Data Lake Folder", Index=483, Lcid=1033, Description="A folder is a place to store data in Azure Data Lake.")]
        DataLakeFolder = 10419,
        
        [EnumMember()]
        [OptionSetMetadata("Data Lake Folder Permission", Index=493, Lcid=1033, Description="")]
        DataLakeFolderPermission = 10420,
        
        [EnumMember()]
        [OptionSetMetadata("ProvisionLanguageForUser", Index=356, Lcid=1033, Description="")]
        ProvisionLanguageForUser = 10421,
        
        [EnumMember()]
        [OptionSetMetadata("Catalog", Index=649, Lcid=1033, Description="Entity for cataloging records to make it easier for your customers to find them o" +
            "n portals and through search.")]
        Catalog = 10423,
        
        [EnumMember()]
        [OptionSetMetadata("Catalog Assignment", Index=654, Lcid=1033, Description="Entity for assigning records to a specific catalog ")]
        CatalogAssignment = 10424,
        
        [EnumMember()]
        [OptionSetMetadata("Internal Catalog Assignment", Index=806, Lcid=1033, Description="")]
        InternalCatalogAssignment = 10425,
        
        [EnumMember()]
        [OptionSetMetadata("Custom API", Index=481, Lcid=1033, Description="Entity that defines a custom API")]
        CustomAPI = 10426,
        
        [EnumMember()]
        [OptionSetMetadata("Custom API Request Parameter", Index=480, Lcid=1033, Description="Entity that defines a request parameter for a custom API")]
        CustomAPIRequestParameter = 10427,
        
        [EnumMember()]
        [OptionSetMetadata("Custom API Response Property", Index=476, Lcid=1033, Description="Entity that defines a response property for a custom API ")]
        CustomAPIResponseProperty = 10428,
        
        [EnumMember()]
        [OptionSetMetadata("Activity monitor", Index=581, Lcid=1033, Description="Entity that tracks ARC runtime information.")]
        Activitymonitor = 10429,
        
        [EnumMember()]
        [OptionSetMetadata("Available Times Data Source", Index=574, Lcid=1033, Description="")]
        AvailableTimesDataSource = 10430,
        
        [EnumMember()]
        [OptionSetMetadata("resource group data source", Index=438, Lcid=1033, Description="")]
        resourcegroupdatasource = 10431,
        
        [EnumMember()]
        [OptionSetMetadata("Available Times", Index=575, Lcid=1033, Description="")]
        AvailableTimes = 10432,
        
        [EnumMember()]
        [OptionSetMetadata("Virtual Resource Group Resource", Index=302, Lcid=1033, Description="")]
        VirtualResourceGroupResource = 10433,
        
        [EnumMember()]
        [OptionSetMetadata("Migration tracker", Index=162, Lcid=1033, Description="Entity that tracks the migration process of legacy to modern SLA/ARC items")]
        Migrationtracker = 10434,
        
        [EnumMember()]
        [OptionSetMetadata("Asset Category Template Association", Index=852, Lcid=1033, Description="")]
        AssetCategoryTemplateAssociation = 10435,
        
        [EnumMember()]
        [OptionSetMetadata("Asset Template Association", Index=844, Lcid=1033, Description="")]
        AssetTemplateAssociation = 10436,
        
        [EnumMember()]
        [OptionSetMetadata("Customer Asset Attachment", Index=663, Lcid=1033, Description="Attachments for Customer Asset")]
        CustomerAssetAttachment = 10437,
        
        [EnumMember()]
        [OptionSetMetadata("Functional Location", Index=759, Lcid=1033, Description="")]
        FunctionalLocation = 10438,
        
        [EnumMember()]
        [OptionSetMetadata("Property Definition", Index=215, Lcid=1033, Description="")]
        PropertyDefinition = 10439,
        
        [EnumMember()]
        [OptionSetMetadata("Property Asset Association", Index=214, Lcid=1033, Description="")]
        PropertyAssetAssociation = 10440,
        
        [EnumMember()]
        [OptionSetMetadata("Property Log", Index=219, Lcid=1033, Description="")]
        PropertyLog = 10441,
        
        [EnumMember()]
        [OptionSetMetadata("Property Template Association", Index=218, Lcid=1033, Description="")]
        PropertyTemplateAssociation = 10442,
        
        [EnumMember()]
        [OptionSetMetadata("Template For Properties", Index=20, Lcid=1033, Description="")]
        TemplateForProperties = 10443,
        
        [EnumMember()]
        [OptionSetMetadata("App profile", Index=849, Lcid=1033, Description="")]
        Appprofile = 10445,
        
        [EnumMember()]
        [OptionSetMetadata("Application Extension", Index=854, Lcid=1033, Description="")]
        ApplicationExtension = 10446,
        
        [EnumMember()]
        [OptionSetMetadata("Application Tab Template", Index=853, Lcid=1033, Description="")]
        ApplicationTabTemplate = 10447,
        
        [EnumMember()]
        [OptionSetMetadata("Notification Field", Index=137, Lcid=1033, Description="")]
        NotificationField = 10448,
        
        [EnumMember()]
        [OptionSetMetadata("Notification Template", Index=119, Lcid=1033, Description="")]
        NotificationTemplate = 10449,
        
        [EnumMember()]
        [OptionSetMetadata("Session Template", Index=53, Lcid=1033, Description="")]
        SessionTemplate = 10450,
        
        [EnumMember()]
        [OptionSetMetadata("Template Parameter", Index=16, Lcid=1033, Description="")]
        TemplateParameter = 10451,
        
        [EnumMember()]
        [OptionSetMetadata("Channel Integration Framework v2.0 Provider", Index=709, Lcid=1033, Description="Entity that holds the configuration data for a third-party voice channel provider" +
            " based on Channel Integration Framework v2.0")]
        ChannelIntegrationFrameworkv20Provider = 10457,
        
        [EnumMember()]
        [OptionSetMetadata("Productivity pane configuration", Index=110, Lcid=1033, Description="")]
        Productivitypaneconfiguration = 10459,
        
        [EnumMember()]
        [OptionSetMetadata("Pane tab configuration", Index=115, Lcid=1033, Description="")]
        Panetabconfiguration = 10460,
        
        [EnumMember()]
        [OptionSetMetadata("Pane tool configuration", Index=114, Lcid=1033, Description="")]
        Panetoolconfiguration = 10461,
        
        [EnumMember()]
        [OptionSetMetadata("Agent script", Index=193, Lcid=1033, Description="Agent script v2")]
        Agentscript = 10463,
        
        [EnumMember()]
        [OptionSetMetadata("Agent script step", Index=198, Lcid=1033, Description="")]
        Agentscriptstep = 10464,
        
        [EnumMember()]
        [OptionSetMetadata("Action Input Parameter", Index=195, Lcid=1033, Description="Attributes of action input parameters")]
        ActionInputParameter = 10466,
        
        [EnumMember()]
        [OptionSetMetadata("Action Output Parameter", Index=194, Lcid=1033, Description="Attributes of action output parameters")]
        ActionOutputParameter = 10467,
        
        [EnumMember()]
        [OptionSetMetadata("Macro Action Template", Index=197, Lcid=1033, Description="Attributes for macro action template")]
        MacroActionTemplate = 10468,
        
        [EnumMember()]
        [OptionSetMetadata("Macro Solution Configuration", Index=206, Lcid=1033, Description="Macro solution related configurations")]
        MacroSolutionConfiguration = 10469,
        
        [EnumMember()]
        [OptionSetMetadata("Macro Connector", Index=196, Lcid=1033, Description="Attributes for macro connectors")]
        MacroConnector = 10470,
        
        [EnumMember()]
        [OptionSetMetadata("Macro Run History", Index=163, Lcid=1033, Description="Stores history of macro runs")]
        MacroRunHistory = 10471,
        
        [EnumMember()]
        [OptionSetMetadata("Parameter definition", Index=216, Lcid=1033, Description="Macro parameter definitions")]
        Parameterdefinition = 10472,
        
        [EnumMember()]
        [OptionSetMetadata("Adaptive Card Configuration", Index=860, Lcid=1033, Description="Adaptive Card Configuration")]
        AdaptiveCardConfiguration = 10475,
        
        [EnumMember()]
        [OptionSetMetadata("Smartassist configuration", Index=42, Lcid=1033, Description="Stores Smartassist configurations")]
        Smartassistconfiguration = 10476,
        
        [EnumMember()]
        [OptionSetMetadata("Case Enrichment", Index=717, Lcid=1033, Description="")]
        CaseEnrichment = 10478,
        
        [EnumMember()]
        [OptionSetMetadata("Case Suggestion", Index=716, Lcid=1033, Description="")]
        CaseSuggestion = 10479,
        
        [EnumMember()]
        [OptionSetMetadata("Case Suggestion Request Payload", Index=715, Lcid=1033, Description="")]
        CaseSuggestionRequestPayload = 10480,
        
        [EnumMember()]
        [OptionSetMetadata("Case Suggestions Data Souce", Index=711, Lcid=1033, Description="")]
        CaseSuggestionsDataSouce = 10481,
        
        [EnumMember()]
        [OptionSetMetadata("KB Enrichment", Index=145, Lcid=1033, Description="")]
        KBEnrichment = 10482,
        
        [EnumMember()]
        [OptionSetMetadata("Knowledge Article Suggestion", Index=140, Lcid=1033, Description="")]
        KnowledgeArticleSuggestion = 10483,
        
        [EnumMember()]
        [OptionSetMetadata("Knowledge Article Suggestion Data Source", Index=139, Lcid=1033, Description="")]
        KnowledgeArticleSuggestionDataSource = 10484,
        
        [EnumMember()]
        [OptionSetMetadata("Suggestion Interaction", Index=0, Lcid=1033, Description="")]
        SuggestionInteraction = 10485,
        
        [EnumMember()]
        [OptionSetMetadata("Suggestion request payload", Index=5, Lcid=1033, Description="")]
        Suggestionrequestpayload = 10486,
        
        [EnumMember()]
        [OptionSetMetadata("Suggestions Model Summary", Index=4, Lcid=1033, Description="Suggestions Model Summary entity")]
        SuggestionsModelSummary = 10487,
        
        [EnumMember()]
        [OptionSetMetadata("Suggestions Setting", Index=3, Lcid=1033, Description="Suggestions settings entity")]
        SuggestionsSetting = 10488,
        
        [EnumMember()]
        [OptionSetMetadata("Insights", Index=683, Lcid=1033, Description="Analytics and insights feature entity")]
        Insights = 10489,
        
        [EnumMember()]
        [OptionSetMetadata("Case Topic", Index=707, Lcid=1033, Description="")]
        CaseTopic = 10490,
        
        [EnumMember()]
        [OptionSetMetadata("Case Topic Setting", Index=705, Lcid=1033, Description="Case Topic Setting Entity")]
        CaseTopicSetting = 10491,
        
        [EnumMember()]
        [OptionSetMetadata("Case Topic Summary", Index=710, Lcid=1033, Description="Case Topic Summary Entity")]
        CaseTopicSummary = 10492,
        
        [EnumMember()]
        [OptionSetMetadata("Case topic Incident mapping", Index=706, Lcid=1033, Description="Cases mapping with the case topics")]
        CasetopicIncidentmapping = 10493,
        
        [EnumMember()]
        [OptionSetMetadata("Customer Service historical analytics", Index=666, Lcid=1033, Description="Customer Service historical analytics")]
        CustomerServicehistoricalanalytics = 10494,
        
        [EnumMember()]
        [OptionSetMetadata("Knowledge search analytics", Index=684, Lcid=1033, Description="Knowledge search analytics")]
        Knowledgesearchanalytics = 10495,
        
        [EnumMember()]
        [OptionSetMetadata("Knowledge Federated Article", Index=753, Lcid=1033, Description="")]
        KnowledgeFederatedArticle = 10496,
        
        [EnumMember()]
        [OptionSetMetadata("Knowledge Federated Article Incident", Index=758, Lcid=1033, Description="")]
        KnowledgeFederatedArticleIncident = 10497,
        
        [EnumMember()]
        [OptionSetMetadata("Search provider", Index=149, Lcid=1033, Description="")]
        Searchprovider = 10498,
        
        [EnumMember()]
        [OptionSetMetadata("Inspection Template", Index=729, Lcid=1033, Description="Entity used for creating Inspection Templates.")]
        InspectionTemplate = 10499,
        
        [EnumMember()]
        [OptionSetMetadata("Inspection Attachment", Index=728, Lcid=1033, Description="Entity used to save the attachment details of an Inspection Response.")]
        InspectionAttachment = 10500,
        
        [EnumMember()]
        [OptionSetMetadata("Inspection Template Version", Index=724, Lcid=1033, Description="Entity used to save different sets of questions related to an Inspection Template" +
            ".")]
        InspectionTemplateVersion = 10501,
        
        [EnumMember()]
        [OptionSetMetadata("Inspection Response", Index=719, Lcid=1033, Description="Entity used to save the responses of the Inspection.")]
        InspectionResponse = 10502,
        
        [EnumMember()]
        [OptionSetMetadata("Asset Suggestion", Index=204, Lcid=1033, Description="Asset Suggestions")]
        AssetSuggestion = 10503,
        
        [EnumMember()]
        [OptionSetMetadata("Problematic Asset Feedback", Index=203, Lcid=1033, Description="Problematic asset feedback")]
        ProblematicAssetFeedback = 10504,
        
        [EnumMember()]
        [OptionSetMetadata("Geolocation Settings", Index=771, Lcid=1033, Description="Defines a list of geolocation settings.")]
        GeolocationSettings = 10505,
        
        [EnumMember()]
        [OptionSetMetadata("Geolocation Tracking", Index=770, Lcid=1033, Description="Defines entity to store geolocation tracking data.")]
        GeolocationTracking = 10506,
        
        [EnumMember()]
        [OptionSetMetadata("Asset Suggestions Setting", Index=848, Lcid=1033, Description="")]
        AssetSuggestionsSetting = 10507,
        
        [EnumMember()]
        [OptionSetMetadata("Field service historical analytics", Index=676, Lcid=1033, Description="Field service historical analytics")]
        Fieldservicehistoricalanalytics = 10508,
        
        [EnumMember()]
        [OptionSetMetadata("Resource duration (preview)", Index=686, Lcid=1033, Description="Resource duration (preview)")]
        Resourcedurationpreview = 10509,
        
        [EnumMember()]
        [OptionSetMetadata("Predictive duration (preview)", Index=685, Lcid=1033, Description="Predictive duration (preview)")]
        Predictivedurationpreview = 10510,
        
        [EnumMember()]
        [OptionSetMetadata("Predictive Work Hour Duration Setting", Index=200, Lcid=1033, Description="")]
        PredictiveWorkHourDurationSetting = 10511,
        
        [EnumMember()]
        [OptionSetMetadata("Search Telemetry", Index=260, Lcid=1033, Description="Entity to log telemetry that used to improve search quality")]
        SearchTelemetry = 10512,
        
        [EnumMember()]
        [OptionSetMetadata("RevokeInheritedAccessRecordsTracker", Index=429, Lcid=1033, Description="")]
        RevokeInheritedAccessRecordsTracker = 10515,
        
        [EnumMember()]
        [OptionSetMetadata("Customer Voice survey reminder", Index=58, Lcid=1033, Description="Email reminders for surveys created in Customer Voice.")]
        CustomerVoicesurveyreminder = 10524,
        
        [EnumMember()]
        [OptionSetMetadata("Organization Setting", Index=369, Lcid=1033, Description="Holds the value for the associated Organization Setting Definition.")]
        OrganizationSetting = 10526,
        
        [EnumMember()]
        [OptionSetMetadata("OrganizationDataSyncSubscription", Index=371, Lcid=1033, Description="")]
        OrganizationDataSyncSubscription = 10527,
        
        [EnumMember()]
        [OptionSetMetadata("OrganizationDataSyncSubscriptionEntity", Index=370, Lcid=1033, Description="")]
        OrganizationDataSyncSubscriptionEntity = 10528,
        
        [EnumMember()]
        [OptionSetMetadata("Model-Driven App User Setting", Index=558, Lcid=1033, Description="Holds the value for the associated App User Setting Definition.")]
        ModelDrivenAppUserSetting = 10529,
        
        [EnumMember()]
        [OptionSetMetadata("TeamMobileOfflineProfileMembership", Index=314, Lcid=1033, Description="")]
        TeamMobileOfflineProfileMembership = 10530,
        
        [EnumMember()]
        [OptionSetMetadata("UserMobileOfflineProfileMembership", Index=280, Lcid=1033, Description="")]
        UserMobileOfflineProfileMembership = 10531,
        
        [EnumMember()]
        [OptionSetMetadata("Teams Dialer Admin settings", Index=24, Lcid=1033, Description="")]
        TeamsDialerAdminsettings = 10532,
        
        [EnumMember()]
        [OptionSetMetadata("Key Vault Reference", Index=825, Lcid=1033, Description="Contains data that refers to an Azure Key Vault containing credentials used to co" +
            "nnect to secure web-hosted resources.")]
        KeyVaultReference = 10533,
        
        [EnumMember()]
        [OptionSetMetadata("Managed Identity", Index=793, Lcid=1033, Description="Contains data to represent an Azure Active Directory Application used to connect " +
            "to secure web-hosted resources.")]
        ManagedIdentity = 10534,
        
        [EnumMember()]
        [OptionSetMetadata("Customer Voice file response", Index=66, Lcid=1033, Description="Response to a file upload question.")]
        CustomerVoicefileresponse = 10536,
        
        [EnumMember()]
        [OptionSetMetadata("Assignment Rule", Index=842, Lcid=1033, Description="Defines criteria based on which Entities are routed to Users or Sales Team")]
        AssignmentRule = 10537,
        
        [EnumMember()]
        [OptionSetMetadata("Attribute", Index=847, Lcid=1033, Description="Sales Attribute")]
        Attribute_2 = 10538,
        
        [EnumMember()]
        [OptionSetMetadata("Attribute Value", Index=846, Lcid=1033, Description="Attribute Value of sales person or sales team")]
        AttributeValue = 10539,
        
        [EnumMember()]
        [OptionSetMetadata("Assignment Map", Index=843, Lcid=1033, Description="")]
        AssignmentMap = 10540,
        
        [EnumMember()]
        [OptionSetMetadata("Sales Assignment Setting", Index=35, Lcid=1033, Description="")]
        SalesAssignmentSetting = 10541,
        
        [EnumMember()]
        [OptionSetMetadata("Extended User Setting", Index=754, Lcid=1033, Description="")]
        ExtendedUserSetting = 10543,
        
        [EnumMember()]
        [OptionSetMetadata("Segment", Index=29, Lcid=1033, Description="")]
        Segment = 10544,
        
        [EnumMember()]
        [OptionSetMetadata("Activity File Attachment", Index=586, Lcid=1033, Description="Attachment entity with data stored in file type attribute")]
        ActivityFileAttachment = 10547,
        
        [EnumMember()]
        [OptionSetMetadata("Flow Machine", Index=520, Lcid=1033, Description="")]
        FlowMachine = 10548,
        
        [EnumMember()]
        [OptionSetMetadata("Flow Machine Group", Index=519, Lcid=1033, Description="")]
        FlowMachineGroup = 10549,
        
        [EnumMember()]
        [OptionSetMetadata("Inspection", Index=720, Lcid=1033, Description="")]
        Inspection = 10550,
        
        [EnumMember()]
        [OptionSetMetadata("Incident Type Resolution", Index=727, Lcid=1033, Description="")]
        IncidentTypeResolution = 10557,
        
        [EnumMember()]
        [OptionSetMetadata("Resolution", Index=188, Lcid=1033, Description="")]
        Resolution = 10558,
        
        [EnumMember()]
        [OptionSetMetadata("Work Order Resolution", Index=108, Lcid=1033, Description="")]
        WorkOrderResolution = 10561,
        
        [EnumMember()]
        [OptionSetMetadata("Bookable Resource Booking Quick Note", Index=698, Lcid=1033, Description="")]
        BookableResourceBookingQuickNote = 10562,
        
        [EnumMember()]
        [OptionSetMetadata("Knowledge personalization", Index=148, Lcid=1033, Description="Allows users to personalize their knowledge search filters and knowledge authorin" +
            "g language.")]
        Knowledgepersonalization = 10563,
        
        [EnumMember()]
        [OptionSetMetadata("Knowledge article language setting", Index=147, Lcid=1033, Description="Allows you to select default language for knowledge authoring.")]
        Knowledgearticlelanguagesetting = 10564,
        
        [EnumMember()]
        [OptionSetMetadata("Knowledge search personal filter config", Index=142, Lcid=1033, Description="Allows you to configure and manage personal filter settings.")]
        Knowledgesearchpersonalfilterconfig = 10565,
        
        [EnumMember()]
        [OptionSetMetadata("Knowledge search filter", Index=141, Lcid=1033, Description="Allows you to configure and manage filter settings.")]
        Knowledgesearchfilter = 10566,
        
        [EnumMember()]
        [OptionSetMetadata("Unified Routing Setup Tracker", Index=90, Lcid=1033, Description="Unified Routing Setup Trackers")]
        UnifiedRoutingSetupTracker = 10567,
        
        [EnumMember()]
        [OptionSetMetadata("GDPRData", Index=769, Lcid=1033, Description="")]
        GDPRData = 10568,
        
        [EnumMember()]
        [OptionSetMetadata("SegmentsUtil", Index=28, Lcid=1033, Description="")]
        SegmentsUtil = 10569,
        
        [EnumMember()]
        [OptionSetMetadata("Tour", Index=92, Lcid=1033, Description="")]
        Tour = 10570,
        
        [EnumMember()]
        [OptionSetMetadata("Virtual Entity  Metadata", Index=297, Lcid=1033, Description="Holds  metadata values for virtual entities")]
        VirtualEntityMetadata = 10571,
        
        [EnumMember()]
        [OptionSetMetadata("Marketing Form Display Attributes", Index=788, Lcid=1033, Description="Setting to allow customized form for In-app Marketing Form")]
        MarketingFormDisplayAttributes = 10607,
        
        [EnumMember()]
        [OptionSetMetadata("FeatureControlSetting", Index=499, Lcid=1033, Description="featurecontrolsetting")]
        FeatureControlSetting = 10608,
        
        [EnumMember()]
        [OptionSetMetadata("Plugin Package", Index=379, Lcid=1033, Description="")]
        PluginPackage = 10609,
        
        [EnumMember()]
        [OptionSetMetadata("Solution Component Batch Configuration", Index=229, Lcid=1033, Description="")]
        SolutionComponentBatchConfiguration = 10610,
        
        [EnumMember()]
        [OptionSetMetadata("Service Plan Mapping", Index=253, Lcid=1033, Description="Service Plan Mapping")]
        ServicePlanMapping = 10611,
        
        [EnumMember()]
        [OptionSetMetadata("PrincipalEntityBusinessUnitMap", Index=342, Lcid=1033, Description="Internal authorization table to track user authorization changes")]
        PrincipalEntityBusinessUnitMap = 10612,
        
        [EnumMember()]
        [OptionSetMetadata("App Action", Index=601, Lcid=1033, Description="")]
        AppAction = 10613,
        
        [EnumMember()]
        [OptionSetMetadata("Recording", Index=176, Lcid=1033, Description="")]
        Recording = 10614,
        
        [EnumMember()]
        [OptionSetMetadata("PM Inferred Task", Index=126, Lcid=1033, Description="")]
        PMInferredTask = 10615,
        
        [EnumMember()]
        [OptionSetMetadata("PM Recording", Index=125, Lcid=1033, Description="")]
        PMRecording = 10616,
        
        [EnumMember()]
        [OptionSetMetadata("Notification", Index=564, Lcid=1033, Description="Notification to be provided to a user.")]
        Notification_2 = 10617,
        
        [EnumMember()]
        [OptionSetMetadata("dealmanageraccess", Index=679, Lcid=1033, Description="")]
        dealmanageraccess = 10618,
        
        [EnumMember()]
        [OptionSetMetadata("Deal manager settings", Index=678, Lcid=1033, Description="Deal manager settings")]
        Dealmanagersettings = 10619,
        
        [EnumMember()]
        [OptionSetMetadata("Microsoft Teams chat association entity", Index=21, Lcid=1033, Description="For internal use only. Entity which stores association data of Dynamics 365 recor" +
            "ds with Microsoft Teams chat")]
        MicrosoftTeamschatassociationentity = 10620,
        
        [EnumMember()]
        [OptionSetMetadata("Microsoft Teams chat suggestion", Index=26, Lcid=1033, Description="For internal use only")]
        MicrosoftTeamschatsuggestion = 10621,
        
        [EnumMember()]
        [OptionSetMetadata("Conversation Data (Deprecated)", Index=665, Lcid=1033, Description="Primary entity for a conversation")]
        ConversationDataDeprecated = 10622,
        
        [EnumMember()]
        [OptionSetMetadata("KPI Event Data", Index=161, Lcid=1033, Description="Primary entity for a kpi event")]
        KPIEventData = 10623,
        
        [EnumMember()]
        [OptionSetMetadata("KPI Event Definition", Index=160, Lcid=1033, Description="Primary entity for defining a KPI event")]
        KPIEventDefinition = 10624,
        
        [EnumMember()]
        [OptionSetMetadata("Session Data (Deprecated)", Index=49, Lcid=1033, Description="Primary entity for session data")]
        SessionDataDeprecated = 10625,
        
        [EnumMember()]
        [OptionSetMetadata("Session Participant Data (Deprecated)", Index=54, Lcid=1033, Description="")]
        SessionParticipantDataDeprecated = 10626,
        
        [EnumMember()]
        [OptionSetMetadata("Knowledge Article Attachment", Index=146, Lcid=1033, Description="")]
        KnowledgeArticleAttachment = 10627,
        
        [EnumMember()]
        [OptionSetMetadata("Solution Component Count Summary", Index=46, Lcid=1033, Description="")]
        SolutionComponentCountSummary = 10629,
        
        [EnumMember()]
        [OptionSetMetadata("Solution Component Count Data Source", Index=47, Lcid=1033, Description="")]
        SolutionComponentCountDataSource = 10630,
        
        [EnumMember()]
        [OptionSetMetadata("Comment", Index=609, Lcid=1033, Description="A collaborative comment on a maker artifact")]
        Comment_2 = 10631,
        
        [EnumMember()]
        [OptionSetMetadata("Entity link chat configuration", Index=681, Lcid=1033, Description="")]
        Entitylinkchatconfiguration = 10637,
        
        [EnumMember()]
        [OptionSetMetadata("DataflowRefreshHistory", Index=687, Lcid=1033, Description="")]
        DataflowRefreshHistory = 10688,
        
        [EnumMember()]
        [OptionSetMetadata("EntityRefreshHistory", Index=755, Lcid=1033, Description="")]
        EntityRefreshHistory = 10689,
        
        [EnumMember()]
        [OptionSetMetadata("Keywords Description Suggestion Setting", Index=150, Lcid=1033, Description="Keywords Description Suggestion settings entity")]
        KeywordsDescriptionSuggestionSetting = 10690,
        
        [EnumMember()]
        [OptionSetMetadata("Teams Contact Suggestion by AI", Index=835, Lcid=1033, Description="")]
        TeamsContactSuggestionbyAI = 10701,
        
        [EnumMember()]
        [OptionSetMetadata("Contact suggestion rule", Index=673, Lcid=1033, Description="")]
        Contactsuggestionrule = 10702,
        
        [EnumMember()]
        [OptionSetMetadata("Contact suggestion ruleset", Index=669, Lcid=1033, Description="")]
        Contactsuggestionruleset = 10703,
        
        [EnumMember()]
        [OptionSetMetadata("Sequence Stat", Index=32, Lcid=1033, Description="")]
        SequenceStat = 10704,
        
        [EnumMember()]
        [OptionSetMetadata("Sales routing run", Index=39, Lcid=1033, Description="")]
        Salesroutingrun = 10705,
    }
    
    [DataContract()]
    public enum SLA_SLAType {
        
        [EnumMember()]
        [OptionSetMetadata("Standard", Index=0, Lcid=1033)]
        Standard = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Enhanced", Index=1, Lcid=1033)]
        Enhanced = 1,
    }
    
    [DataContract()]
    public enum SLA_StatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("Draft", Index=0, Lcid=1033)]
        Draft = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=1, Lcid=1033)]
        Active = 2,
    }
    
    [DataContract()]
    public enum SLA_slaversion {
        
        [EnumMember()]
        [OptionSetMetadata("Version WC", Index=0, Lcid=1033, Description="SLA getting created from WC", Color="#0000ff")]
        VersionWC = 100000000,
        
        [EnumMember()]
        [OptionSetMetadata("Version UC", Index=1, Lcid=1033, Description="SLA getting created from UCI", Color="#0000ff")]
        VersionUC = 100000001,
    }
    
    [DataContract()]
    public enum SalesOrderState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Submitted", Index=1, Lcid=1033)]
        Submitted = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Canceled", Index=2, Lcid=1033)]
        Canceled = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Fulfilled", Index=3, Lcid=1033)]
        Fulfilled = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Invoiced", Index=4, Lcid=1033)]
        Invoiced = 4,
    }
    
    [DataContract()]
    public enum SalesOrder_FreightTermsCode {
        
        [EnumMember()]
        [OptionSetMetadata("FOB", Index=0, Lcid=1033)]
        FOB = 1,
        
        [EnumMember()]
        [OptionSetMetadata("No Charge", Index=1, Lcid=1033)]
        NoCharge = 2,
    }
    
    [DataContract()]
    public enum SalesOrder_PaymentTermsCode {
        
        [EnumMember()]
        [OptionSetMetadata("Net 30", Index=0, Lcid=1033)]
        Net30 = 1,
        
        [EnumMember()]
        [OptionSetMetadata("2% 10, Net 30", Index=1, Lcid=1033)]
        _210Net30 = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Net 45", Index=2, Lcid=1033)]
        Net45 = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Net 60", Index=3, Lcid=1033)]
        Net60 = 4,
    }
    
    [DataContract()]
    public enum SalesOrder_PriorityCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum SalesOrder_ShipTo_FreightTermsCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum SalesOrder_ShippingMethodCode {
        
        [EnumMember()]
        [OptionSetMetadata("Airborne", Index=0, Lcid=1033)]
        Airborne = 1,
        
        [EnumMember()]
        [OptionSetMetadata("DHL", Index=1, Lcid=1033)]
        DHL = 2,
        
        [EnumMember()]
        [OptionSetMetadata("FedEx", Index=2, Lcid=1033)]
        FedEx = 3,
        
        [EnumMember()]
        [OptionSetMetadata("UPS", Index=3, Lcid=1033)]
        UPS = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Postal Mail", Index=4, Lcid=1033)]
        PostalMail = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Full Load", Index=5, Lcid=1033)]
        FullLoad = 6,
        
        [EnumMember()]
        [OptionSetMetadata("Will Call", Index=6, Lcid=1033)]
        WillCall = 7,
    }
    
    [DataContract()]
    public enum SalesOrder_StatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("New", Index=0, Lcid=1033, Color="#0000ff")]
        New = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Pending", Index=1, Lcid=1033, Color="#0000ff")]
        Pending = 2,
        
        [EnumMember()]
        [OptionSetMetadata("In Progress", Index=3, Lcid=1033, Color="#0000ff")]
        InProgress = 3,
        
        [EnumMember()]
        [OptionSetMetadata("No Money", Index=4, Lcid=1033, Color="#0000ff")]
        NoMoney = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Complete", Index=5, Lcid=1033, Color="#0000ff")]
        Complete = 100001,
        
        [EnumMember()]
        [OptionSetMetadata("Partial", Index=6, Lcid=1033, Color="#0000ff")]
        Partial = 100002,
        
        [EnumMember()]
        [OptionSetMetadata("Invoiced", Index=7, Lcid=1033, Color="#0000ff")]
        Invoiced = 100003,
        
        [EnumMember()]
        [OptionSetMetadata("On hold", Index=2, Lcid=1033, Color="#0000ff")]
        Onhold = 690970000,
    }
    
    [DataContract()]
    public enum SalesOrder_msdyn_ordertype {
        
        [EnumMember()]
        [OptionSetMetadata("Item based", Index=0, Lcid=1033, Color="")]
        Itembased = 192350000,
        
        [EnumMember()]
        [OptionSetMetadata("Service-Maintenance Based", Index=1, Lcid=1033, Color="")]
        ServiceMaintenanceBased = 690970002,
    }
    
    [DataContract()]
    public enum ServiceAppointmentState {
        
        [EnumMember()]
        [OptionSetMetadata("Open", Index=0, Lcid=1033)]
        Open = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Closed", Index=1, Lcid=1033)]
        Closed = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Canceled", Index=2, Lcid=1033)]
        Canceled = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Scheduled", Index=3, Lcid=1033)]
        Scheduled = 3,
    }
    
    [DataContract()]
    public enum ServiceAppointment_InstanceTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Not Recurring", Index=0, Lcid=1033)]
        NotRecurring = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Recurring Master", Index=1, Lcid=1033)]
        RecurringMaster = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Recurring Instance", Index=2, Lcid=1033)]
        RecurringInstance = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Recurring Exception", Index=3, Lcid=1033)]
        RecurringException = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Recurring Future Exception", Index=4, Lcid=1033)]
        RecurringFutureException = 4,
    }
    
    [DataContract()]
    public enum ServiceAppointment_PriorityCode {
        
        [EnumMember()]
        [OptionSetMetadata("Low", Index=0, Lcid=1033)]
        Low = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Normal", Index=1, Lcid=1033)]
        Normal = 1,
        
        [EnumMember()]
        [OptionSetMetadata("High", Index=2, Lcid=1033)]
        High = 2,
    }
    
    [DataContract()]
    public enum ServiceAppointment_StatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("Requested", Index=0, Lcid=1033, Color="#849CE7")]
        Requested = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Tentative", Index=1, Lcid=1033, Color="#CCCCCC")]
        Tentative = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Pending", Index=2, Lcid=1033, Color="#A5CEC6")]
        Pending = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Reserved", Index=3, Lcid=1033, Color="#848284")]
        Reserved = 4,
        
        [EnumMember()]
        [OptionSetMetadata("In Progress", Index=4, Lcid=1033, Color="#669999")]
        InProgress = 6,
        
        [EnumMember()]
        [OptionSetMetadata("Arrived", Index=5, Lcid=1033, Color="#C6A5F7")]
        Arrived = 7,
        
        [EnumMember()]
        [OptionSetMetadata("Completed", Index=6, Lcid=1033, Color="#A5DE63")]
        Completed = 8,
        
        [EnumMember()]
        [OptionSetMetadata("Canceled", Index=7, Lcid=1033, Color="#FF9484")]
        Canceled = 9,
        
        [EnumMember()]
        [OptionSetMetadata("No Show", Index=8, Lcid=1033, Color="#FFB573")]
        NoShow = 10,
    }
    
    [DataContract()]
    public enum SharePointDocumentLocationState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum SharePointDocumentLocation_StatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum SharePointSiteState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum SharePointSite_FolderStructureEntity {
        
        [EnumMember()]
        [OptionSetMetadata("None", Index=0, Lcid=1033)]
        None = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Account", Index=1, Lcid=1033)]
        Account = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Contact", Index=2, Lcid=1033)]
        Contact = 2,
    }
    
    [DataContract()]
    public enum SharePointSite_StatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum SocialActivityState {
        
        [EnumMember()]
        [OptionSetMetadata("Open", Index=0, Lcid=1033)]
        Open = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Completed", Index=1, Lcid=1033)]
        Completed = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Canceled", Index=2, Lcid=1033)]
        Canceled = 2,
    }
    
    [DataContract()]
    public enum SocialActivity_PriorityCode {
        
        [EnumMember()]
        [OptionSetMetadata("Low", Index=0, Lcid=1033)]
        Low = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Normal", Index=1, Lcid=1033)]
        Normal = 1,
        
        [EnumMember()]
        [OptionSetMetadata("High", Index=2, Lcid=1033)]
        High = 2,
    }
    
    [DataContract()]
    public enum SocialActivity_StatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("Completed", Index=0, Lcid=1033)]
        Completed = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Failed", Index=1, Lcid=1033)]
        Failed = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Processing", Index=2, Lcid=1033)]
        Processing = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Open", Index=3, Lcid=1033)]
        Open = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Canceled", Index=4, Lcid=1033)]
        Canceled = 5,
    }
    
    [DataContract()]
    public enum SyncErrorState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Resolved", Index=1, Lcid=1033)]
        Resolved = 1,
    }
    
    [DataContract()]
    public enum SyncError_ErrorType {
        
        [EnumMember()]
        [OptionSetMetadata("Conflict", Index=0, Lcid=1033)]
        Conflict = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Record not found", Index=1, Lcid=1033)]
        Recordnotfound = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Record already exists", Index=2, Lcid=1033)]
        Recordalreadyexists = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Others", Index=3, Lcid=1033)]
        Others = 3,
    }
    
    [DataContract()]
    public enum SyncError_StatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Fixed", Index=1, Lcid=1033)]
        Fixed = 1,
    }
    
    [DataContract()]
    public enum SystemUser_AccessMode {
        
        [EnumMember()]
        [OptionSetMetadata("Read-Write", Index=0, Lcid=1033)]
        ReadWrite = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Administrative", Index=1, Lcid=1033)]
        Administrative = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Read", Index=2, Lcid=1033)]
        Read = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Support User", Index=3, Lcid=1033)]
        SupportUser = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Non-interactive", Index=4, Lcid=1033)]
        Noninteractive = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Delegated Admin", Index=5, Lcid=1033)]
        DelegatedAdmin = 5,
    }
    
    [DataContract()]
    public enum SystemUser_Address1_AddressTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum SystemUser_Address1_ShippingMethodCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum SystemUser_Address2_AddressTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum SystemUser_Address2_ShippingMethodCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum SystemUser_CALType {
        
        [EnumMember()]
        [OptionSetMetadata("Professional", Index=0, Lcid=1033)]
        Professional = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Administrative", Index=1, Lcid=1033)]
        Administrative = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Basic", Index=2, Lcid=1033)]
        Basic = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Device Professional", Index=3, Lcid=1033)]
        DeviceProfessional = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Device Basic", Index=4, Lcid=1033)]
        DeviceBasic = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Essential", Index=5, Lcid=1033)]
        Essential = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Device Essential", Index=6, Lcid=1033)]
        DeviceEssential = 6,
        
        [EnumMember()]
        [OptionSetMetadata("Enterprise", Index=7, Lcid=1033)]
        Enterprise = 7,
        
        [EnumMember()]
        [OptionSetMetadata("Device Enterprise", Index=8, Lcid=1033)]
        DeviceEnterprise = 8,
        
        [EnumMember()]
        [OptionSetMetadata("Sales", Index=9, Lcid=1033)]
        Sales = 9,
        
        [EnumMember()]
        [OptionSetMetadata("Service", Index=10, Lcid=1033)]
        Service = 10,
        
        [EnumMember()]
        [OptionSetMetadata("Field Service", Index=11, Lcid=1033)]
        FieldService = 11,
        
        [EnumMember()]
        [OptionSetMetadata("Project Service", Index=12, Lcid=1033)]
        ProjectService = 12,
    }
    
    [DataContract()]
    public enum SystemUser_DeletedState {
        
        [EnumMember()]
        [OptionSetMetadata("Not deleted", Index=0, Lcid=1033)]
        Notdeleted = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Soft deleted", Index=1, Lcid=1033)]
        Softdeleted = 1,
    }
    
    [DataContract()]
    public enum SystemUser_EmailRouterAccessApproval {
        
        [EnumMember()]
        [OptionSetMetadata("Empty", Index=0, Lcid=1033)]
        Empty = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Approved", Index=1, Lcid=1033)]
        Approved = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Pending Approval", Index=2, Lcid=1033)]
        PendingApproval = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Rejected", Index=3, Lcid=1033)]
        Rejected = 3,
    }
    
    [DataContract()]
    public enum SystemUser_IncomingEmailDeliveryMethod {
        
        [EnumMember()]
        [OptionSetMetadata("None", Index=0, Lcid=1033)]
        None = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Microsoft Dynamics 365 for Outlook", Index=1, Lcid=1033)]
        MicrosoftDynamics365forOutlook = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Server-Side Synchronization or Email Router", Index=2, Lcid=1033)]
        ServerSideSynchronizationorEmailRouter = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Forward Mailbox", Index=3, Lcid=1033)]
        ForwardMailbox = 3,
    }
    
    [DataContract()]
    public enum SystemUser_InviteStatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("Invitation Not Sent", Index=0, Lcid=1033)]
        InvitationNotSent = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Invited", Index=1, Lcid=1033)]
        Invited = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Invitation Near Expired", Index=2, Lcid=1033)]
        InvitationNearExpired = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Invitation Expired", Index=3, Lcid=1033)]
        InvitationExpired = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Invitation Accepted", Index=4, Lcid=1033)]
        InvitationAccepted = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Invitation Rejected", Index=5, Lcid=1033)]
        InvitationRejected = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Invitation Revoked", Index=6, Lcid=1033)]
        InvitationRevoked = 6,
    }
    
    [DataContract()]
    public enum SystemUser_OutgoingEmailDeliveryMethod {
        
        [EnumMember()]
        [OptionSetMetadata("None", Index=0, Lcid=1033)]
        None = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Microsoft Dynamics 365 for Outlook", Index=1, Lcid=1033)]
        MicrosoftDynamics365forOutlook = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Server-Side Synchronization or Email Router", Index=2, Lcid=1033)]
        ServerSideSynchronizationorEmailRouter = 2,
    }
    
    [DataContract()]
    public enum SystemUser_PreferredAddressCode {
        
        [EnumMember()]
        [OptionSetMetadata("Mailing Address", Index=0, Lcid=1033)]
        MailingAddress = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Other Address", Index=1, Lcid=1033)]
        OtherAddress = 2,
    }
    
    [DataContract()]
    public enum SystemUser_PreferredEmailCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum SystemUser_PreferredPhoneCode {
        
        [EnumMember()]
        [OptionSetMetadata("Main Phone", Index=0, Lcid=1033)]
        MainPhone = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Other Phone", Index=1, Lcid=1033)]
        OtherPhone = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Home Phone", Index=2, Lcid=1033)]
        HomePhone = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Mobile Phone", Index=3, Lcid=1033)]
        MobilePhone = 4,
    }
    
    [DataContract()]
    public enum TaskState {
        
        [EnumMember()]
        [OptionSetMetadata("Open", Index=0, Lcid=1033)]
        Open = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Completed", Index=1, Lcid=1033)]
        Completed = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Canceled", Index=2, Lcid=1033)]
        Canceled = 2,
    }
    
    [DataContract()]
    public enum Task_PriorityCode {
        
        [EnumMember()]
        [OptionSetMetadata("Low", Index=0, Lcid=1033)]
        Low = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Normal", Index=1, Lcid=1033)]
        Normal = 1,
        
        [EnumMember()]
        [OptionSetMetadata("High", Index=2, Lcid=1033)]
        High = 2,
    }
    
    [DataContract()]
    public enum Task_StatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("Not Started", Index=0, Lcid=1033)]
        NotStarted = 2,
        
        [EnumMember()]
        [OptionSetMetadata("In Progress", Index=1, Lcid=1033)]
        InProgress = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Waiting on someone else", Index=2, Lcid=1033)]
        Waitingonsomeoneelse = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Completed", Index=3, Lcid=1033)]
        Completed = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Canceled", Index=4, Lcid=1033)]
        Canceled = 6,
        
        [EnumMember()]
        [OptionSetMetadata("Deferred", Index=5, Lcid=1033)]
        Deferred = 7,
    }
    
    [DataContract()]
    public enum Team_MembershipType {
        
        [EnumMember()]
        [OptionSetMetadata("Members and guests", Index=0, Lcid=1033)]
        Membersandguests = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Members", Index=1, Lcid=1033)]
        Members = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Owners", Index=2, Lcid=1033)]
        Owners = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Guests", Index=3, Lcid=1033)]
        Guests = 3,
    }
    
    [DataContract()]
    public enum Team_TeamType {
        
        [EnumMember()]
        [OptionSetMetadata("Owner", Index=0, Lcid=1033)]
        Owner = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Access", Index=1, Lcid=1033)]
        Access = 1,
        
        [EnumMember()]
        [OptionSetMetadata("AAD Security Group", Index=2, Lcid=1033)]
        AADSecurityGroup = 2,
        
        [EnumMember()]
        [OptionSetMetadata("AAD Office Group", Index=3, Lcid=1033)]
        AADOfficeGroup = 3,
    }
    
    [DataContract()]
    public enum TransactionCurrencyState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum TransactionCurrency_StatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum WorkflowState {
        
        [EnumMember()]
        [OptionSetMetadata("Draft", Index=0, Lcid=1033)]
        Draft = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Activated", Index=1, Lcid=1033)]
        Activated = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Suspended", Index=2, Lcid=1033)]
        Suspended = 2,
    }
    
    [DataContract()]
    public enum Workflow_BusinessProcessType {
        
        [EnumMember()]
        [OptionSetMetadata("Business Flow", Index=0, Lcid=1033)]
        BusinessFlow = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Task Flow", Index=1, Lcid=1033)]
        TaskFlow = 1,
    }
    
    [DataContract()]
    public enum Workflow_Category {
        
        [EnumMember()]
        [OptionSetMetadata("Workflow", Index=0, Lcid=1033)]
        Workflow = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Dialog", Index=1, Lcid=1033)]
        Dialog = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Business Rule", Index=2, Lcid=1033)]
        BusinessRule = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Action", Index=3, Lcid=1033)]
        Action = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Business Process Flow", Index=4, Lcid=1033)]
        BusinessProcessFlow = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Modern Flow", Index=5, Lcid=1033)]
        ModernFlow = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Desktop Flow", Index=6, Lcid=1033)]
        DesktopFlow = 6,
        
        [EnumMember()]
        [OptionSetMetadata("Web Client API Flow", Index=7, Lcid=1033)]
        WebClientAPIFlow = 9000,
    }
    
    [DataContract()]
    public enum Workflow_Mode {
        
        [EnumMember()]
        [OptionSetMetadata("Background", Index=0, Lcid=1033)]
        Background = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Real-time", Index=1, Lcid=1033)]
        Realtime = 1,
    }
    
    [DataContract()]
    public enum Workflow_ProcessTriggerScope {
        
        [EnumMember()]
        [OptionSetMetadata("Form", Index=0, Lcid=1033)]
        Form = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Entity", Index=1, Lcid=1033)]
        Entity = 2,
    }
    
    [DataContract()]
    public enum Workflow_Scope {
        
        [EnumMember()]
        [OptionSetMetadata("User", Index=0, Lcid=1033)]
        User = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Business Unit", Index=1, Lcid=1033)]
        BusinessUnit = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Parent: Child Business Units", Index=2, Lcid=1033)]
        ParentChildBusinessUnits = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Organization", Index=3, Lcid=1033)]
        Organization = 4,
    }
    
    [DataContract()]
    public enum Workflow_StatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("Draft", Index=0, Lcid=1033)]
        Draft = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Activated", Index=1, Lcid=1033)]
        Activated = 2,
        
        [EnumMember()]
        [OptionSetMetadata("CompanyDLPViolation", Index=2, Lcid=1033)]
        CompanyDLPViolation = 3,
    }
    
    [DataContract()]
    public enum Workflow_Type {
        
        [EnumMember()]
        [OptionSetMetadata("Definition", Index=0, Lcid=1033)]
        Definition = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Activation", Index=1, Lcid=1033)]
        Activation = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Template", Index=2, Lcid=1033)]
        Template = 3,
    }
    
    [DataContract()]
    public enum Workflow_UIFlowType {
        
        [EnumMember()]
        [OptionSetMetadata("Windows recorder (V1)", Index=0, Lcid=1033)]
        WindowsrecorderV1 = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Selenium IDE", Index=1, Lcid=1033)]
        SeleniumIDE = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Power Automate Desktop", Index=2, Lcid=1033)]
        PowerAutomateDesktop = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Recording", Index=3, Lcid=1033)]
        Recording = 101,
    }
    
    [DataContract()]
    public enum dg_animalState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum dg_animal_statuscode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum dg_animalfoodState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum dg_animalfood_statuscode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum dg_busState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum dg_bus_dg_PicklistUdregnet {
        
        [EnumMember()]
        [OptionSetMetadata("Item1", Index=0, Lcid=1033, Color="#0000ff")]
        Item1 = 123500000,
        
        [EnumMember()]
        [OptionSetMetadata("Item2", Index=1, Lcid=1033, Color="#0000ff")]
        Item2 = 123500001,
        
        [EnumMember()]
        [OptionSetMetadata("Item3", Index=2, Lcid=1033, Color="#0000ff")]
        Item3 = 123500002,
    }
    
    [DataContract()]
    public enum dg_bus_statuscode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033, Color="#0000ff")]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033, Color="#0000ff")]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum dg_childState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum dg_child_statuscode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum dg_configurationState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum dg_configuration_statuscode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum dg_countryState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum dg_country_statuscode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum dg_eventState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum dg_event_statuscode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum dg_fieldState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum dg_field_statuscode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum dg_foodState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum dg_food_statuscode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum dg_manState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum dg_man_statuscode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033, Color="#0000ff")]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033, Color="#0000ff")]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum dg_mildState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum dg_mild_statuscode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033, Color="#0000ff")]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=2, Lcid=1033, Color="#0000ff")]
        Inactive = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Old1", Index=1, Lcid=1033, Color="#0000ff")]
        Old1 = 122930000,
    }
    
    [DataContract()]
    public enum dg_participantState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum dg_participant_statuscode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum dg_secroletestState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum dg_secroletest_statuscode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum dg_sheepState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum dg_sheep_statuscode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum dg_toothState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum dg_tooth_statuscode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum dg_zipCodeCityState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum dg_zipCodeCity_statuscode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum msdyn_PostAlbumState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum msdyn_PostAlbum_statuscode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum msdyn_agreementState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum msdyn_agreement_statuscode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum msdyn_wallsavedqueryusersettingsState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum msdyn_wallsavedqueryusersettings_statuscode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum msdyn_travelchargetype {
        
        [EnumMember()]
        [OptionSetMetadata("Hourly", Index=0, Lcid=1033, Description="")]
        Hourly = 690970000,
        
        [EnumMember()]
        [OptionSetMetadata("Mileage", Index=1, Lcid=1033, Description="")]
        Mileage = 690970001,
        
        [EnumMember()]
        [OptionSetMetadata("Fixed", Index=2, Lcid=1033, Description="")]
        Fixed = 690970002,
        
        [EnumMember()]
        [OptionSetMetadata("None", Index=3, Lcid=1033, Description="")]
        None = 690970003,
    }
    
    [DataContract()]
    public enum activitypointer_activitytypecode {
        
        [EnumMember()]
        [OptionSetMetadata("Appointment", Index=4, Lcid=1033)]
        Appointment = 4201,
        
        [EnumMember()]
        [OptionSetMetadata("Email", Index=2, Lcid=1033)]
        Email = 4202,
        
        [EnumMember()]
        [OptionSetMetadata("Fax", Index=0, Lcid=1033)]
        Fax = 4204,
        
        [EnumMember()]
        [OptionSetMetadata("Case Resolution", Index=11, Lcid=1033)]
        CaseResolution = 4206,
        
        [EnumMember()]
        [OptionSetMetadata("Letter", Index=3, Lcid=1033)]
        Letter = 4207,
        
        [EnumMember()]
        [OptionSetMetadata("Opportunity Close", Index=8, Lcid=1033)]
        OpportunityClose = 4208,
        
        [EnumMember()]
        [OptionSetMetadata("Order Close", Index=9, Lcid=1033)]
        OrderClose = 4209,
        
        [EnumMember()]
        [OptionSetMetadata("Phone Call", Index=1, Lcid=1033)]
        PhoneCall = 4210,
        
        [EnumMember()]
        [OptionSetMetadata("Quote Close", Index=10, Lcid=1033)]
        QuoteClose = 4211,
        
        [EnumMember()]
        [OptionSetMetadata("Task", Index=5, Lcid=1033)]
        Task = 4212,
        
        [EnumMember()]
        [OptionSetMetadata("Service Activity", Index=6, Lcid=1033)]
        ServiceActivity = 4214,
        
        [EnumMember()]
        [OptionSetMetadata("Recurring Appointment", Index=7, Lcid=1033)]
        RecurringAppointment = 4251,
        
        [EnumMember()]
        [OptionSetMetadata("Campaign Response", Index=12, Lcid=1033)]
        CampaignResponse = 4401,
        
        [EnumMember()]
        [OptionSetMetadata("Campaign Activity", Index=13, Lcid=1033)]
        CampaignActivity = 4402,
        
        [EnumMember()]
        [OptionSetMetadata("Bulk Operation", Index=14, Lcid=1033)]
        BulkOperation = 4406,
        
        [EnumMember()]
        [OptionSetMetadata("Survey invite", Index=15, Lcid=1033)]
        Surveyinvite = 10086,
        
        [EnumMember()]
        [OptionSetMetadata("Survey response", Index=16, Lcid=1033)]
        Surveyresponse = 10087,
        
        [EnumMember()]
        [OptionSetMetadata("inMail", Index=17, Lcid=1033)]
        inMail = 10145,
        
        [EnumMember()]
        [OptionSetMetadata("Message", Index=18, Lcid=1033)]
        Message = 10146,
        
        [EnumMember()]
        [OptionSetMetadata("PointDrive Presentation Viewed", Index=19, Lcid=1033)]
        PointDrivePresentationViewed = 10147,
        
        [EnumMember()]
        [OptionSetMetadata("Booking Alert", Index=20, Lcid=1033)]
        BookingAlert = 10164,
        
        [EnumMember()]
        [OptionSetMetadata("Customer Voice alert", Index=21, Lcid=1033)]
        CustomerVoicealert = 10416,
    }
    
    [DataContract()]
    public enum activitypointer_deliveryprioritycode {
        
        [EnumMember()]
        [OptionSetMetadata("Low", Index=0, Lcid=1033)]
        Low = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Normal", Index=1, Lcid=1033)]
        Normal = 1,
        
        [EnumMember()]
        [OptionSetMetadata("High", Index=2, Lcid=1033)]
        High = 2,
    }
    
    [DataContract()]
    public enum socialprofile_community {
        
        [EnumMember()]
        [OptionSetMetadata("Other", Index=2, Lcid=1033, Description="Other default")]
        Other = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Facebook", Index=0, Lcid=1033, Description="Facebook item.")]
        Facebook = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Twitter", Index=1, Lcid=1033, Description="Twitter.")]
        Twitter = 2,
    }
    
    [DataContract()]
    public enum msdyn_crewstrategy {
        
        [EnumMember()]
        [OptionSetMetadata("Cascade and Accept Cascade Completely (Not Recommended)", Index=2, Lcid=1033, Description="Cascade and Accept Cascade Completely (Not Recommended)", Color="#0000ff")]
        CascadeandAcceptCascadeCompletelyNotRecommended = 192350000,
        
        [EnumMember()]
        [OptionSetMetadata("Crew Leader Management", Index=0, Lcid=1033, Description="Crew Leader Management", Color="#0000ff")]
        CrewLeaderManagement = 192350001,
        
        [EnumMember()]
        [OptionSetMetadata("Crew Member Self-Management", Index=1, Lcid=1033, Description="Crew Member Self-Management", Color="#0000ff")]
        CrewMemberSelfManagement = 192350002,
    }
    
    [DataContract()]
    public enum msdyn_enableappointmentsoption {
        
        [EnumMember()]
        [OptionSetMetadata("No", Index=0, Lcid=1033, Color="#0000ff")]
        No = 192350000,
        
        [EnumMember()]
        [OptionSetMetadata("Yes", Index=1, Lcid=1033, Color="#0000ff")]
        Yes = 192350001,
    }
    
    [DataContract()]
    public enum msdyn_generictype {
        
        [EnumMember()]
        [OptionSetMetadata("Service Center", Index=0, Lcid=1033, Description="", Color="#0000ff")]
        ServiceCenter = 690970000,
    }
    
    [DataContract()]
    public enum msdyn_pooltype {
        
        [EnumMember()]
        [OptionSetMetadata("Account", Index=0, Lcid=1033, Description="", Color="#0000ff")]
        Account = 192350000,
        
        [EnumMember()]
        [OptionSetMetadata("Contact", Index=1, Lcid=1033, Description="", Color="#0000ff")]
        Contact = 192350001,
        
        [EnumMember()]
        [OptionSetMetadata("User", Index=2, Lcid=1033, Description="", Color="#0000ff")]
        User = 192350002,
        
        [EnumMember()]
        [OptionSetMetadata("Equipment", Index=3, Lcid=1033, Description="", Color="#0000ff")]
        Equipment = 192350003,
        
        [EnumMember()]
        [OptionSetMetadata("Facility", Index=4, Lcid=1033, Description="", Color="#0000ff")]
        Facility = 192350004,
    }
    
    [DataContract()]
    public enum msdyn_workstartlocationtype {
        
        [EnumMember()]
        [OptionSetMetadata("Resource Address", Index=1, Lcid=1033, Description="", Color="")]
        ResourceAddress = 690970000,
        
        [EnumMember()]
        [OptionSetMetadata("Organizational Unit Address", Index=2, Lcid=1033, Description="", Color="")]
        OrganizationalUnitAddress = 690970001,
        
        [EnumMember()]
        [OptionSetMetadata("Location Agnostic", Index=0, Lcid=1033, Description="", Color="#0000ff")]
        LocationAgnostic = 690970002,
    }
    
    [DataContract()]
    public enum msdyn_crewmembertype {
        
        [EnumMember()]
        [OptionSetMetadata("Leader", Index=0, Lcid=1033, Description="Crew\'s Leader", Color="#0000ff")]
        Leader = 192350000,
        
        [EnumMember()]
        [OptionSetMetadata("Member", Index=1, Lcid=1033, Description="Crew\'s member", Color="#0000ff")]
        Member = 192350001,
        
        [EnumMember()]
        [OptionSetMetadata("None", Index=2, Lcid=1033, Description="", Color="#0000ff")]
        None = 192350002,
    }
    
    [DataContract()]
    public enum msdyn_quicknote_type {
        
        [EnumMember()]
        [OptionSetMetadata("none", Index=0, Lcid=1033)]
        none = 100000000,
        
        [EnumMember()]
        [OptionSetMetadata("text", Index=1, Lcid=1033)]
        text = 100000001,
        
        [EnumMember()]
        [OptionSetMetadata("photo", Index=2, Lcid=1033)]
        photo = 100000002,
        
        [EnumMember()]
        [OptionSetMetadata("video", Index=3, Lcid=1033)]
        video = 100000003,
        
        [EnumMember()]
        [OptionSetMetadata("audio", Index=4, Lcid=1033)]
        audio = 100000004,
        
        [EnumMember()]
        [OptionSetMetadata("file", Index=5, Lcid=1033)]
        file = 100000005,
    }
    
    [DataContract()]
    public enum msdyn_resourceschedulesource {
        
        [EnumMember()]
        [OptionSetMetadata("Resource Scheduling Optimization", Index=0, Lcid=1033, Description="")]
        ResourceSchedulingOptimization = 192350000,
        
        [EnumMember()]
        [OptionSetMetadata("Schedule Board", Index=2, Lcid=1033, Description="")]
        ScheduleBoard = 690970001,
        
        [EnumMember()]
        [OptionSetMetadata("Mobile", Index=3, Lcid=1033, Description="")]
        Mobile = 690970002,
        
        [EnumMember()]
        [OptionSetMetadata("Manual", Index=4, Lcid=1033, Description="")]
        Manual = 690970003,
        
        [EnumMember()]
        [OptionSetMetadata("Schedule Assistant", Index=5, Lcid=1033, Description="")]
        ScheduleAssistant = 690970004,
        
        [EnumMember()]
        [OptionSetMetadata("System - Agreement Schedule", Index=1, Lcid=1033, Description="")]
        SystemAgreementSchedule = 690970005,
    }
    
    [DataContract()]
    public enum msdyn_traveltimetype {
        
        [EnumMember()]
        [OptionSetMetadata("Bing Maps without historical traffic", Index=0, Lcid=1033, Description="", Color="#0000ff")]
        BingMapswithouthistoricaltraffic = 192350000,
        
        [EnumMember()]
        [OptionSetMetadata("Bing Maps with historical traffic", Index=1, Lcid=1033, Description="", Color="#0000ff")]
        BingMapswithhistoricaltraffic = 192350001,
        
        [EnumMember()]
        [OptionSetMetadata("Custom Map Provider", Index=2, Lcid=1033, Description="", Color="#0000ff")]
        CustomMapProvider = 192350002,
        
        [EnumMember()]
        [OptionSetMetadata("Approximate", Index=3, Lcid=1033, Description="", Color="#0000ff")]
        Approximate = 192350003,
    }
    
    [DataContract()]
    public enum msdyn_worklocation {
        
        [EnumMember()]
        [OptionSetMetadata("Onsite", Index=0, Lcid=1033, Description="", Color="")]
        Onsite = 690970000,
        
        [EnumMember()]
        [OptionSetMetadata("Facility", Index=1, Lcid=1033, Description="", Color="")]
        Facility = 690970001,
        
        [EnumMember()]
        [OptionSetMetadata("Location Agnostic", Index=2, Lcid=1033, Description="", Color="#0000ff")]
        LocationAgnostic = 690970002,
    }
    
    [DataContract()]
    public enum msdyn_bookingsystemstatus {
        
        [EnumMember()]
        [OptionSetMetadata("Scheduled", Index=0, Lcid=1033, Description="", Color="#0d62aa")]
        Scheduled = 690970000,
        
        [EnumMember()]
        [OptionSetMetadata("Traveling", Index=1, Lcid=1033, Description="", Color="#b5d47a")]
        Traveling = 690970001,
        
        [EnumMember()]
        [OptionSetMetadata("On Break", Index=3, Lcid=1033, Description="", Color="#54acb6")]
        OnBreak = 690970002,
        
        [EnumMember()]
        [OptionSetMetadata("In Progress", Index=2, Lcid=1033, Description="", Color="#448715")]
        InProgress = 690970003,
        
        [EnumMember()]
        [OptionSetMetadata("Completed", Index=4, Lcid=1033, Description="", Color="#00c7e6")]
        Completed = 690970004,
        
        [EnumMember()]
        [OptionSetMetadata("Canceled", Index=5, Lcid=1033, Description="", Color="#f2f8e8")]
        Canceled = 690970005,
    }
    
    [DataContract()]
    public enum bookableresourcecharacteristictype {
        
        [EnumMember()]
        [OptionSetMetadata("Skill", Index=0, Lcid=1033, Description="")]
        Skill = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Certification", Index=1, Lcid=1033, Description="")]
        Certification = 2,
    }
    
    [DataContract()]
    public enum emailserverprofile_authenticationprotocol {
        
        [EnumMember()]
        [OptionSetMetadata("Auto Detect", Index=0, Lcid=1033)]
        AutoDetect = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Negotiate", Index=1, Lcid=1033)]
        Negotiate = 1,
        
        [EnumMember()]
        [OptionSetMetadata("NTLM", Index=2, Lcid=1033)]
        NTLM = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Basic", Index=3, Lcid=1033)]
        Basic = 3,
        
        [EnumMember()]
        [OptionSetMetadata("OAuth", Index=4, Lcid=1033)]
        OAuth = 4,
    }
    
    [DataContract()]
    public enum entitytype {
        
        [EnumMember()]
        [OptionSetMetadata("Case", Index=0, Lcid=1033, Description="", Color="#0000ff")]
        Case = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Work Order", Index=1, Lcid=1033, Description="Work Order", Color="#0000ff")]
        WorkOrder = 192350000,
    }
    
    [DataContract()]
    public enum msdyn_entitlementappliesto {
        
        [EnumMember()]
        [OptionSetMetadata("Work Order Products", Index=0, Lcid=1033, Description="", Color="#0000ff")]
        WorkOrderProducts = 690970000,
        
        [EnumMember()]
        [OptionSetMetadata("Work Order Services", Index=1, Lcid=1033, Description="", Color="#0000ff")]
        WorkOrderServices = 690970001,
        
        [EnumMember()]
        [OptionSetMetadata("Both Work Order Products & Services", Index=2, Lcid=1033, Description="", Color="#0000ff")]
        BothWorkOrderProductsServices = 690970002,
    }
    
    [DataContract()]
    public enum goal_fiscalperiod {
        
        [EnumMember()]
        [OptionSetMetadata("Quarter 1", Index=0, Lcid=1033)]
        Quarter1 = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Quarter 2", Index=1, Lcid=1033)]
        Quarter2 = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Quarter 3", Index=2, Lcid=1033)]
        Quarter3 = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Quarter 4", Index=3, Lcid=1033)]
        Quarter4 = 4,
        
        [EnumMember()]
        [OptionSetMetadata("January", Index=4, Lcid=1033)]
        January = 101,
        
        [EnumMember()]
        [OptionSetMetadata("February", Index=5, Lcid=1033)]
        February = 102,
        
        [EnumMember()]
        [OptionSetMetadata("March", Index=6, Lcid=1033)]
        March = 103,
        
        [EnumMember()]
        [OptionSetMetadata("April", Index=7, Lcid=1033)]
        April = 104,
        
        [EnumMember()]
        [OptionSetMetadata("May", Index=8, Lcid=1033)]
        May = 105,
        
        [EnumMember()]
        [OptionSetMetadata("June", Index=9, Lcid=1033)]
        June = 106,
        
        [EnumMember()]
        [OptionSetMetadata("July", Index=10, Lcid=1033)]
        July = 107,
        
        [EnumMember()]
        [OptionSetMetadata("August", Index=11, Lcid=1033)]
        August = 108,
        
        [EnumMember()]
        [OptionSetMetadata("September", Index=12, Lcid=1033)]
        September = 109,
        
        [EnumMember()]
        [OptionSetMetadata("October", Index=13, Lcid=1033)]
        October = 110,
        
        [EnumMember()]
        [OptionSetMetadata("November", Index=14, Lcid=1033)]
        November = 111,
        
        [EnumMember()]
        [OptionSetMetadata("December", Index=15, Lcid=1033)]
        December = 112,
        
        [EnumMember()]
        [OptionSetMetadata("Semester 1", Index=16, Lcid=1033)]
        Semester1 = 201,
        
        [EnumMember()]
        [OptionSetMetadata("Semester 2", Index=17, Lcid=1033)]
        Semester2 = 202,
        
        [EnumMember()]
        [OptionSetMetadata("Annual", Index=18, Lcid=1033)]
        Annual = 301,
        
        [EnumMember()]
        [OptionSetMetadata("P1", Index=19, Lcid=1033)]
        P1 = 401,
        
        [EnumMember()]
        [OptionSetMetadata("P2", Index=20, Lcid=1033)]
        P2 = 402,
        
        [EnumMember()]
        [OptionSetMetadata("P3", Index=21, Lcid=1033)]
        P3 = 403,
        
        [EnumMember()]
        [OptionSetMetadata("P4", Index=22, Lcid=1033)]
        P4 = 404,
        
        [EnumMember()]
        [OptionSetMetadata("P5", Index=23, Lcid=1033)]
        P5 = 405,
        
        [EnumMember()]
        [OptionSetMetadata("P6", Index=24, Lcid=1033)]
        P6 = 406,
        
        [EnumMember()]
        [OptionSetMetadata("P7", Index=25, Lcid=1033)]
        P7 = 407,
        
        [EnumMember()]
        [OptionSetMetadata("P8", Index=26, Lcid=1033)]
        P8 = 408,
        
        [EnumMember()]
        [OptionSetMetadata("P9", Index=27, Lcid=1033)]
        P9 = 409,
        
        [EnumMember()]
        [OptionSetMetadata("P10", Index=28, Lcid=1033)]
        P10 = 410,
        
        [EnumMember()]
        [OptionSetMetadata("P11", Index=29, Lcid=1033)]
        P11 = 411,
        
        [EnumMember()]
        [OptionSetMetadata("P12", Index=30, Lcid=1033)]
        P12 = 412,
        
        [EnumMember()]
        [OptionSetMetadata("P13", Index=31, Lcid=1033)]
        P13 = 413,
    }
    
    [DataContract()]
    public enum goal_fiscalyear {
        
        [EnumMember()]
        [OptionSetMetadata("FY1970", Index=68, Lcid=1033)]
        FY1970 = 1970,
        
        [EnumMember()]
        [OptionSetMetadata("FY1971", Index=67, Lcid=1033)]
        FY1971 = 1971,
        
        [EnumMember()]
        [OptionSetMetadata("FY1972", Index=66, Lcid=1033)]
        FY1972 = 1972,
        
        [EnumMember()]
        [OptionSetMetadata("FY1973", Index=65, Lcid=1033)]
        FY1973 = 1973,
        
        [EnumMember()]
        [OptionSetMetadata("FY1974", Index=64, Lcid=1033)]
        FY1974 = 1974,
        
        [EnumMember()]
        [OptionSetMetadata("FY1975", Index=63, Lcid=1033)]
        FY1975 = 1975,
        
        [EnumMember()]
        [OptionSetMetadata("FY1976", Index=62, Lcid=1033)]
        FY1976 = 1976,
        
        [EnumMember()]
        [OptionSetMetadata("FY1977", Index=61, Lcid=1033)]
        FY1977 = 1977,
        
        [EnumMember()]
        [OptionSetMetadata("FY1978", Index=60, Lcid=1033)]
        FY1978 = 1978,
        
        [EnumMember()]
        [OptionSetMetadata("FY1979", Index=59, Lcid=1033)]
        FY1979 = 1979,
        
        [EnumMember()]
        [OptionSetMetadata("FY1980", Index=58, Lcid=1033)]
        FY1980 = 1980,
        
        [EnumMember()]
        [OptionSetMetadata("FY1981", Index=57, Lcid=1033)]
        FY1981 = 1981,
        
        [EnumMember()]
        [OptionSetMetadata("FY1982", Index=56, Lcid=1033)]
        FY1982 = 1982,
        
        [EnumMember()]
        [OptionSetMetadata("FY1983", Index=55, Lcid=1033)]
        FY1983 = 1983,
        
        [EnumMember()]
        [OptionSetMetadata("FY1984", Index=54, Lcid=1033)]
        FY1984 = 1984,
        
        [EnumMember()]
        [OptionSetMetadata("FY1985", Index=53, Lcid=1033)]
        FY1985 = 1985,
        
        [EnumMember()]
        [OptionSetMetadata("FY1986", Index=52, Lcid=1033)]
        FY1986 = 1986,
        
        [EnumMember()]
        [OptionSetMetadata("FY1987", Index=51, Lcid=1033)]
        FY1987 = 1987,
        
        [EnumMember()]
        [OptionSetMetadata("FY1988", Index=50, Lcid=1033)]
        FY1988 = 1988,
        
        [EnumMember()]
        [OptionSetMetadata("FY1989", Index=49, Lcid=1033)]
        FY1989 = 1989,
        
        [EnumMember()]
        [OptionSetMetadata("FY1990", Index=48, Lcid=1033)]
        FY1990 = 1990,
        
        [EnumMember()]
        [OptionSetMetadata("FY1991", Index=47, Lcid=1033)]
        FY1991 = 1991,
        
        [EnumMember()]
        [OptionSetMetadata("FY1992", Index=46, Lcid=1033)]
        FY1992 = 1992,
        
        [EnumMember()]
        [OptionSetMetadata("FY1993", Index=45, Lcid=1033)]
        FY1993 = 1993,
        
        [EnumMember()]
        [OptionSetMetadata("FY1994", Index=44, Lcid=1033)]
        FY1994 = 1994,
        
        [EnumMember()]
        [OptionSetMetadata("FY1995", Index=43, Lcid=1033)]
        FY1995 = 1995,
        
        [EnumMember()]
        [OptionSetMetadata("FY1996", Index=42, Lcid=1033)]
        FY1996 = 1996,
        
        [EnumMember()]
        [OptionSetMetadata("FY1997", Index=41, Lcid=1033)]
        FY1997 = 1997,
        
        [EnumMember()]
        [OptionSetMetadata("FY1998", Index=40, Lcid=1033)]
        FY1998 = 1998,
        
        [EnumMember()]
        [OptionSetMetadata("FY1999", Index=39, Lcid=1033)]
        FY1999 = 1999,
        
        [EnumMember()]
        [OptionSetMetadata("FY2000", Index=38, Lcid=1033)]
        FY2000 = 2000,
        
        [EnumMember()]
        [OptionSetMetadata("FY2001", Index=37, Lcid=1033)]
        FY2001 = 2001,
        
        [EnumMember()]
        [OptionSetMetadata("FY2002", Index=36, Lcid=1033)]
        FY2002 = 2002,
        
        [EnumMember()]
        [OptionSetMetadata("FY2003", Index=35, Lcid=1033)]
        FY2003 = 2003,
        
        [EnumMember()]
        [OptionSetMetadata("FY2004", Index=34, Lcid=1033)]
        FY2004 = 2004,
        
        [EnumMember()]
        [OptionSetMetadata("FY2005", Index=33, Lcid=1033)]
        FY2005 = 2005,
        
        [EnumMember()]
        [OptionSetMetadata("FY2006", Index=32, Lcid=1033)]
        FY2006 = 2006,
        
        [EnumMember()]
        [OptionSetMetadata("FY2007", Index=31, Lcid=1033)]
        FY2007 = 2007,
        
        [EnumMember()]
        [OptionSetMetadata("FY2008", Index=30, Lcid=1033)]
        FY2008 = 2008,
        
        [EnumMember()]
        [OptionSetMetadata("FY2009", Index=29, Lcid=1033)]
        FY2009 = 2009,
        
        [EnumMember()]
        [OptionSetMetadata("FY2010", Index=28, Lcid=1033)]
        FY2010 = 2010,
        
        [EnumMember()]
        [OptionSetMetadata("FY2011", Index=27, Lcid=1033)]
        FY2011 = 2011,
        
        [EnumMember()]
        [OptionSetMetadata("FY2012", Index=26, Lcid=1033)]
        FY2012 = 2012,
        
        [EnumMember()]
        [OptionSetMetadata("FY2013", Index=25, Lcid=1033)]
        FY2013 = 2013,
        
        [EnumMember()]
        [OptionSetMetadata("FY2014", Index=24, Lcid=1033)]
        FY2014 = 2014,
        
        [EnumMember()]
        [OptionSetMetadata("FY2015", Index=23, Lcid=1033)]
        FY2015 = 2015,
        
        [EnumMember()]
        [OptionSetMetadata("FY2016", Index=22, Lcid=1033)]
        FY2016 = 2016,
        
        [EnumMember()]
        [OptionSetMetadata("FY2017", Index=21, Lcid=1033)]
        FY2017 = 2017,
        
        [EnumMember()]
        [OptionSetMetadata("FY2018", Index=20, Lcid=1033)]
        FY2018 = 2018,
        
        [EnumMember()]
        [OptionSetMetadata("FY2019", Index=19, Lcid=1033)]
        FY2019 = 2019,
        
        [EnumMember()]
        [OptionSetMetadata("FY2020", Index=18, Lcid=1033)]
        FY2020 = 2020,
        
        [EnumMember()]
        [OptionSetMetadata("FY2021", Index=17, Lcid=1033)]
        FY2021 = 2021,
        
        [EnumMember()]
        [OptionSetMetadata("FY2022", Index=16, Lcid=1033)]
        FY2022 = 2022,
        
        [EnumMember()]
        [OptionSetMetadata("FY2023", Index=15, Lcid=1033)]
        FY2023 = 2023,
        
        [EnumMember()]
        [OptionSetMetadata("FY2024", Index=14, Lcid=1033)]
        FY2024 = 2024,
        
        [EnumMember()]
        [OptionSetMetadata("FY2025", Index=13, Lcid=1033)]
        FY2025 = 2025,
        
        [EnumMember()]
        [OptionSetMetadata("FY2026", Index=12, Lcid=1033)]
        FY2026 = 2026,
        
        [EnumMember()]
        [OptionSetMetadata("FY2027", Index=11, Lcid=1033)]
        FY2027 = 2027,
        
        [EnumMember()]
        [OptionSetMetadata("FY2028", Index=10, Lcid=1033)]
        FY2028 = 2028,
        
        [EnumMember()]
        [OptionSetMetadata("FY2029", Index=9, Lcid=1033)]
        FY2029 = 2029,
        
        [EnumMember()]
        [OptionSetMetadata("FY2030", Index=8, Lcid=1033)]
        FY2030 = 2030,
        
        [EnumMember()]
        [OptionSetMetadata("FY2031", Index=7, Lcid=1033)]
        FY2031 = 2031,
        
        [EnumMember()]
        [OptionSetMetadata("FY2032", Index=6, Lcid=1033)]
        FY2032 = 2032,
        
        [EnumMember()]
        [OptionSetMetadata("FY2033", Index=5, Lcid=1033)]
        FY2033 = 2033,
        
        [EnumMember()]
        [OptionSetMetadata("FY2034", Index=4, Lcid=1033)]
        FY2034 = 2034,
        
        [EnumMember()]
        [OptionSetMetadata("FY2035", Index=3, Lcid=1033)]
        FY2035 = 2035,
        
        [EnumMember()]
        [OptionSetMetadata("FY2036", Index=2, Lcid=1033)]
        FY2036 = 2036,
        
        [EnumMember()]
        [OptionSetMetadata("FY2037", Index=1, Lcid=1033)]
        FY2037 = 2037,
        
        [EnumMember()]
        [OptionSetMetadata("FY2038", Index=0, Lcid=1033)]
        FY2038 = 2038,
    }
    
    [DataContract()]
    public enum metric_goaltype {
        
        [EnumMember()]
        [OptionSetMetadata("Money", Index=0, Lcid=1033)]
        Money = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Decimal", Index=1, Lcid=1033)]
        Decimal = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Integer", Index=2, Lcid=1033)]
        Integer = 2,
    }
    
    [DataContract()]
    public enum incident_caseorigincode {
        
        [EnumMember()]
        [OptionSetMetadata("Phone", Index=0, Lcid=1033, Color="#FCD116")]
        Phone = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Email", Index=1, Lcid=1033, Color="#00B294")]
        Email = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Web", Index=2, Lcid=1033, Color="#FF8C00")]
        Web = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Facebook", Index=3, Lcid=1033, Color="#0086FF")]
        Facebook = 2483,
        
        [EnumMember()]
        [OptionSetMetadata("Twitter", Index=4, Lcid=1033, Color="#0086FF")]
        Twitter = 3986,
        
        [EnumMember()]
        [OptionSetMetadata("IoT", Index=5, Lcid=1033, Description="", Color="#0000ff")]
        IoT = 700610000,
    }
    
    [DataContract()]
    public enum servicestage {
        
        [EnumMember()]
        [OptionSetMetadata("Identify", Index=0, Lcid=1033)]
        Identify = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Research", Index=1, Lcid=1033)]
        Research = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Resolve", Index=2, Lcid=1033)]
        Resolve = 2,
    }
    
    [DataContract()]
    public enum socialactivity_postmessagetype {
        
        [EnumMember()]
        [OptionSetMetadata("Public Message", Index=0, Lcid=1033)]
        PublicMessage = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Private Message", Index=1, Lcid=1033)]
        PrivateMessage = 1,
    }
    
    [DataContract()]
    public enum qooi_pricingerrorcode {
        
        [EnumMember()]
        [OptionSetMetadata("None", Index=0, Lcid=1033)]
        None = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Detail Error", Index=1, Lcid=1033)]
        DetailError = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Missing Price Level", Index=2, Lcid=1033)]
        MissingPriceLevel = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive Price Level", Index=3, Lcid=1033)]
        InactivePriceLevel = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Missing Quantity", Index=4, Lcid=1033)]
        MissingQuantity = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Missing Unit Price", Index=5, Lcid=1033)]
        MissingUnitPrice = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Missing Product", Index=6, Lcid=1033)]
        MissingProduct = 6,
        
        [EnumMember()]
        [OptionSetMetadata("Invalid Product", Index=7, Lcid=1033)]
        InvalidProduct = 7,
        
        [EnumMember()]
        [OptionSetMetadata("Missing Pricing Code", Index=8, Lcid=1033)]
        MissingPricingCode = 8,
        
        [EnumMember()]
        [OptionSetMetadata("Invalid Pricing Code", Index=9, Lcid=1033)]
        InvalidPricingCode = 9,
        
        [EnumMember()]
        [OptionSetMetadata("Missing UOM", Index=10, Lcid=1033)]
        MissingUOM = 10,
        
        [EnumMember()]
        [OptionSetMetadata("Product Not In Price Level", Index=11, Lcid=1033)]
        ProductNotInPriceLevel = 11,
        
        [EnumMember()]
        [OptionSetMetadata("Missing Price Level Amount", Index=12, Lcid=1033)]
        MissingPriceLevelAmount = 12,
        
        [EnumMember()]
        [OptionSetMetadata("Missing Price Level Percentage", Index=13, Lcid=1033)]
        MissingPriceLevelPercentage = 13,
        
        [EnumMember()]
        [OptionSetMetadata("Missing Price", Index=14, Lcid=1033)]
        MissingPrice = 14,
        
        [EnumMember()]
        [OptionSetMetadata("Missing Current Cost", Index=15, Lcid=1033)]
        MissingCurrentCost = 15,
        
        [EnumMember()]
        [OptionSetMetadata("Missing Standard Cost", Index=16, Lcid=1033)]
        MissingStandardCost = 16,
        
        [EnumMember()]
        [OptionSetMetadata("Invalid Price Level Amount", Index=17, Lcid=1033)]
        InvalidPriceLevelAmount = 17,
        
        [EnumMember()]
        [OptionSetMetadata("Invalid Price Level Percentage", Index=18, Lcid=1033)]
        InvalidPriceLevelPercentage = 18,
        
        [EnumMember()]
        [OptionSetMetadata("Invalid Price", Index=19, Lcid=1033)]
        InvalidPrice = 19,
        
        [EnumMember()]
        [OptionSetMetadata("Invalid Current Cost", Index=20, Lcid=1033)]
        InvalidCurrentCost = 20,
        
        [EnumMember()]
        [OptionSetMetadata("Invalid Standard Cost", Index=21, Lcid=1033)]
        InvalidStandardCost = 21,
        
        [EnumMember()]
        [OptionSetMetadata("Invalid Rounding Policy", Index=22, Lcid=1033)]
        InvalidRoundingPolicy = 22,
        
        [EnumMember()]
        [OptionSetMetadata("Invalid Rounding Option", Index=23, Lcid=1033)]
        InvalidRoundingOption = 23,
        
        [EnumMember()]
        [OptionSetMetadata("Invalid Rounding Amount", Index=24, Lcid=1033)]
        InvalidRoundingAmount = 24,
        
        [EnumMember()]
        [OptionSetMetadata("Price Calculation Error", Index=25, Lcid=1033)]
        PriceCalculationError = 25,
        
        [EnumMember()]
        [OptionSetMetadata("Invalid Discount Type", Index=26, Lcid=1033)]
        InvalidDiscountType = 26,
        
        [EnumMember()]
        [OptionSetMetadata("Discount Type Invalid State", Index=27, Lcid=1033)]
        DiscountTypeInvalidState = 27,
        
        [EnumMember()]
        [OptionSetMetadata("Invalid Discount", Index=28, Lcid=1033)]
        InvalidDiscount = 28,
        
        [EnumMember()]
        [OptionSetMetadata("Invalid Quantity", Index=29, Lcid=1033)]
        InvalidQuantity = 29,
        
        [EnumMember()]
        [OptionSetMetadata("Invalid Pricing Precision", Index=30, Lcid=1033)]
        InvalidPricingPrecision = 30,
        
        [EnumMember()]
        [OptionSetMetadata("Missing Product Default UOM", Index=31, Lcid=1033)]
        MissingProductDefaultUOM = 31,
        
        [EnumMember()]
        [OptionSetMetadata("Missing Product UOM Schedule ", Index=32, Lcid=1033)]
        MissingProductUOMSchedule = 32,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive Discount Type", Index=33, Lcid=1033)]
        InactiveDiscountType = 33,
        
        [EnumMember()]
        [OptionSetMetadata("Invalid Price Level Currency", Index=34, Lcid=1033)]
        InvalidPriceLevelCurrency = 34,
        
        [EnumMember()]
        [OptionSetMetadata("Price Attribute Out Of Range", Index=35, Lcid=1033)]
        PriceAttributeOutOfRange = 35,
        
        [EnumMember()]
        [OptionSetMetadata("Base Currency Attribute Overflow", Index=36, Lcid=1033)]
        BaseCurrencyAttributeOverflow = 36,
        
        [EnumMember()]
        [OptionSetMetadata("Base Currency Attribute Underflow", Index=37, Lcid=1033)]
        BaseCurrencyAttributeUnderflow = 37,
        
        [EnumMember()]
        [OptionSetMetadata("Transaction currency is not set for the product price list item", Index=38, Lcid=1033)]
        Transactioncurrencyisnotsetfortheproductpricelistitem = 38,
    }
    
    [DataContract()]
    public enum qooi_skippricecalculation {
        
        [EnumMember()]
        [OptionSetMetadata("DoPriceCalcAlways", Index=0, Lcid=1033)]
        DoPriceCalcAlways = 0,
        
        [EnumMember()]
        [OptionSetMetadata("SkipPriceCalcOnRetrieve", Index=1, Lcid=1033)]
        SkipPriceCalcOnRetrieve = 1,
    }
    
    [DataContract()]
    public enum budgetstatus {
        
        [EnumMember()]
        [OptionSetMetadata("No Committed Budget", Index=0, Lcid=1033)]
        NoCommittedBudget = 0,
        
        [EnumMember()]
        [OptionSetMetadata("May Buy", Index=1, Lcid=1033)]
        MayBuy = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Can Buy", Index=2, Lcid=1033)]
        CanBuy = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Will Buy", Index=3, Lcid=1033)]
        WillBuy = 3,
    }
    
    [DataContract()]
    public enum initialcommunication {
        
        [EnumMember()]
        [OptionSetMetadata("Contacted", Index=0, Lcid=1033)]
        Contacted = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Not Contacted", Index=1, Lcid=1033)]
        NotContacted = 1,
    }
    
    [DataContract()]
    public enum lead_salesstage {
        
        [EnumMember()]
        [OptionSetMetadata("Qualify", Index=0, Lcid=1033)]
        Qualify = 0,
    }
    
    [DataContract()]
    public enum msdyn_leadgradeoptset {
        
        [EnumMember()]
        [OptionSetMetadata("Grade A", Index=0, Lcid=1033, Description="", Color="#0000ff")]
        GradeA = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Grade B", Index=1, Lcid=1033, Description="", Color="#0000ff")]
        GradeB = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Grade C", Index=2, Lcid=1033, Description="", Color="#0000ff")]
        GradeC = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Grade D", Index=3, Lcid=1033, Description="", Color="#0000ff")]
        GradeD = 3,
    }
    
    [DataContract()]
    public enum msdyn_leadscoretrendoptset {
        
        [EnumMember()]
        [OptionSetMetadata("Improving", Index=0, Lcid=1033, Description="", Color="#0000ff")]
        Improving = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Steady", Index=1, Lcid=1033, Description="", Color="#0000ff")]
        Steady = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Declining", Index=2, Lcid=1033, Description="", Color="#0000ff")]
        Declining = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Not enough info", Index=3, Lcid=1033, Description="", Color="#0000ff")]
        Notenoughinfo = 3,
    }
    
    [DataContract()]
    public enum need {
        
        [EnumMember()]
        [OptionSetMetadata("Must have", Index=0, Lcid=1033)]
        Musthave = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Should have", Index=1, Lcid=1033)]
        Shouldhave = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Good to have", Index=2, Lcid=1033)]
        Goodtohave = 2,
        
        [EnumMember()]
        [OptionSetMetadata("No need", Index=3, Lcid=1033)]
        Noneed = 3,
    }
    
    [DataContract()]
    public enum purchaseprocess {
        
        [EnumMember()]
        [OptionSetMetadata("Individual", Index=0, Lcid=1033)]
        Individual = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Committee", Index=1, Lcid=1033)]
        Committee = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Unknown", Index=2, Lcid=1033)]
        Unknown = 2,
    }
    
    [DataContract()]
    public enum purchasetimeframe {
        
        [EnumMember()]
        [OptionSetMetadata("Immediate", Index=0, Lcid=1033)]
        Immediate = 0,
        
        [EnumMember()]
        [OptionSetMetadata("This Quarter", Index=1, Lcid=1033)]
        ThisQuarter = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Next Quarter", Index=2, Lcid=1033)]
        NextQuarter = 2,
        
        [EnumMember()]
        [OptionSetMetadata("This Year", Index=3, Lcid=1033)]
        ThisYear = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Unknown", Index=4, Lcid=1033)]
        Unknown = 4,
    }
    
    [DataContract()]
    public enum msdyn_opportunitygradeoptset {
        
        [EnumMember()]
        [OptionSetMetadata("Grade A", Index=0, Lcid=1033, Description="", Color="#0000ff")]
        GradeA = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Grade B", Index=1, Lcid=1033, Description="", Color="#0000ff")]
        GradeB = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Grade C", Index=2, Lcid=1033, Description="", Color="#0000ff")]
        GradeC = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Grade D", Index=3, Lcid=1033, Description="", Color="#0000ff")]
        GradeD = 3,
    }
    
    [DataContract()]
    public enum msdyn_opportunityscoretrendoptset {
        
        [EnumMember()]
        [OptionSetMetadata("Improving", Index=0, Lcid=1033, Description="", Color="#0000ff")]
        Improving = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Steady", Index=1, Lcid=1033, Description="", Color="#0000ff")]
        Steady = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Declining", Index=2, Lcid=1033, Description="", Color="#0000ff")]
        Declining = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Not enough info", Index=3, Lcid=1033, Description="", Color="#0000ff")]
        Notenoughinfo = 3,
    }
    
    [DataContract()]
    public enum opportunity_salesstage {
        
        [EnumMember()]
        [OptionSetMetadata("Qualify", Index=0, Lcid=1033)]
        Qualify = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Develop", Index=1, Lcid=1033)]
        Develop = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Propose", Index=2, Lcid=1033)]
        Propose = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Close", Index=3, Lcid=1033)]
        Close = 3,
    }
    
    [DataContract()]
    public enum recurrencerule_monthofyear {
        
        [EnumMember()]
        [OptionSetMetadata("Invalid Month Of Year", Index=0, Lcid=1033)]
        InvalidMonthOfYear = 0,
        
        [EnumMember()]
        [OptionSetMetadata("January", Index=1, Lcid=1033)]
        January = 1,
        
        [EnumMember()]
        [OptionSetMetadata("February", Index=2, Lcid=1033)]
        February = 2,
        
        [EnumMember()]
        [OptionSetMetadata("March", Index=3, Lcid=1033)]
        March = 3,
        
        [EnumMember()]
        [OptionSetMetadata("April", Index=4, Lcid=1033)]
        April = 4,
        
        [EnumMember()]
        [OptionSetMetadata("May", Index=5, Lcid=1033)]
        May = 5,
        
        [EnumMember()]
        [OptionSetMetadata("June", Index=6, Lcid=1033)]
        June = 6,
        
        [EnumMember()]
        [OptionSetMetadata("July", Index=7, Lcid=1033)]
        July = 7,
        
        [EnumMember()]
        [OptionSetMetadata("August", Index=8, Lcid=1033)]
        August = 8,
        
        [EnumMember()]
        [OptionSetMetadata("September", Index=9, Lcid=1033)]
        September = 9,
        
        [EnumMember()]
        [OptionSetMetadata("October", Index=10, Lcid=1033)]
        October = 10,
        
        [EnumMember()]
        [OptionSetMetadata("November", Index=11, Lcid=1033)]
        November = 11,
        
        [EnumMember()]
        [OptionSetMetadata("December", Index=12, Lcid=1033)]
        December = 12,
    }
    
    [DataContract()]
    public enum componentstate {
        
        [EnumMember()]
        [OptionSetMetadata("Published", Index=0, Lcid=1033)]
        Published = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Unpublished", Index=1, Lcid=1033)]
        Unpublished = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Deleted", Index=2, Lcid=1033)]
        Deleted = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Deleted Unpublished", Index=3, Lcid=1033)]
        DeletedUnpublished = 3,
    }
    
    [DataContract()]
    public enum sharepointdocumentlocation_locationtype {
        
        [EnumMember()]
        [OptionSetMetadata("General", Index=0, Lcid=1033)]
        General = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Dedicated for OneNote Integration", Index=1, Lcid=1033)]
        DedicatedforOneNoteIntegration = 1,
    }
    
    [DataContract()]
    public enum sharepointsite_servicetype {
        
        [EnumMember()]
        [OptionSetMetadata("SharePoint", Index=0, Lcid=1033)]
        SharePoint = 0,
        
        [EnumMember()]
        [OptionSetMetadata("OneDrive", Index=1, Lcid=1033)]
        OneDrive = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Shared with me", Index=2, Lcid=1033)]
        Sharedwithme = 2,
        
        [EnumMember()]
        [OptionSetMetadata("MS Teams", Index=3, Lcid=1033)]
        MSTeams = 3,
    }
    
    [DataContract()]
    public enum sharepoint_validationstatus {
        
        [EnumMember()]
        [OptionSetMetadata("Not Validated", Index=0, Lcid=1033)]
        NotValidated = 1,
        
        [EnumMember()]
        [OptionSetMetadata("In Progress", Index=1, Lcid=1033)]
        InProgress = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Invalid", Index=2, Lcid=1033)]
        Invalid = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Valid", Index=3, Lcid=1033)]
        Valid = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Could not validate", Index=4, Lcid=1033)]
        Couldnotvalidate = 5,
    }
    
    [DataContract()]
    public enum sharepoint_validationstatusreason {
        
        [EnumMember()]
        [OptionSetMetadata("This record\'s URL has not been validated.", Index=0, Lcid=1033)]
        ThisrecordsURLhasnotbeenvalidated = 1,
        
        [EnumMember()]
        [OptionSetMetadata("This record\'s URL is valid.", Index=1, Lcid=1033)]
        ThisrecordsURLisvalid = 2,
        
        [EnumMember()]
        [OptionSetMetadata("This record\'s URL is not valid.", Index=2, Lcid=1033)]
        ThisrecordsURLisnotvalid = 3,
        
        [EnumMember()]
        [OptionSetMetadata("The URL schemes of Microsoft Dynamics 365 and SharePoint are different.", Index=3, Lcid=1033)]
        TheURLschemesofMicrosoftDynamics365andSharePointaredifferent = 4,
        
        [EnumMember()]
        [OptionSetMetadata("The URL could not be accessed because of Internet Explorer security settings.", Index=4, Lcid=1033)]
        TheURLcouldnotbeaccessedbecauseofInternetExplorersecuritysettings = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Authentication failure.", Index=5, Lcid=1033)]
        Authenticationfailure = 6,
        
        [EnumMember()]
        [OptionSetMetadata("Invalid certificates.", Index=6, Lcid=1033)]
        Invalidcertificates = 7,
    }
    
    [DataContract()]
    public enum workflow_runas {
        
        [EnumMember()]
        [OptionSetMetadata("Owner", Index=0, Lcid=1033)]
        Owner = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Calling User", Index=1, Lcid=1033)]
        CallingUser = 1,
    }
    
    [DataContract()]
    public enum workflow_stage {
        
        [EnumMember()]
        [OptionSetMetadata("Pre-operation", Index=0, Lcid=1033)]
        Preoperation = 20,
        
        [EnumMember()]
        [OptionSetMetadata("Post-operation", Index=1, Lcid=1033)]
        Postoperation = 40,
    }
    
    [DataContract()]
    public enum dg_dokumenttyper {
        
        [EnumMember()]
        [OptionSetMetadata("Doc", Index=0, Lcid=1033, Description="", Color="#0000ff")]
        Doc = 554190000,
        
        [EnumMember()]
        [OptionSetMetadata("Docx", Index=1, Lcid=1033, Description="", Color="#0000ff")]
        Docx = 554190001,
        
        [EnumMember()]
        [OptionSetMetadata("PDF", Index=2, Lcid=1033, Description="", Color="#0000ff")]
        PDF = 554190002,
        
        [EnumMember()]
        [OptionSetMetadata("txt", Index=3, Lcid=1033, Description="", Color="#0000ff")]
        txt = 554190003,
    }
    
    [DataContract()]
    public enum dg_myoptionset {
        
        [EnumMember()]
        [OptionSetMetadata("Item1", Index=0, Lcid=1033, Description="", Color="#0000ff")]
        Item1 = 10016,
        
        [EnumMember()]
        [OptionSetMetadata("Item2", Index=1, Lcid=1033, Description="", Color="#0000ff")]
        Item2 = 10017,
    }
    
    [DataContract()]
    public enum dg_threeoptionset {
        
        [EnumMember()]
        [OptionSetMetadata("One", Index=0, Lcid=1033, Description="", Color="#0000ff")]
        One = 122930000,
        
        [EnumMember()]
        [OptionSetMetadata("Two", Index=1, Lcid=1033, Description="", Color="#0000ff")]
        Two = 122930001,
        
        [EnumMember()]
        [OptionSetMetadata("Three", Index=2, Lcid=1033, Description="", Color="#0000ff")]
        Three = 122930002,
    }
    
    [DataContract()]
    public enum dg_foodpreference {
        
        [EnumMember()]
        [OptionSetMetadata("Beef", Index=0, Lcid=1033, Description="", Color="#0000ff")]
        Beef = 123500000,
        
        [EnumMember()]
        [OptionSetMetadata("Pork", Index=1, Lcid=1033, Description="", Color="#0000ff")]
        Pork = 123500001,
        
        [EnumMember()]
        [OptionSetMetadata("Vegetarian", Index=2, Lcid=1033, Description="", Color="#0000ff")]
        Vegetarian = 123500002,
        
        [EnumMember()]
        [OptionSetMetadata("Cake", Index=3, Lcid=1033, Description="", Color="#0000ff")]
        Cake = 123500003,
    }
    
    [DataContract()]
    public enum msdyn_agreementsystemstatus {
        
        [EnumMember()]
        [OptionSetMetadata("Estimate", Index=0, Lcid=1033, Description="")]
        Estimate = 690970000,
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=1, Lcid=1033, Description="")]
        Active = 690970001,
        
        [EnumMember()]
        [OptionSetMetadata("Expired", Index=2, Lcid=1033, Description="")]
        Expired = 690970002,
        
        [EnumMember()]
        [OptionSetMetadata("Canceled", Index=3, Lcid=1033, Description="")]
        Canceled = 690970003,
    }
}
